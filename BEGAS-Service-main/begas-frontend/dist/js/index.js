import { importShared } from "./__federation_fn_import-CByPomXo.js";
import { _ as _export_sfc } from "./_plugin-vue_export-helper-1tPrXgE0.js";
import analysis from "./__federation_expose_AnalysisRouter-Cgh-y3ZM.js";
(function polyfill() {
  const relList = document.createElement("link").relList;
  if (relList && relList.supports && relList.supports("modulepreload")) {
    return;
  }
  for (const link of document.querySelectorAll('link[rel="modulepreload"]')) {
    processPreload(link);
  }
  new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type !== "childList") {
        continue;
      }
      for (const node of mutation.addedNodes) {
        if (node.tagName === "LINK" && node.rel === "modulepreload")
          processPreload(node);
      }
    }
  }).observe(document, { childList: true, subtree: true });
  function getFetchOpts(link) {
    const fetchOpts = {};
    if (link.integrity) fetchOpts.integrity = link.integrity;
    if (link.referrerPolicy) fetchOpts.referrerPolicy = link.referrerPolicy;
    if (link.crossOrigin === "use-credentials")
      fetchOpts.credentials = "include";
    else if (link.crossOrigin === "anonymous") fetchOpts.credentials = "omit";
    else fetchOpts.credentials = "same-origin";
    return fetchOpts;
  }
  function processPreload(link) {
    if (link.ep)
      return;
    link.ep = true;
    const fetchOpts = getFetchOpts(link);
    fetch(link.href, fetchOpts);
  }
})();
const _sfc_main = {};
const { resolveComponent: _resolveComponent, createVNode: _createVNode$5g, openBlock: _openBlock, createElementBlock: _createElementBlock } = await importShared("vue");
function _sfc_render(_ctx, _cache) {
  const _component_router_view = _resolveComponent("router-view");
  return _openBlock(), _createElementBlock("main", null, [
    _createVNode$5g(_component_router_view)
  ]);
}
const App = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
const { createWebHistory, createRouter } = await importShared("vue-router");
const router = createRouter({
  history: createWebHistory(),
  routes: [analysis]
});
function _typeof$3(o2) {
  "@babel/helpers - typeof";
  return _typeof$3 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof$3(o2);
}
function toPrimitive(t2, r2) {
  if ("object" != _typeof$3(t2) || !t2) return t2;
  var e2 = t2[Symbol.toPrimitive];
  if (void 0 !== e2) {
    var i2 = e2.call(t2, r2);
    if ("object" != _typeof$3(i2)) return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r2 ? String : Number)(t2);
}
function toPropertyKey(t2) {
  var i2 = toPrimitive(t2, "string");
  return "symbol" == _typeof$3(i2) ? i2 : i2 + "";
}
function _defineProperty$U(e2, r2, t2) {
  return (r2 = toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, {
    value: t2,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e2[r2] = t2, e2;
}
function ownKeys$2(e2, r2) {
  var t2 = Object.keys(e2);
  if (Object.getOwnPropertySymbols) {
    var o2 = Object.getOwnPropertySymbols(e2);
    r2 && (o2 = o2.filter(function(r3) {
      return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
    })), t2.push.apply(t2, o2);
  }
  return t2;
}
function _objectSpread2$2(e2) {
  for (var r2 = 1; r2 < arguments.length; r2++) {
    var t2 = null != arguments[r2] ? arguments[r2] : {};
    r2 % 2 ? ownKeys$2(Object(t2), true).forEach(function(r3) {
      _defineProperty$U(e2, r3, t2[r3]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t2)) : ownKeys$2(Object(t2)).forEach(function(r3) {
      Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t2, r3));
    });
  }
  return e2;
}
function _extends$1() {
  return _extends$1 = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t2 = arguments[e2];
      for (var r2 in t2) ({}).hasOwnProperty.call(t2, r2) && (n2[r2] = t2[r2]);
    }
    return n2;
  }, _extends$1.apply(null, arguments);
}
function e$1(e2, t2) {
  for (var n2 = 0; n2 < t2.length; n2++) {
    var r2 = t2[n2];
    r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(e2, r2.key, r2);
  }
}
function t$1(t2, n2, r2) {
  return r2 && e$1(t2, r2), t2;
}
function n$1() {
  return (n$1 = Object.assign || function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var n2 = arguments[t2];
      for (var r2 in n2) Object.prototype.hasOwnProperty.call(n2, r2) && (e2[r2] = n2[r2]);
    }
    return e2;
  }).apply(this, arguments);
}
function r$1(e2, t2) {
  e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, e2.__proto__ = t2;
}
function i$1(e2, t2) {
  if (null == e2) return {};
  var n2, r2, i2 = {}, o2 = Object.keys(e2);
  for (r2 = 0; r2 < o2.length; r2++) t2.indexOf(n2 = o2[r2]) >= 0 || (i2[n2] = e2[n2]);
  return i2;
}
function o(e2) {
  return 1 == (null != (t2 = e2) && "object" == typeof t2 && false === Array.isArray(t2)) && "[object Object]" === Object.prototype.toString.call(e2);
  var t2;
}
var u = Object.prototype, a = u.toString, f = u.hasOwnProperty, c = /^\s*function (\w+)/;
function l(e2) {
  var t2, n2 = null !== (t2 = null == e2 ? void 0 : e2.type) && void 0 !== t2 ? t2 : e2;
  if (n2) {
    var r2 = n2.toString().match(c);
    return r2 ? r2[1] : "";
  }
  return "";
}
var s = function(e2) {
  var t2, n2;
  return false !== o(e2) && "function" == typeof (t2 = e2.constructor) && false !== o(n2 = t2.prototype) && false !== n2.hasOwnProperty("isPrototypeOf");
}, v = function(e2) {
  return e2;
}, y = v;
var d = function(e2, t2) {
  return f.call(e2, t2);
}, h$3 = Number.isInteger || function(e2) {
  return "number" == typeof e2 && isFinite(e2) && Math.floor(e2) === e2;
}, b = Array.isArray || function(e2) {
  return "[object Array]" === a.call(e2);
}, O = function(e2) {
  return "[object Function]" === a.call(e2);
}, g = function(e2) {
  return s(e2) && d(e2, "_vueTypes_name");
}, m = function(e2) {
  return s(e2) && (d(e2, "type") || ["_vueTypes_name", "validator", "default", "required"].some(function(t2) {
    return d(e2, t2);
  }));
};
function j(e2, t2) {
  return Object.defineProperty(e2.bind(t2), "__original", { value: e2 });
}
function _(e2, t2, n2) {
  var r2;
  var i2 = true, o2 = "";
  r2 = s(e2) ? e2 : { type: e2 };
  var u2 = g(r2) ? r2._vueTypes_name + " - " : "";
  if (m(r2) && null !== r2.type) {
    if (void 0 === r2.type || true === r2.type) return i2;
    if (!r2.required && void 0 === t2) return i2;
    b(r2.type) ? (i2 = r2.type.some(function(e3) {
      return true === _(e3, t2);
    }), o2 = r2.type.map(function(e3) {
      return l(e3);
    }).join(" or ")) : i2 = "Array" === (o2 = l(r2)) ? b(t2) : "Object" === o2 ? s(t2) : "String" === o2 || "Number" === o2 || "Boolean" === o2 || "Function" === o2 ? function(e3) {
      if (null == e3) return "";
      var t3 = e3.constructor.toString().match(c);
      return t3 ? t3[1] : "";
    }(t2) === o2 : t2 instanceof r2.type;
  }
  if (!i2) {
    var a2 = u2 + 'value "' + t2 + '" should be of type "' + o2 + '"';
    return a2;
  }
  if (d(r2, "validator") && O(r2.validator)) {
    var f2 = y, v2 = [];
    if (y = function(e3) {
      v2.push(e3);
    }, i2 = r2.validator(t2), y = f2, !i2) {
      var p = (v2.length > 1 ? "* " : "") + v2.join("\n* ");
      return v2.length = 0, p;
    }
  }
  return i2;
}
function T$3(e2, t2) {
  var n2 = Object.defineProperties(t2, { _vueTypes_name: { value: e2, writable: true }, isRequired: { get: function() {
    return this.required = true, this;
  } }, def: { value: function(e3) {
    return void 0 !== e3 || this.default ? O(e3) || true === _(this, e3) ? (this.default = b(e3) ? function() {
      return [].concat(e3);
    } : s(e3) ? function() {
      return Object.assign({}, e3);
    } : e3, this) : (y(this._vueTypes_name + ' - invalid default value: "' + e3 + '"'), this) : this;
  } } }), r2 = n2.validator;
  return O(r2) && (n2.validator = j(r2, n2)), n2;
}
function w(e2, t2) {
  var n2 = T$3(e2, t2);
  return Object.defineProperty(n2, "validate", { value: function(e3) {
    return O(this.validator) && y(this._vueTypes_name + " - calling .validate() will overwrite the current custom validator function. Validator info:\n" + JSON.stringify(this)), this.validator = j(e3, this), this;
  } });
}
function k(e2, t2, n2) {
  var r2, o2, u2 = (r2 = t2, o2 = {}, Object.getOwnPropertyNames(r2).forEach(function(e3) {
    o2[e3] = Object.getOwnPropertyDescriptor(r2, e3);
  }), Object.defineProperties({}, o2));
  if (u2._vueTypes_name = e2, !s(n2)) return u2;
  var a2, f2, c2 = n2.validator, l2 = i$1(n2, ["validator"]);
  if (O(c2)) {
    var v2 = u2.validator;
    v2 && (v2 = null !== (f2 = (a2 = v2).__original) && void 0 !== f2 ? f2 : a2), u2.validator = j(v2 ? function(e3) {
      return v2.call(this, e3) && c2.call(this, e3);
    } : c2, u2);
  }
  return Object.assign(u2, l2);
}
function P(e2) {
  return e2.replace(/^(?!\s*$)/gm, "  ");
}
var x = function() {
  return w("any", {});
}, A = function() {
  return w("function", { type: Function });
}, E = function() {
  return w("boolean", { type: Boolean });
}, N = function() {
  return w("string", { type: String });
}, q = function() {
  return w("number", { type: Number });
}, S = function() {
  return w("array", { type: Array });
}, V = function() {
  return w("object", { type: Object });
}, F = function() {
  return T$3("integer", { type: Number, validator: function(e2) {
    return h$3(e2);
  } });
}, D = function() {
  return T$3("symbol", { validator: function(e2) {
    return "symbol" == typeof e2;
  } });
};
function L(e2, t2) {
  if (void 0 === t2 && (t2 = "custom validation failed"), "function" != typeof e2) throw new TypeError("[VueTypes error]: You must provide a function as argument");
  return T$3(e2.name || "<<anonymous function>>", { validator: function(n2) {
    var r2 = e2(n2);
    return r2 || y(this._vueTypes_name + " - " + t2), r2;
  } });
}
function Y(e2) {
  if (!b(e2)) throw new TypeError("[VueTypes error]: You must provide an array as argument.");
  var t2 = 'oneOf - value should be one of "' + e2.join('", "') + '".', n2 = e2.reduce(function(e3, t3) {
    if (null != t3) {
      var n3 = t3.constructor;
      -1 === e3.indexOf(n3) && e3.push(n3);
    }
    return e3;
  }, []);
  return T$3("oneOf", { type: n2.length > 0 ? n2 : void 0, validator: function(n3) {
    var r2 = -1 !== e2.indexOf(n3);
    return r2 || y(t2), r2;
  } });
}
function B(e2) {
  if (!b(e2)) throw new TypeError("[VueTypes error]: You must provide an array as argument");
  for (var t2 = false, n2 = [], r2 = 0; r2 < e2.length; r2 += 1) {
    var i2 = e2[r2];
    if (m(i2)) {
      if (g(i2) && "oneOf" === i2._vueTypes_name) {
        n2 = n2.concat(i2.type);
        continue;
      }
      if (O(i2.validator) && (t2 = true), true !== i2.type && i2.type) {
        n2 = n2.concat(i2.type);
        continue;
      }
    }
    n2.push(i2);
  }
  return n2 = n2.filter(function(e3, t3) {
    return n2.indexOf(e3) === t3;
  }), T$3("oneOfType", t2 ? { type: n2, validator: function(t3) {
    var n3 = [], r3 = e2.some(function(e3) {
      var r4 = _(g(e3) && "oneOf" === e3._vueTypes_name ? e3.type || null : e3, t3);
      return "string" == typeof r4 && n3.push(r4), true === r4;
    });
    return r3 || y("oneOfType - provided value does not match any of the " + n3.length + " passed-in validators:\n" + P(n3.join("\n"))), r3;
  } } : { type: n2 });
}
function I(e2) {
  return T$3("arrayOf", { type: Array, validator: function(t2) {
    var n2, r2 = t2.every(function(t3) {
      return true === (n2 = _(e2, t3));
    });
    return r2 || y("arrayOf - value validation error:\n" + P(n2)), r2;
  } });
}
function J(e2) {
  return T$3("instanceOf", { type: e2 });
}
function M(e2) {
  return T$3("objectOf", { type: Object, validator: function(t2) {
    var n2, r2 = Object.keys(t2).every(function(r3) {
      return true === (n2 = _(e2, t2[r3]));
    });
    return r2 || y("objectOf - value validation error:\n" + P(n2)), r2;
  } });
}
function R(e2) {
  var t2 = Object.keys(e2), n2 = t2.filter(function(t3) {
    var n3;
    return !!(null === (n3 = e2[t3]) || void 0 === n3 ? void 0 : n3.required);
  }), r2 = T$3("shape", { type: Object, validator: function(r3) {
    var i2 = this;
    if (!s(r3)) return false;
    var o2 = Object.keys(r3);
    if (n2.length > 0 && n2.some(function(e3) {
      return -1 === o2.indexOf(e3);
    })) {
      var u2 = n2.filter(function(e3) {
        return -1 === o2.indexOf(e3);
      });
      return y(1 === u2.length ? 'shape - required property "' + u2[0] + '" is not defined.' : 'shape - required properties "' + u2.join('", "') + '" are not defined.'), false;
    }
    return o2.every(function(n3) {
      if (-1 === t2.indexOf(n3)) return true === i2._vueTypes_isLoose || (y('shape - shape definition does not include a "' + n3 + '" property. Allowed keys: "' + t2.join('", "') + '".'), false);
      var o3 = _(e2[n3], r3[n3]);
      return "string" == typeof o3 && y('shape - "' + n3 + '" property validation error:\n ' + P(o3)), true === o3;
    });
  } });
  return Object.defineProperty(r2, "_vueTypes_isLoose", { writable: true, value: false }), Object.defineProperty(r2, "loose", { get: function() {
    return this._vueTypes_isLoose = true, this;
  } }), r2;
}
var $ = function() {
  function e2() {
  }
  return e2.extend = function(e3) {
    var t2 = this;
    if (b(e3)) return e3.forEach(function(e4) {
      return t2.extend(e4);
    }), this;
    var n2 = e3.name, r2 = e3.validate, o2 = void 0 !== r2 && r2, u2 = e3.getter, a2 = void 0 !== u2 && u2, f2 = i$1(e3, ["name", "validate", "getter"]);
    if (d(this, n2)) throw new TypeError('[VueTypes error]: Type "' + n2 + '" already defined');
    var c2, l2 = f2.type;
    return g(l2) ? (delete f2.type, Object.defineProperty(this, n2, a2 ? { get: function() {
      return k(n2, l2, f2);
    } } : { value: function() {
      var e4, t3 = k(n2, l2, f2);
      return t3.validator && (t3.validator = (e4 = t3.validator).bind.apply(e4, [t3].concat([].slice.call(arguments)))), t3;
    } })) : (c2 = a2 ? { get: function() {
      var e4 = Object.assign({}, f2);
      return o2 ? w(n2, e4) : T$3(n2, e4);
    }, enumerable: true } : { value: function() {
      var e4, t3, r3 = Object.assign({}, f2);
      return e4 = o2 ? w(n2, r3) : T$3(n2, r3), r3.validator && (e4.validator = (t3 = r3.validator).bind.apply(t3, [e4].concat([].slice.call(arguments)))), e4;
    }, enumerable: true }, Object.defineProperty(this, n2, c2));
  }, t$1(e2, null, [{ key: "any", get: function() {
    return x();
  } }, { key: "func", get: function() {
    return A().def(this.defaults.func);
  } }, { key: "bool", get: function() {
    return E().def(this.defaults.bool);
  } }, { key: "string", get: function() {
    return N().def(this.defaults.string);
  } }, { key: "number", get: function() {
    return q().def(this.defaults.number);
  } }, { key: "array", get: function() {
    return S().def(this.defaults.array);
  } }, { key: "object", get: function() {
    return V().def(this.defaults.object);
  } }, { key: "integer", get: function() {
    return F().def(this.defaults.integer);
  } }, { key: "symbol", get: function() {
    return D();
  } }]), e2;
}();
function z(e2) {
  var i2;
  return void 0 === e2 && (e2 = { func: function() {
  }, bool: true, string: "", number: 0, array: function() {
    return [];
  }, object: function() {
    return {};
  }, integer: 0 }), (i2 = function(i3) {
    function o2() {
      return i3.apply(this, arguments) || this;
    }
    return r$1(o2, i3), t$1(o2, null, [{ key: "sensibleDefaults", get: function() {
      return n$1({}, this.defaults);
    }, set: function(t2) {
      this.defaults = false !== t2 ? n$1({}, true !== t2 ? t2 : e2) : {};
    } }]), o2;
  }($)).defaults = n$1({}, e2), i2;
}
$.defaults = {}, $.custom = L, $.oneOf = Y, $.instanceOf = J, $.oneOfType = B, $.arrayOf = I, $.objectOf = M, $.shape = R, $.utils = { validate: function(e2, t2) {
  return true === _(t2, e2);
}, toType: function(e2, t2, n2) {
  return void 0 === n2 && (n2 = false), n2 ? w(e2, t2) : T$3(e2, t2);
} };
(function(e2) {
  function t2() {
    return e2.apply(this, arguments) || this;
  }
  return r$1(t2, e2), t2;
})(z());
var PropTypes = z({
  func: void 0,
  bool: void 0,
  string: void 0,
  number: void 0,
  array: void 0,
  object: void 0,
  integer: void 0
});
PropTypes.extend([{
  name: "looseBool",
  getter: true,
  type: Boolean,
  default: void 0
}, {
  name: "style",
  getter: true,
  type: [String, Object],
  default: void 0
}, {
  name: "VNodeChild",
  getter: true,
  type: null
}]);
function withUndefined(type3) {
  type3.default = void 0;
  return type3;
}
var isFunction$2 = function isFunction(val) {
  return typeof val === "function";
};
var isArray$2 = Array.isArray;
var isString$2 = function isString(val) {
  return typeof val === "string";
};
var isObject$3 = function isObject(val) {
  return val !== null && _typeof$3(val) === "object";
};
var onRE = /^on[^a-z]/;
var isOn = function isOn2(key2) {
  return onRE.test(key2);
};
var cacheStringFunction = function cacheStringFunction2(fn) {
  var cache = /* @__PURE__ */ Object.create(null);
  return function(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
};
var camelizeRE = /-(\w)/g;
var camelize = cacheStringFunction(function(str) {
  return str.replace(camelizeRE, function(_2, c2) {
    return c2 ? c2.toUpperCase() : "";
  });
});
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cacheStringFunction(function(str) {
  return str.replace(hyphenateRE, "-$1").toLowerCase();
});
var hasOwnProperty$d = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn2(val, key2) {
  return hasOwnProperty$d.call(val, key2);
};
function resolvePropValue(options2, props2, key2, value26) {
  var opt = options2[key2];
  if (opt != null) {
    var hasDefault = hasOwn(opt, "default");
    if (hasDefault && value26 === void 0) {
      var defaultValue = opt.default;
      value26 = opt.type !== Function && isFunction$2(defaultValue) ? defaultValue() : defaultValue;
    }
    if (opt.type === Boolean) {
      if (!hasOwn(props2, key2) && !hasDefault) {
        value26 = false;
      } else if (value26 === "") {
        value26 = true;
      }
    }
  }
  return value26;
}
function getDataAndAriaProps$1(props2) {
  return Object.keys(props2).reduce(function(memo, key2) {
    if (key2.substr(0, 5) === "data-" || key2.substr(0, 5) === "aria-") {
      memo[key2] = props2[key2];
    }
    return memo;
  }, {});
}
function classNames() {
  var classes4 = [];
  for (var i2 = 0; i2 < arguments.length; i2++) {
    var value26 = i2 < 0 || arguments.length <= i2 ? void 0 : arguments[i2];
    if (!value26) continue;
    if (isString$2(value26)) {
      classes4.push(value26);
    } else if (isArray$2(value26)) {
      for (var _i = 0; _i < value26.length; _i++) {
        var inner = classNames(value26[_i]);
        if (inner) {
          classes4.push(inner);
        }
      }
    } else if (isObject$3(value26)) {
      for (var name in value26) {
        if (value26[name]) {
          classes4.push(name);
        }
      }
    }
  }
  return classes4.join(" ");
}
function omit$1(obj, fields) {
  var shallowCopy = Object.assign({}, obj);
  for (var i2 = 0; i2 < fields.length; i2 += 1) {
    var key2 = fields[i2];
    delete shallowCopy[key2];
  }
  return shallowCopy;
}
var MapShim = function() {
  if (typeof Map !== "undefined") {
    return Map;
  }
  function getIndex(arr, key2) {
    var result = -1;
    arr.some(function(entry, index2) {
      if (entry[0] === key2) {
        result = index2;
        return true;
      }
      return false;
    });
    return result;
  }
  return (
    /** @class */
    function() {
      function class_1() {
        this.__entries__ = [];
      }
      Object.defineProperty(class_1.prototype, "size", {
        /**
         * @returns {boolean}
         */
        get: function() {
          return this.__entries__.length;
        },
        enumerable: true,
        configurable: true
      });
      class_1.prototype.get = function(key2) {
        var index2 = getIndex(this.__entries__, key2);
        var entry = this.__entries__[index2];
        return entry && entry[1];
      };
      class_1.prototype.set = function(key2, value26) {
        var index2 = getIndex(this.__entries__, key2);
        if (~index2) {
          this.__entries__[index2][1] = value26;
        } else {
          this.__entries__.push([key2, value26]);
        }
      };
      class_1.prototype.delete = function(key2) {
        var entries = this.__entries__;
        var index2 = getIndex(entries, key2);
        if (~index2) {
          entries.splice(index2, 1);
        }
      };
      class_1.prototype.has = function(key2) {
        return !!~getIndex(this.__entries__, key2);
      };
      class_1.prototype.clear = function() {
        this.__entries__.splice(0);
      };
      class_1.prototype.forEach = function(callback, ctx) {
        if (ctx === void 0) {
          ctx = null;
        }
        for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {
          var entry = _a[_i];
          callback.call(ctx, entry[1], entry[0]);
        }
      };
      return class_1;
    }()
  );
}();
var isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
  if (typeof global !== "undefined" && global.Math === Math) {
    return global;
  }
  if (typeof self !== "undefined" && self.Math === Math) {
    return self;
  }
  if (typeof window !== "undefined" && window.Math === Math) {
    return window;
  }
  return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
  if (typeof requestAnimationFrame === "function") {
    return requestAnimationFrame.bind(global$1);
  }
  return function(callback) {
    return setTimeout(function() {
      return callback(Date.now());
    }, 1e3 / 60);
  };
}();
var trailingTimeout = 2;
function throttle$1(callback, delay) {
  var leadingCall = false, trailingCall = false, lastCallTime = 0;
  function resolvePending() {
    if (leadingCall) {
      leadingCall = false;
      callback();
    }
    if (trailingCall) {
      proxy();
    }
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout) {
        return;
      }
      trailingCall = true;
    } else {
      leadingCall = true;
      trailingCall = false;
      setTimeout(timeoutCallback, delay);
    }
    lastCallTime = timeStamp;
  }
  return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = (
  /** @class */
  function() {
    function ResizeObserverController2() {
      this.connected_ = false;
      this.mutationEventsAdded_ = false;
      this.mutationsObserver_ = null;
      this.observers_ = [];
      this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
      this.refresh = throttle$1(this.refresh.bind(this), REFRESH_DELAY);
    }
    ResizeObserverController2.prototype.addObserver = function(observer) {
      if (!~this.observers_.indexOf(observer)) {
        this.observers_.push(observer);
      }
      if (!this.connected_) {
        this.connect_();
      }
    };
    ResizeObserverController2.prototype.removeObserver = function(observer) {
      var observers2 = this.observers_;
      var index2 = observers2.indexOf(observer);
      if (~index2) {
        observers2.splice(index2, 1);
      }
      if (!observers2.length && this.connected_) {
        this.disconnect_();
      }
    };
    ResizeObserverController2.prototype.refresh = function() {
      var changesDetected = this.updateObservers_();
      if (changesDetected) {
        this.refresh();
      }
    };
    ResizeObserverController2.prototype.updateObservers_ = function() {
      var activeObservers = this.observers_.filter(function(observer) {
        return observer.gatherActive(), observer.hasActive();
      });
      activeObservers.forEach(function(observer) {
        return observer.broadcastActive();
      });
      return activeObservers.length > 0;
    };
    ResizeObserverController2.prototype.connect_ = function() {
      if (!isBrowser || this.connected_) {
        return;
      }
      document.addEventListener("transitionend", this.onTransitionEnd_);
      window.addEventListener("resize", this.refresh);
      if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);
        this.mutationsObserver_.observe(document, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      } else {
        document.addEventListener("DOMSubtreeModified", this.refresh);
        this.mutationEventsAdded_ = true;
      }
      this.connected_ = true;
    };
    ResizeObserverController2.prototype.disconnect_ = function() {
      if (!isBrowser || !this.connected_) {
        return;
      }
      document.removeEventListener("transitionend", this.onTransitionEnd_);
      window.removeEventListener("resize", this.refresh);
      if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
      }
      if (this.mutationEventsAdded_) {
        document.removeEventListener("DOMSubtreeModified", this.refresh);
      }
      this.mutationsObserver_ = null;
      this.mutationEventsAdded_ = false;
      this.connected_ = false;
    };
    ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {
      var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
      var isReflowProperty = transitionKeys.some(function(key2) {
        return !!~propertyName.indexOf(key2);
      });
      if (isReflowProperty) {
        this.refresh();
      }
    };
    ResizeObserverController2.getInstance = function() {
      if (!this.instance_) {
        this.instance_ = new ResizeObserverController2();
      }
      return this.instance_;
    };
    ResizeObserverController2.instance_ = null;
    return ResizeObserverController2;
  }()
);
var defineConfigurable = function(target, props2) {
  for (var _i = 0, _a = Object.keys(props2); _i < _a.length; _i++) {
    var key2 = _a[_i];
    Object.defineProperty(target, key2, {
      value: props2[key2],
      enumerable: false,
      writable: false,
      configurable: true
    });
  }
  return target;
};
var getWindowOf = function(target) {
  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
  return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value26) {
  return parseFloat(value26) || 0;
}
function getBordersSize(styles) {
  var positions = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    positions[_i - 1] = arguments[_i];
  }
  return positions.reduce(function(size, position) {
    var value26 = styles["border-" + position + "-width"];
    return size + toFloat(value26);
  }, 0);
}
function getPaddings(styles) {
  var positions = ["top", "right", "bottom", "left"];
  var paddings = {};
  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position = positions_1[_i];
    var value26 = styles["padding-" + position];
    paddings[position] = toFloat(value26);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight) {
    return emptyRect;
  }
  var styles = getWindowOf(target).getComputedStyle(target);
  var paddings = getPaddings(styles);
  var horizPad = paddings.left + paddings.right;
  var vertPad = paddings.top + paddings.bottom;
  var width = toFloat(styles.width), height = toFloat(styles.height);
  if (styles.boxSizing === "border-box") {
    if (Math.round(width + horizPad) !== clientWidth) {
      width -= getBordersSize(styles, "left", "right") + horizPad;
    }
    if (Math.round(height + vertPad) !== clientHeight) {
      height -= getBordersSize(styles, "top", "bottom") + vertPad;
    }
  }
  if (!isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth;
    var horizScrollbar = Math.round(height + vertPad) - clientHeight;
    if (Math.abs(vertScrollbar) !== 1) {
      width -= vertScrollbar;
    }
    if (Math.abs(horizScrollbar) !== 1) {
      height -= horizScrollbar;
    }
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function() {
  if (typeof SVGGraphicsElement !== "undefined") {
    return function(target) {
      return target instanceof getWindowOf(target).SVGGraphicsElement;
    };
  }
  return function(target) {
    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
  };
}();
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  if (!isBrowser) {
    return emptyRect;
  }
  if (isSVGGraphicsElement(target)) {
    return getSVGContentRect(target);
  }
  return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
  var x2 = _a.x, y2 = _a.y, width = _a.width, height = _a.height;
  var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
  var rect = Object.create(Constr.prototype);
  defineConfigurable(rect, {
    x: x2,
    y: y2,
    width,
    height,
    top: y2,
    right: x2 + width,
    bottom: height + y2,
    left: x2
  });
  return rect;
}
function createRectInit(x2, y2, width, height) {
  return { x: x2, y: y2, width, height };
}
var ResizeObservation = (
  /** @class */
  function() {
    function ResizeObservation2(target) {
      this.broadcastWidth = 0;
      this.broadcastHeight = 0;
      this.contentRect_ = createRectInit(0, 0, 0, 0);
      this.target = target;
    }
    ResizeObservation2.prototype.isActive = function() {
      var rect = getContentRect(this.target);
      this.contentRect_ = rect;
      return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
    };
    ResizeObservation2.prototype.broadcastRect = function() {
      var rect = this.contentRect_;
      this.broadcastWidth = rect.width;
      this.broadcastHeight = rect.height;
      return rect;
    };
    return ResizeObservation2;
  }()
);
var ResizeObserverEntry = (
  /** @class */
  /* @__PURE__ */ function() {
    function ResizeObserverEntry2(target, rectInit) {
      var contentRect = createReadOnlyRect(rectInit);
      defineConfigurable(this, { target, contentRect });
    }
    return ResizeObserverEntry2;
  }()
);
var ResizeObserverSPI = (
  /** @class */
  function() {
    function ResizeObserverSPI2(callback, controller, callbackCtx) {
      this.activeObservations_ = [];
      this.observations_ = new MapShim();
      if (typeof callback !== "function") {
        throw new TypeError("The callback provided as parameter 1 is not a function.");
      }
      this.callback_ = callback;
      this.controller_ = controller;
      this.callbackCtx_ = callbackCtx;
    }
    ResizeObserverSPI2.prototype.observe = function(target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (observations.has(target)) {
        return;
      }
      observations.set(target, new ResizeObservation(target));
      this.controller_.addObserver(this);
      this.controller_.refresh();
    };
    ResizeObserverSPI2.prototype.unobserve = function(target) {
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      if (typeof Element === "undefined" || !(Element instanceof Object)) {
        return;
      }
      if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
      }
      var observations = this.observations_;
      if (!observations.has(target)) {
        return;
      }
      observations.delete(target);
      if (!observations.size) {
        this.controller_.removeObserver(this);
      }
    };
    ResizeObserverSPI2.prototype.disconnect = function() {
      this.clearActive();
      this.observations_.clear();
      this.controller_.removeObserver(this);
    };
    ResizeObserverSPI2.prototype.gatherActive = function() {
      var _this = this;
      this.clearActive();
      this.observations_.forEach(function(observation) {
        if (observation.isActive()) {
          _this.activeObservations_.push(observation);
        }
      });
    };
    ResizeObserverSPI2.prototype.broadcastActive = function() {
      if (!this.hasActive()) {
        return;
      }
      var ctx = this.callbackCtx_;
      var entries = this.activeObservations_.map(function(observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
      });
      this.callback_.call(ctx, entries, ctx);
      this.clearActive();
    };
    ResizeObserverSPI2.prototype.clearActive = function() {
      this.activeObservations_.splice(0);
    };
    ResizeObserverSPI2.prototype.hasActive = function() {
      return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI2;
  }()
);
var observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
var ResizeObserver$1 = (
  /** @class */
  /* @__PURE__ */ function() {
    function ResizeObserver2(callback) {
      if (!(this instanceof ResizeObserver2)) {
        throw new TypeError("Cannot call a class as a function.");
      }
      if (!arguments.length) {
        throw new TypeError("1 argument required, but only 0 present.");
      }
      var controller = ResizeObserverController.getInstance();
      var observer = new ResizeObserverSPI(callback, controller, this);
      observers.set(this, observer);
    }
    return ResizeObserver2;
  }()
);
[
  "observe",
  "unobserve",
  "disconnect"
].forEach(function(method3) {
  ResizeObserver$1.prototype[method3] = function() {
    var _a;
    return (_a = observers.get(this))[method3].apply(_a, arguments);
  };
});
var index$k = function() {
  if (typeof global$1.ResizeObserver !== "undefined") {
    return global$1.ResizeObserver;
  }
  return ResizeObserver$1;
}();
function _arrayWithHoles$2(r2) {
  if (Array.isArray(r2)) return r2;
}
function _iterableToArrayLimit$2(r2, l2) {
  var t2 = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (null != t2) {
    var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
    try {
      if (i2 = (t2 = t2.call(r2)).next, 0 === l2) {
        if (Object(t2) !== t2) return;
        f2 = false;
      } else for (; !(f2 = (e2 = i2.call(t2)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true) ;
    } catch (r3) {
      o2 = true, n2 = r3;
    } finally {
      try {
        if (!f2 && null != t2["return"] && (u2 = t2["return"](), Object(u2) !== u2)) return;
      } finally {
        if (o2) throw n2;
      }
    }
    return a2;
  }
}
function _arrayLikeToArray$2(r2, a2) {
  (null == a2 || a2 > r2.length) && (a2 = r2.length);
  for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++) n2[e2] = r2[e2];
  return n2;
}
function _unsupportedIterableToArray$2(r2, a2) {
  if (r2) {
    if ("string" == typeof r2) return _arrayLikeToArray$2(r2, a2);
    var t2 = {}.toString.call(r2).slice(8, -1);
    return "Object" === t2 && r2.constructor && (t2 = r2.constructor.name), "Map" === t2 || "Set" === t2 ? Array.from(r2) : "Arguments" === t2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t2) ? _arrayLikeToArray$2(r2, a2) : void 0;
  }
}
function _nonIterableRest$2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _slicedToArray$2(r2, e2) {
  return _arrayWithHoles$2(r2) || _iterableToArrayLimit$2(r2, e2) || _unsupportedIterableToArray$2(r2, e2) || _nonIterableRest$2();
}
function _arrayWithoutHoles(r2) {
  if (Array.isArray(r2)) return _arrayLikeToArray$2(r2);
}
function _iterableToArray(r2) {
  if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"]) return Array.from(r2);
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _toConsumableArray(r2) {
  return _arrayWithoutHoles(r2) || _iterableToArray(r2) || _unsupportedIterableToArray$2(r2) || _nonIterableSpread();
}
var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
var freeSelf = typeof self == "object" && self && self.Object === Object && self;
var root = freeGlobal || freeSelf || Function("return this")();
var Symbol$1 = root.Symbol;
var objectProto$f = Object.prototype;
var hasOwnProperty$c = objectProto$f.hasOwnProperty;
var nativeObjectToString$1 = objectProto$f.toString;
var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : void 0;
function getRawTag(value26) {
  var isOwn = hasOwnProperty$c.call(value26, symToStringTag$1), tag = value26[symToStringTag$1];
  try {
    value26[symToStringTag$1] = void 0;
    var unmasked = true;
  } catch (e2) {
  }
  var result = nativeObjectToString$1.call(value26);
  if (unmasked) {
    if (isOwn) {
      value26[symToStringTag$1] = tag;
    } else {
      delete value26[symToStringTag$1];
    }
  }
  return result;
}
var objectProto$e = Object.prototype;
var nativeObjectToString = objectProto$e.toString;
function objectToString(value26) {
  return nativeObjectToString.call(value26);
}
var nullTag = "[object Null]", undefinedTag = "[object Undefined]";
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : void 0;
function baseGetTag(value26) {
  if (value26 == null) {
    return value26 === void 0 ? undefinedTag : nullTag;
  }
  return symToStringTag && symToStringTag in Object(value26) ? getRawTag(value26) : objectToString(value26);
}
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}
var getPrototype = overArg(Object.getPrototypeOf, Object);
function isObjectLike(value26) {
  return value26 != null && typeof value26 == "object";
}
var objectTag$4 = "[object Object]";
var funcProto$2 = Function.prototype, objectProto$d = Object.prototype;
var funcToString$2 = funcProto$2.toString;
var hasOwnProperty$b = objectProto$d.hasOwnProperty;
var objectCtorString = funcToString$2.call(Object);
function isPlainObject(value26) {
  if (!isObjectLike(value26) || baseGetTag(value26) != objectTag$4) {
    return false;
  }
  var proto2 = getPrototype(value26);
  if (proto2 === null) {
    return true;
  }
  var Ctor = hasOwnProperty$b.call(proto2, "constructor") && proto2.constructor;
  return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString$2.call(Ctor) == objectCtorString;
}
var isValid$3 = function isValid(value26) {
  return value26 !== void 0 && value26 !== null && value26 !== "";
};
const { isVNode: isVNode$4, Fragment: Fragment$1, Comment: Comment$1, Text: Text$4, h: h$2 } = await importShared("vue");
var splitAttrs = function splitAttrs2(attrs) {
  var allAttrs = Object.keys(attrs);
  var eventAttrs = {};
  var onEvents = {};
  var extraAttrs = {};
  for (var i2 = 0, l2 = allAttrs.length; i2 < l2; i2++) {
    var key2 = allAttrs[i2];
    if (isOn(key2)) {
      eventAttrs[key2[2].toLowerCase() + key2.slice(3)] = attrs[key2];
      onEvents[key2] = attrs[key2];
    } else {
      extraAttrs[key2] = attrs[key2];
    }
  }
  return {
    onEvents,
    events: eventAttrs,
    extraAttrs
  };
};
var parseStyleText = function parseStyleText2() {
  var cssText = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var camel = arguments.length > 1 ? arguments[1] : void 0;
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function(item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      if (tmp.length > 1) {
        var k2 = camel ? camelize(tmp[0].trim()) : tmp[0].trim();
        res[k2] = tmp[1].trim();
      }
    }
  });
  return res;
};
var hasProp = function hasProp2(instance, prop) {
  return prop in getOptionProps(instance);
};
var flattenChildren = function flattenChildren2() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var filterEmpty2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  var temp = Array.isArray(children) ? children : [children];
  var res = [];
  temp.forEach(function(child) {
    if (Array.isArray(child)) {
      res.push.apply(res, _toConsumableArray(flattenChildren2(child, filterEmpty2)));
    } else if (child && child.type === Fragment$1) {
      res.push.apply(res, _toConsumableArray(flattenChildren2(child.children, filterEmpty2)));
    } else if (child && isVNode$4(child)) {
      if (filterEmpty2 && !isEmptyElement(child)) {
        res.push(child);
      } else if (!filterEmpty2) {
        res.push(child);
      }
    } else if (isValid$3(child)) {
      res.push(child);
    }
  });
  return res;
};
var getSlot = function getSlot2(self2) {
  var name = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "default";
  var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (isVNode$4(self2)) {
    if (self2.type === Fragment$1) {
      return name === "default" ? flattenChildren(self2.children) : [];
    } else if (self2.children && self2.children[name]) {
      return flattenChildren(self2.children[name](options2));
    } else {
      return [];
    }
  } else {
    var res = self2.$slots[name] && self2.$slots[name](options2);
    return flattenChildren(res);
  }
};
var findDOMNode = function findDOMNode2(instance) {
  var _a;
  var node = ((_a = instance === null || instance === void 0 ? void 0 : instance.vnode) === null || _a === void 0 ? void 0 : _a.el) || instance && (instance.$el || instance);
  while (node && !node.tagName) {
    node = node.nextSibling;
  }
  return node;
};
var getOptionProps = function getOptionProps2(instance) {
  var res = {};
  if (instance.$ && instance.$.vnode) {
    var props2 = instance.$.vnode.props || {};
    Object.keys(instance.$props).forEach(function(k2) {
      var v2 = instance.$props[k2];
      var hyphenateKey = hyphenate(k2);
      if (v2 !== void 0 || hyphenateKey in props2) {
        res[k2] = v2;
      }
    });
  } else if (isVNode$4(instance) && _typeof$3(instance.type) === "object") {
    var originProps = instance.props || {};
    var _props = {};
    Object.keys(originProps).forEach(function(key2) {
      _props[camelize(key2)] = originProps[key2];
    });
    var options2 = instance.type.props || {};
    Object.keys(options2).forEach(function(k2) {
      var v2 = resolvePropValue(options2, _props, k2, _props[k2]);
      if (v2 !== void 0 || k2 in _props) {
        res[k2] = v2;
      }
    });
  }
  return res;
};
var getComponent = function getComponent2(instance) {
  var prop = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "default";
  var options2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : instance;
  var execute = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
  var com = void 0;
  if (instance.$) {
    var temp = instance[prop];
    if (temp !== void 0) {
      return typeof temp === "function" && execute ? temp(options2) : temp;
    } else {
      com = instance.$slots[prop];
      com = execute && com ? com(options2) : com;
    }
  } else if (isVNode$4(instance)) {
    var _temp = instance.props && instance.props[prop];
    if (_temp !== void 0 && instance.props !== null) {
      return typeof _temp === "function" && execute ? _temp(options2) : _temp;
    } else if (instance.type === Fragment$1) {
      com = instance.children;
    } else if (instance.children && instance.children[prop]) {
      com = instance.children[prop];
      com = execute && com ? com(options2) : com;
    }
  }
  if (Array.isArray(com)) {
    com = flattenChildren(com);
    com = com.length === 1 ? com[0] : com;
    com = com.length === 0 ? void 0 : com;
  }
  return com;
};
var getPropsData = function getPropsData2(ins) {
  var vnode = ins.$ ? ins.$ : ins;
  var res = {};
  var originProps = vnode.props || {};
  var props2 = {};
  Object.keys(originProps).forEach(function(key2) {
    props2[camelize(key2)] = originProps[key2];
  });
  var options2 = isPlainObject(vnode.type) ? vnode.type.props : {};
  options2 && Object.keys(options2).forEach(function(k2) {
    var v2 = resolvePropValue(options2, props2, k2, props2[k2]);
    if (k2 in props2) {
      res[k2] = v2;
    }
  });
  return _extends$1(_extends$1({}, props2), res);
};
var getKey$2 = function getKey(ele) {
  var key2 = ele.key;
  return key2;
};
function getEvents() {
  var ele = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var on = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  var props2 = {};
  if (ele.$) {
    props2 = _extends$1(_extends$1({}, props2), ele.$attrs);
  } else {
    props2 = _extends$1(_extends$1({}, props2), ele.props);
  }
  return splitAttrs(props2)[on ? "onEvents" : "events"];
}
function getClass(ele) {
  var props2 = (isVNode$4(ele) ? ele.props : ele.$attrs) || {};
  var tempCls = props2.class || {};
  var cls = {};
  if (typeof tempCls === "string") {
    tempCls.split(" ").forEach(function(c2) {
      cls[c2.trim()] = true;
    });
  } else if (Array.isArray(tempCls)) {
    classNames(tempCls).split(" ").forEach(function(c2) {
      cls[c2.trim()] = true;
    });
  } else {
    cls = _extends$1(_extends$1({}, cls), tempCls);
  }
  return cls;
}
function getStyle$1(ele, camel) {
  var props2 = (isVNode$4(ele) ? ele.props : ele.$attrs) || {};
  var style3 = props2.style || {};
  if (typeof style3 === "string") {
    style3 = parseStyleText(style3, camel);
  }
  return style3;
}
function isEmptyContent(c2) {
  return c2 === void 0 || c2 === null || c2 === "" || Array.isArray(c2) && c2.length === 0;
}
function isEmptyElement(c2) {
  return c2 && (c2.type === Comment$1 || c2.type === Fragment$1 && c2.children.length === 0 || c2.type === Text$4 && c2.children.trim() === "");
}
function isEmptySlot(c2) {
  return !c2 || c2().every(isEmptyElement);
}
function isStringElement(c2) {
  return c2 && c2.type === Text$4;
}
function filterEmpty() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var res = [];
  children.forEach(function(child) {
    if (Array.isArray(child)) {
      res.push.apply(res, _toConsumableArray(child));
    } else if (child.type === Fragment$1) {
      res.push.apply(res, _toConsumableArray(child.children));
    } else {
      res.push(child);
    }
  });
  return res.filter(function(c2) {
    return !isEmptyElement(c2);
  });
}
var initDefaultProps$1 = function initDefaultProps(propTypes2, defaultProps2) {
  Object.keys(defaultProps2).forEach(function(k2) {
    if (propTypes2[k2]) {
      propTypes2[k2].def && (propTypes2[k2] = propTypes2[k2].def(defaultProps2[k2]));
    } else {
      throw new Error("not have ".concat(k2, " prop"));
    }
  });
  return propTypes2;
};
function mergeProps() {
  var args = [].slice.call(arguments, 0);
  var props2 = {};
  args.forEach(function() {
    var p = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    for (var _i = 0, _Object$entries = Object.entries(p); _i < _Object$entries.length; _i++) {
      var _Object$entries$_i = _slicedToArray$2(_Object$entries[_i], 2), k2 = _Object$entries$_i[0], v2 = _Object$entries$_i[1];
      props2[k2] = props2[k2] || {};
      if (isPlainObject(v2)) {
        _extends$1(props2[k2], v2);
      } else {
        props2[k2] = v2;
      }
    }
  });
  return props2;
}
function isValidElement(element) {
  return element && element.__v_isVNode && _typeof$3(element.type) !== "symbol";
}
function getPropsSlot(slots, props2) {
  var prop = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "default";
  var _a, _b;
  return (_a = props2[prop]) !== null && _a !== void 0 ? _a : (_b = slots[prop]) === null || _b === void 0 ? void 0 : _b.call(slots);
}
const { defineComponent: defineComponent$34, getCurrentInstance: getCurrentInstance$5, onMounted: onMounted$v, onUnmounted: onUnmounted$8, onUpdated: onUpdated$7, reactive: reactive$l, watch: watch$D } = await importShared("vue");
const ResizeObserver = defineComponent$34({
  name: "ResizeObserver",
  props: {
    disabled: Boolean,
    onResize: Function
  },
  emits: ["resize"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var state = reactive$l({
      width: 0,
      height: 0,
      offsetHeight: 0,
      offsetWidth: 0
    });
    var currentElement = null;
    var resizeObserver = null;
    var destroyObserver = function destroyObserver2() {
      if (resizeObserver) {
        resizeObserver.disconnect();
        resizeObserver = null;
      }
    };
    var onResize = function onResize2(entries) {
      var onResize3 = props2.onResize;
      var target = entries[0].target;
      var _target$getBoundingCl = target.getBoundingClientRect(), width = _target$getBoundingCl.width, height = _target$getBoundingCl.height;
      var offsetWidth = target.offsetWidth, offsetHeight = target.offsetHeight;
      var fixedWidth = Math.floor(width);
      var fixedHeight = Math.floor(height);
      if (state.width !== fixedWidth || state.height !== fixedHeight || state.offsetWidth !== offsetWidth || state.offsetHeight !== offsetHeight) {
        var size = {
          width: fixedWidth,
          height: fixedHeight,
          offsetWidth,
          offsetHeight
        };
        _extends$1(state, size);
        if (onResize3) {
          Promise.resolve().then(function() {
            onResize3(_extends$1(_extends$1({}, size), {
              offsetWidth,
              offsetHeight
            }), target);
          });
        }
      }
    };
    var instance = getCurrentInstance$5();
    var registerObserver = function registerObserver2() {
      var disabled = props2.disabled;
      if (disabled) {
        destroyObserver();
        return;
      }
      var element = findDOMNode(instance);
      var elementChanged = element !== currentElement;
      if (elementChanged) {
        destroyObserver();
        currentElement = element;
      }
      if (!resizeObserver && element) {
        resizeObserver = new index$k(onResize);
        resizeObserver.observe(element);
      }
    };
    onMounted$v(function() {
      registerObserver();
    });
    onUpdated$7(function() {
      registerObserver();
    });
    onUnmounted$8(function() {
      destroyObserver();
    });
    watch$D(function() {
      return props2.disabled;
    }, function() {
      registerObserver();
    }, {
      flush: "post"
    });
    return function() {
      var _a;
      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)[0];
    };
  }
});
function throttleByAnimationFrame(fn) {
  var requestId;
  var later = function later2(args) {
    return function() {
      requestId = null;
      fn.apply(void 0, _toConsumableArray(args));
    };
  };
  var throttled = function throttled2() {
    if (requestId == null) {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      requestId = requestAnimationFrame(later(args));
    }
  };
  throttled.cancel = function() {
    return cancelAnimationFrame(requestId);
  };
  return throttled;
}
var tuple = function tuple2() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return args;
};
var tupleNum = function tupleNum2() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  return args;
};
var withInstall = function withInstall2(comp) {
  var c2 = comp;
  c2.install = function(app) {
    app.component(c2.displayName || c2.name, comp);
  };
  return comp;
};
var supportsPassive = false;
try {
  var opts = Object.defineProperty({}, "passive", {
    get: function get2() {
      supportsPassive = true;
    }
  });
  window.addEventListener("testPassive", null, opts);
  window.removeEventListener("testPassive", null, opts);
} catch (e2) {
}
function addEventListenerWrap(target, eventType, cb, option) {
  if (target.addEventListener) {
    var opt = option;
    if (opt === void 0 && supportsPassive && (eventType === "touchstart" || eventType === "touchmove" || eventType === "wheel")) {
      opt = {
        passive: false
      };
    }
    target.addEventListener(eventType, cb, opt);
  }
  return {
    remove: function remove3() {
      if (target.removeEventListener) {
        target.removeEventListener(eventType, cb);
      }
    }
  };
}
function getTargetRect(target) {
  return target !== window ? target.getBoundingClientRect() : {
    top: 0,
    bottom: window.innerHeight
  };
}
function getFixedTop(placeholderReact, targetRect, offsetTop) {
  if (offsetTop !== void 0 && targetRect.top > placeholderReact.top - offsetTop) {
    return "".concat(offsetTop + targetRect.top, "px");
  }
  return void 0;
}
function getFixedBottom(placeholderReact, targetRect, offsetBottom) {
  if (offsetBottom !== void 0 && targetRect.bottom < placeholderReact.bottom + offsetBottom) {
    var targetBottomOffset = window.innerHeight - targetRect.bottom;
    return "".concat(offsetBottom + targetBottomOffset, "px");
  }
  return void 0;
}
var TRIGGER_EVENTS = ["resize", "scroll", "touchstart", "touchmove", "touchend", "pageshow", "load"];
var observerEntities = [];
function addObserveTarget(target, affix) {
  if (!target) return;
  var entity = observerEntities.find(function(item) {
    return item.target === target;
  });
  if (entity) {
    entity.affixList.push(affix);
  } else {
    entity = {
      target,
      affixList: [affix],
      eventHandlers: {}
    };
    observerEntities.push(entity);
    TRIGGER_EVENTS.forEach(function(eventName) {
      entity.eventHandlers[eventName] = addEventListenerWrap(target, eventName, function() {
        entity.affixList.forEach(function(targetAffix) {
          var lazyUpdatePosition = targetAffix.exposed.lazyUpdatePosition;
          lazyUpdatePosition();
        }, (eventName === "touchstart" || eventName === "touchmove") && supportsPassive ? {
          passive: true
        } : false);
      });
    });
  }
}
function removeObserveTarget(affix) {
  var observerEntity = observerEntities.find(function(oriObserverEntity) {
    var hasAffix = oriObserverEntity.affixList.some(function(item) {
      return item === affix;
    });
    if (hasAffix) {
      oriObserverEntity.affixList = oriObserverEntity.affixList.filter(function(item) {
        return item !== affix;
      });
    }
    return hasAffix;
  });
  if (observerEntity && observerEntity.affixList.length === 0) {
    observerEntities = observerEntities.filter(function(item) {
      return item !== observerEntity;
    });
    TRIGGER_EVENTS.forEach(function(eventName) {
      var handler8 = observerEntity.eventHandlers[eventName];
      if (handler8 && handler8.remove) {
        handler8.remove();
      }
    });
  }
}
const enUS = {
  // Options.jsx
  items_per_page: "/ page",
  jump_to: "Go to",
  jump_to_confirm: "confirm",
  page: "",
  // Pagination.jsx
  prev_page: "Previous Page",
  next_page: "Next Page",
  prev_5: "Previous 5 Pages",
  next_5: "Next 5 Pages",
  prev_3: "Previous 3 Pages",
  next_3: "Next 3 Pages"
};
const enUs = {
  today: "Today",
  now: "Now",
  backToToday: "Back to today",
  ok: "Ok",
  clear: "Clear",
  month: "Month",
  year: "Year",
  timeSelect: "select time",
  dateSelect: "select date",
  weekSelect: "Choose a week",
  monthSelect: "Choose a month",
  yearSelect: "Choose a year",
  decadeSelect: "Choose a decade",
  yearFormat: "YYYY",
  dateFormat: "M/D/YYYY",
  dayFormat: "D",
  dateTimeFormat: "M/D/YYYY HH:mm:ss",
  monthBeforeYear: true,
  previousMonth: "Previous month (PageUp)",
  nextMonth: "Next month (PageDown)",
  previousYear: "Last year (Control + left)",
  nextYear: "Next year (Control + right)",
  previousDecade: "Last decade",
  nextDecade: "Next decade",
  previousCentury: "Last century",
  nextCentury: "Next century"
};
var locale$2 = {
  placeholder: "Select time"
};
var locale$1 = {
  lang: _extends$1({
    placeholder: "Select date",
    rangePlaceholder: ["Start date", "End date"]
  }, enUs),
  timePickerLocale: _extends$1({}, locale$2)
};
var typeTemplate$1 = "${label} is not a valid ${type}";
const defaultLocale = {
  locale: "en",
  Pagination: enUS,
  DatePicker: locale$1,
  TimePicker: locale$2,
  Calendar: locale$1,
  global: {
    placeholder: "Please select"
  },
  Table: {
    filterTitle: "Filter menu",
    filterConfirm: "OK",
    filterReset: "Reset",
    filterEmptyText: "No filters",
    emptyText: "No data",
    selectAll: "Select current page",
    selectInvert: "Invert current page",
    selectNone: "Clear all data",
    selectionAll: "Select all data",
    sortTitle: "Sort",
    expand: "Expand row",
    collapse: "Collapse row",
    triggerDesc: "Click to sort descending",
    triggerAsc: "Click to sort ascending",
    cancelSort: "Click to cancel sorting"
  },
  Modal: {
    okText: "OK",
    cancelText: "Cancel",
    justOkText: "OK"
  },
  Popconfirm: {
    okText: "OK",
    cancelText: "Cancel"
  },
  Transfer: {
    titles: ["", ""],
    searchPlaceholder: "Search here",
    itemUnit: "item",
    itemsUnit: "items",
    remove: "Remove",
    selectCurrent: "Select current page",
    removeCurrent: "Remove current page",
    selectAll: "Select all data",
    removeAll: "Remove all data",
    selectInvert: "Invert current page"
  },
  Upload: {
    uploading: "Uploading...",
    removeFile: "Remove file",
    uploadError: "Upload error",
    previewFile: "Preview file",
    downloadFile: "Download file"
  },
  Empty: {
    description: "No Data"
  },
  Icon: {
    icon: "icon"
  },
  Text: {
    edit: "Edit",
    copy: "Copy",
    copied: "Copied",
    expand: "Expand"
  },
  PageHeader: {
    back: "Back"
  },
  Form: {
    optional: "(optional)",
    defaultValidateMessages: {
      default: "Field validation error for ${label}",
      required: "Please enter ${label}",
      enum: "${label} must be one of [${enum}]",
      whitespace: "${label} cannot be a blank character",
      date: {
        format: "${label} date format is invalid",
        parse: "${label} cannot be converted to a date",
        invalid: "${label} is an invalid date"
      },
      types: {
        string: typeTemplate$1,
        method: typeTemplate$1,
        array: typeTemplate$1,
        object: typeTemplate$1,
        number: typeTemplate$1,
        date: typeTemplate$1,
        boolean: typeTemplate$1,
        integer: typeTemplate$1,
        float: typeTemplate$1,
        regexp: typeTemplate$1,
        email: typeTemplate$1,
        url: typeTemplate$1,
        hex: typeTemplate$1
      },
      string: {
        len: "${label} must be ${len} characters",
        min: "${label} must be at least ${min} characters",
        max: "${label} must be up to ${max} characters",
        range: "${label} must be between ${min}-${max} characters"
      },
      number: {
        len: "${label} must be equal to ${len}",
        min: "${label} must be minimum ${min}",
        max: "${label} must be maximum ${max}",
        range: "${label} must be between ${min}-${max}"
      },
      array: {
        len: "Must be ${len} ${label}",
        min: "At least ${min} ${label}",
        max: "At most ${max} ${label}",
        range: "The amount of ${label} must be between ${min}-${max}"
      },
      pattern: {
        mismatch: "${label} does not match the pattern ${pattern}"
      }
    }
  },
  Image: {
    preview: "Preview"
  }
};
const { inject: inject$1p, defineComponent: defineComponent$33, computed: computed$14 } = await importShared("vue");
const LocaleReceiver = defineComponent$33({
  name: "LocaleReceiver",
  props: {
    componentName: PropTypes.string,
    defaultLocale: {
      type: [Object, Function]
    },
    children: {
      type: Function
    }
  },
  setup: function setup2(props2, _ref) {
    var slots = _ref.slots;
    var localeData2 = inject$1p("localeData", {});
    var locale2 = computed$14(function() {
      var _props$componentName = props2.componentName, componentName = _props$componentName === void 0 ? "global" : _props$componentName, defaultLocale$1 = props2.defaultLocale;
      var locale3 = defaultLocale$1 || defaultLocale[componentName || "global"];
      var antLocale = localeData2.antLocale;
      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};
      return _extends$1(_extends$1({}, typeof locale3 === "function" ? locale3() : locale3), localeFromContext || {});
    });
    var localeCode = computed$14(function() {
      var antLocale = localeData2.antLocale;
      var localeCode2 = antLocale && antLocale.locale;
      if (antLocale && antLocale.exist && !localeCode2) {
        return defaultLocale.locale;
      }
      return localeCode2;
    });
    return function() {
      var children = props2.children || slots.default;
      var antLocale = localeData2.antLocale;
      return children === null || children === void 0 ? void 0 : children(locale2.value, localeCode.value, antLocale);
    };
  }
});
function useLocaleReceiver(componentName, defaultLocale$1) {
  var localeData2 = inject$1p("localeData", {});
  var componentLocale = computed$14(function() {
    var antLocale = localeData2.antLocale;
    var locale2 = defaultLocale[componentName];
    var localeFromContext = antLocale ? antLocale[componentName] : {};
    return _extends$1(_extends$1({}, typeof locale2 === "function" ? locale2() : locale2), localeFromContext || {});
  });
  return [componentLocale];
}
const { createVNode: _createVNode$5f } = await importShared("vue");
const { inject: inject$1o } = await importShared("vue");
var Empty$2 = function Empty() {
  var _inject2 = inject$1o("configProvider", defaultConfigProvider), getPrefixCls2 = _inject2.getPrefixCls;
  var prefixCls2 = getPrefixCls2("empty-img-default");
  return _createVNode$5f("svg", {
    "class": prefixCls2,
    "width": "184",
    "height": "152",
    "viewBox": "0 0 184 152"
  }, [_createVNode$5f("g", {
    "fill": "none",
    "fill-rule": "evenodd"
  }, [_createVNode$5f("g", {
    "transform": "translate(24 31.67)"
  }, [_createVNode$5f("ellipse", {
    "class": "".concat(prefixCls2, "-ellipse"),
    "cx": "67.797",
    "cy": "106.89",
    "rx": "67.797",
    "ry": "12.668"
  }, null), _createVNode$5f("path", {
    "class": "".concat(prefixCls2, "-path-1"),
    "d": "M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z"
  }, null), _createVNode$5f("path", {
    "class": "".concat(prefixCls2, "-path-2"),
    "d": "M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z",
    "transform": "translate(13.56)"
  }, null), _createVNode$5f("path", {
    "class": "".concat(prefixCls2, "-path-3"),
    "d": "M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z"
  }, null), _createVNode$5f("path", {
    "class": "".concat(prefixCls2, "-path-4"),
    "d": "M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z"
  }, null)]), _createVNode$5f("path", {
    "class": "".concat(prefixCls2, "-path-5"),
    "d": "M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z"
  }, null), _createVNode$5f("g", {
    "class": "".concat(prefixCls2, "-g"),
    "transform": "translate(149.65 15.383)"
  }, [_createVNode$5f("ellipse", {
    "cx": "20.654",
    "cy": "3.167",
    "rx": "2.849",
    "ry": "2.815"
  }, null), _createVNode$5f("path", {
    "d": "M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z"
  }, null)])])]);
};
Empty$2.PRESENTED_IMAGE_DEFAULT = true;
const { createVNode: _createVNode$5e } = await importShared("vue");
const { inject: inject$1n } = await importShared("vue");
var Simple = function Simple2() {
  var _inject2 = inject$1n("configProvider", defaultConfigProvider), getPrefixCls2 = _inject2.getPrefixCls;
  var prefixCls2 = getPrefixCls2("empty-img-simple");
  return _createVNode$5e("svg", {
    "class": prefixCls2,
    "width": "64",
    "height": "41",
    "viewBox": "0 0 64 41"
  }, [_createVNode$5e("g", {
    "transform": "translate(0 1)",
    "fill": "none",
    "fill-rule": "evenodd"
  }, [_createVNode$5e("ellipse", {
    "class": "".concat(prefixCls2, "-ellipse"),
    "fill": "#F5F5F5",
    "cx": "32",
    "cy": "33",
    "rx": "32",
    "ry": "7"
  }, null), _createVNode$5e("g", {
    "class": "".concat(prefixCls2, "-g"),
    "fill-rule": "nonzero",
    "stroke": "#D9D9D9"
  }, [_createVNode$5e("path", {
    "d": "M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z"
  }, null), _createVNode$5e("path", {
    "d": "M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z",
    "fill": "#FAFAFA",
    "class": "".concat(prefixCls2, "-path")
  }, null)])])]);
};
Simple.PRESENTED_IMAGE_SIMPLE = true;
const { createVNode: _createVNode$5d } = await importShared("vue");
var __rest$X = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { inject: inject$1m } = await importShared("vue");
var defaultEmptyImg = _createVNode$5d(Empty$2, null, null);
var simpleEmptyImg = _createVNode$5d(Simple, null, null);
var Empty2 = function Empty3(props2, _ref) {
  var _ref$slots = _ref.slots, slots = _ref$slots === void 0 ? {} : _ref$slots, attrs = _ref.attrs;
  var _a;
  var configProvider = inject$1m("configProvider", defaultConfigProvider);
  var getPrefixCls2 = configProvider.getPrefixCls, direction = configProvider.direction;
  var _b = _extends$1(_extends$1({}, props2), attrs), customizePrefixCls = _b.prefixCls, _b$image = _b.image, image = _b$image === void 0 ? defaultEmptyImg : _b$image, _b$description = _b.description, description = _b$description === void 0 ? ((_a = slots.description) === null || _a === void 0 ? void 0 : _a.call(slots)) || void 0 : _b$description, imageStyle = _b.imageStyle, _b$class = _b.class, className = _b$class === void 0 ? "" : _b$class, restProps = __rest$X(_b, ["prefixCls", "image", "description", "imageStyle", "class"]);
  return _createVNode$5d(LocaleReceiver, {
    "componentName": "Empty",
    "children": function children(locale2) {
      var _classNames;
      var prefixCls2 = getPrefixCls2("empty", customizePrefixCls);
      var des = typeof description !== "undefined" ? description : locale2.description;
      var alt = typeof des === "string" ? des : "empty";
      var imageNode = null;
      if (typeof image === "string") {
        imageNode = _createVNode$5d("img", {
          "alt": alt,
          "src": image
        }, null);
      } else {
        imageNode = image;
      }
      return _createVNode$5d("div", _objectSpread2$2({
        "class": classNames(prefixCls2, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-normal"), image === simpleEmptyImg), _defineProperty$U(_classNames, "".concat(prefixCls2, "-rtl"), direction === "rtl"), _classNames))
      }, restProps), [_createVNode$5d("div", {
        "class": "".concat(prefixCls2, "-image"),
        "style": imageStyle
      }, [imageNode]), des && _createVNode$5d("p", {
        "class": "".concat(prefixCls2, "-description")
      }, [des]), slots.default && _createVNode$5d("div", {
        "class": "".concat(prefixCls2, "-footer")
      }, [filterEmpty(slots.default())])]);
    }
  }, null);
};
Empty2.displayName = "AEmpty";
Empty2.PRESENTED_IMAGE_DEFAULT = defaultEmptyImg;
Empty2.PRESENTED_IMAGE_SIMPLE = simpleEmptyImg;
Empty2.inheritAttrs = false;
Empty2.props = {
  prefixCls: PropTypes.string,
  image: PropTypes.any,
  description: PropTypes.any,
  imageStyle: PropTypes.object
};
const Empty$1 = withInstall(Empty2);
const { createVNode: _createVNode$5c } = await importShared("vue");
const { inject: inject$1l } = await importShared("vue");
var RenderEmpty = function RenderEmpty2(props2) {
  var configProvider = inject$1l("configProvider", defaultConfigProvider);
  var renderHtml = function renderHtml2(componentName) {
    var getPrefixCls2 = configProvider.getPrefixCls;
    var prefix = getPrefixCls2("empty");
    switch (componentName) {
      case "Table":
      case "List":
        return _createVNode$5c(Empty$1, {
          "image": Empty$1.PRESENTED_IMAGE_SIMPLE
        }, null);
      case "Select":
      case "TreeSelect":
      case "Cascader":
      case "Transfer":
      case "Mentions":
        return _createVNode$5c(Empty$1, {
          "image": Empty$1.PRESENTED_IMAGE_SIMPLE,
          "class": "".concat(prefix, "-small")
        }, null);
      default:
        return _createVNode$5c(Empty$1, null, null);
    }
  };
  return renderHtml(props2.componentName);
};
function renderEmpty(componentName) {
  return _createVNode$5c(RenderEmpty, {
    "componentName": componentName
  }, null);
}
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var hookCallback;
function hooks() {
  return hookCallback.apply(null, arguments);
}
function setHookCallback(callback) {
  hookCallback = callback;
}
function isArray$1(input) {
  return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
}
function isObject$2(input) {
  return input != null && Object.prototype.toString.call(input) === "[object Object]";
}
function hasOwnProp(a2, b2) {
  return Object.prototype.hasOwnProperty.call(a2, b2);
}
function isObjectEmpty(obj) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(obj).length === 0;
  } else {
    var k2;
    for (k2 in obj) {
      if (hasOwnProp(obj, k2)) {
        return false;
      }
    }
    return true;
  }
}
function isUndefined(input) {
  return input === void 0;
}
function isNumber$1(input) {
  return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
}
function isDate(input) {
  return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
}
function map(arr, fn) {
  var res = [], i2, arrLen = arr.length;
  for (i2 = 0; i2 < arrLen; ++i2) {
    res.push(fn(arr[i2], i2));
  }
  return res;
}
function extend(a2, b2) {
  for (var i2 in b2) {
    if (hasOwnProp(b2, i2)) {
      a2[i2] = b2[i2];
    }
  }
  if (hasOwnProp(b2, "toString")) {
    a2.toString = b2.toString;
  }
  if (hasOwnProp(b2, "valueOf")) {
    a2.valueOf = b2.valueOf;
  }
  return a2;
}
function createUTC(input, format3, locale2, strict) {
  return createLocalOrUTC(input, format3, locale2, strict, true).utc();
}
function defaultParsingFlags() {
  return {
    empty: false,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: false,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: false,
    userInvalidated: false,
    iso: false,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: false,
    weekdayMismatch: false
  };
}
function getParsingFlags(m2) {
  if (m2._pf == null) {
    m2._pf = defaultParsingFlags();
  }
  return m2._pf;
}
var some;
if (Array.prototype.some) {
  some = Array.prototype.some;
} else {
  some = function(fun) {
    var t2 = Object(this), len = t2.length >>> 0, i2;
    for (i2 = 0; i2 < len; i2++) {
      if (i2 in t2 && fun.call(this, t2[i2], i2, t2)) {
        return true;
      }
    }
    return false;
  };
}
function isValid2(m2) {
  var flags = null, parsedParts = false, isNowValid = m2._d && !isNaN(m2._d.getTime());
  if (isNowValid) {
    flags = getParsingFlags(m2);
    parsedParts = some.call(flags.parsedDateParts, function(i2) {
      return i2 != null;
    });
    isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
    if (m2._strict) {
      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === void 0;
    }
  }
  if (Object.isFrozen == null || !Object.isFrozen(m2)) {
    m2._isValid = isNowValid;
  } else {
    return isNowValid;
  }
  return m2._isValid;
}
function createInvalid(flags) {
  var m2 = createUTC(NaN);
  if (flags != null) {
    extend(getParsingFlags(m2), flags);
  } else {
    getParsingFlags(m2).userInvalidated = true;
  }
  return m2;
}
var momentProperties = hooks.momentProperties = [], updateInProgress = false;
function copyConfig(to2, from2) {
  var i2, prop, val, momentPropertiesLen = momentProperties.length;
  if (!isUndefined(from2._isAMomentObject)) {
    to2._isAMomentObject = from2._isAMomentObject;
  }
  if (!isUndefined(from2._i)) {
    to2._i = from2._i;
  }
  if (!isUndefined(from2._f)) {
    to2._f = from2._f;
  }
  if (!isUndefined(from2._l)) {
    to2._l = from2._l;
  }
  if (!isUndefined(from2._strict)) {
    to2._strict = from2._strict;
  }
  if (!isUndefined(from2._tzm)) {
    to2._tzm = from2._tzm;
  }
  if (!isUndefined(from2._isUTC)) {
    to2._isUTC = from2._isUTC;
  }
  if (!isUndefined(from2._offset)) {
    to2._offset = from2._offset;
  }
  if (!isUndefined(from2._pf)) {
    to2._pf = getParsingFlags(from2);
  }
  if (!isUndefined(from2._locale)) {
    to2._locale = from2._locale;
  }
  if (momentPropertiesLen > 0) {
    for (i2 = 0; i2 < momentPropertiesLen; i2++) {
      prop = momentProperties[i2];
      val = from2[prop];
      if (!isUndefined(val)) {
        to2[prop] = val;
      }
    }
  }
  return to2;
}
function Moment(config2) {
  copyConfig(this, config2);
  this._d = new Date(config2._d != null ? config2._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = /* @__PURE__ */ new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
}
function isMoment$1(obj) {
  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
}
function warn$1(msg) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + msg);
  }
}
function deprecate(msg, fn) {
  var firstTime = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, msg);
    }
    if (firstTime) {
      var args = [], arg, i2, key2, argLen = arguments.length;
      for (i2 = 0; i2 < argLen; i2++) {
        arg = "";
        if (typeof arguments[i2] === "object") {
          arg += "\n[" + i2 + "] ";
          for (key2 in arguments[0]) {
            if (hasOwnProp(arguments[0], key2)) {
              arg += key2 + ": " + arguments[0][key2] + ", ";
            }
          }
          arg = arg.slice(0, -2);
        } else {
          arg = arguments[i2];
        }
        args.push(arg);
      }
      warn$1(
        msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack
      );
      firstTime = false;
    }
    return fn.apply(this, arguments);
  }, fn);
}
var deprecations = {};
function deprecateSimple(name, msg) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(name, msg);
  }
  if (!deprecations[name]) {
    warn$1(msg);
    deprecations[name] = true;
  }
}
hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;
function isFunction$1(input) {
  return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
}
function set(config2) {
  var prop, i2;
  for (i2 in config2) {
    if (hasOwnProp(config2, i2)) {
      prop = config2[i2];
      if (isFunction$1(prop)) {
        this[i2] = prop;
      } else {
        this["_" + i2] = prop;
      }
    }
  }
  this._config = config2;
  this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function mergeConfigs(parentConfig, childConfig) {
  var res = extend({}, parentConfig), prop;
  for (prop in childConfig) {
    if (hasOwnProp(childConfig, prop)) {
      if (isObject$2(parentConfig[prop]) && isObject$2(childConfig[prop])) {
        res[prop] = {};
        extend(res[prop], parentConfig[prop]);
        extend(res[prop], childConfig[prop]);
      } else if (childConfig[prop] != null) {
        res[prop] = childConfig[prop];
      } else {
        delete res[prop];
      }
    }
  }
  for (prop in parentConfig) {
    if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject$2(parentConfig[prop])) {
      res[prop] = extend({}, res[prop]);
    }
  }
  return res;
}
function Locale(config2) {
  if (config2 != null) {
    this.set(config2);
  }
}
var keys$1;
if (Object.keys) {
  keys$1 = Object.keys;
} else {
  keys$1 = function(obj) {
    var i2, res = [];
    for (i2 in obj) {
      if (hasOwnProp(obj, i2)) {
        res.push(i2);
      }
    }
    return res;
  };
}
var defaultCalendar = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function calendar(key2, mom, now2) {
  var output = this._calendar[key2] || this._calendar["sameElse"];
  return isFunction$1(output) ? output.call(mom, now2) : output;
}
function zeroFill(number3, targetLength, forceSign) {
  var absNumber = "" + Math.abs(number3), zerosToFill = targetLength - absNumber.length, sign2 = number3 >= 0;
  return (sign2 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}
var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, formatFunctions = {}, formatTokenFunctions = {};
function addFormatToken(token2, padded, ordinal2, callback) {
  var func = callback;
  if (typeof callback === "string") {
    func = function() {
      return this[callback]();
    };
  }
  if (token2) {
    formatTokenFunctions[token2] = func;
  }
  if (padded) {
    formatTokenFunctions[padded[0]] = function() {
      return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
    };
  }
  if (ordinal2) {
    formatTokenFunctions[ordinal2] = function() {
      return this.localeData().ordinal(
        func.apply(this, arguments),
        token2
      );
    };
  }
}
function removeFormattingTokens(input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|\]$/g, "");
  }
  return input.replace(/\\/g, "");
}
function makeFormatFunction(format3) {
  var array3 = format3.match(formattingTokens), i2, length;
  for (i2 = 0, length = array3.length; i2 < length; i2++) {
    if (formatTokenFunctions[array3[i2]]) {
      array3[i2] = formatTokenFunctions[array3[i2]];
    } else {
      array3[i2] = removeFormattingTokens(array3[i2]);
    }
  }
  return function(mom) {
    var output = "", i3;
    for (i3 = 0; i3 < length; i3++) {
      output += isFunction$1(array3[i3]) ? array3[i3].call(mom, format3) : array3[i3];
    }
    return output;
  };
}
function formatMoment(m2, format3) {
  if (!m2.isValid()) {
    return m2.localeData().invalidDate();
  }
  format3 = expandFormat(format3, m2.localeData());
  formatFunctions[format3] = formatFunctions[format3] || makeFormatFunction(format3);
  return formatFunctions[format3](m2);
}
function expandFormat(format3, locale2) {
  var i2 = 5;
  function replaceLongDateFormatTokens(input) {
    return locale2.longDateFormat(input) || input;
  }
  localFormattingTokens.lastIndex = 0;
  while (i2 >= 0 && localFormattingTokens.test(format3)) {
    format3 = format3.replace(
      localFormattingTokens,
      replaceLongDateFormatTokens
    );
    localFormattingTokens.lastIndex = 0;
    i2 -= 1;
  }
  return format3;
}
var defaultLongDateFormat = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function longDateFormat(key2) {
  var format3 = this._longDateFormat[key2], formatUpper = this._longDateFormat[key2.toUpperCase()];
  if (format3 || !formatUpper) {
    return format3;
  }
  this._longDateFormat[key2] = formatUpper.match(formattingTokens).map(function(tok) {
    if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
      return tok.slice(1);
    }
    return tok;
  }).join("");
  return this._longDateFormat[key2];
}
var defaultInvalidDate = "Invalid date";
function invalidDate() {
  return this._invalidDate;
}
var defaultOrdinal = "%d", defaultDayOfMonthOrdinalParse = /\d{1,2}/;
function ordinal(number3) {
  return this._ordinal.replace("%d", number3);
}
var defaultRelativeTime = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function relativeTime(number3, withoutSuffix, string2, isFuture) {
  var output = this._relativeTime[string2];
  return isFunction$1(output) ? output(number3, withoutSuffix, string2, isFuture) : output.replace(/%d/i, number3);
}
function pastFuture(diff2, output) {
  var format3 = this._relativeTime[diff2 > 0 ? "future" : "past"];
  return isFunction$1(format3) ? format3(output) : format3.replace(/%s/i, output);
}
var aliases = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
function normalizeUnits(units) {
  return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : void 0;
}
function normalizeObjectUnits(inputObject) {
  var normalizedInput = {}, normalizedProp, prop;
  for (prop in inputObject) {
    if (hasOwnProp(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);
      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }
  return normalizedInput;
}
var priorities = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
function getPrioritizedUnits(unitsObj) {
  var units = [], u2;
  for (u2 in unitsObj) {
    if (hasOwnProp(unitsObj, u2)) {
      units.push({ unit: u2, priority: priorities[u2] });
    }
  }
  units.sort(function(a2, b2) {
    return a2.priority - b2.priority;
  });
  return units;
}
var match1 = /\d/, match2 = /\d\d/, match3 = /\d{3}/, match4 = /\d{4}/, match6 = /[+-]?\d{6}/, match1to2 = /\d\d?/, match3to4 = /\d\d\d\d?/, match5to6 = /\d\d\d\d\d\d?/, match1to3 = /\d{1,3}/, match1to4 = /\d{1,4}/, match1to6 = /[+-]?\d{1,6}/, matchUnsigned = /\d+/, matchSigned = /[+-]?\d+/, matchOffset = /Z|[+-]\d\d:?\d\d/gi, matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, match1to2NoLeadingZero = /^[1-9]\d?/, match1to2HasZero = /^([1-9]\d|\d)/, regexes;
regexes = {};
function addRegexToken(token2, regex, strictRegex) {
  regexes[token2] = isFunction$1(regex) ? regex : function(isStrict, localeData2) {
    return isStrict && strictRegex ? strictRegex : regex;
  };
}
function getParseRegexForToken(token2, config2) {
  if (!hasOwnProp(regexes, token2)) {
    return new RegExp(unescapeFormat(token2));
  }
  return regexes[token2](config2._strict, config2._locale);
}
function unescapeFormat(s2) {
  return regexEscape(
    s2.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
      }
    )
  );
}
function regexEscape(s2) {
  return s2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function absFloor(number3) {
  if (number3 < 0) {
    return Math.ceil(number3) || 0;
  } else {
    return Math.floor(number3);
  }
}
function toInt(argumentForCoercion) {
  var coercedNumber = +argumentForCoercion, value26 = 0;
  if (coercedNumber !== 0 && isFinite(coercedNumber)) {
    value26 = absFloor(coercedNumber);
  }
  return value26;
}
var tokens = {};
function addParseToken(token2, callback) {
  var i2, func = callback, tokenLen;
  if (typeof token2 === "string") {
    token2 = [token2];
  }
  if (isNumber$1(callback)) {
    func = function(input, array3) {
      array3[callback] = toInt(input);
    };
  }
  tokenLen = token2.length;
  for (i2 = 0; i2 < tokenLen; i2++) {
    tokens[token2[i2]] = func;
  }
}
function addWeekParseToken(token2, callback) {
  addParseToken(token2, function(input, array3, config2, token3) {
    config2._w = config2._w || {};
    callback(input, config2._w, config2, token3);
  });
}
function addTimeToArrayFromToken(token2, input, config2) {
  if (input != null && hasOwnProp(tokens, token2)) {
    tokens[token2](input, config2._a, config2, token2);
  }
}
function isLeapYear(year) {
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
}
var YEAR = 0, MONTH = 1, DATE = 2, HOUR = 3, MINUTE = 4, SECOND = 5, MILLISECOND = 6, WEEK = 7, WEEKDAY = 8;
addFormatToken("Y", 0, 0, function() {
  var y2 = this.year();
  return y2 <= 9999 ? zeroFill(y2, 4) : "+" + y2;
});
addFormatToken(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
addFormatToken(0, ["YYYY", 4], 0, "year");
addFormatToken(0, ["YYYYY", 5], 0, "year");
addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
addRegexToken("Y", matchSigned);
addRegexToken("YY", match1to2, match2);
addRegexToken("YYYY", match1to4, match4);
addRegexToken("YYYYY", match1to6, match6);
addRegexToken("YYYYYY", match1to6, match6);
addParseToken(["YYYYY", "YYYYYY"], YEAR);
addParseToken("YYYY", function(input, array3) {
  array3[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken("YY", function(input, array3) {
  array3[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken("Y", function(input, array3) {
  array3[YEAR] = parseInt(input, 10);
});
function daysInYear(year) {
  return isLeapYear(year) ? 366 : 365;
}
hooks.parseTwoDigitYear = function(input) {
  return toInt(input) + (toInt(input) > 68 ? 1900 : 2e3);
};
var getSetYear = makeGetSet("FullYear", true);
function getIsLeapYear() {
  return isLeapYear(this.year());
}
function makeGetSet(unit, keepTime) {
  return function(value26) {
    if (value26 != null) {
      set$1(this, unit, value26);
      hooks.updateOffset(this, keepTime);
      return this;
    } else {
      return get$1(this, unit);
    }
  };
}
function get$1(mom, unit) {
  if (!mom.isValid()) {
    return NaN;
  }
  var d2 = mom._d, isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return isUTC ? d2.getUTCMilliseconds() : d2.getMilliseconds();
    case "Seconds":
      return isUTC ? d2.getUTCSeconds() : d2.getSeconds();
    case "Minutes":
      return isUTC ? d2.getUTCMinutes() : d2.getMinutes();
    case "Hours":
      return isUTC ? d2.getUTCHours() : d2.getHours();
    case "Date":
      return isUTC ? d2.getUTCDate() : d2.getDate();
    case "Day":
      return isUTC ? d2.getUTCDay() : d2.getDay();
    case "Month":
      return isUTC ? d2.getUTCMonth() : d2.getMonth();
    case "FullYear":
      return isUTC ? d2.getUTCFullYear() : d2.getFullYear();
    default:
      return NaN;
  }
}
function set$1(mom, unit, value26) {
  var d2, isUTC, year, month, date3;
  if (!mom.isValid() || isNaN(value26)) {
    return;
  }
  d2 = mom._d;
  isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return void (isUTC ? d2.setUTCMilliseconds(value26) : d2.setMilliseconds(value26));
    case "Seconds":
      return void (isUTC ? d2.setUTCSeconds(value26) : d2.setSeconds(value26));
    case "Minutes":
      return void (isUTC ? d2.setUTCMinutes(value26) : d2.setMinutes(value26));
    case "Hours":
      return void (isUTC ? d2.setUTCHours(value26) : d2.setHours(value26));
    case "Date":
      return void (isUTC ? d2.setUTCDate(value26) : d2.setDate(value26));
    case "FullYear":
      break;
    default:
      return;
  }
  year = value26;
  month = mom.month();
  date3 = mom.date();
  date3 = date3 === 29 && month === 1 && !isLeapYear(year) ? 28 : date3;
  void (isUTC ? d2.setUTCFullYear(year, month, date3) : d2.setFullYear(year, month, date3));
}
function stringGet(units) {
  units = normalizeUnits(units);
  if (isFunction$1(this[units])) {
    return this[units]();
  }
  return this;
}
function stringSet(units, value26) {
  if (typeof units === "object") {
    units = normalizeObjectUnits(units);
    var prioritized = getPrioritizedUnits(units), i2, prioritizedLen = prioritized.length;
    for (i2 = 0; i2 < prioritizedLen; i2++) {
      this[prioritized[i2].unit](units[prioritized[i2].unit]);
    }
  } else {
    units = normalizeUnits(units);
    if (isFunction$1(this[units])) {
      return this[units](value26);
    }
  }
  return this;
}
function mod(n2, x2) {
  return (n2 % x2 + x2) % x2;
}
var indexOf$1;
if (Array.prototype.indexOf) {
  indexOf$1 = Array.prototype.indexOf;
} else {
  indexOf$1 = function(o2) {
    var i2;
    for (i2 = 0; i2 < this.length; ++i2) {
      if (this[i2] === o2) {
        return i2;
      }
    }
    return -1;
  };
}
function daysInMonth(year, month) {
  if (isNaN(year) || isNaN(month)) {
    return NaN;
  }
  var modMonth = mod(month, 12);
  year += (month - modMonth) / 12;
  return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;
}
addFormatToken("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
addFormatToken("MMM", 0, 0, function(format3) {
  return this.localeData().monthsShort(this, format3);
});
addFormatToken("MMMM", 0, 0, function(format3) {
  return this.localeData().months(this, format3);
});
addRegexToken("M", match1to2, match1to2NoLeadingZero);
addRegexToken("MM", match1to2, match2);
addRegexToken("MMM", function(isStrict, locale2) {
  return locale2.monthsShortRegex(isStrict);
});
addRegexToken("MMMM", function(isStrict, locale2) {
  return locale2.monthsRegex(isStrict);
});
addParseToken(["M", "MM"], function(input, array3) {
  array3[MONTH] = toInt(input) - 1;
});
addParseToken(["MMM", "MMMM"], function(input, array3, config2, token2) {
  var month = config2._locale.monthsParse(input, token2, config2._strict);
  if (month != null) {
    array3[MONTH] = month;
  } else {
    getParsingFlags(config2).invalidMonth = input;
  }
});
var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, defaultMonthsShortRegex = matchWord, defaultMonthsRegex = matchWord;
function localeMonths(m2, format3) {
  if (!m2) {
    return isArray$1(this._months) ? this._months : this._months["standalone"];
  }
  return isArray$1(this._months) ? this._months[m2.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format3) ? "format" : "standalone"][m2.month()];
}
function localeMonthsShort(m2, format3) {
  if (!m2) {
    return isArray$1(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray$1(this._monthsShort) ? this._monthsShort[m2.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format3) ? "format" : "standalone"][m2.month()];
}
function handleStrictParse(monthName, format3, strict) {
  var i2, ii, mom, llc = monthName.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (i2 = 0; i2 < 12; ++i2) {
      mom = createUTC([2e3, i2]);
      this._shortMonthsParse[i2] = this.monthsShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._longMonthsParse[i2] = this.months(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format3 === "MMM") {
      ii = indexOf$1.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf$1.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format3 === "MMM") {
      ii = indexOf$1.call(this._shortMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf$1.call(this._longMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeMonthsParse(monthName, format3, strict) {
  var i2, mom, regex;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, monthName, format3, strict);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (i2 = 0; i2 < 12; i2++) {
    mom = createUTC([2e3, i2]);
    if (strict && !this._longMonthsParse[i2]) {
      this._longMonthsParse[i2] = new RegExp(
        "^" + this.months(mom, "").replace(".", "") + "$",
        "i"
      );
      this._shortMonthsParse[i2] = new RegExp(
        "^" + this.monthsShort(mom, "").replace(".", "") + "$",
        "i"
      );
    }
    if (!strict && !this._monthsParse[i2]) {
      regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
      this._monthsParse[i2] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format3 === "MMMM" && this._longMonthsParse[i2].test(monthName)) {
      return i2;
    } else if (strict && format3 === "MMM" && this._shortMonthsParse[i2].test(monthName)) {
      return i2;
    } else if (!strict && this._monthsParse[i2].test(monthName)) {
      return i2;
    }
  }
}
function setMonth(mom, value26) {
  if (!mom.isValid()) {
    return mom;
  }
  if (typeof value26 === "string") {
    if (/^\d+$/.test(value26)) {
      value26 = toInt(value26);
    } else {
      value26 = mom.localeData().monthsParse(value26);
      if (!isNumber$1(value26)) {
        return mom;
      }
    }
  }
  var month = value26, date3 = mom.date();
  date3 = date3 < 29 ? date3 : Math.min(date3, daysInMonth(mom.year(), month));
  void (mom._isUTC ? mom._d.setUTCMonth(month, date3) : mom._d.setMonth(month, date3));
  return mom;
}
function getSetMonth(value26) {
  if (value26 != null) {
    setMonth(this, value26);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get$1(this, "Month");
  }
}
function getDaysInMonth() {
  return daysInMonth(this.year(), this.month());
}
function monthsShortRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
}
function monthsRegex(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
  }
}
function computeMonthsParse() {
  function cmpLenRev(a2, b2) {
    return b2.length - a2.length;
  }
  var shortPieces = [], longPieces = [], mixedPieces = [], i2, mom, shortP, longP;
  for (i2 = 0; i2 < 12; i2++) {
    mom = createUTC([2e3, i2]);
    shortP = regexEscape(this.monthsShort(mom, ""));
    longP = regexEscape(this.months(mom, ""));
    shortPieces.push(shortP);
    longPieces.push(longP);
    mixedPieces.push(longP);
    mixedPieces.push(shortP);
  }
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._monthsShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
}
function createDate(y2, m2, d2, h2, M2, s2, ms) {
  var date3;
  if (y2 < 100 && y2 >= 0) {
    date3 = new Date(y2 + 400, m2, d2, h2, M2, s2, ms);
    if (isFinite(date3.getFullYear())) {
      date3.setFullYear(y2);
    }
  } else {
    date3 = new Date(y2, m2, d2, h2, M2, s2, ms);
  }
  return date3;
}
function createUTCDate(y2) {
  var date3, args;
  if (y2 < 100 && y2 >= 0) {
    args = Array.prototype.slice.call(arguments);
    args[0] = y2 + 400;
    date3 = new Date(Date.UTC.apply(null, args));
    if (isFinite(date3.getUTCFullYear())) {
      date3.setUTCFullYear(y2);
    }
  } else {
    date3 = new Date(Date.UTC.apply(null, arguments));
  }
  return date3;
}
function firstWeekOffset(year, dow, doy) {
  var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
}
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
  var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year, dow, doy), dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
  if (dayOfYear <= 0) {
    resYear = year - 1;
    resDayOfYear = daysInYear(resYear) + dayOfYear;
  } else if (dayOfYear > daysInYear(year)) {
    resYear = year + 1;
    resDayOfYear = dayOfYear - daysInYear(year);
  } else {
    resYear = year;
    resDayOfYear = dayOfYear;
  }
  return {
    year: resYear,
    dayOfYear: resDayOfYear
  };
}
function weekOfYear(mom, dow, doy) {
  var weekOffset = firstWeekOffset(mom.year(), dow, doy), week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
  if (week < 1) {
    resYear = mom.year() - 1;
    resWeek = week + weeksInYear(resYear, dow, doy);
  } else if (week > weeksInYear(mom.year(), dow, doy)) {
    resWeek = week - weeksInYear(mom.year(), dow, doy);
    resYear = mom.year() + 1;
  } else {
    resYear = mom.year();
    resWeek = week;
  }
  return {
    week: resWeek,
    year: resYear
  };
}
function weeksInYear(year, dow, doy) {
  var weekOffset = firstWeekOffset(year, dow, doy), weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}
addFormatToken("w", ["ww", 2], "wo", "week");
addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
addRegexToken("w", match1to2, match1to2NoLeadingZero);
addRegexToken("ww", match1to2, match2);
addRegexToken("W", match1to2, match1to2NoLeadingZero);
addRegexToken("WW", match1to2, match2);
addWeekParseToken(
  ["w", "ww", "W", "WW"],
  function(input, week, config2, token2) {
    week[token2.substr(0, 1)] = toInt(input);
  }
);
function localeWeek(mom) {
  return weekOfYear(mom, this._week.dow, this._week.doy).week;
}
var defaultLocaleWeek = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6
  // The week that contains Jan 6th is the first week of the year.
};
function localeFirstDayOfWeek() {
  return this._week.dow;
}
function localeFirstDayOfYear() {
  return this._week.doy;
}
function getSetWeek(input) {
  var week = this.localeData().week(this);
  return input == null ? week : this.add((input - week) * 7, "d");
}
function getSetISOWeek(input) {
  var week = weekOfYear(this, 1, 4).week;
  return input == null ? week : this.add((input - week) * 7, "d");
}
addFormatToken("d", 0, "do", "day");
addFormatToken("dd", 0, 0, function(format3) {
  return this.localeData().weekdaysMin(this, format3);
});
addFormatToken("ddd", 0, 0, function(format3) {
  return this.localeData().weekdaysShort(this, format3);
});
addFormatToken("dddd", 0, 0, function(format3) {
  return this.localeData().weekdays(this, format3);
});
addFormatToken("e", 0, 0, "weekday");
addFormatToken("E", 0, 0, "isoWeekday");
addRegexToken("d", match1to2);
addRegexToken("e", match1to2);
addRegexToken("E", match1to2);
addRegexToken("dd", function(isStrict, locale2) {
  return locale2.weekdaysMinRegex(isStrict);
});
addRegexToken("ddd", function(isStrict, locale2) {
  return locale2.weekdaysShortRegex(isStrict);
});
addRegexToken("dddd", function(isStrict, locale2) {
  return locale2.weekdaysRegex(isStrict);
});
addWeekParseToken(["dd", "ddd", "dddd"], function(input, week, config2, token2) {
  var weekday = config2._locale.weekdaysParse(input, token2, config2._strict);
  if (weekday != null) {
    week.d = weekday;
  } else {
    getParsingFlags(config2).invalidWeekday = input;
  }
});
addWeekParseToken(["d", "e", "E"], function(input, week, config2, token2) {
  week[token2] = toInt(input);
});
function parseWeekday(input, locale2) {
  if (typeof input !== "string") {
    return input;
  }
  if (!isNaN(input)) {
    return parseInt(input, 10);
  }
  input = locale2.weekdaysParse(input);
  if (typeof input === "number") {
    return input;
  }
  return null;
}
function parseIsoWeekday(input, locale2) {
  if (typeof input === "string") {
    return locale2.weekdaysParse(input) % 7 || 7;
  }
  return isNaN(input) ? null : input;
}
function shiftWeekdays(ws, n2) {
  return ws.slice(n2, 7).concat(ws.slice(0, n2));
}
var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), defaultWeekdaysRegex = matchWord, defaultWeekdaysShortRegex = matchWord, defaultWeekdaysMinRegex = matchWord;
function localeWeekdays(m2, format3) {
  var weekdays = isArray$1(this._weekdays) ? this._weekdays : this._weekdays[m2 && m2 !== true && this._weekdays.isFormat.test(format3) ? "format" : "standalone"];
  return m2 === true ? shiftWeekdays(weekdays, this._week.dow) : m2 ? weekdays[m2.day()] : weekdays;
}
function localeWeekdaysShort(m2) {
  return m2 === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m2 ? this._weekdaysShort[m2.day()] : this._weekdaysShort;
}
function localeWeekdaysMin(m2) {
  return m2 === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m2 ? this._weekdaysMin[m2.day()] : this._weekdaysMin;
}
function handleStrictParse$1(weekdayName, format3, strict) {
  var i2, ii, mom, llc = weekdayName.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (i2 = 0; i2 < 7; ++i2) {
      mom = createUTC([2e3, 1]).day(i2);
      this._minWeekdaysParse[i2] = this.weekdaysMin(
        mom,
        ""
      ).toLocaleLowerCase();
      this._shortWeekdaysParse[i2] = this.weekdaysShort(
        mom,
        ""
      ).toLocaleLowerCase();
      this._weekdaysParse[i2] = this.weekdays(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format3 === "dddd") {
      ii = indexOf$1.call(this._weekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format3 === "ddd") {
      ii = indexOf$1.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf$1.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format3 === "dddd") {
      ii = indexOf$1.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format3 === "ddd") {
      ii = indexOf$1.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf$1.call(this._minWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf$1.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
}
function localeWeekdaysParse(weekdayName, format3, strict) {
  var i2, mom, regex;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, weekdayName, format3, strict);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (i2 = 0; i2 < 7; i2++) {
    mom = createUTC([2e3, 1]).day(i2);
    if (strict && !this._fullWeekdaysParse[i2]) {
      this._fullWeekdaysParse[i2] = new RegExp(
        "^" + this.weekdays(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._shortWeekdaysParse[i2] = new RegExp(
        "^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
      this._minWeekdaysParse[i2] = new RegExp(
        "^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$",
        "i"
      );
    }
    if (!this._weekdaysParse[i2]) {
      regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
      this._weekdaysParse[i2] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format3 === "dddd" && this._fullWeekdaysParse[i2].test(weekdayName)) {
      return i2;
    } else if (strict && format3 === "ddd" && this._shortWeekdaysParse[i2].test(weekdayName)) {
      return i2;
    } else if (strict && format3 === "dd" && this._minWeekdaysParse[i2].test(weekdayName)) {
      return i2;
    } else if (!strict && this._weekdaysParse[i2].test(weekdayName)) {
      return i2;
    }
  }
}
function getSetDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var day = get$1(this, "Day");
  if (input != null) {
    input = parseWeekday(input, this.localeData());
    return this.add(input - day, "d");
  } else {
    return day;
  }
}
function getSetLocaleDayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return input == null ? weekday : this.add(input - weekday, "d");
}
function getSetISODayOfWeek(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    var weekday = parseIsoWeekday(input, this.localeData());
    return this.day(this.day() % 7 ? weekday : weekday - 7);
  } else {
    return this.day() || 7;
  }
}
function weekdaysRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
}
function weekdaysShortRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
}
function weekdaysMinRegex(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
}
function computeWeekdaysParse() {
  function cmpLenRev(a2, b2) {
    return b2.length - a2.length;
  }
  var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i2, mom, minp, shortp, longp;
  for (i2 = 0; i2 < 7; i2++) {
    mom = createUTC([2e3, 1]).day(i2);
    minp = regexEscape(this.weekdaysMin(mom, ""));
    shortp = regexEscape(this.weekdaysShort(mom, ""));
    longp = regexEscape(this.weekdays(mom, ""));
    minPieces.push(minp);
    shortPieces.push(shortp);
    longPieces.push(longp);
    mixedPieces.push(minp);
    mixedPieces.push(shortp);
    mixedPieces.push(longp);
  }
  minPieces.sort(cmpLenRev);
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp(
    "^(" + longPieces.join("|") + ")",
    "i"
  );
  this._weekdaysShortStrictRegex = new RegExp(
    "^(" + shortPieces.join("|") + ")",
    "i"
  );
  this._weekdaysMinStrictRegex = new RegExp(
    "^(" + minPieces.join("|") + ")",
    "i"
  );
}
function hFormat() {
  return this.hours() % 12 || 12;
}
function kFormat() {
  return this.hours() || 24;
}
addFormatToken("H", ["HH", 2], 0, "hour");
addFormatToken("h", ["hh", 2], 0, hFormat);
addFormatToken("k", ["kk", 2], 0, kFormat);
addFormatToken("hmm", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});
addFormatToken("hmmss", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
addFormatToken("Hmm", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2);
});
addFormatToken("Hmmss", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
function meridiem(token2, lowercase) {
  addFormatToken(token2, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      lowercase
    );
  });
}
meridiem("a", true);
meridiem("A", false);
function matchMeridiem(isStrict, locale2) {
  return locale2._meridiemParse;
}
addRegexToken("a", matchMeridiem);
addRegexToken("A", matchMeridiem);
addRegexToken("H", match1to2, match1to2HasZero);
addRegexToken("h", match1to2, match1to2NoLeadingZero);
addRegexToken("k", match1to2, match1to2NoLeadingZero);
addRegexToken("HH", match1to2, match2);
addRegexToken("hh", match1to2, match2);
addRegexToken("kk", match1to2, match2);
addRegexToken("hmm", match3to4);
addRegexToken("hmmss", match5to6);
addRegexToken("Hmm", match3to4);
addRegexToken("Hmmss", match5to6);
addParseToken(["H", "HH"], HOUR);
addParseToken(["k", "kk"], function(input, array3, config2) {
  var kInput = toInt(input);
  array3[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(["a", "A"], function(input, array3, config2) {
  config2._isPm = config2._locale.isPM(input);
  config2._meridiem = input;
});
addParseToken(["h", "hh"], function(input, array3, config2) {
  array3[HOUR] = toInt(input);
  getParsingFlags(config2).bigHour = true;
});
addParseToken("hmm", function(input, array3, config2) {
  var pos = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos));
  array3[MINUTE] = toInt(input.substr(pos));
  getParsingFlags(config2).bigHour = true;
});
addParseToken("hmmss", function(input, array3, config2) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos1));
  array3[MINUTE] = toInt(input.substr(pos1, 2));
  array3[SECOND] = toInt(input.substr(pos2));
  getParsingFlags(config2).bigHour = true;
});
addParseToken("Hmm", function(input, array3, config2) {
  var pos = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos));
  array3[MINUTE] = toInt(input.substr(pos));
});
addParseToken("Hmmss", function(input, array3, config2) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array3[HOUR] = toInt(input.substr(0, pos1));
  array3[MINUTE] = toInt(input.substr(pos1, 2));
  array3[SECOND] = toInt(input.substr(pos2));
});
function localeIsPM(input) {
  return (input + "").toLowerCase().charAt(0) === "p";
}
var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i, getSetHour = makeGetSet("Hours", true);
function localeMeridiem(hours2, minutes2, isLower) {
  if (hours2 > 11) {
    return isLower ? "pm" : "PM";
  } else {
    return isLower ? "am" : "AM";
  }
}
var baseConfig = {
  calendar: defaultCalendar,
  longDateFormat: defaultLongDateFormat,
  invalidDate: defaultInvalidDate,
  ordinal: defaultOrdinal,
  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
  relativeTime: defaultRelativeTime,
  months: defaultLocaleMonths,
  monthsShort: defaultLocaleMonthsShort,
  week: defaultLocaleWeek,
  weekdays: defaultLocaleWeekdays,
  weekdaysMin: defaultLocaleWeekdaysMin,
  weekdaysShort: defaultLocaleWeekdaysShort,
  meridiemParse: defaultLocaleMeridiemParse
};
var locales = {}, localeFamilies = {}, globalLocale;
function commonPrefix(arr1, arr2) {
  var i2, minl = Math.min(arr1.length, arr2.length);
  for (i2 = 0; i2 < minl; i2 += 1) {
    if (arr1[i2] !== arr2[i2]) {
      return i2;
    }
  }
  return minl;
}
function normalizeLocale(key2) {
  return key2 ? key2.toLowerCase().replace("_", "-") : key2;
}
function chooseLocale(names2) {
  var i2 = 0, j2, next3, locale2, split;
  while (i2 < names2.length) {
    split = normalizeLocale(names2[i2]).split("-");
    j2 = split.length;
    next3 = normalizeLocale(names2[i2 + 1]);
    next3 = next3 ? next3.split("-") : null;
    while (j2 > 0) {
      locale2 = loadLocale(split.slice(0, j2).join("-"));
      if (locale2) {
        return locale2;
      }
      if (next3 && next3.length >= j2 && commonPrefix(split, next3) >= j2 - 1) {
        break;
      }
      j2--;
    }
    i2++;
  }
  return globalLocale;
}
function isLocaleNameSane(name) {
  return !!(name && name.match("^[^/\\\\]*$"));
}
function loadLocale(name) {
  var oldLocale = null, aliasedRequire;
  if (locales[name] === void 0 && typeof module !== "undefined" && module && module.exports && isLocaleNameSane(name)) {
    try {
      oldLocale = globalLocale._abbr;
      aliasedRequire = require;
      aliasedRequire("./locale/" + name);
      getSetGlobalLocale(oldLocale);
    } catch (e2) {
      locales[name] = null;
    }
  }
  return locales[name];
}
function getSetGlobalLocale(key2, values) {
  var data79;
  if (key2) {
    if (isUndefined(values)) {
      data79 = getLocale(key2);
    } else {
      data79 = defineLocale(key2, values);
    }
    if (data79) {
      globalLocale = data79;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn(
          "Locale " + key2 + " not found. Did you forget to load it?"
        );
      }
    }
  }
  return globalLocale._abbr;
}
function defineLocale(name, config2) {
  if (config2 !== null) {
    var locale2, parentConfig = baseConfig;
    config2.abbr = name;
    if (locales[name] != null) {
      deprecateSimple(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      );
      parentConfig = locales[name]._config;
    } else if (config2.parentLocale != null) {
      if (locales[config2.parentLocale] != null) {
        parentConfig = locales[config2.parentLocale]._config;
      } else {
        locale2 = loadLocale(config2.parentLocale);
        if (locale2 != null) {
          parentConfig = locale2._config;
        } else {
          if (!localeFamilies[config2.parentLocale]) {
            localeFamilies[config2.parentLocale] = [];
          }
          localeFamilies[config2.parentLocale].push({
            name,
            config: config2
          });
          return null;
        }
      }
    }
    locales[name] = new Locale(mergeConfigs(parentConfig, config2));
    if (localeFamilies[name]) {
      localeFamilies[name].forEach(function(x2) {
        defineLocale(x2.name, x2.config);
      });
    }
    getSetGlobalLocale(name);
    return locales[name];
  } else {
    delete locales[name];
    return null;
  }
}
function updateLocale(name, config2) {
  if (config2 != null) {
    var locale2, tmpLocale, parentConfig = baseConfig;
    if (locales[name] != null && locales[name].parentLocale != null) {
      locales[name].set(mergeConfigs(locales[name]._config, config2));
    } else {
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config2 = mergeConfigs(parentConfig, config2);
      if (tmpLocale == null) {
        config2.abbr = name;
      }
      locale2 = new Locale(config2);
      locale2.parentLocale = locales[name];
      locales[name] = locale2;
    }
    getSetGlobalLocale(name);
  } else {
    if (locales[name] != null) {
      if (locales[name].parentLocale != null) {
        locales[name] = locales[name].parentLocale;
        if (name === getSetGlobalLocale()) {
          getSetGlobalLocale(name);
        }
      } else if (locales[name] != null) {
        delete locales[name];
      }
    }
  }
  return locales[name];
}
function getLocale(key2) {
  var locale2;
  if (key2 && key2._locale && key2._locale._abbr) {
    key2 = key2._locale._abbr;
  }
  if (!key2) {
    return globalLocale;
  }
  if (!isArray$1(key2)) {
    locale2 = loadLocale(key2);
    if (locale2) {
      return locale2;
    }
    key2 = [key2];
  }
  return chooseLocale(key2);
}
function listLocales() {
  return keys$1(locales);
}
function checkOverflow(m2) {
  var overflow3, a2 = m2._a;
  if (a2 && getParsingFlags(m2).overflow === -2) {
    overflow3 = a2[MONTH] < 0 || a2[MONTH] > 11 ? MONTH : a2[DATE] < 1 || a2[DATE] > daysInMonth(a2[YEAR], a2[MONTH]) ? DATE : a2[HOUR] < 0 || a2[HOUR] > 24 || a2[HOUR] === 24 && (a2[MINUTE] !== 0 || a2[SECOND] !== 0 || a2[MILLISECOND] !== 0) ? HOUR : a2[MINUTE] < 0 || a2[MINUTE] > 59 ? MINUTE : a2[SECOND] < 0 || a2[SECOND] > 59 ? SECOND : a2[MILLISECOND] < 0 || a2[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(m2)._overflowDayOfYear && (overflow3 < YEAR || overflow3 > DATE)) {
      overflow3 = DATE;
    }
    if (getParsingFlags(m2)._overflowWeeks && overflow3 === -1) {
      overflow3 = WEEK;
    }
    if (getParsingFlags(m2)._overflowWeekday && overflow3 === -1) {
      overflow3 = WEEKDAY;
    }
    getParsingFlags(m2).overflow = overflow3;
  }
  return m2;
}
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, tzRegex = /Z|[+-]\d\d(?::?\d\d)?/, isoDates = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, false],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, false],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, false],
  ["YYYY", /\d{4}/, false]
], isoTimes = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], aspNetJsonRegex = /^\/?Date\((-?\d+)/i, rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, obsOffsets = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function configFromISO(config2) {
  var i2, l2, string2 = config2._i, match5 = extendedIsoRegex.exec(string2) || basicIsoRegex.exec(string2), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
  if (match5) {
    getParsingFlags(config2).iso = true;
    for (i2 = 0, l2 = isoDatesLen; i2 < l2; i2++) {
      if (isoDates[i2][1].exec(match5[1])) {
        dateFormat = isoDates[i2][0];
        allowTime = isoDates[i2][2] !== false;
        break;
      }
    }
    if (dateFormat == null) {
      config2._isValid = false;
      return;
    }
    if (match5[3]) {
      for (i2 = 0, l2 = isoTimesLen; i2 < l2; i2++) {
        if (isoTimes[i2][1].exec(match5[3])) {
          timeFormat = (match5[2] || " ") + isoTimes[i2][0];
          break;
        }
      }
      if (timeFormat == null) {
        config2._isValid = false;
        return;
      }
    }
    if (!allowTime && timeFormat != null) {
      config2._isValid = false;
      return;
    }
    if (match5[4]) {
      if (tzRegex.exec(match5[4])) {
        tzFormat = "Z";
      } else {
        config2._isValid = false;
        return;
      }
    }
    config2._f = dateFormat + (timeFormat || "") + (tzFormat || "");
    configFromStringAndFormat(config2);
  } else {
    config2._isValid = false;
  }
}
function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)
  ];
  if (secondStr) {
    result.push(parseInt(secondStr, 10));
  }
  return result;
}
function untruncateYear(yearStr) {
  var year = parseInt(yearStr, 10);
  if (year <= 49) {
    return 2e3 + year;
  } else if (year <= 999) {
    return 1900 + year;
  }
  return year;
}
function preprocessRFC2822(s2) {
  return s2.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function checkWeekday(weekdayStr, parsedInput, config2) {
  if (weekdayStr) {
    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(
      parsedInput[0],
      parsedInput[1],
      parsedInput[2]
    ).getDay();
    if (weekdayProvided !== weekdayActual) {
      getParsingFlags(config2).weekdayMismatch = true;
      config2._isValid = false;
      return false;
    }
  }
  return true;
}
function calculateOffset(obsOffset, militaryOffset, numOffset) {
  if (obsOffset) {
    return obsOffsets[obsOffset];
  } else if (militaryOffset) {
    return 0;
  } else {
    var hm = parseInt(numOffset, 10), m2 = hm % 100, h2 = (hm - m2) / 100;
    return h2 * 60 + m2;
  }
}
function configFromRFC2822(config2) {
  var match5 = rfc2822.exec(preprocessRFC2822(config2._i)), parsedArray;
  if (match5) {
    parsedArray = extractFromRFC2822Strings(
      match5[4],
      match5[3],
      match5[2],
      match5[5],
      match5[6],
      match5[7]
    );
    if (!checkWeekday(match5[1], parsedArray, config2)) {
      return;
    }
    config2._a = parsedArray;
    config2._tzm = calculateOffset(match5[8], match5[9], match5[10]);
    config2._d = createUTCDate.apply(null, config2._a);
    config2._d.setUTCMinutes(config2._d.getUTCMinutes() - config2._tzm);
    getParsingFlags(config2).rfc2822 = true;
  } else {
    config2._isValid = false;
  }
}
function configFromString(config2) {
  var matched = aspNetJsonRegex.exec(config2._i);
  if (matched !== null) {
    config2._d = /* @__PURE__ */ new Date(+matched[1]);
    return;
  }
  configFromISO(config2);
  if (config2._isValid === false) {
    delete config2._isValid;
  } else {
    return;
  }
  configFromRFC2822(config2);
  if (config2._isValid === false) {
    delete config2._isValid;
  } else {
    return;
  }
  if (config2._strict) {
    config2._isValid = false;
  } else {
    hooks.createFromInputFallback(config2);
  }
}
hooks.createFromInputFallback = deprecate(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(config2) {
    config2._d = /* @__PURE__ */ new Date(config2._i + (config2._useUTC ? " UTC" : ""));
  }
);
function defaults(a2, b2, c2) {
  if (a2 != null) {
    return a2;
  }
  if (b2 != null) {
    return b2;
  }
  return c2;
}
function currentDateArray(config2) {
  var nowValue = new Date(hooks.now());
  if (config2._useUTC) {
    return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()
    ];
  }
  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}
function configFromArray(config2) {
  var i2, date3, input = [], currentDate, expectedWeekday, yearToUse;
  if (config2._d) {
    return;
  }
  currentDate = currentDateArray(config2);
  if (config2._w && config2._a[DATE] == null && config2._a[MONTH] == null) {
    dayOfYearFromWeekInfo(config2);
  }
  if (config2._dayOfYear != null) {
    yearToUse = defaults(config2._a[YEAR], currentDate[YEAR]);
    if (config2._dayOfYear > daysInYear(yearToUse) || config2._dayOfYear === 0) {
      getParsingFlags(config2)._overflowDayOfYear = true;
    }
    date3 = createUTCDate(yearToUse, 0, config2._dayOfYear);
    config2._a[MONTH] = date3.getUTCMonth();
    config2._a[DATE] = date3.getUTCDate();
  }
  for (i2 = 0; i2 < 3 && config2._a[i2] == null; ++i2) {
    config2._a[i2] = input[i2] = currentDate[i2];
  }
  for (; i2 < 7; i2++) {
    config2._a[i2] = input[i2] = config2._a[i2] == null ? i2 === 2 ? 1 : 0 : config2._a[i2];
  }
  if (config2._a[HOUR] === 24 && config2._a[MINUTE] === 0 && config2._a[SECOND] === 0 && config2._a[MILLISECOND] === 0) {
    config2._nextDay = true;
    config2._a[HOUR] = 0;
  }
  config2._d = (config2._useUTC ? createUTCDate : createDate).apply(
    null,
    input
  );
  expectedWeekday = config2._useUTC ? config2._d.getUTCDay() : config2._d.getDay();
  if (config2._tzm != null) {
    config2._d.setUTCMinutes(config2._d.getUTCMinutes() - config2._tzm);
  }
  if (config2._nextDay) {
    config2._a[HOUR] = 24;
  }
  if (config2._w && typeof config2._w.d !== "undefined" && config2._w.d !== expectedWeekday) {
    getParsingFlags(config2).weekdayMismatch = true;
  }
}
function dayOfYearFromWeekInfo(config2) {
  var w2, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;
  w2 = config2._w;
  if (w2.GG != null || w2.W != null || w2.E != null) {
    dow = 1;
    doy = 4;
    weekYear = defaults(
      w2.GG,
      config2._a[YEAR],
      weekOfYear(createLocal(), 1, 4).year
    );
    week = defaults(w2.W, 1);
    weekday = defaults(w2.E, 1);
    if (weekday < 1 || weekday > 7) {
      weekdayOverflow = true;
    }
  } else {
    dow = config2._locale._week.dow;
    doy = config2._locale._week.doy;
    curWeek = weekOfYear(createLocal(), dow, doy);
    weekYear = defaults(w2.gg, config2._a[YEAR], curWeek.year);
    week = defaults(w2.w, curWeek.week);
    if (w2.d != null) {
      weekday = w2.d;
      if (weekday < 0 || weekday > 6) {
        weekdayOverflow = true;
      }
    } else if (w2.e != null) {
      weekday = w2.e + dow;
      if (w2.e < 0 || w2.e > 6) {
        weekdayOverflow = true;
      }
    } else {
      weekday = dow;
    }
  }
  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
    getParsingFlags(config2)._overflowWeeks = true;
  } else if (weekdayOverflow != null) {
    getParsingFlags(config2)._overflowWeekday = true;
  } else {
    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
    config2._a[YEAR] = temp.year;
    config2._dayOfYear = temp.dayOfYear;
  }
}
hooks.ISO_8601 = function() {
};
hooks.RFC_2822 = function() {
};
function configFromStringAndFormat(config2) {
  if (config2._f === hooks.ISO_8601) {
    configFromISO(config2);
    return;
  }
  if (config2._f === hooks.RFC_2822) {
    configFromRFC2822(config2);
    return;
  }
  config2._a = [];
  getParsingFlags(config2).empty = true;
  var string2 = "" + config2._i, i2, parsedInput, tokens2, token2, skipped, stringLength = string2.length, totalParsedInputLength = 0, era, tokenLen;
  tokens2 = expandFormat(config2._f, config2._locale).match(formattingTokens) || [];
  tokenLen = tokens2.length;
  for (i2 = 0; i2 < tokenLen; i2++) {
    token2 = tokens2[i2];
    parsedInput = (string2.match(getParseRegexForToken(token2, config2)) || [])[0];
    if (parsedInput) {
      skipped = string2.substr(0, string2.indexOf(parsedInput));
      if (skipped.length > 0) {
        getParsingFlags(config2).unusedInput.push(skipped);
      }
      string2 = string2.slice(
        string2.indexOf(parsedInput) + parsedInput.length
      );
      totalParsedInputLength += parsedInput.length;
    }
    if (formatTokenFunctions[token2]) {
      if (parsedInput) {
        getParsingFlags(config2).empty = false;
      } else {
        getParsingFlags(config2).unusedTokens.push(token2);
      }
      addTimeToArrayFromToken(token2, parsedInput, config2);
    } else if (config2._strict && !parsedInput) {
      getParsingFlags(config2).unusedTokens.push(token2);
    }
  }
  getParsingFlags(config2).charsLeftOver = stringLength - totalParsedInputLength;
  if (string2.length > 0) {
    getParsingFlags(config2).unusedInput.push(string2);
  }
  if (config2._a[HOUR] <= 12 && getParsingFlags(config2).bigHour === true && config2._a[HOUR] > 0) {
    getParsingFlags(config2).bigHour = void 0;
  }
  getParsingFlags(config2).parsedDateParts = config2._a.slice(0);
  getParsingFlags(config2).meridiem = config2._meridiem;
  config2._a[HOUR] = meridiemFixWrap(
    config2._locale,
    config2._a[HOUR],
    config2._meridiem
  );
  era = getParsingFlags(config2).era;
  if (era !== null) {
    config2._a[YEAR] = config2._locale.erasConvertYear(era, config2._a[YEAR]);
  }
  configFromArray(config2);
  checkOverflow(config2);
}
function meridiemFixWrap(locale2, hour, meridiem2) {
  var isPm;
  if (meridiem2 == null) {
    return hour;
  }
  if (locale2.meridiemHour != null) {
    return locale2.meridiemHour(hour, meridiem2);
  } else if (locale2.isPM != null) {
    isPm = locale2.isPM(meridiem2);
    if (isPm && hour < 12) {
      hour += 12;
    }
    if (!isPm && hour === 12) {
      hour = 0;
    }
    return hour;
  } else {
    return hour;
  }
}
function configFromStringAndArray(config2) {
  var tempConfig, bestMoment, scoreToBeat, i2, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config2._f.length;
  if (configfLen === 0) {
    getParsingFlags(config2).invalidFormat = true;
    config2._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (i2 = 0; i2 < configfLen; i2++) {
    currentScore = 0;
    validFormatFound = false;
    tempConfig = copyConfig({}, config2);
    if (config2._useUTC != null) {
      tempConfig._useUTC = config2._useUTC;
    }
    tempConfig._f = config2._f[i2];
    configFromStringAndFormat(tempConfig);
    if (isValid2(tempConfig)) {
      validFormatFound = true;
    }
    currentScore += getParsingFlags(tempConfig).charsLeftOver;
    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    getParsingFlags(tempConfig).score = currentScore;
    if (!bestFormatIsValid) {
      if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
        if (validFormatFound) {
          bestFormatIsValid = true;
        }
      }
    } else {
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
  }
  extend(config2, bestMoment || tempConfig);
}
function configFromObject(config2) {
  if (config2._d) {
    return;
  }
  var i2 = normalizeObjectUnits(config2._i), dayOrDate = i2.day === void 0 ? i2.date : i2.day;
  config2._a = map(
    [i2.year, i2.month, dayOrDate, i2.hour, i2.minute, i2.second, i2.millisecond],
    function(obj) {
      return obj && parseInt(obj, 10);
    }
  );
  configFromArray(config2);
}
function createFromConfig(config2) {
  var res = new Moment(checkOverflow(prepareConfig(config2)));
  if (res._nextDay) {
    res.add(1, "d");
    res._nextDay = void 0;
  }
  return res;
}
function prepareConfig(config2) {
  var input = config2._i, format3 = config2._f;
  config2._locale = config2._locale || getLocale(config2._l);
  if (input === null || format3 === void 0 && input === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof input === "string") {
    config2._i = input = config2._locale.preparse(input);
  }
  if (isMoment$1(input)) {
    return new Moment(checkOverflow(input));
  } else if (isDate(input)) {
    config2._d = input;
  } else if (isArray$1(format3)) {
    configFromStringAndArray(config2);
  } else if (format3) {
    configFromStringAndFormat(config2);
  } else {
    configFromInput(config2);
  }
  if (!isValid2(config2)) {
    config2._d = null;
  }
  return config2;
}
function configFromInput(config2) {
  var input = config2._i;
  if (isUndefined(input)) {
    config2._d = new Date(hooks.now());
  } else if (isDate(input)) {
    config2._d = new Date(input.valueOf());
  } else if (typeof input === "string") {
    configFromString(config2);
  } else if (isArray$1(input)) {
    config2._a = map(input.slice(0), function(obj) {
      return parseInt(obj, 10);
    });
    configFromArray(config2);
  } else if (isObject$2(input)) {
    configFromObject(config2);
  } else if (isNumber$1(input)) {
    config2._d = new Date(input);
  } else {
    hooks.createFromInputFallback(config2);
  }
}
function createLocalOrUTC(input, format3, locale2, strict, isUTC) {
  var c2 = {};
  if (format3 === true || format3 === false) {
    strict = format3;
    format3 = void 0;
  }
  if (locale2 === true || locale2 === false) {
    strict = locale2;
    locale2 = void 0;
  }
  if (isObject$2(input) && isObjectEmpty(input) || isArray$1(input) && input.length === 0) {
    input = void 0;
  }
  c2._isAMomentObject = true;
  c2._useUTC = c2._isUTC = isUTC;
  c2._l = locale2;
  c2._i = input;
  c2._f = format3;
  c2._strict = strict;
  return createFromConfig(c2);
}
function createLocal(input, format3, locale2, strict) {
  return createLocalOrUTC(input, format3, locale2, strict, false);
}
var prototypeMin = deprecate(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other < this ? this : other;
    } else {
      return createInvalid();
    }
  }
), prototypeMax = deprecate(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var other = createLocal.apply(null, arguments);
    if (this.isValid() && other.isValid()) {
      return other > this ? this : other;
    } else {
      return createInvalid();
    }
  }
);
function pickBy(fn, moments) {
  var res, i2;
  if (moments.length === 1 && isArray$1(moments[0])) {
    moments = moments[0];
  }
  if (!moments.length) {
    return createLocal();
  }
  res = moments[0];
  for (i2 = 1; i2 < moments.length; ++i2) {
    if (!moments[i2].isValid() || moments[i2][fn](res)) {
      res = moments[i2];
    }
  }
  return res;
}
function min() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isBefore", args);
}
function max() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isAfter", args);
}
var now$3 = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
};
var ordering = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function isDurationValid(m2) {
  var key2, unitHasDecimal = false, i2, orderLen = ordering.length;
  for (key2 in m2) {
    if (hasOwnProp(m2, key2) && !(indexOf$1.call(ordering, key2) !== -1 && (m2[key2] == null || !isNaN(m2[key2])))) {
      return false;
    }
  }
  for (i2 = 0; i2 < orderLen; ++i2) {
    if (m2[ordering[i2]]) {
      if (unitHasDecimal) {
        return false;
      }
      if (parseFloat(m2[ordering[i2]]) !== toInt(m2[ordering[i2]])) {
        unitHasDecimal = true;
      }
    }
  }
  return true;
}
function isValid$1() {
  return this._isValid;
}
function createInvalid$1() {
  return createDuration(NaN);
}
function Duration(duration2) {
  var normalizedInput = normalizeObjectUnits(duration2), years3 = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months3 = normalizedInput.month || 0, weeks2 = normalizedInput.week || normalizedInput.isoWeek || 0, days2 = normalizedInput.day || 0, hours2 = normalizedInput.hour || 0, minutes2 = normalizedInput.minute || 0, seconds2 = normalizedInput.second || 0, milliseconds2 = normalizedInput.millisecond || 0;
  this._isValid = isDurationValid(normalizedInput);
  this._milliseconds = +milliseconds2 + seconds2 * 1e3 + // 1000
  minutes2 * 6e4 + // 1000 * 60
  hours2 * 1e3 * 60 * 60;
  this._days = +days2 + weeks2 * 7;
  this._months = +months3 + quarters * 3 + years3 * 12;
  this._data = {};
  this._locale = getLocale();
  this._bubble();
}
function isDuration(obj) {
  return obj instanceof Duration;
}
function absRound(number3) {
  if (number3 < 0) {
    return Math.round(-1 * number3) * -1;
  } else {
    return Math.round(number3);
  }
}
function compareArrays(array1, array22, dontConvert) {
  var len = Math.min(array1.length, array22.length), lengthDiff = Math.abs(array1.length - array22.length), diffs = 0, i2;
  for (i2 = 0; i2 < len; i2++) {
    if (toInt(array1[i2]) !== toInt(array22[i2])) {
      diffs++;
    }
  }
  return diffs + lengthDiff;
}
function offset$1(token2, separator) {
  addFormatToken(token2, 0, 0, function() {
    var offset4 = this.utcOffset(), sign2 = "+";
    if (offset4 < 0) {
      offset4 = -offset4;
      sign2 = "-";
    }
    return sign2 + zeroFill(~~(offset4 / 60), 2) + separator + zeroFill(~~offset4 % 60, 2);
  });
}
offset$1("Z", ":");
offset$1("ZZ", "");
addRegexToken("Z", matchShortOffset);
addRegexToken("ZZ", matchShortOffset);
addParseToken(["Z", "ZZ"], function(input, array3, config2) {
  config2._useUTC = true;
  config2._tzm = offsetFromString(matchShortOffset, input);
});
var chunkOffset = /([\+\-]|\d\d)/gi;
function offsetFromString(matcher, string2) {
  var matches = (string2 || "").match(matcher), chunk, parts, minutes2;
  if (matches === null) {
    return null;
  }
  chunk = matches[matches.length - 1] || [];
  parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
  minutes2 = +(parts[1] * 60) + toInt(parts[2]);
  return minutes2 === 0 ? 0 : parts[0] === "+" ? minutes2 : -minutes2;
}
function cloneWithOffset(input, model) {
  var res, diff2;
  if (model._isUTC) {
    res = model.clone();
    diff2 = (isMoment$1(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
    res._d.setTime(res._d.valueOf() + diff2);
    hooks.updateOffset(res, false);
    return res;
  } else {
    return createLocal(input).local();
  }
}
function getDateOffset(m2) {
  return -Math.round(m2._d.getTimezoneOffset());
}
hooks.updateOffset = function() {
};
function getSetOffset(input, keepLocalTime, keepMinutes) {
  var offset4 = this._offset || 0, localAdjust;
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    if (typeof input === "string") {
      input = offsetFromString(matchShortOffset, input);
      if (input === null) {
        return this;
      }
    } else if (Math.abs(input) < 16 && !keepMinutes) {
      input = input * 60;
    }
    if (!this._isUTC && keepLocalTime) {
      localAdjust = getDateOffset(this);
    }
    this._offset = input;
    this._isUTC = true;
    if (localAdjust != null) {
      this.add(localAdjust, "m");
    }
    if (offset4 !== input) {
      if (!keepLocalTime || this._changeInProgress) {
        addSubtract(
          this,
          createDuration(input - offset4, "m"),
          1,
          false
        );
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? offset4 : getDateOffset(this);
  }
}
function getSetZone(input, keepLocalTime) {
  if (input != null) {
    if (typeof input !== "string") {
      input = -input;
    }
    this.utcOffset(input, keepLocalTime);
    return this;
  } else {
    return -this.utcOffset();
  }
}
function setOffsetToUTC(keepLocalTime) {
  return this.utcOffset(0, keepLocalTime);
}
function setOffsetToLocal(keepLocalTime) {
  if (this._isUTC) {
    this.utcOffset(0, keepLocalTime);
    this._isUTC = false;
    if (keepLocalTime) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
}
function setOffsetToParsedOffset() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var tZone = offsetFromString(matchOffset, this._i);
    if (tZone != null) {
      this.utcOffset(tZone);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
}
function hasAlignedHourOffset(input) {
  if (!this.isValid()) {
    return false;
  }
  input = input ? createLocal(input).utcOffset() : 0;
  return (this.utcOffset() - input) % 60 === 0;
}
function isDaylightSavingTime() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function isDaylightSavingTimeShifted() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var c2 = {}, other;
  copyConfig(c2, this);
  c2 = prepareConfig(c2);
  if (c2._a) {
    other = c2._isUTC ? createUTC(c2._a) : createLocal(c2._a);
    this._isDSTShifted = this.isValid() && compareArrays(c2._a, other.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
}
function isLocal() {
  return this.isValid() ? !this._isUTC : false;
}
function isUtcOffset() {
  return this.isValid() ? this._isUTC : false;
}
function isUtc() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
}
var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function createDuration(input, key2) {
  var duration2 = input, match5 = null, sign2, ret, diffRes;
  if (isDuration(input)) {
    duration2 = {
      ms: input._milliseconds,
      d: input._days,
      M: input._months
    };
  } else if (isNumber$1(input) || !isNaN(+input)) {
    duration2 = {};
    if (key2) {
      duration2[key2] = +input;
    } else {
      duration2.milliseconds = +input;
    }
  } else if (match5 = aspNetRegex.exec(input)) {
    sign2 = match5[1] === "-" ? -1 : 1;
    duration2 = {
      y: 0,
      d: toInt(match5[DATE]) * sign2,
      h: toInt(match5[HOUR]) * sign2,
      m: toInt(match5[MINUTE]) * sign2,
      s: toInt(match5[SECOND]) * sign2,
      ms: toInt(absRound(match5[MILLISECOND] * 1e3)) * sign2
      // the millisecond decimal point is included in the match
    };
  } else if (match5 = isoRegex.exec(input)) {
    sign2 = match5[1] === "-" ? -1 : 1;
    duration2 = {
      y: parseIso(match5[2], sign2),
      M: parseIso(match5[3], sign2),
      w: parseIso(match5[4], sign2),
      d: parseIso(match5[5], sign2),
      h: parseIso(match5[6], sign2),
      m: parseIso(match5[7], sign2),
      s: parseIso(match5[8], sign2)
    };
  } else if (duration2 == null) {
    duration2 = {};
  } else if (typeof duration2 === "object" && ("from" in duration2 || "to" in duration2)) {
    diffRes = momentsDifference(
      createLocal(duration2.from),
      createLocal(duration2.to)
    );
    duration2 = {};
    duration2.ms = diffRes.milliseconds;
    duration2.M = diffRes.months;
  }
  ret = new Duration(duration2);
  if (isDuration(input) && hasOwnProp(input, "_locale")) {
    ret._locale = input._locale;
  }
  if (isDuration(input) && hasOwnProp(input, "_isValid")) {
    ret._isValid = input._isValid;
  }
  return ret;
}
createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;
function parseIso(inp, sign2) {
  var res = inp && parseFloat(inp.replace(",", "."));
  return (isNaN(res) ? 0 : res) * sign2;
}
function positiveMomentsDifference(base, other) {
  var res = {};
  res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
  if (base.clone().add(res.months, "M").isAfter(other)) {
    --res.months;
  }
  res.milliseconds = +other - +base.clone().add(res.months, "M");
  return res;
}
function momentsDifference(base, other) {
  var res;
  if (!(base.isValid() && other.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  other = cloneWithOffset(other, base);
  if (base.isBefore(other)) {
    res = positiveMomentsDifference(base, other);
  } else {
    res = positiveMomentsDifference(other, base);
    res.milliseconds = -res.milliseconds;
    res.months = -res.months;
  }
  return res;
}
function createAdder(direction, name) {
  return function(val, period) {
    var dur, tmp;
    if (period !== null && !isNaN(+period)) {
      deprecateSimple(
        name,
        "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
      );
      tmp = val;
      val = period;
      period = tmp;
    }
    dur = createDuration(val, period);
    addSubtract(this, dur, direction);
    return this;
  };
}
function addSubtract(mom, duration2, isAdding, updateOffset) {
  var milliseconds2 = duration2._milliseconds, days2 = absRound(duration2._days), months3 = absRound(duration2._months);
  if (!mom.isValid()) {
    return;
  }
  updateOffset = updateOffset == null ? true : updateOffset;
  if (months3) {
    setMonth(mom, get$1(mom, "Month") + months3 * isAdding);
  }
  if (days2) {
    set$1(mom, "Date", get$1(mom, "Date") + days2 * isAdding);
  }
  if (milliseconds2) {
    mom._d.setTime(mom._d.valueOf() + milliseconds2 * isAdding);
  }
  if (updateOffset) {
    hooks.updateOffset(mom, days2 || months3);
  }
}
var add = createAdder(1, "add"), subtract = createAdder(-1, "subtract");
function isString$1(input) {
  return typeof input === "string" || input instanceof String;
}
function isMomentInput(input) {
  return isMoment$1(input) || isDate(input) || isString$1(input) || isNumber$1(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === void 0;
}
function isMomentInputObject(input) {
  var objectTest = isObject$2(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], i2, property2, propertyLen = properties.length;
  for (i2 = 0; i2 < propertyLen; i2 += 1) {
    property2 = properties[i2];
    propertyTest = propertyTest || hasOwnProp(input, property2);
  }
  return objectTest && propertyTest;
}
function isNumberOrStringArray(input) {
  var arrayTest = isArray$1(input), dataTypeTest = false;
  if (arrayTest) {
    dataTypeTest = input.filter(function(item) {
      return !isNumber$1(item) && isString$1(input);
    }).length === 0;
  }
  return arrayTest && dataTypeTest;
}
function isCalendarSpec(input) {
  var objectTest = isObject$2(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], i2, property2;
  for (i2 = 0; i2 < properties.length; i2 += 1) {
    property2 = properties[i2];
    propertyTest = propertyTest || hasOwnProp(input, property2);
  }
  return objectTest && propertyTest;
}
function getCalendarFormat(myMoment, now2) {
  var diff2 = myMoment.diff(now2, "days", true);
  return diff2 < -6 ? "sameElse" : diff2 < -1 ? "lastWeek" : diff2 < 0 ? "lastDay" : diff2 < 1 ? "sameDay" : diff2 < 2 ? "nextDay" : diff2 < 7 ? "nextWeek" : "sameElse";
}
function calendar$1(time, formats) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      time = void 0;
      formats = void 0;
    } else if (isMomentInput(arguments[0])) {
      time = arguments[0];
      formats = void 0;
    } else if (isCalendarSpec(arguments[0])) {
      formats = arguments[0];
      time = void 0;
    }
  }
  var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format3 = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction$1(formats[format3]) ? formats[format3].call(this, now2) : formats[format3]);
  return this.format(
    output || this.localeData().calendar(format3, this, createLocal(now2))
  );
}
function clone() {
  return new Moment(this);
}
function isAfter(input, units) {
  var localInput = isMoment$1(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() > localInput.valueOf();
  } else {
    return localInput.valueOf() < this.clone().startOf(units).valueOf();
  }
}
function isBefore(input, units) {
  var localInput = isMoment$1(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() < localInput.valueOf();
  } else {
    return this.clone().endOf(units).valueOf() < localInput.valueOf();
  }
}
function isBetween(from2, to2, units, inclusivity) {
  var localFrom = isMoment$1(from2) ? from2 : createLocal(from2), localTo = isMoment$1(to2) ? to2 : createLocal(to2);
  if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
    return false;
  }
  inclusivity = inclusivity || "()";
  return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
}
function isSame(input, units) {
  var localInput = isMoment$1(input) ? input : createLocal(input), inputMs;
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() === localInput.valueOf();
  } else {
    inputMs = localInput.valueOf();
    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
  }
}
function isSameOrAfter(input, units) {
  return this.isSame(input, units) || this.isAfter(input, units);
}
function isSameOrBefore(input, units) {
  return this.isSame(input, units) || this.isBefore(input, units);
}
function diff(input, units, asFloat) {
  var that, zoneDelta, output;
  if (!this.isValid()) {
    return NaN;
  }
  that = cloneWithOffset(input, this);
  if (!that.isValid()) {
    return NaN;
  }
  zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;
  units = normalizeUnits(units);
  switch (units) {
    case "year":
      output = monthDiff(this, that) / 12;
      break;
    case "month":
      output = monthDiff(this, that);
      break;
    case "quarter":
      output = monthDiff(this, that) / 3;
      break;
    case "second":
      output = (this - that) / 1e3;
      break;
    case "minute":
      output = (this - that) / 6e4;
      break;
    case "hour":
      output = (this - that) / 36e5;
      break;
    case "day":
      output = (this - that - zoneDelta) / 864e5;
      break;
    case "week":
      output = (this - that - zoneDelta) / 6048e5;
      break;
    default:
      output = this - that;
  }
  return asFloat ? output : absFloor(output);
}
function monthDiff(a2, b2) {
  if (a2.date() < b2.date()) {
    return -monthDiff(b2, a2);
  }
  var wholeMonthDiff = (b2.year() - a2.year()) * 12 + (b2.month() - a2.month()), anchor = a2.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
  if (b2 - anchor < 0) {
    anchor2 = a2.clone().add(wholeMonthDiff - 1, "months");
    adjust = (b2 - anchor) / (anchor - anchor2);
  } else {
    anchor2 = a2.clone().add(wholeMonthDiff + 1, "months");
    adjust = (b2 - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
}
hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function toString$2() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function toISOString(keepOffset) {
  if (!this.isValid()) {
    return null;
  }
  var utc = keepOffset !== true, m2 = utc ? this.clone().utc() : this;
  if (m2.year() < 0 || m2.year() > 9999) {
    return formatMoment(
      m2,
      utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
    );
  }
  if (isFunction$1(Date.prototype.toISOString)) {
    if (utc) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", formatMoment(m2, "Z"));
    }
  }
  return formatMoment(
    m2,
    utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function inspect() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var func = "moment", zone = "", prefix, year, datetime, suffix;
  if (!this.isLocal()) {
    func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    zone = "Z";
  }
  prefix = "[" + func + '("]';
  year = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  datetime = "-MM-DD[T]HH:mm:ss.SSS";
  suffix = zone + '[")]';
  return this.format(prefix + year + datetime + suffix);
}
function format$2(inputString) {
  if (!inputString) {
    inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var output = formatMoment(this, inputString);
  return this.localeData().postformat(output);
}
function from(time, withoutSuffix) {
  if (this.isValid() && (isMoment$1(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function fromNow(withoutSuffix) {
  return this.from(createLocal(), withoutSuffix);
}
function to(time, withoutSuffix) {
  if (this.isValid() && (isMoment$1(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
}
function toNow(withoutSuffix) {
  return this.to(createLocal(), withoutSuffix);
}
function locale(key2) {
  var newLocaleData;
  if (key2 === void 0) {
    return this._locale._abbr;
  } else {
    newLocaleData = getLocale(key2);
    if (newLocaleData != null) {
      this._locale = newLocaleData;
    }
    return this;
  }
}
var lang = deprecate(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(key2) {
    if (key2 === void 0) {
      return this.localeData();
    } else {
      return this.locale(key2);
    }
  }
);
function localeData() {
  return this._locale;
}
var MS_PER_SECOND = 1e3, MS_PER_MINUTE = 60 * MS_PER_SECOND, MS_PER_HOUR = 60 * MS_PER_MINUTE, MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
function mod$1(dividend, divisor) {
  return (dividend % divisor + divisor) % divisor;
}
function localStartOfDate(y2, m2, d2) {
  if (y2 < 100 && y2 >= 0) {
    return new Date(y2 + 400, m2, d2) - MS_PER_400_YEARS;
  } else {
    return new Date(y2, m2, d2).valueOf();
  }
}
function utcStartOfDate(y2, m2, d2) {
  if (y2 < 100 && y2 >= 0) {
    return Date.UTC(y2 + 400, m2, d2) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(y2, m2, d2);
  }
}
function startOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year(), 0, 1);
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      time = startOfDate(this.year(), this.month(), 1);
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date());
      break;
    case "hour":
      time = this._d.valueOf();
      time -= mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      );
      break;
    case "minute":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_MINUTE);
      break;
    case "second":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_SECOND);
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function endOf(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === void 0 || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      time = startOfDate(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      time = startOfDate(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      time = startOfDate(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      time = this._d.valueOf();
      time += MS_PER_HOUR - mod$1(
        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
        MS_PER_HOUR
      ) - 1;
      break;
    case "minute":
      time = this._d.valueOf();
      time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
      break;
    case "second":
      time = this._d.valueOf();
      time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
}
function valueOf() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function unix() {
  return Math.floor(this.valueOf() / 1e3);
}
function toDate() {
  return new Date(this.valueOf());
}
function toArray$6() {
  var m2 = this;
  return [
    m2.year(),
    m2.month(),
    m2.date(),
    m2.hour(),
    m2.minute(),
    m2.second(),
    m2.millisecond()
  ];
}
function toObject() {
  var m2 = this;
  return {
    years: m2.year(),
    months: m2.month(),
    date: m2.date(),
    hours: m2.hours(),
    minutes: m2.minutes(),
    seconds: m2.seconds(),
    milliseconds: m2.milliseconds()
  };
}
function toJSON() {
  return this.isValid() ? this.toISOString() : null;
}
function isValid$2() {
  return isValid2(this);
}
function parsingFlags() {
  return extend({}, getParsingFlags(this));
}
function invalidAt() {
  return getParsingFlags(this).overflow;
}
function creationData() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
addFormatToken("N", 0, 0, "eraAbbr");
addFormatToken("NN", 0, 0, "eraAbbr");
addFormatToken("NNN", 0, 0, "eraAbbr");
addFormatToken("NNNN", 0, 0, "eraName");
addFormatToken("NNNNN", 0, 0, "eraNarrow");
addFormatToken("y", ["y", 1], "yo", "eraYear");
addFormatToken("y", ["yy", 2], 0, "eraYear");
addFormatToken("y", ["yyy", 3], 0, "eraYear");
addFormatToken("y", ["yyyy", 4], 0, "eraYear");
addRegexToken("N", matchEraAbbr);
addRegexToken("NN", matchEraAbbr);
addRegexToken("NNN", matchEraAbbr);
addRegexToken("NNNN", matchEraName);
addRegexToken("NNNNN", matchEraNarrow);
addParseToken(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(input, array3, config2, token2) {
    var era = config2._locale.erasParse(input, token2, config2._strict);
    if (era) {
      getParsingFlags(config2).era = era;
    } else {
      getParsingFlags(config2).invalidEra = input;
    }
  }
);
addRegexToken("y", matchUnsigned);
addRegexToken("yy", matchUnsigned);
addRegexToken("yyy", matchUnsigned);
addRegexToken("yyyy", matchUnsigned);
addRegexToken("yo", matchEraYearOrdinal);
addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
addParseToken(["yo"], function(input, array3, config2, token2) {
  var match5;
  if (config2._locale._eraYearOrdinalRegex) {
    match5 = input.match(config2._locale._eraYearOrdinalRegex);
  }
  if (config2._locale.eraYearOrdinalParse) {
    array3[YEAR] = config2._locale.eraYearOrdinalParse(input, match5);
  } else {
    array3[YEAR] = parseInt(input, 10);
  }
});
function localeEras(m2, format3) {
  var i2, l2, date3, eras = this._eras || getLocale("en")._eras;
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    switch (typeof eras[i2].since) {
      case "string":
        date3 = hooks(eras[i2].since).startOf("day");
        eras[i2].since = date3.valueOf();
        break;
    }
    switch (typeof eras[i2].until) {
      case "undefined":
        eras[i2].until = Infinity;
        break;
      case "string":
        date3 = hooks(eras[i2].until).startOf("day").valueOf();
        eras[i2].until = date3.valueOf();
        break;
    }
  }
  return eras;
}
function localeErasParse(eraName, format3, strict) {
  var i2, l2, eras = this.eras(), name, abbr, narrow;
  eraName = eraName.toUpperCase();
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    name = eras[i2].name.toUpperCase();
    abbr = eras[i2].abbr.toUpperCase();
    narrow = eras[i2].narrow.toUpperCase();
    if (strict) {
      switch (format3) {
        case "N":
        case "NN":
        case "NNN":
          if (abbr === eraName) {
            return eras[i2];
          }
          break;
        case "NNNN":
          if (name === eraName) {
            return eras[i2];
          }
          break;
        case "NNNNN":
          if (narrow === eraName) {
            return eras[i2];
          }
          break;
      }
    } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
      return eras[i2];
    }
  }
}
function localeErasConvertYear(era, year) {
  var dir = era.since <= era.until ? 1 : -1;
  if (year === void 0) {
    return hooks(era.since).year();
  } else {
    return hooks(era.since).year() + (year - era.offset) * dir;
  }
}
function getEraName() {
  var i2, l2, val, eras = this.localeData().eras();
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i2].since <= val && val <= eras[i2].until) {
      return eras[i2].name;
    }
    if (eras[i2].until <= val && val <= eras[i2].since) {
      return eras[i2].name;
    }
  }
  return "";
}
function getEraNarrow() {
  var i2, l2, val, eras = this.localeData().eras();
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i2].since <= val && val <= eras[i2].until) {
      return eras[i2].narrow;
    }
    if (eras[i2].until <= val && val <= eras[i2].since) {
      return eras[i2].narrow;
    }
  }
  return "";
}
function getEraAbbr() {
  var i2, l2, val, eras = this.localeData().eras();
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i2].since <= val && val <= eras[i2].until) {
      return eras[i2].abbr;
    }
    if (eras[i2].until <= val && val <= eras[i2].since) {
      return eras[i2].abbr;
    }
  }
  return "";
}
function getEraYear() {
  var i2, l2, dir, val, eras = this.localeData().eras();
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    dir = eras[i2].since <= eras[i2].until ? 1 : -1;
    val = this.clone().startOf("day").valueOf();
    if (eras[i2].since <= val && val <= eras[i2].until || eras[i2].until <= val && val <= eras[i2].since) {
      return (this.year() - hooks(eras[i2].since).year()) * dir + eras[i2].offset;
    }
  }
  return this.year();
}
function erasNameRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNameRegex : this._erasRegex;
}
function erasAbbrRegex(isStrict) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasAbbrRegex : this._erasRegex;
}
function erasNarrowRegex(isStrict) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNarrowRegex : this._erasRegex;
}
function matchEraAbbr(isStrict, locale2) {
  return locale2.erasAbbrRegex(isStrict);
}
function matchEraName(isStrict, locale2) {
  return locale2.erasNameRegex(isStrict);
}
function matchEraNarrow(isStrict, locale2) {
  return locale2.erasNarrowRegex(isStrict);
}
function matchEraYearOrdinal(isStrict, locale2) {
  return locale2._eraYearOrdinalRegex || matchUnsigned;
}
function computeErasParse() {
  var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i2, l2, erasName, erasAbbr, erasNarrow, eras = this.eras();
  for (i2 = 0, l2 = eras.length; i2 < l2; ++i2) {
    erasName = regexEscape(eras[i2].name);
    erasAbbr = regexEscape(eras[i2].abbr);
    erasNarrow = regexEscape(eras[i2].narrow);
    namePieces.push(erasName);
    abbrPieces.push(erasAbbr);
    narrowPieces.push(erasNarrow);
    mixedPieces.push(erasName);
    mixedPieces.push(erasAbbr);
    mixedPieces.push(erasNarrow);
  }
  this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp(
    "^(" + narrowPieces.join("|") + ")",
    "i"
  );
}
addFormatToken(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
addFormatToken(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function addWeekYearFormatToken(token2, getter) {
  addFormatToken(0, [token2, token2.length], 0, getter);
}
addWeekYearFormatToken("gggg", "weekYear");
addWeekYearFormatToken("ggggg", "weekYear");
addWeekYearFormatToken("GGGG", "isoWeekYear");
addWeekYearFormatToken("GGGGG", "isoWeekYear");
addRegexToken("G", matchSigned);
addRegexToken("g", matchSigned);
addRegexToken("GG", match1to2, match2);
addRegexToken("gg", match1to2, match2);
addRegexToken("GGGG", match1to4, match4);
addRegexToken("gggg", match1to4, match4);
addRegexToken("GGGGG", match1to6, match6);
addRegexToken("ggggg", match1to6, match6);
addWeekParseToken(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(input, week, config2, token2) {
    week[token2.substr(0, 2)] = toInt(input);
  }
);
addWeekParseToken(["gg", "GG"], function(input, week, config2, token2) {
  week[token2] = hooks.parseTwoDigitYear(input);
});
function getSetWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function getSetISOWeekYear(input) {
  return getSetWeekYearHelper.call(
    this,
    input,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function getISOWeeksInYear() {
  return weeksInYear(this.year(), 1, 4);
}
function getISOWeeksInISOWeekYear() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
}
function getWeeksInYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}
function getWeeksInWeekYear() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
}
function getSetWeekYearHelper(input, week, weekday, dow, doy) {
  var weeksTarget;
  if (input == null) {
    return weekOfYear(this, dow, doy).year;
  } else {
    weeksTarget = weeksInYear(input, dow, doy);
    if (week > weeksTarget) {
      week = weeksTarget;
    }
    return setWeekAll.call(this, input, week, weekday, dow, doy);
  }
}
function setWeekAll(weekYear, week, weekday, dow, doy) {
  var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy), date3 = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
  this.year(date3.getUTCFullYear());
  this.month(date3.getUTCMonth());
  this.date(date3.getUTCDate());
  return this;
}
addFormatToken("Q", 0, "Qo", "quarter");
addRegexToken("Q", match1);
addParseToken("Q", function(input, array3) {
  array3[MONTH] = (toInt(input) - 1) * 3;
});
function getSetQuarter(input) {
  return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}
addFormatToken("D", ["DD", 2], "Do", "date");
addRegexToken("D", match1to2, match1to2NoLeadingZero);
addRegexToken("DD", match1to2, match2);
addRegexToken("Do", function(isStrict, locale2) {
  return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
});
addParseToken(["D", "DD"], DATE);
addParseToken("Do", function(input, array3) {
  array3[DATE] = toInt(input.match(match1to2)[0]);
});
var getSetDayOfMonth = makeGetSet("Date", true);
addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
addRegexToken("DDD", match1to3);
addRegexToken("DDDD", match3);
addParseToken(["DDD", "DDDD"], function(input, array3, config2) {
  config2._dayOfYear = toInt(input);
});
function getSetDayOfYear(input) {
  var dayOfYear = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
}
addFormatToken("m", ["mm", 2], 0, "minute");
addRegexToken("m", match1to2, match1to2HasZero);
addRegexToken("mm", match1to2, match2);
addParseToken(["m", "mm"], MINUTE);
var getSetMinute = makeGetSet("Minutes", false);
addFormatToken("s", ["ss", 2], 0, "second");
addRegexToken("s", match1to2, match1to2HasZero);
addRegexToken("ss", match1to2, match2);
addParseToken(["s", "ss"], SECOND);
var getSetSecond = makeGetSet("Seconds", false);
addFormatToken("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
addFormatToken(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
addFormatToken(0, ["SSS", 3], 0, "millisecond");
addFormatToken(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
addFormatToken(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
addFormatToken(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
addFormatToken(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
addRegexToken("S", match1to3, match1);
addRegexToken("SS", match1to3, match2);
addRegexToken("SSS", match1to3, match3);
var token, getSetMillisecond;
for (token = "SSSS"; token.length <= 9; token += "S") {
  addRegexToken(token, matchUnsigned);
}
function parseMs(input, array3) {
  array3[MILLISECOND] = toInt(("0." + input) * 1e3);
}
for (token = "S"; token.length <= 9; token += "S") {
  addParseToken(token, parseMs);
}
getSetMillisecond = makeGetSet("Milliseconds", false);
addFormatToken("z", 0, 0, "zoneAbbr");
addFormatToken("zz", 0, 0, "zoneName");
function getZoneAbbr() {
  return this._isUTC ? "UTC" : "";
}
function getZoneName() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var proto = Moment.prototype;
proto.add = add;
proto.calendar = calendar$1;
proto.clone = clone;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format$2;
proto.from = from;
proto.fromNow = fromNow;
proto.to = to;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid$2;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray$6;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.inspect = inspect;
if (typeof Symbol !== "undefined" && Symbol.for != null) {
  proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
    return "Moment<" + this.format() + ">";
  };
}
proto.toJSON = toJSON;
proto.toString = toString$2;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;
proto.eraName = getEraName;
proto.eraNarrow = getEraNarrow;
proto.eraAbbr = getEraAbbr;
proto.eraYear = getEraYear;
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;
proto.quarter = proto.quarters = getSetQuarter;
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.weeksInWeekYear = getWeeksInWeekYear;
proto.isoWeeksInYear = getISOWeeksInYear;
proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;
proto.hour = proto.hours = getSetHour;
proto.minute = proto.minutes = getSetMinute;
proto.second = proto.seconds = getSetSecond;
proto.millisecond = proto.milliseconds = getSetMillisecond;
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;
proto.dates = deprecate(
  "dates accessor is deprecated. Use date instead.",
  getSetDayOfMonth
);
proto.months = deprecate(
  "months accessor is deprecated. Use month instead",
  getSetMonth
);
proto.years = deprecate(
  "years accessor is deprecated. Use year instead",
  getSetYear
);
proto.zone = deprecate(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  getSetZone
);
proto.isDSTShifted = deprecate(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  isDaylightSavingTimeShifted
);
function createUnix(input) {
  return createLocal(input * 1e3);
}
function createInZone() {
  return createLocal.apply(null, arguments).parseZone();
}
function preParsePostFormat(string2) {
  return string2;
}
var proto$1 = Locale.prototype;
proto$1.calendar = calendar;
proto$1.longDateFormat = longDateFormat;
proto$1.invalidDate = invalidDate;
proto$1.ordinal = ordinal;
proto$1.preparse = preParsePostFormat;
proto$1.postformat = preParsePostFormat;
proto$1.relativeTime = relativeTime;
proto$1.pastFuture = pastFuture;
proto$1.set = set;
proto$1.eras = localeEras;
proto$1.erasParse = localeErasParse;
proto$1.erasConvertYear = localeErasConvertYear;
proto$1.erasAbbrRegex = erasAbbrRegex;
proto$1.erasNameRegex = erasNameRegex;
proto$1.erasNarrowRegex = erasNarrowRegex;
proto$1.months = localeMonths;
proto$1.monthsShort = localeMonthsShort;
proto$1.monthsParse = localeMonthsParse;
proto$1.monthsRegex = monthsRegex;
proto$1.monthsShortRegex = monthsShortRegex;
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;
proto$1.weekdays = localeWeekdays;
proto$1.weekdaysMin = localeWeekdaysMin;
proto$1.weekdaysShort = localeWeekdaysShort;
proto$1.weekdaysParse = localeWeekdaysParse;
proto$1.weekdaysRegex = weekdaysRegex;
proto$1.weekdaysShortRegex = weekdaysShortRegex;
proto$1.weekdaysMinRegex = weekdaysMinRegex;
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;
function get$1$1(format3, index2, field, setter) {
  var locale2 = getLocale(), utc = createUTC().set(setter, index2);
  return locale2[field](utc, format3);
}
function listMonthsImpl(format3, index2, field) {
  if (isNumber$1(format3)) {
    index2 = format3;
    format3 = void 0;
  }
  format3 = format3 || "";
  if (index2 != null) {
    return get$1$1(format3, index2, field, "month");
  }
  var i2, out = [];
  for (i2 = 0; i2 < 12; i2++) {
    out[i2] = get$1$1(format3, i2, field, "month");
  }
  return out;
}
function listWeekdaysImpl(localeSorted, format3, index2, field) {
  if (typeof localeSorted === "boolean") {
    if (isNumber$1(format3)) {
      index2 = format3;
      format3 = void 0;
    }
    format3 = format3 || "";
  } else {
    format3 = localeSorted;
    index2 = format3;
    localeSorted = false;
    if (isNumber$1(format3)) {
      index2 = format3;
      format3 = void 0;
    }
    format3 = format3 || "";
  }
  var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0, i2, out = [];
  if (index2 != null) {
    return get$1$1(format3, (index2 + shift) % 7, field, "day");
  }
  for (i2 = 0; i2 < 7; i2++) {
    out[i2] = get$1$1(format3, (i2 + shift) % 7, field, "day");
  }
  return out;
}
function listMonths(format3, index2) {
  return listMonthsImpl(format3, index2, "months");
}
function listMonthsShort(format3, index2) {
  return listMonthsImpl(format3, index2, "monthsShort");
}
function listWeekdays(localeSorted, format3, index2) {
  return listWeekdaysImpl(localeSorted, format3, index2, "weekdays");
}
function listWeekdaysShort(localeSorted, format3, index2) {
  return listWeekdaysImpl(localeSorted, format3, index2, "weekdaysShort");
}
function listWeekdaysMin(localeSorted, format3, index2) {
  return listWeekdaysImpl(localeSorted, format3, index2, "weekdaysMin");
}
getSetGlobalLocale("en", {
  eras: [
    {
      since: "0001-01-01",
      until: Infinity,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -Infinity,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(number3) {
    var b2 = number3 % 10, output = toInt(number3 % 100 / 10) === 1 ? "th" : b2 === 1 ? "st" : b2 === 2 ? "nd" : b2 === 3 ? "rd" : "th";
    return number3 + output;
  }
});
hooks.lang = deprecate(
  "moment.lang is deprecated. Use moment.locale instead.",
  getSetGlobalLocale
);
hooks.langData = deprecate(
  "moment.langData is deprecated. Use moment.localeData instead.",
  getLocale
);
var mathAbs = Math.abs;
function abs() {
  var data79 = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  data79.milliseconds = mathAbs(data79.milliseconds);
  data79.seconds = mathAbs(data79.seconds);
  data79.minutes = mathAbs(data79.minutes);
  data79.hours = mathAbs(data79.hours);
  data79.months = mathAbs(data79.months);
  data79.years = mathAbs(data79.years);
  return this;
}
function addSubtract$1(duration2, input, value26, direction) {
  var other = createDuration(input, value26);
  duration2._milliseconds += direction * other._milliseconds;
  duration2._days += direction * other._days;
  duration2._months += direction * other._months;
  return duration2._bubble();
}
function add$1(input, value26) {
  return addSubtract$1(this, input, value26, 1);
}
function subtract$1(input, value26) {
  return addSubtract$1(this, input, value26, -1);
}
function absCeil(number3) {
  if (number3 < 0) {
    return Math.floor(number3);
  } else {
    return Math.ceil(number3);
  }
}
function bubble() {
  var milliseconds2 = this._milliseconds, days2 = this._days, months3 = this._months, data79 = this._data, seconds2, minutes2, hours2, years3, monthsFromDays;
  if (!(milliseconds2 >= 0 && days2 >= 0 && months3 >= 0 || milliseconds2 <= 0 && days2 <= 0 && months3 <= 0)) {
    milliseconds2 += absCeil(monthsToDays(months3) + days2) * 864e5;
    days2 = 0;
    months3 = 0;
  }
  data79.milliseconds = milliseconds2 % 1e3;
  seconds2 = absFloor(milliseconds2 / 1e3);
  data79.seconds = seconds2 % 60;
  minutes2 = absFloor(seconds2 / 60);
  data79.minutes = minutes2 % 60;
  hours2 = absFloor(minutes2 / 60);
  data79.hours = hours2 % 24;
  days2 += absFloor(hours2 / 24);
  monthsFromDays = absFloor(daysToMonths(days2));
  months3 += monthsFromDays;
  days2 -= absCeil(monthsToDays(monthsFromDays));
  years3 = absFloor(months3 / 12);
  months3 %= 12;
  data79.days = days2;
  data79.months = months3;
  data79.years = years3;
  return this;
}
function daysToMonths(days2) {
  return days2 * 4800 / 146097;
}
function monthsToDays(months3) {
  return months3 * 146097 / 4800;
}
function as(units) {
  if (!this.isValid()) {
    return NaN;
  }
  var days2, months3, milliseconds2 = this._milliseconds;
  units = normalizeUnits(units);
  if (units === "month" || units === "quarter" || units === "year") {
    days2 = this._days + milliseconds2 / 864e5;
    months3 = this._months + daysToMonths(days2);
    switch (units) {
      case "month":
        return months3;
      case "quarter":
        return months3 / 3;
      case "year":
        return months3 / 12;
    }
  } else {
    days2 = this._days + Math.round(monthsToDays(this._months));
    switch (units) {
      case "week":
        return days2 / 7 + milliseconds2 / 6048e5;
      case "day":
        return days2 + milliseconds2 / 864e5;
      case "hour":
        return days2 * 24 + milliseconds2 / 36e5;
      case "minute":
        return days2 * 1440 + milliseconds2 / 6e4;
      case "second":
        return days2 * 86400 + milliseconds2 / 1e3;
      case "millisecond":
        return Math.floor(days2 * 864e5) + milliseconds2;
      default:
        throw new Error("Unknown unit " + units);
    }
  }
}
function makeAs(alias) {
  return function() {
    return this.as(alias);
  };
}
var asMilliseconds = makeAs("ms"), asSeconds = makeAs("s"), asMinutes = makeAs("m"), asHours = makeAs("h"), asDays = makeAs("d"), asWeeks = makeAs("w"), asMonths = makeAs("M"), asQuarters = makeAs("Q"), asYears = makeAs("y"), valueOf$1 = asMilliseconds;
function clone$1() {
  return createDuration(this);
}
function get$2(units) {
  units = normalizeUnits(units);
  return this.isValid() ? this[units + "s"]() : NaN;
}
function makeGetter(name) {
  return function() {
    return this.isValid() ? this._data[name] : NaN;
  };
}
var milliseconds = makeGetter("milliseconds"), seconds = makeGetter("seconds"), minutes = makeGetter("minutes"), hours = makeGetter("hours"), days = makeGetter("days"), months = makeGetter("months"), years = makeGetter("years");
function weeks() {
  return absFloor(this.days() / 7);
}
var round = Math.round, thresholds = {
  ss: 44,
  // a few seconds to seconds
  s: 45,
  // seconds to minute
  m: 45,
  // minutes to hour
  h: 22,
  // hours to day
  d: 26,
  // days to month/week
  w: null,
  // weeks to month
  M: 11
  // months to year
};
function substituteTimeAgo(string2, number3, withoutSuffix, isFuture, locale2) {
  return locale2.relativeTime(number3 || 1, !!withoutSuffix, string2, isFuture);
}
function relativeTime$1(posNegDuration, withoutSuffix, thresholds2, locale2) {
  var duration2 = createDuration(posNegDuration).abs(), seconds2 = round(duration2.as("s")), minutes2 = round(duration2.as("m")), hours2 = round(duration2.as("h")), days2 = round(duration2.as("d")), months3 = round(duration2.as("M")), weeks2 = round(duration2.as("w")), years3 = round(duration2.as("y")), a2 = seconds2 <= thresholds2.ss && ["s", seconds2] || seconds2 < thresholds2.s && ["ss", seconds2] || minutes2 <= 1 && ["m"] || minutes2 < thresholds2.m && ["mm", minutes2] || hours2 <= 1 && ["h"] || hours2 < thresholds2.h && ["hh", hours2] || days2 <= 1 && ["d"] || days2 < thresholds2.d && ["dd", days2];
  if (thresholds2.w != null) {
    a2 = a2 || weeks2 <= 1 && ["w"] || weeks2 < thresholds2.w && ["ww", weeks2];
  }
  a2 = a2 || months3 <= 1 && ["M"] || months3 < thresholds2.M && ["MM", months3] || years3 <= 1 && ["y"] || ["yy", years3];
  a2[2] = withoutSuffix;
  a2[3] = +posNegDuration > 0;
  a2[4] = locale2;
  return substituteTimeAgo.apply(null, a2);
}
function getSetRelativeTimeRounding(roundingFunction) {
  if (roundingFunction === void 0) {
    return round;
  }
  if (typeof roundingFunction === "function") {
    round = roundingFunction;
    return true;
  }
  return false;
}
function getSetRelativeTimeThreshold(threshold, limit) {
  if (thresholds[threshold] === void 0) {
    return false;
  }
  if (limit === void 0) {
    return thresholds[threshold];
  }
  thresholds[threshold] = limit;
  if (threshold === "s") {
    thresholds.ss = limit - 1;
  }
  return true;
}
function humanize(argWithSuffix, argThresholds) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var withSuffix = false, th = thresholds, locale2, output;
  if (typeof argWithSuffix === "object") {
    argThresholds = argWithSuffix;
    argWithSuffix = false;
  }
  if (typeof argWithSuffix === "boolean") {
    withSuffix = argWithSuffix;
  }
  if (typeof argThresholds === "object") {
    th = Object.assign({}, thresholds, argThresholds);
    if (argThresholds.s != null && argThresholds.ss == null) {
      th.ss = argThresholds.s - 1;
    }
  }
  locale2 = this.localeData();
  output = relativeTime$1(this, !withSuffix, th, locale2);
  if (withSuffix) {
    output = locale2.pastFuture(+this, output);
  }
  return locale2.postformat(output);
}
var abs$1 = Math.abs;
function sign(x2) {
  return (x2 > 0) - (x2 < 0) || +x2;
}
function toISOString$1() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var seconds2 = abs$1(this._milliseconds) / 1e3, days2 = abs$1(this._days), months3 = abs$1(this._months), minutes2, hours2, years3, s2, total2 = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
  if (!total2) {
    return "P0D";
  }
  minutes2 = absFloor(seconds2 / 60);
  hours2 = absFloor(minutes2 / 60);
  seconds2 %= 60;
  minutes2 %= 60;
  years3 = absFloor(months3 / 12);
  months3 %= 12;
  s2 = seconds2 ? seconds2.toFixed(3).replace(/\.?0+$/, "") : "";
  totalSign = total2 < 0 ? "-" : "";
  ymSign = sign(this._months) !== sign(total2) ? "-" : "";
  daysSign = sign(this._days) !== sign(total2) ? "-" : "";
  hmsSign = sign(this._milliseconds) !== sign(total2) ? "-" : "";
  return totalSign + "P" + (years3 ? ymSign + years3 + "Y" : "") + (months3 ? ymSign + months3 + "M" : "") + (days2 ? daysSign + days2 + "D" : "") + (hours2 || minutes2 || seconds2 ? "T" : "") + (hours2 ? hmsSign + hours2 + "H" : "") + (minutes2 ? hmsSign + minutes2 + "M" : "") + (seconds2 ? hmsSign + s2 + "S" : "");
}
var proto$2 = Duration.prototype;
proto$2.isValid = isValid$1;
proto$2.abs = abs;
proto$2.add = add$1;
proto$2.subtract = subtract$1;
proto$2.as = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds = asSeconds;
proto$2.asMinutes = asMinutes;
proto$2.asHours = asHours;
proto$2.asDays = asDays;
proto$2.asWeeks = asWeeks;
proto$2.asMonths = asMonths;
proto$2.asQuarters = asQuarters;
proto$2.asYears = asYears;
proto$2.valueOf = valueOf$1;
proto$2._bubble = bubble;
proto$2.clone = clone$1;
proto$2.get = get$2;
proto$2.milliseconds = milliseconds;
proto$2.seconds = seconds;
proto$2.minutes = minutes;
proto$2.hours = hours;
proto$2.days = days;
proto$2.weeks = weeks;
proto$2.months = months;
proto$2.years = years;
proto$2.humanize = humanize;
proto$2.toISOString = toISOString$1;
proto$2.toString = toISOString$1;
proto$2.toJSON = toISOString$1;
proto$2.locale = locale;
proto$2.localeData = localeData;
proto$2.toIsoString = deprecate(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  toISOString$1
);
proto$2.lang = lang;
addFormatToken("X", 0, 0, "unix");
addFormatToken("x", 0, 0, "valueOf");
addRegexToken("x", matchSigned);
addRegexToken("X", matchTimestamp);
addParseToken("X", function(input, array3, config2) {
  config2._d = new Date(parseFloat(input) * 1e3);
});
addParseToken("x", function(input, array3, config2) {
  config2._d = new Date(toInt(input));
});
//! moment.js
hooks.version = "2.30.1";
setHookCallback(createLocal);
hooks.fn = proto;
hooks.min = min;
hooks.max = max;
hooks.now = now$3;
hooks.utc = createUTC;
hooks.unix = createUnix;
hooks.months = listMonths;
hooks.isDate = isDate;
hooks.locale = getSetGlobalLocale;
hooks.invalid = createInvalid;
hooks.duration = createDuration;
hooks.isMoment = isMoment$1;
hooks.weekdays = listWeekdays;
hooks.parseZone = createInZone;
hooks.localeData = getLocale;
hooks.isDuration = isDuration;
hooks.monthsShort = listMonthsShort;
hooks.weekdaysMin = listWeekdaysMin;
hooks.defineLocale = defineLocale;
hooks.updateLocale = updateLocale;
hooks.locales = listLocales;
hooks.weekdaysShort = listWeekdaysShort;
hooks.normalizeUnits = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat = getCalendarFormat;
hooks.prototype = proto;
hooks.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  // <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  // <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  // <input type="datetime-local" step="0.001" />
  DATE: "YYYY-MM-DD",
  // <input type="date" />
  TIME: "HH:mm",
  // <input type="time" />
  TIME_SECONDS: "HH:mm:ss",
  // <input type="time" step="1" />
  TIME_MS: "HH:mm:ss.SSS",
  // <input type="time" step="0.001" />
  WEEK: "GGGG-[W]WW",
  // <input type="week" />
  MONTH: "YYYY-MM"
  // <input type="month" />
};
function interopDefault(m2) {
  return m2.default || m2;
}
var runtimeLocale = _extends$1({}, defaultLocale.Modal);
function changeConfirmLocale(newLocale) {
  if (newLocale) {
    runtimeLocale = _extends$1(_extends$1({}, runtimeLocale), newLocale);
  } else {
    runtimeLocale = _extends$1({}, defaultLocale.Modal);
  }
}
function getConfirmLocale() {
  return runtimeLocale;
}
var warned = {};
function warning$6(valid, message) {
}
function call(method3, valid, message) {
  if (!valid && !warned[message]) {
    warned[message] = true;
  }
}
function warningOnce(valid, message) {
  call(warning$6, valid, message);
}
const warning$5 = function(valid, component) {
  var message = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "";
  warningOnce(valid, "[antdv: ".concat(component, "] ").concat(message));
};
const { provide: provide$t, defineComponent: defineComponent$32, reactive: reactive$k, watch: watch$C, onUnmounted: onUnmounted$7 } = await importShared("vue");
var ANT_MARK = "internalMark";
function setMomentLocale(locale2) {
  if (locale2 && locale2.locale) {
    interopDefault(hooks).locale(locale2.locale);
  } else {
    interopDefault(hooks).locale("en");
  }
}
var LocaleProvider = defineComponent$32({
  name: "ALocaleProvider",
  props: {
    locale: {
      type: Object
    },
    ANT_MARK__: PropTypes.string
  },
  setup: function setup3(props2, _ref) {
    var slots = _ref.slots;
    warning$5(props2.ANT_MARK__ === ANT_MARK, "LocaleProvider", "`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead");
    var state = reactive$k({
      antLocale: _extends$1(_extends$1({}, props2.locale), {
        exist: true
      }),
      ANT_MARK__: ANT_MARK
    });
    provide$t("localeData", state);
    watch$C(function() {
      return props2.locale;
    }, function(val) {
      state.antLocale = _extends$1(_extends$1({}, val), {
        exist: true
      });
      setMomentLocale(val);
      changeConfirmLocale(val && val.Modal);
    }, {
      immediate: true
    });
    onUnmounted$7(function() {
      changeConfirmLocale();
    });
    return function() {
      var _a;
      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
  }
});
LocaleProvider.install = function(app) {
  app.component(LocaleProvider.name, LocaleProvider);
  return app;
};
const LocaleProvider$1 = withInstall(LocaleProvider);
const { createVNode: _createVNode$5b } = await importShared("vue");
const { reactive: reactive$j, provide: provide$s, defineComponent: defineComponent$31, watch: watch$B } = await importShared("vue");
var configProviderProps = {
  getTargetContainer: {
    type: Function
  },
  getPopupContainer: {
    type: Function
  },
  prefixCls: String,
  getPrefixCls: {
    type: Function
  },
  renderEmpty: {
    type: Function
  },
  transformCellText: {
    type: Function
  },
  csp: {
    type: Object
  },
  autoInsertSpaceInButton: PropTypes.looseBool,
  locale: {
    type: Object
  },
  pageHeader: {
    type: Object
  },
  componentSize: {
    type: String
  },
  direction: {
    type: String
  },
  space: {
    type: Object
  },
  virtual: PropTypes.looseBool,
  dropdownMatchSelectWidth: PropTypes.looseBool,
  form: {
    type: Object
  }
};
var ConfigProvider = defineComponent$31({
  name: "AConfigProvider",
  props: configProviderProps,
  setup: function setup4(props2, _ref) {
    var slots = _ref.slots;
    var getPrefixCls2 = function getPrefixCls3(suffixCls, customizePrefixCls) {
      var _props$prefixCls = props2.prefixCls, prefixCls2 = _props$prefixCls === void 0 ? "ant" : _props$prefixCls;
      return suffixCls ? "".concat(prefixCls2, "-").concat(suffixCls) : prefixCls2;
    };
    var renderEmptyComponent = function renderEmptyComponent2(name) {
      var renderEmpty$1 = props2.renderEmpty || slots.renderEmpty || renderEmpty;
      return renderEmpty$1(name);
    };
    var getPrefixClsWrapper = function getPrefixClsWrapper2(suffixCls, customizePrefixCls) {
      var prefixCls2 = props2.prefixCls;
      if (customizePrefixCls) return customizePrefixCls;
      var mergedPrefixCls = prefixCls2 || getPrefixCls2("");
      return suffixCls ? "".concat(mergedPrefixCls, "-").concat(suffixCls) : mergedPrefixCls;
    };
    var configProvider = reactive$j(_extends$1(_extends$1({}, props2), {
      getPrefixCls: getPrefixClsWrapper,
      renderEmpty: renderEmptyComponent
    }));
    Object.keys(props2).forEach(function(key2) {
      watch$B(function() {
        return props2[key2];
      }, function() {
        configProvider[key2] = props2[key2];
      });
    });
    provide$s("configProvider", configProvider);
    var renderProvider = function renderProvider2(legacyLocale) {
      var _a;
      return _createVNode$5b(LocaleProvider$1, {
        "locale": props2.locale || legacyLocale,
        "ANT_MARK__": ANT_MARK
      }, {
        default: function _default8() {
          return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
        }
      });
    };
    return function() {
      return _createVNode$5b(LocaleReceiver, {
        "children": function children(_2, __, legacyLocale) {
          return renderProvider(legacyLocale);
        }
      }, null);
    };
  }
});
var defaultConfigProvider = reactive$j({
  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {
    if (customizePrefixCls) return customizePrefixCls;
    return suffixCls ? "ant-".concat(suffixCls) : "ant";
  },
  renderEmpty,
  direction: "ltr"
});
const index$j = withInstall(ConfigProvider);
const { computed: computed$13, inject: inject$1k } = await importShared("vue");
const useConfigInject = function(name, props2) {
  var configProvider = inject$1k("configProvider", defaultConfigProvider);
  var prefixCls2 = computed$13(function() {
    return configProvider.getPrefixCls(name, props2.prefixCls);
  });
  var direction = computed$13(function() {
    return configProvider.direction;
  });
  var autoInsertSpaceInButton = computed$13(function() {
    return configProvider.autoInsertSpaceInButton;
  });
  var renderEmpty2 = computed$13(function() {
    return configProvider.renderEmpty;
  });
  var space = computed$13(function() {
    return configProvider.space;
  });
  var pageHeader = computed$13(function() {
    return configProvider.pageHeader;
  });
  var form = computed$13(function() {
    return configProvider.form;
  });
  var size = computed$13(function() {
    return props2.size || configProvider.componentSize;
  });
  var getTargetContainer = computed$13(function() {
    return props2.getTargetContainer;
  });
  return {
    configProvider,
    prefixCls: prefixCls2,
    direction,
    size,
    getTargetContainer,
    space,
    pageHeader,
    form,
    autoInsertSpaceInButton,
    renderEmpty: renderEmpty2
  };
};
const { createVNode: _createVNode$5a } = await importShared("vue");
const { defineComponent: defineComponent$30, ref: ref$T, reactive: reactive$i, watch: watch$A, onMounted: onMounted$u, getCurrentInstance: getCurrentInstance$4, computed: computed$12, onUnmounted: onUnmounted$6, onUpdated: onUpdated$6 } = await importShared("vue");
function getDefaultTarget() {
  return typeof window !== "undefined" ? window : null;
}
var AffixStatus;
(function(AffixStatus2) {
  AffixStatus2[AffixStatus2["None"] = 0] = "None";
  AffixStatus2[AffixStatus2["Prepare"] = 1] = "Prepare";
})(AffixStatus || (AffixStatus = {}));
var affixProps = {
  /**
   * 距离窗口顶部达到指定偏移量后触发
   */
  offsetTop: PropTypes.number,
  offset: PropTypes.number,
  /** 距离窗口底部达到指定偏移量后触发 */
  offsetBottom: PropTypes.number,
  /** 固定状态改变时触发的回调函数 */
  // onChange?: (affixed?: boolean) => void;
  /** 设置 Affix 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 */
  target: PropTypes.func.def(getDefaultTarget),
  prefixCls: PropTypes.string,
  onChange: PropTypes.func,
  onTestUpdatePosition: PropTypes.func
};
var Affix = defineComponent$30({
  name: "AAffix",
  props: affixProps,
  emits: ["change", "testUpdatePosition"],
  setup: function setup5(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit, expose = _ref.expose;
    var placeholderNode = ref$T();
    var fixedNode = ref$T();
    var state = reactive$i({
      affixStyle: void 0,
      placeholderStyle: void 0,
      status: AffixStatus.None,
      lastAffix: false,
      prevTarget: null,
      timeout: null
    });
    var currentInstance = getCurrentInstance$4();
    var offsetTop = computed$12(function() {
      return props2.offsetBottom === void 0 && props2.offsetTop === void 0 ? 0 : props2.offsetTop;
    });
    var offsetBottom = computed$12(function() {
      return props2.offsetBottom;
    });
    var measure2 = function measure22() {
      var status = state.status, lastAffix = state.lastAffix;
      var target = props2.target;
      if (status !== AffixStatus.Prepare || !fixedNode.value || !placeholderNode.value || !target) {
        return;
      }
      var targetNode = target();
      if (!targetNode) {
        return;
      }
      var newState = {
        status: AffixStatus.None
      };
      var targetRect = getTargetRect(targetNode);
      var placeholderReact = getTargetRect(placeholderNode.value);
      var fixedTop = getFixedTop(placeholderReact, targetRect, offsetTop.value);
      var fixedBottom = getFixedBottom(placeholderReact, targetRect, offsetBottom.value);
      if (fixedTop !== void 0) {
        newState.affixStyle = {
          position: "fixed",
          top: fixedTop,
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
        newState.placeholderStyle = {
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
      } else if (fixedBottom !== void 0) {
        newState.affixStyle = {
          position: "fixed",
          bottom: fixedBottom,
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
        newState.placeholderStyle = {
          width: placeholderReact.width + "px",
          height: placeholderReact.height + "px"
        };
      }
      newState.lastAffix = !!newState.affixStyle;
      if (lastAffix !== newState.lastAffix) {
        emit("change", newState.lastAffix);
      }
      _extends$1(state, newState);
    };
    var prepareMeasure = function prepareMeasure2() {
      _extends$1(state, {
        status: AffixStatus.Prepare,
        affixStyle: void 0,
        placeholderStyle: void 0
      });
      currentInstance.update();
    };
    var updatePosition = throttleByAnimationFrame(function() {
      prepareMeasure();
    });
    var lazyUpdatePosition = throttleByAnimationFrame(function() {
      var target = props2.target;
      var affixStyle = state.affixStyle;
      if (target && affixStyle) {
        var targetNode = target();
        if (targetNode && placeholderNode.value) {
          var targetRect = getTargetRect(targetNode);
          var placeholderReact = getTargetRect(placeholderNode.value);
          var fixedTop = getFixedTop(placeholderReact, targetRect, offsetTop.value);
          var fixedBottom = getFixedBottom(placeholderReact, targetRect, offsetBottom.value);
          if (fixedTop !== void 0 && affixStyle.top === fixedTop || fixedBottom !== void 0 && affixStyle.bottom === fixedBottom) {
            return;
          }
        }
      }
      prepareMeasure();
    });
    expose({
      updatePosition,
      lazyUpdatePosition
    });
    watch$A(function() {
      return props2.target;
    }, function(val) {
      var newTarget = null;
      if (val) {
        newTarget = val() || null;
      }
      if (state.prevTarget !== newTarget) {
        removeObserveTarget(currentInstance);
        if (newTarget) {
          addObserveTarget(newTarget, currentInstance);
          updatePosition();
        }
        state.prevTarget = newTarget;
      }
    });
    watch$A(function() {
      return [props2.offsetTop, props2.offsetBottom];
    }, updatePosition);
    onMounted$u(function() {
      var target = props2.target;
      if (target) {
        state.timeout = setTimeout(function() {
          addObserveTarget(target(), currentInstance);
          updatePosition();
        });
      }
    });
    onUpdated$6(function() {
      measure2();
    });
    onUnmounted$6(function() {
      clearTimeout(state.timeout);
      removeObserveTarget(currentInstance);
      updatePosition.cancel();
      lazyUpdatePosition.cancel();
    });
    var _useConfigInject = useConfigInject("affix", props2), prefixCls2 = _useConfigInject.prefixCls;
    return function() {
      var _a;
      var affixStyle = state.affixStyle, placeholderStyle = state.placeholderStyle;
      var className = classNames(_defineProperty$U({}, prefixCls2.value, affixStyle));
      var restProps = omit$1(props2, ["prefixCls", "offsetTop", "offsetBottom", "target"]);
      return _createVNode$5a(ResizeObserver, {
        "onResize": updatePosition
      }, {
        default: function _default8() {
          return [_createVNode$5a("div", _objectSpread2$2(_objectSpread2$2({}, restProps), {}, {
            "style": placeholderStyle,
            "ref": placeholderNode
          }), [_createVNode$5a("div", {
            "class": className,
            "ref": fixedNode,
            "style": affixStyle
          }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)])])];
        }
      });
    };
  }
});
const Affix$1 = withInstall(Affix);
var id = 0;
var ids = {};
function wrapperRaf(callback) {
  var delayFrames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  var myId = id++;
  var restFrames = delayFrames;
  function internalCallback() {
    restFrames -= 1;
    if (restFrames <= 0) {
      callback();
      delete ids[myId];
    } else {
      ids[myId] = requestAnimationFrame(internalCallback);
    }
  }
  ids[myId] = requestAnimationFrame(internalCallback);
  return myId;
}
wrapperRaf.cancel = function cancel(pid) {
  if (pid === void 0) return;
  cancelAnimationFrame(ids[pid]);
  delete ids[pid];
};
wrapperRaf.ids = ids;
function isWindow$2(obj) {
  return obj !== null && obj !== void 0 && obj === obj.window;
}
function getScroll$4(target, top) {
  var _a;
  if (typeof window === "undefined") {
    return 0;
  }
  var method3 = "scrollTop";
  var result = 0;
  if (isWindow$2(target)) {
    result = target["pageYOffset"];
  } else if (target instanceof Document) {
    result = target.documentElement[method3];
  } else if (target) {
    result = target[method3];
  }
  if (target && !isWindow$2(target) && typeof result !== "number") {
    result = (_a = (target.ownerDocument || target).documentElement) === null || _a === void 0 ? void 0 : _a[method3];
  }
  return result;
}
function easeInOutCubic(t2, b2, c2, d2) {
  var cc = c2 - b2;
  t2 /= d2 / 2;
  if (t2 < 1) {
    return cc / 2 * t2 * t2 * t2 + b2;
  }
  return cc / 2 * ((t2 -= 2) * t2 * t2 + 2) + b2;
}
function scrollTo$1(y2) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _options$getContainer = options2.getContainer, getContainer5 = _options$getContainer === void 0 ? function() {
    return window;
  } : _options$getContainer, callback = options2.callback, _options$duration = options2.duration, duration2 = _options$duration === void 0 ? 450 : _options$duration;
  var container = getContainer5();
  var scrollTop2 = getScroll$4(container);
  var startTime = Date.now();
  var frameFunc = function frameFunc2() {
    var timestamp = Date.now();
    var time = timestamp - startTime;
    var nextScrollTop = easeInOutCubic(time > duration2 ? duration2 : time, scrollTop2, y2, duration2);
    if (isWindow$2(container)) {
      container.scrollTo(window.pageXOffset, nextScrollTop);
    } else if (container instanceof HTMLDocument || container.constructor.name === "HTMLDocument") {
      container.documentElement.scrollTop = nextScrollTop;
    } else {
      container.scrollTop = nextScrollTop;
    }
    if (time < duration2) {
      wrapperRaf(frameFunc2);
    } else if (typeof callback === "function") {
      callback();
    }
  };
  wrapperRaf(frameFunc);
}
const { computed: computed$11, inject: inject$1j, provide: provide$r } = await importShared("vue");
function noop$I() {
}
var AnchorContextKey = Symbol("anchorContextKey");
var useProvideAnchor = function useProvideAnchor2(state) {
  provide$r(AnchorContextKey, state);
};
var useInjectAnchor = function useInjectAnchor2() {
  return inject$1j(AnchorContextKey, {
    registerLink: noop$I,
    unregisterLink: noop$I,
    scrollTo: noop$I,
    activeLink: computed$11(function() {
      return "";
    }),
    handleClick: noop$I
  });
};
const { createVNode: _createVNode$59 } = await importShared("vue");
const { defineComponent: defineComponent$2$, nextTick: nextTick$B, onBeforeUnmount: onBeforeUnmount$h, onMounted: onMounted$t, onUpdated: onUpdated$5, reactive: reactive$h, ref: ref$S, computed: computed$10 } = await importShared("vue");
function getDefaultContainer() {
  return window;
}
function getOffsetTop(element, container) {
  if (!element.getClientRects().length) {
    return 0;
  }
  var rect = element.getBoundingClientRect();
  if (rect.width || rect.height) {
    if (container === window) {
      container = element.ownerDocument.documentElement;
      return rect.top - container.clientTop;
    }
    return rect.top - container.getBoundingClientRect().top;
  }
  return rect.top;
}
var sharpMatcherRegx = /#(\S+)$/;
var anchorProps = {
  prefixCls: PropTypes.string,
  offsetTop: PropTypes.number,
  bounds: PropTypes.number,
  affix: PropTypes.looseBool.def(true),
  showInkInFixed: PropTypes.looseBool.def(false),
  getContainer: PropTypes.func.def(getDefaultContainer),
  wrapperClass: PropTypes.string,
  wrapperStyle: PropTypes.style,
  getCurrentAnchor: PropTypes.func,
  targetOffset: PropTypes.number,
  onChange: PropTypes.func,
  onClick: PropTypes.func
};
const Anchor = defineComponent$2$({
  name: "AAnchor",
  inheritAttrs: false,
  props: anchorProps,
  emits: ["change", "click"],
  setup: function setup6(props2, _ref) {
    var emit = _ref.emit, attrs = _ref.attrs, slots = _ref.slots, expose = _ref.expose;
    var _useConfigInject = useConfigInject("anchor", props2), prefixCls2 = _useConfigInject.prefixCls, getTargetContainer = _useConfigInject.getTargetContainer, direction = _useConfigInject.direction;
    var inkNodeRef = ref$S();
    var anchorRef = ref$S();
    var state = reactive$h({
      links: [],
      scrollContainer: null,
      scrollEvent: null,
      animating: false
    });
    var activeLink = ref$S(null);
    var getContainer5 = computed$10(function() {
      var getContainer6 = props2.getContainer;
      return getContainer6 || getTargetContainer.value || getDefaultContainer;
    });
    var getCurrentAnchor = function getCurrentAnchor2() {
      var offsetTop = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      var bounds = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 5;
      var linkSections = [];
      var container = getContainer5.value();
      state.links.forEach(function(link) {
        var sharpLinkMatch = sharpMatcherRegx.exec(link.toString());
        if (!sharpLinkMatch) {
          return;
        }
        var target = document.getElementById(sharpLinkMatch[1]);
        if (target) {
          var top = getOffsetTop(target, container);
          if (top < offsetTop + bounds) {
            linkSections.push({
              link,
              top
            });
          }
        }
      });
      if (linkSections.length) {
        var maxSection = linkSections.reduce(function(prev3, curr) {
          return curr.top > prev3.top ? curr : prev3;
        });
        return maxSection.link;
      }
      return "";
    };
    var setCurrentActiveLink = function setCurrentActiveLink2(link) {
      var getCurrentAnchor2 = props2.getCurrentAnchor;
      if (activeLink.value === link) {
        return;
      }
      activeLink.value = typeof getCurrentAnchor2 === "function" ? getCurrentAnchor2() : link;
      emit("change", link);
    };
    var handleScrollTo = function handleScrollTo2(link) {
      var offsetTop = props2.offsetTop, getContainer6 = props2.getContainer, targetOffset2 = props2.targetOffset;
      setCurrentActiveLink(link);
      var container = getContainer6();
      var scrollTop2 = getScroll$4(container);
      var sharpLinkMatch = sharpMatcherRegx.exec(link);
      if (!sharpLinkMatch) {
        return;
      }
      var targetElement = document.getElementById(sharpLinkMatch[1]);
      if (!targetElement) {
        return;
      }
      var eleOffsetTop = getOffsetTop(targetElement, container);
      var y2 = scrollTop2 + eleOffsetTop;
      y2 -= targetOffset2 !== void 0 ? targetOffset2 : offsetTop || 0;
      state.animating = true;
      scrollTo$1(y2, {
        callback: function callback() {
          state.animating = false;
        },
        getContainer: getContainer6
      });
    };
    expose({
      scrollTo: handleScrollTo
    });
    var handleScroll4 = function handleScroll5() {
      if (state.animating) {
        return;
      }
      var offsetTop = props2.offsetTop, bounds = props2.bounds, targetOffset2 = props2.targetOffset;
      var currentActiveLink = getCurrentAnchor(targetOffset2 !== void 0 ? targetOffset2 : offsetTop || 0, bounds);
      setCurrentActiveLink(currentActiveLink);
    };
    var updateInk = function updateInk2() {
      var linkNode = anchorRef.value.getElementsByClassName("".concat(prefixCls2.value, "-link-title-active"))[0];
      if (linkNode) {
        inkNodeRef.value.style.top = "".concat(linkNode.offsetTop + linkNode.clientHeight / 2 - 4.5, "px");
      }
    };
    useProvideAnchor({
      registerLink: function registerLink(link) {
        if (!state.links.includes(link)) {
          state.links.push(link);
        }
      },
      unregisterLink: function unregisterLink(link) {
        var index2 = state.links.indexOf(link);
        if (index2 !== -1) {
          state.links.splice(index2, 1);
        }
      },
      activeLink,
      scrollTo: handleScrollTo,
      handleClick: function handleClick5(e2, info3) {
        emit("click", e2, info3);
      }
    });
    onMounted$t(function() {
      nextTick$B(function() {
        var container = getContainer5.value();
        state.scrollContainer = container;
        state.scrollEvent = addEventListenerWrap(state.scrollContainer, "scroll", handleScroll4);
        handleScroll4();
      });
    });
    onBeforeUnmount$h(function() {
      if (state.scrollEvent) {
        state.scrollEvent.remove();
      }
    });
    onUpdated$5(function() {
      if (state.scrollEvent) {
        var currentContainer = getContainer5.value();
        if (state.scrollContainer !== currentContainer) {
          state.scrollContainer = currentContainer;
          state.scrollEvent.remove();
          state.scrollEvent = addEventListenerWrap(state.scrollContainer, "scroll", handleScroll4);
          handleScroll4();
        }
      }
      updateInk();
    });
    return function() {
      var _a;
      var offsetTop = props2.offsetTop, affix = props2.affix, showInkInFixed = props2.showInkInFixed;
      var pre = prefixCls2.value;
      var inkClass = classNames("".concat(pre, "-ink-ball"), {
        visible: activeLink.value
      });
      var wrapperClass = classNames(props2.wrapperClass, "".concat(pre, "-wrapper"), _defineProperty$U({}, "".concat(pre, "-rtl"), direction.value === "rtl"));
      var anchorClass = classNames(pre, {
        fixed: !affix && !showInkInFixed
      });
      var wrapperStyle2 = _extends$1({
        maxHeight: offsetTop ? "calc(100vh - ".concat(offsetTop, "px)") : "100vh"
      }, props2.wrapperStyle);
      var anchorContent = _createVNode$59("div", {
        "class": wrapperClass,
        "style": wrapperStyle2,
        "ref": anchorRef
      }, [_createVNode$59("div", {
        "class": anchorClass
      }, [_createVNode$59("div", {
        "class": "".concat(pre, "-ink")
      }, [_createVNode$59("span", {
        "class": inkClass,
        "ref": inkNodeRef
      }, null)]), (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)])]);
      return !affix ? anchorContent : _createVNode$59(Affix$1, _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "offsetTop": offsetTop,
        "target": getContainer5.value
      }), {
        default: function _default8() {
          return [anchorContent];
        }
      });
    };
  }
});
const { createVNode: _createVNode$58 } = await importShared("vue");
const { defineComponent: defineComponent$2_, nextTick: nextTick$A, onBeforeUnmount: onBeforeUnmount$g, onMounted: onMounted$s, watch: watch$z } = await importShared("vue");
var anchorLinkProps = {
  prefixCls: PropTypes.string,
  href: PropTypes.string.def("#"),
  title: PropTypes.VNodeChild,
  target: PropTypes.string
};
const AnchorLink = defineComponent$2_({
  name: "AAnchorLink",
  props: anchorLinkProps,
  slots: ["title"],
  setup: function setup7(props2, _ref) {
    var slots = _ref.slots;
    var mergedTitle = null;
    var _useInjectAnchor = useInjectAnchor(), contextHandleClick = _useInjectAnchor.handleClick, scrollTo3 = _useInjectAnchor.scrollTo, unregisterLink = _useInjectAnchor.unregisterLink, registerLink = _useInjectAnchor.registerLink, activeLink = _useInjectAnchor.activeLink;
    var _useConfigInject = useConfigInject("anchor", props2), prefixCls2 = _useConfigInject.prefixCls;
    var handleClick5 = function handleClick6(e2) {
      var href = props2.href;
      contextHandleClick(e2, {
        title: mergedTitle,
        href
      });
      scrollTo3(href);
    };
    watch$z(function() {
      return props2.href;
    }, function(val, oldVal) {
      nextTick$A(function() {
        unregisterLink(oldVal);
        registerLink(val);
      });
    });
    onMounted$s(function() {
      registerLink(props2.href);
    });
    onBeforeUnmount$g(function() {
      unregisterLink(props2.href);
    });
    return function() {
      var _a;
      var href = props2.href, target = props2.target;
      var pre = prefixCls2.value;
      var title = getPropsSlot(slots, props2, "title");
      mergedTitle = title;
      var active = activeLink.value === href;
      var wrapperClassName = classNames("".concat(pre, "-link"), _defineProperty$U({}, "".concat(pre, "-link-active"), active));
      var titleClassName = classNames("".concat(pre, "-link-title"), _defineProperty$U({}, "".concat(pre, "-link-title-active"), active));
      return _createVNode$58("div", {
        "class": wrapperClassName
      }, [_createVNode$58("a", {
        "class": titleClassName,
        "href": href,
        "title": typeof title === "string" ? title : "",
        "target": target,
        "onClick": handleClick5
      }, [title]), (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
    };
  }
});
Anchor.Link = AnchorLink;
Anchor.install = function(app) {
  app.component(Anchor.name, Anchor);
  app.component(Anchor.Link.name, Anchor.Link);
  return app;
};
const { createVNode: _createVNode$57 } = await importShared("vue");
var TransBtn = function TransBtn2(props2, _ref) {
  var slots = _ref.slots;
  var _a;
  var className = props2.class, customizeIcon = props2.customizeIcon, customizeIconProps = props2.customizeIconProps, _onMousedown = props2.onMousedown, onClick7 = props2.onClick;
  var icon;
  if (typeof customizeIcon === "function") {
    icon = customizeIcon(customizeIconProps);
  } else {
    icon = customizeIcon;
  }
  return _createVNode$57("span", {
    "class": className,
    "onMousedown": function onMousedown2(event) {
      event.preventDefault();
      if (_onMousedown) {
        _onMousedown(event);
      }
    },
    "style": {
      userSelect: "none",
      WebkitUserSelect: "none"
    },
    "unselectable": "on",
    "onClick": onClick7,
    "aria-hidden": true
  }, [icon !== void 0 ? icon : _createVNode$57("span", {
    "class": className.split(/\s+/).map(function(cls) {
      return "".concat(cls, "-icon");
    })
  }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)])]);
};
TransBtn.inheritAttrs = false;
TransBtn.displayName = "TransBtn";
TransBtn.props = {
  class: PropTypes.string,
  customizeIcon: PropTypes.any,
  customizeIconProps: PropTypes.any,
  onMousedown: PropTypes.func,
  onClick: PropTypes.func
};
var KeyCode$1 = {
  /**
   * MAC_ENTER
   */
  MAC_ENTER: 3,
  /**
   * BACKSPACE
   */
  BACKSPACE: 8,
  /**
   * TAB
   */
  TAB: 9,
  /**
   * NUMLOCK on FF/Safari Mac
   */
  NUM_CENTER: 12,
  /**
   * ENTER
   */
  ENTER: 13,
  /**
   * SHIFT
   */
  SHIFT: 16,
  /**
   * CTRL
   */
  CTRL: 17,
  /**
   * ALT
   */
  ALT: 18,
  /**
   * PAUSE
   */
  PAUSE: 19,
  /**
   * CAPS_LOCK
   */
  CAPS_LOCK: 20,
  /**
   * ESC
   */
  ESC: 27,
  /**
   * SPACE
   */
  SPACE: 32,
  /**
   * PAGE_UP
   */
  PAGE_UP: 33,
  /**
   * PAGE_DOWN
   */
  PAGE_DOWN: 34,
  /**
   * END
   */
  END: 35,
  /**
   * HOME
   */
  HOME: 36,
  /**
   * LEFT
   */
  LEFT: 37,
  /**
   * UP
   */
  UP: 38,
  /**
   * RIGHT
   */
  RIGHT: 39,
  /**
   * DOWN
   */
  DOWN: 40,
  /**
   * PRINT_SCREEN
   */
  PRINT_SCREEN: 44,
  /**
   * INSERT
   */
  INSERT: 45,
  /**
   * DELETE
   */
  DELETE: 46,
  /**
   * ZERO
   */
  ZERO: 48,
  /**
   * ONE
   */
  ONE: 49,
  /**
   * TWO
   */
  TWO: 50,
  /**
   * THREE
   */
  THREE: 51,
  /**
   * FOUR
   */
  FOUR: 52,
  /**
   * FIVE
   */
  FIVE: 53,
  /**
   * SIX
   */
  SIX: 54,
  /**
   * SEVEN
   */
  SEVEN: 55,
  /**
   * EIGHT
   */
  EIGHT: 56,
  /**
   * NINE
   */
  NINE: 57,
  /**
   * QUESTION_MARK
   */
  QUESTION_MARK: 63,
  /**
   * A
   */
  A: 65,
  /**
   * B
   */
  B: 66,
  /**
   * C
   */
  C: 67,
  /**
   * D
   */
  D: 68,
  /**
   * E
   */
  E: 69,
  /**
   * F
   */
  F: 70,
  /**
   * G
   */
  G: 71,
  /**
   * H
   */
  H: 72,
  /**
   * I
   */
  I: 73,
  /**
   * J
   */
  J: 74,
  /**
   * K
   */
  K: 75,
  /**
   * L
   */
  L: 76,
  /**
   * M
   */
  M: 77,
  /**
   * N
   */
  N: 78,
  /**
   * O
   */
  O: 79,
  /**
   * P
   */
  P: 80,
  /**
   * Q
   */
  Q: 81,
  /**
   * R
   */
  R: 82,
  /**
   * S
   */
  S: 83,
  /**
   * T
   */
  T: 84,
  /**
   * U
   */
  U: 85,
  /**
   * V
   */
  V: 86,
  /**
   * W
   */
  W: 87,
  /**
   * X
   */
  X: 88,
  /**
   * Y
   */
  Y: 89,
  /**
   * Z
   */
  Z: 90,
  /**
   * META
   */
  META: 91,
  /**
   * WIN_KEY_RIGHT
   */
  WIN_KEY_RIGHT: 92,
  /**
   * CONTEXT_MENU
   */
  CONTEXT_MENU: 93,
  /**
   * NUM_ZERO
   */
  NUM_ZERO: 96,
  /**
   * NUM_ONE
   */
  NUM_ONE: 97,
  /**
   * NUM_TWO
   */
  NUM_TWO: 98,
  /**
   * NUM_THREE
   */
  NUM_THREE: 99,
  /**
   * NUM_FOUR
   */
  NUM_FOUR: 100,
  /**
   * NUM_FIVE
   */
  NUM_FIVE: 101,
  /**
   * NUM_SIX
   */
  NUM_SIX: 102,
  /**
   * NUM_SEVEN
   */
  NUM_SEVEN: 103,
  /**
   * NUM_EIGHT
   */
  NUM_EIGHT: 104,
  /**
   * NUM_NINE
   */
  NUM_NINE: 105,
  /**
   * NUM_MULTIPLY
   */
  NUM_MULTIPLY: 106,
  /**
   * NUM_PLUS
   */
  NUM_PLUS: 107,
  /**
   * NUM_MINUS
   */
  NUM_MINUS: 109,
  /**
   * NUM_PERIOD
   */
  NUM_PERIOD: 110,
  /**
   * NUM_DIVISION
   */
  NUM_DIVISION: 111,
  /**
   * F1
   */
  F1: 112,
  /**
   * F2
   */
  F2: 113,
  /**
   * F3
   */
  F3: 114,
  /**
   * F4
   */
  F4: 115,
  /**
   * F5
   */
  F5: 116,
  /**
   * F6
   */
  F6: 117,
  /**
   * F7
   */
  F7: 118,
  /**
   * F8
   */
  F8: 119,
  /**
   * F9
   */
  F9: 120,
  /**
   * F10
   */
  F10: 121,
  /**
   * F11
   */
  F11: 122,
  /**
   * F12
   */
  F12: 123,
  /**
   * NUMLOCK
   */
  NUMLOCK: 144,
  /**
   * SEMICOLON
   */
  SEMICOLON: 186,
  /**
   * DASH
   */
  DASH: 189,
  /**
   * EQUALS
   */
  EQUALS: 187,
  /**
   * COMMA
   */
  COMMA: 188,
  /**
   * PERIOD
   */
  PERIOD: 190,
  /**
   * SLASH
   */
  SLASH: 191,
  /**
   * APOSTROPHE
   */
  APOSTROPHE: 192,
  /**
   * SINGLE_QUOTE
   */
  SINGLE_QUOTE: 222,
  /**
   * OPEN_SQUARE_BRACKET
   */
  OPEN_SQUARE_BRACKET: 219,
  /**
   * BACKSLASH
   */
  BACKSLASH: 220,
  /**
   * CLOSE_SQUARE_BRACKET
   */
  CLOSE_SQUARE_BRACKET: 221,
  /**
   * WIN_KEY
   */
  WIN_KEY: 224,
  /**
   * MAC_FF_META
   */
  MAC_FF_META: 224,
  /**
   * WIN_IME
   */
  WIN_IME: 229,
  // ======================== Function ========================
  /**
   * whether text and modified key is entered at the same time.
   */
  isTextModifyingKeyEvent: function isTextModifyingKeyEvent(e2) {
    var keyCode = e2.keyCode;
    if (e2.altKey && !e2.ctrlKey || e2.metaKey || keyCode >= KeyCode$1.F1 && keyCode <= KeyCode$1.F12) {
      return false;
    }
    switch (keyCode) {
      case KeyCode$1.ALT:
      case KeyCode$1.CAPS_LOCK:
      case KeyCode$1.CONTEXT_MENU:
      case KeyCode$1.CTRL:
      case KeyCode$1.DOWN:
      case KeyCode$1.END:
      case KeyCode$1.ESC:
      case KeyCode$1.HOME:
      case KeyCode$1.INSERT:
      case KeyCode$1.LEFT:
      case KeyCode$1.MAC_FF_META:
      case KeyCode$1.META:
      case KeyCode$1.NUMLOCK:
      case KeyCode$1.NUM_CENTER:
      case KeyCode$1.PAGE_DOWN:
      case KeyCode$1.PAGE_UP:
      case KeyCode$1.PAUSE:
      case KeyCode$1.PRINT_SCREEN:
      case KeyCode$1.RIGHT:
      case KeyCode$1.SHIFT:
      case KeyCode$1.UP:
      case KeyCode$1.WIN_KEY:
      case KeyCode$1.WIN_KEY_RIGHT:
        return false;
      default:
        return true;
    }
  },
  /**
   * whether character is entered.
   */
  isCharacterKey: function isCharacterKey(keyCode) {
    if (keyCode >= KeyCode$1.ZERO && keyCode <= KeyCode$1.NINE) {
      return true;
    }
    if (keyCode >= KeyCode$1.NUM_ZERO && keyCode <= KeyCode$1.NUM_MULTIPLY) {
      return true;
    }
    if (keyCode >= KeyCode$1.A && keyCode <= KeyCode$1.Z) {
      return true;
    }
    if (window.navigator.userAgent.indexOf("WebKit") !== -1 && keyCode === 0) {
      return true;
    }
    switch (keyCode) {
      case KeyCode$1.SPACE:
      case KeyCode$1.QUESTION_MARK:
      case KeyCode$1.NUM_PLUS:
      case KeyCode$1.NUM_MINUS:
      case KeyCode$1.NUM_PERIOD:
      case KeyCode$1.NUM_DIVISION:
      case KeyCode$1.SEMICOLON:
      case KeyCode$1.DASH:
      case KeyCode$1.EQUALS:
      case KeyCode$1.COMMA:
      case KeyCode$1.PERIOD:
      case KeyCode$1.SLASH:
      case KeyCode$1.APOSTROPHE:
      case KeyCode$1.SINGLE_QUOTE:
      case KeyCode$1.OPEN_SQUARE_BRACKET:
      case KeyCode$1.BACKSLASH:
      case KeyCode$1.CLOSE_SQUARE_BRACKET:
        return true;
      default:
        return false;
    }
  }
};
var attributes = "accept acceptcharset accesskey action allowfullscreen allowtransparency\nalt async autocomplete autofocus autoplay capture cellpadding cellspacing challenge\ncharset checked classid classname colspan cols content contenteditable contextmenu\ncontrols coords crossorigin data datetime default defer dir disabled download draggable\nenctype form formaction formenctype formmethod formnovalidate formtarget frameborder\nheaders height hidden high href hreflang htmlfor httpequiv icon id inputmode integrity\nis keyparams keytype kind label lang list loop low manifest marginheight marginwidth max maxlength media\nmediagroup method min minlength multiple muted name novalidate nonce open\noptimum pattern placeholder poster preload radiogroup readonly rel required\nreversed role rowspan rows sandbox scope scoped scrolling seamless selected\nshape size sizes span spellcheck src srcdoc srclang srcset start step style\nsummary tabindex target title type usemap value width wmode wrap";
var eventsName = "onCopy onCut onPaste onCompositionend onCompositionstart onCompositionupdate onKeydown\n    onKeypress onKeyup onFocus onBlur onChange onInput onSubmit onClick onContextmenu onDoubleclick onDblclick\n    onDrag onDragend onDragenter onDragexit onDragleave onDragover onDragstart onDrop onMousedown\n    onMouseenter onMouseleave onMousemove onMouseout onMouseover onMouseup onSelect onTouchcancel\n    onTouchend onTouchmove onTouchstart onTouchstartPassive onTouchmovePassive onScroll onWheel onAbort onCanplay onCanplaythrough\n    onDurationchange onEmptied onEncrypted onEnded onError onLoadeddata onLoadedmetadata\n    onLoadstart onPause onPlay onPlaying onProgress onRatechange onSeeked onSeeking onStalled onSuspend onTimeupdate onVolumechange onWaiting onLoad onError";
var propList = "".concat(attributes, " ").concat(eventsName).split(/[\s\n]+/);
var ariaPrefix = "aria-";
var dataPrefix = "data-";
function match$1(key2, prefix) {
  return key2.indexOf(prefix) === 0;
}
function pickAttrs(props2) {
  var ariaOnly = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var mergedConfig;
  if (ariaOnly === false) {
    mergedConfig = {
      aria: true,
      data: true,
      attr: true
    };
  } else if (ariaOnly === true) {
    mergedConfig = {
      aria: true
    };
  } else {
    mergedConfig = _extends$1({}, ariaOnly);
  }
  var attrs = {};
  Object.keys(props2).forEach(function(key2) {
    if (
      // Aria
      mergedConfig.aria && (key2 === "role" || match$1(key2, ariaPrefix)) || mergedConfig.data && match$1(key2, dataPrefix) || mergedConfig.attr && (propList.includes(key2) || propList.includes(key2.toLowerCase()))
    ) {
      attrs[key2] = props2[key2];
    }
  });
  return attrs;
}
function createRef$1() {
  var func = function func2(node) {
    func2.current = node;
  };
  return func;
}
const { createVNode: _createVNode$56 } = await importShared("vue");
var Filter = function Filter2(_ref, _ref2) {
  var height = _ref.height, offset4 = _ref.offset, prefixCls2 = _ref.prefixCls, onInnerResize = _ref.onInnerResize;
  var slots = _ref2.slots;
  var _a;
  var outerStyle = {};
  var innerStyle = {
    display: "flex",
    flexDirection: "column"
  };
  if (offset4 !== void 0) {
    outerStyle = {
      height: "".concat(height, "px"),
      position: "relative",
      overflow: "hidden"
    };
    innerStyle = _extends$1(_extends$1({}, innerStyle), {
      transform: "translateY(".concat(offset4, "px)"),
      position: "absolute",
      left: 0,
      right: 0,
      top: 0
    });
  }
  return _createVNode$56("div", {
    "style": outerStyle
  }, [_createVNode$56(ResizeObserver, {
    "onResize": function onResize(_ref3) {
      var offsetHeight = _ref3.offsetHeight;
      if (offsetHeight && onInnerResize) {
        onInnerResize();
      }
    }
  }, {
    default: function _default8() {
      return [_createVNode$56("div", {
        "style": innerStyle,
        "class": classNames(_defineProperty$U({}, "".concat(prefixCls2, "-holder-inner"), prefixCls2))
      }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)])];
    }
  })]);
};
Filter.displayName = "Filter";
Filter.inheritAttrs = false;
Filter.props = {
  prefixCls: String,
  /** Virtual filler height. Should be `count * itemMinHeight` */
  height: Number,
  /** Set offset of visible items. Should be the top of start item position */
  offset: Number,
  onInnerResize: Function
};
const { cloneVNode: cloneVNode$8 } = await importShared("vue");
var Item$2 = function Item(_ref, _ref2) {
  var setRef = _ref.setRef;
  var slots = _ref2.slots;
  var _a;
  var children = (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
  return children && children.length ? cloneVNode$8(children[0], {
    ref: setRef
  }) : children;
};
Item$2.props = {
  setRef: {
    type: Function,
    default: function _default() {
    }
  }
};
const { createVNode: _createVNode$55 } = await importShared("vue");
const { defineComponent: defineComponent$2Z, reactive: reactive$g } = await importShared("vue");
var MIN_SIZE = 20;
function getPageY(e2) {
  return "touches" in e2 ? e2.touches[0].pageY : e2.pageY;
}
const ScrollBar = defineComponent$2Z({
  name: "ScrollBar",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    scrollTop: PropTypes.number,
    scrollHeight: PropTypes.number,
    height: PropTypes.number,
    count: PropTypes.number,
    onScroll: {
      type: Function
    },
    onStartMove: {
      type: Function
    },
    onStopMove: {
      type: Function
    }
  },
  setup: function setup8() {
    return {
      moveRaf: null,
      scrollbarRef: createRef$1(),
      thumbRef: createRef$1(),
      visibleTimeout: null,
      state: reactive$g({
        dragging: false,
        pageY: null,
        startTop: null,
        visible: false
      })
    };
  },
  watch: {
    scrollTop: {
      handler: function handler() {
        this.delayHidden();
      },
      flush: "post"
    }
  },
  mounted: function mounted() {
    this.scrollbarRef.current.addEventListener("touchstart", this.onScrollbarTouchStart, supportsPassive ? {
      passive: false
    } : false);
    this.thumbRef.current.addEventListener("touchstart", this.onMouseDown, supportsPassive ? {
      passive: false
    } : false);
  },
  beforeUnmount: function beforeUnmount() {
    this.removeEvents();
    clearTimeout(this.visibleTimeout);
  },
  methods: {
    delayHidden: function delayHidden() {
      var _this = this;
      clearTimeout(this.visibleTimeout);
      this.state.visible = true;
      this.visibleTimeout = setTimeout(function() {
        _this.state.visible = false;
      }, 2e3);
    },
    onScrollbarTouchStart: function onScrollbarTouchStart(e2) {
      e2.preventDefault();
    },
    onContainerMouseDown: function onContainerMouseDown(e2) {
      e2.stopPropagation();
      e2.preventDefault();
    },
    // ======================= Clean =======================
    patchEvents: function patchEvents() {
      window.addEventListener("mousemove", this.onMouseMove);
      window.addEventListener("mouseup", this.onMouseUp);
      this.thumbRef.current.addEventListener("touchmove", this.onMouseMove, supportsPassive ? {
        passive: false
      } : false);
      this.thumbRef.current.addEventListener("touchend", this.onMouseUp);
    },
    removeEvents: function removeEvents() {
      window.removeEventListener("mousemove", this.onMouseMove);
      window.removeEventListener("mouseup", this.onMouseUp);
      this.scrollbarRef.current.removeEventListener("touchstart", this.onScrollbarTouchStart, supportsPassive ? {
        passive: false
      } : false);
      this.thumbRef.current.removeEventListener("touchstart", this.onMouseDown, supportsPassive ? {
        passive: false
      } : false);
      this.thumbRef.current.removeEventListener("touchmove", this.onMouseMove, supportsPassive ? {
        passive: false
      } : false);
      this.thumbRef.current.removeEventListener("touchend", this.onMouseUp);
      wrapperRaf.cancel(this.moveRaf);
    },
    // ======================= Thumb =======================
    onMouseDown: function onMouseDown(e2) {
      var onStartMove = this.$props.onStartMove;
      _extends$1(this.state, {
        dragging: true,
        pageY: getPageY(e2),
        startTop: this.getTop()
      });
      onStartMove();
      this.patchEvents();
      e2.stopPropagation();
      e2.preventDefault();
    },
    onMouseMove: function onMouseMove(e2) {
      var _this$state = this.state, dragging = _this$state.dragging, pageY = _this$state.pageY, startTop = _this$state.startTop;
      var onScroll2 = this.$props.onScroll;
      wrapperRaf.cancel(this.moveRaf);
      if (dragging) {
        var offsetY = getPageY(e2) - pageY;
        var newTop = startTop + offsetY;
        var enableScrollRange = this.getEnableScrollRange();
        var enableHeightRange = this.getEnableHeightRange();
        var ptg = enableHeightRange ? newTop / enableHeightRange : 0;
        var newScrollTop = Math.ceil(ptg * enableScrollRange);
        this.moveRaf = wrapperRaf(function() {
          onScroll2(newScrollTop);
        });
      }
    },
    onMouseUp: function onMouseUp() {
      var onStopMove = this.$props.onStopMove;
      this.state.dragging = false;
      onStopMove();
      this.removeEvents();
    },
    // ===================== Calculate =====================
    getSpinHeight: function getSpinHeight() {
      var _this$$props = this.$props, height = _this$$props.height, count = _this$$props.count;
      var baseHeight = height / count * 10;
      baseHeight = Math.max(baseHeight, MIN_SIZE);
      baseHeight = Math.min(baseHeight, height / 2);
      return Math.floor(baseHeight);
    },
    getEnableScrollRange: function getEnableScrollRange() {
      var _this$$props2 = this.$props, scrollHeight = _this$$props2.scrollHeight, height = _this$$props2.height;
      return scrollHeight - height || 0;
    },
    getEnableHeightRange: function getEnableHeightRange() {
      var height = this.$props.height;
      var spinHeight = this.getSpinHeight();
      return height - spinHeight || 0;
    },
    getTop: function getTop() {
      var scrollTop2 = this.$props.scrollTop;
      var enableScrollRange = this.getEnableScrollRange();
      var enableHeightRange = this.getEnableHeightRange();
      if (scrollTop2 === 0 || enableScrollRange === 0) {
        return 0;
      }
      var ptg = scrollTop2 / enableScrollRange;
      return ptg * enableHeightRange;
    },
    // Not show scrollbar when height is large than scrollHeight
    showScroll: function showScroll() {
      var _this$$props3 = this.$props, height = _this$$props3.height, scrollHeight = _this$$props3.scrollHeight;
      return scrollHeight > height;
    }
  },
  render: function render() {
    var _this$state2 = this.state, dragging = _this$state2.dragging, visible9 = _this$state2.visible;
    var prefixCls2 = this.$props.prefixCls;
    var spinHeight = this.getSpinHeight() + "px";
    var top = this.getTop() + "px";
    var canScroll = this.showScroll();
    var mergedVisible = canScroll && visible9;
    return _createVNode$55("div", {
      "ref": this.scrollbarRef,
      "class": classNames("".concat(prefixCls2, "-scrollbar"), _defineProperty$U({}, "".concat(prefixCls2, "-scrollbar-show"), canScroll)),
      "style": {
        width: "8px",
        top: 0,
        bottom: 0,
        right: 0,
        position: "absolute",
        display: mergedVisible ? void 0 : "none"
      },
      "onMousedown": this.onContainerMouseDown,
      "onMousemove": this.delayHidden
    }, [_createVNode$55("div", {
      "ref": this.thumbRef,
      "class": classNames("".concat(prefixCls2, "-scrollbar-thumb"), _defineProperty$U({}, "".concat(prefixCls2, "-scrollbar-thumb-moving"), dragging)),
      "style": {
        width: "100%",
        height: spinHeight,
        top,
        left: 0,
        position: "absolute",
        background: "rgba(0, 0, 0, 0.5)",
        borderRadius: "99px",
        cursor: "pointer",
        userSelect: "none"
      },
      "onMousedown": this.onMouseDown
    }, null)]);
  }
});
const { reactive: reactive$f } = await importShared("vue");
function useHeights(getKey4, onItemAdd, onItemRemove) {
  var instance = /* @__PURE__ */ new Map();
  var heights = reactive$f({});
  var heightUpdateId = 0;
  function collectHeight() {
    heightUpdateId += 1;
    var currentId = heightUpdateId;
    Promise.resolve().then(function() {
      if (currentId !== heightUpdateId) return;
      instance.forEach(function(element, key2) {
        if (element && element.offsetParent) {
          var offsetHeight = element.offsetHeight;
          if (heights[key2] !== offsetHeight) {
            heights[key2] = element.offsetHeight;
          }
        }
      });
    });
  }
  function setInstance(item, ins) {
    var key2 = getKey4(item);
    instance.get(key2);
    if (ins) {
      instance.set(key2, ins);
      collectHeight();
    } else {
      instance.delete(key2);
    }
  }
  return [setInstance, collectHeight, heights];
}
function useScrollTo(containerRef, mergedData, heights, props2, getKey4, collectHeight, syncScrollTop, triggerFlash) {
  var scroll = null;
  return function(arg) {
    if (arg === null || arg === void 0) {
      triggerFlash();
      return;
    }
    wrapperRaf.cancel(scroll);
    var data79 = mergedData.value;
    var itemHeight = props2.itemHeight;
    if (typeof arg === "number") {
      syncScrollTop(arg);
    } else if (arg && _typeof$3(arg) === "object") {
      var index2;
      var align = arg.align;
      if ("index" in arg) {
        index2 = arg.index;
      } else {
        index2 = data79.findIndex(function(item) {
          return getKey4(item) === arg.key;
        });
      }
      var _arg$offset = arg.offset, offset4 = _arg$offset === void 0 ? 0 : _arg$offset;
      var syncScroll = function syncScroll2(times, targetAlign) {
        if (times < 0 || !containerRef.value) return;
        var height = containerRef.value.clientHeight;
        var needCollectHeight = false;
        var newTargetAlign = targetAlign;
        if (height) {
          var mergedAlign = targetAlign || align;
          var stackTop = 0;
          var itemTop = 0;
          var itemBottom = 0;
          var maxLen = Math.min(data79.length, index2);
          for (var i2 = 0; i2 <= maxLen; i2 += 1) {
            var key2 = getKey4(data79[i2]);
            itemTop = stackTop;
            var cacheHeight = heights[key2];
            itemBottom = itemTop + (cacheHeight === void 0 ? itemHeight : cacheHeight);
            stackTop = itemBottom;
            if (i2 === index2 && cacheHeight === void 0) {
              needCollectHeight = true;
            }
          }
          var targetTop = null;
          switch (mergedAlign) {
            case "top":
              targetTop = itemTop - offset4;
              break;
            case "bottom":
              targetTop = itemBottom - height + offset4;
              break;
            default: {
              var scrollTop2 = containerRef.value.scrollTop;
              var scrollBottom = scrollTop2 + height;
              if (itemTop < scrollTop2) {
                newTargetAlign = "top";
              } else if (itemBottom > scrollBottom) {
                newTargetAlign = "bottom";
              }
            }
          }
          if (targetTop !== null && targetTop !== containerRef.value.scrollTop) {
            syncScrollTop(targetTop);
          }
        }
        scroll = wrapperRaf(function() {
          if (needCollectHeight) {
            collectHeight();
          }
          syncScroll2(times - 1, newTargetAlign);
        });
      };
      syncScroll(3);
    }
  };
}
var isFF = (typeof navigator === "undefined" ? "undefined" : _typeof$3(navigator)) === "object" && /Firefox/i.test(navigator.userAgent);
const useOriginScroll = function(isScrollAtTop, isScrollAtBottom) {
  var lock = false;
  var lockTimeout = null;
  function lockScroll() {
    clearTimeout(lockTimeout);
    lock = true;
    lockTimeout = setTimeout(function() {
      lock = false;
    }, 50);
  }
  return function(deltaY) {
    var smoothOffset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    var originScroll = (
      // Pass origin wheel when on the top
      deltaY < 0 && isScrollAtTop.value || deltaY > 0 && isScrollAtBottom.value
    );
    if (smoothOffset && originScroll) {
      clearTimeout(lockTimeout);
      lock = false;
    } else if (!originScroll || lock) {
      lockScroll();
    }
    return !lock && originScroll;
  };
};
function useFrameWheel(inVirtual, isScrollAtTop, isScrollAtBottom, onWheelDelta) {
  var offsetRef = 0;
  var nextFrame = null;
  var wheelValue = null;
  var isMouseScroll = false;
  var originScroll = useOriginScroll(isScrollAtTop, isScrollAtBottom);
  function onWheel(event) {
    if (!inVirtual.value) return;
    wrapperRaf.cancel(nextFrame);
    var deltaY = event.deltaY;
    offsetRef += deltaY;
    wheelValue = deltaY;
    if (originScroll(deltaY)) return;
    if (!isFF) {
      event.preventDefault();
    }
    nextFrame = wrapperRaf(function() {
      var patchMultiple = isMouseScroll ? 10 : 1;
      onWheelDelta(offsetRef * patchMultiple);
      offsetRef = 0;
    });
  }
  function onFireFoxScroll(event) {
    if (!inVirtual.value) return;
    isMouseScroll = event.detail === wheelValue;
  }
  return [onWheel, onFireFoxScroll];
}
const { watch: watch$y, onMounted: onMounted$r } = await importShared("vue");
var SMOOTH_PTG = 14 / 15;
function useMobileTouchMove(inVirtual, listRef, callback) {
  var touched = false;
  var touchY = 0;
  var element = null;
  var interval = null;
  var cleanUpEvents = function cleanUpEvents2() {
    if (element) {
      element.removeEventListener("touchmove", onTouchMove2, supportsPassive ? {
        passive: false
      } : false);
      element.removeEventListener("touchend", onTouchEnd3);
    }
  };
  var onTouchMove2 = function onTouchMove3(e2) {
    if (touched) {
      var currentY = Math.ceil(e2.touches[0].pageY);
      var offsetY = touchY - currentY;
      touchY = currentY;
      if (callback(offsetY)) {
        e2.preventDefault();
      }
      clearInterval(interval);
      interval = setInterval(function() {
        offsetY *= SMOOTH_PTG;
        if (!callback(offsetY, true) || Math.abs(offsetY) <= 0.1) {
          clearInterval(interval);
        }
      }, 16);
    }
  };
  var onTouchEnd3 = function onTouchEnd4() {
    touched = false;
    cleanUpEvents();
  };
  var onTouchStart2 = function onTouchStart3(e2) {
    cleanUpEvents();
    if (e2.touches.length === 1 && !touched) {
      touched = true;
      touchY = Math.ceil(e2.touches[0].pageY);
      element = e2.target;
      element.addEventListener("touchmove", onTouchMove2, supportsPassive ? {
        passive: false
      } : false);
      element.addEventListener("touchend", onTouchEnd3);
    }
  };
  onMounted$r(function() {
    watch$y(inVirtual, function(val) {
      listRef.value.removeEventListener("touchstart", onTouchStart2, supportsPassive ? {
        passive: false
      } : false);
      cleanUpEvents();
      clearInterval(interval);
      if (val) {
        listRef.value.addEventListener("touchstart", onTouchStart2, supportsPassive ? {
          passive: false
        } : false);
      }
    }, {
      immediate: true
    });
  });
}
const { createVNode: _createVNode$54 } = await importShared("vue");
var __rest$W = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { ref: ref$R, defineComponent: defineComponent$2Y, watchEffect: watchEffect$8, computed: computed$$, nextTick: nextTick$z, onBeforeUnmount: onBeforeUnmount$f, reactive: reactive$e, watch: watch$x } = await importShared("vue");
var EMPTY_DATA = [];
var ScrollStyle = {
  overflowY: "auto",
  overflowAnchor: "none"
};
function renderChildren(list, startIndex, endIndex, setNodeRef, renderFunc, _ref) {
  var getKey4 = _ref.getKey;
  return list.slice(startIndex, endIndex + 1).map(function(item, index2) {
    var eleIndex = startIndex + index2;
    var node = renderFunc(item, eleIndex, {
      // style: status === 'MEASURE_START' ? { visibility: 'hidden' } : {},
    });
    var key2 = getKey4(item);
    return _createVNode$54(Item$2, {
      "key": key2,
      "setRef": function setRef(ele) {
        return setNodeRef(item, ele);
      }
    }, {
      default: function _default8() {
        return [node];
      }
    });
  });
}
var List$2 = defineComponent$2Y({
  name: "List",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    data: PropTypes.array,
    height: PropTypes.number,
    itemHeight: PropTypes.number,
    /** If not match virtual scroll condition, Set List still use height of container. */
    fullHeight: PropTypes.looseBool,
    itemKey: {
      type: [String, Number, Function],
      required: true
    },
    component: {
      type: [String, Object]
    },
    /** Set `false` will always use real scroll instead of virtual one */
    virtual: PropTypes.looseBool,
    children: PropTypes.func,
    onScroll: PropTypes.func,
    onMousedown: PropTypes.func,
    onMouseenter: PropTypes.func
  },
  setup: function setup9(props2) {
    var useVirtual = computed$$(function() {
      var height = props2.height, itemHeight = props2.itemHeight, virtual = props2.virtual;
      return !!(virtual !== false && height && itemHeight);
    });
    var inVirtual = computed$$(function() {
      var height = props2.height, itemHeight = props2.itemHeight, data79 = props2.data;
      return useVirtual.value && data79 && itemHeight * data79.length > height;
    });
    var state = reactive$e({
      scrollTop: 0,
      scrollMoving: false
    });
    var mergedData = computed$$(function() {
      return props2.data || EMPTY_DATA;
    });
    var componentRef = ref$R();
    var fillerInnerRef = ref$R();
    var scrollBarRef = ref$R();
    var getKey4 = function getKey5(item) {
      if (typeof props2.itemKey === "function") {
        return props2.itemKey(item);
      }
      return item === null || item === void 0 ? void 0 : item[props2.itemKey];
    };
    var sharedConfig = {
      getKey: getKey4
    };
    function syncScrollTop(newTop) {
      var value26;
      if (typeof newTop === "function") {
        value26 = newTop(state.scrollTop);
      } else {
        value26 = newTop;
      }
      var alignedTop = keepInRange(value26);
      if (componentRef.value) {
        componentRef.value.scrollTop = alignedTop;
      }
      state.scrollTop = alignedTop;
    }
    var _useHeights = useHeights(getKey4), _useHeights2 = _slicedToArray$2(_useHeights, 3), setInstance = _useHeights2[0], collectHeight = _useHeights2[1], heights = _useHeights2[2];
    var calRes = ref$R({});
    watch$x([inVirtual, useVirtual, function() {
      return state.scrollTop;
    }, mergedData, heights, function() {
      return props2.height;
    }], function() {
      nextTick$z(function() {
        var _a;
        if (!useVirtual.value) {
          calRes.value = {
            scrollHeight: void 0,
            start: 0,
            end: mergedData.value.length - 1,
            offset: void 0
          };
          return;
        }
        if (!inVirtual.value) {
          calRes.value = {
            scrollHeight: ((_a = fillerInnerRef.value) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0,
            start: 0,
            end: mergedData.value.length - 1,
            offset: void 0
          };
          return;
        }
        var itemTop = 0;
        var startIndex;
        var startOffset;
        var endIndex;
        var dataLen3 = mergedData.value.length;
        var data79 = mergedData.value;
        for (var i2 = 0; i2 < dataLen3; i2 += 1) {
          var item = data79[i2];
          var key2 = getKey4(item);
          var cacheHeight = heights[key2];
          var currentItemBottom = itemTop + (cacheHeight === void 0 ? props2.itemHeight : cacheHeight);
          if (currentItemBottom >= state.scrollTop && startIndex === void 0) {
            startIndex = i2;
            startOffset = itemTop;
          }
          if (currentItemBottom > state.scrollTop + props2.height && endIndex === void 0) {
            endIndex = i2;
          }
          itemTop = currentItemBottom;
        }
        if (startIndex === void 0) {
          startIndex = 0;
          startOffset = 0;
        }
        if (endIndex === void 0) {
          endIndex = dataLen3 - 1;
        }
        endIndex = Math.min(endIndex + 1, dataLen3);
        calRes.value = {
          scrollHeight: itemTop,
          start: startIndex,
          end: endIndex,
          offset: startOffset
        };
      });
    }, {
      immediate: true,
      flush: "post"
    });
    var maxScrollHeight = computed$$(function() {
      return calRes.value.scrollHeight - props2.height;
    });
    function keepInRange(newScrollTop) {
      var newTop = newScrollTop;
      if (!Number.isNaN(maxScrollHeight.value)) {
        newTop = Math.min(newTop, maxScrollHeight.value);
      }
      newTop = Math.max(newTop, 0);
      return newTop;
    }
    var isScrollAtTop = computed$$(function() {
      return state.scrollTop <= 0;
    });
    var isScrollAtBottom = computed$$(function() {
      return state.scrollTop >= maxScrollHeight.value;
    });
    var originScroll = useOriginScroll(isScrollAtTop, isScrollAtBottom);
    function onScrollBar(newScrollTop) {
      var newTop = newScrollTop;
      syncScrollTop(newTop);
    }
    function onFallbackScroll(e2) {
      var _a;
      var newScrollTop = e2.currentTarget.scrollTop;
      if (Math.abs(newScrollTop - state.scrollTop) >= 1) {
        syncScrollTop(newScrollTop);
      }
      (_a = props2.onScroll) === null || _a === void 0 ? void 0 : _a.call(props2, e2);
    }
    var _useFrameWheel = useFrameWheel(useVirtual, isScrollAtTop, isScrollAtBottom, function(offsetY) {
      syncScrollTop(function(top) {
        var newTop = top + offsetY;
        return newTop;
      });
    }), _useFrameWheel2 = _slicedToArray$2(_useFrameWheel, 2), onRawWheel = _useFrameWheel2[0], onFireFoxScroll = _useFrameWheel2[1];
    useMobileTouchMove(useVirtual, componentRef, function(deltaY, smoothOffset) {
      if (originScroll(deltaY, smoothOffset)) {
        return false;
      }
      onRawWheel({
        preventDefault: function preventDefault2() {
        },
        deltaY
      });
      return true;
    });
    function onMozMousePixelScroll(e2) {
      if (useVirtual.value) {
        e2.preventDefault();
      }
    }
    var removeEventListener2 = function removeEventListener3() {
      if (componentRef.value) {
        componentRef.value.removeEventListener("wheel", onRawWheel, supportsPassive ? {
          passive: false
        } : false);
        componentRef.value.removeEventListener("DOMMouseScroll", onFireFoxScroll);
        componentRef.value.removeEventListener("MozMousePixelScroll", onMozMousePixelScroll);
      }
    };
    watchEffect$8(function() {
      nextTick$z(function() {
        if (componentRef.value) {
          removeEventListener2();
          componentRef.value.addEventListener("wheel", onRawWheel, supportsPassive ? {
            passive: false
          } : false);
          componentRef.value.addEventListener("DOMMouseScroll", onFireFoxScroll);
          componentRef.value.addEventListener("MozMousePixelScroll", onMozMousePixelScroll);
        }
      });
    });
    onBeforeUnmount$f(function() {
      removeEventListener2();
    });
    var scrollTo3 = useScrollTo(componentRef, mergedData, heights, props2, getKey4, collectHeight, syncScrollTop, function() {
      var _a;
      (_a = scrollBarRef.value) === null || _a === void 0 ? void 0 : _a.delayHidden();
    });
    var componentStyle = computed$$(function() {
      var cs = null;
      if (props2.height) {
        cs = _extends$1(_defineProperty$U({}, props2.fullHeight ? "height" : "maxHeight", props2.height + "px"), ScrollStyle);
        if (useVirtual.value) {
          cs.overflowY = "hidden";
          if (state.scrollMoving) {
            cs.pointerEvents = "none";
          }
        }
      }
      return cs;
    });
    return {
      state,
      mergedData,
      componentStyle,
      scrollTo: scrollTo3,
      onFallbackScroll,
      onScrollBar,
      componentRef,
      useVirtual,
      calRes,
      collectHeight,
      setInstance,
      sharedConfig,
      scrollBarRef,
      fillerInnerRef
    };
  },
  render: function render2() {
    var _this = this;
    var _a = _extends$1(_extends$1({}, this.$props), this.$attrs), _a$prefixCls = _a.prefixCls, prefixCls2 = _a$prefixCls === void 0 ? "rc-virtual-list" : _a$prefixCls, height = _a.height;
    _a.itemHeight;
    _a.fullHeight;
    _a.data;
    _a.itemKey;
    _a.virtual;
    var _a$component = _a.component, Component = _a$component === void 0 ? "div" : _a$component;
    _a.onScroll;
    var children = _a.children, style3 = _a.style, className = _a.class, restProps = __rest$W(_a, ["prefixCls", "height", "itemHeight", "fullHeight", "data", "itemKey", "virtual", "component", "onScroll", "children", "style", "class"]);
    var mergedClassName = classNames(prefixCls2, className);
    var scrollTop2 = this.state.scrollTop;
    var _this$calRes = this.calRes, scrollHeight = _this$calRes.scrollHeight, offset4 = _this$calRes.offset, start = _this$calRes.start, end = _this$calRes.end;
    var componentStyle = this.componentStyle, onFallbackScroll = this.onFallbackScroll, onScrollBar = this.onScrollBar, useVirtual = this.useVirtual, collectHeight = this.collectHeight, sharedConfig = this.sharedConfig, setInstance = this.setInstance, mergedData = this.mergedData;
    var listChildren = renderChildren(mergedData, start, end, setInstance, children, sharedConfig);
    return _createVNode$54("div", _objectSpread2$2({
      "style": _extends$1(_extends$1({}, style3), {
        position: "relative"
      }),
      "class": mergedClassName
    }, restProps), [_createVNode$54(Component, {
      "class": "".concat(prefixCls2, "-holder"),
      "style": componentStyle,
      "ref": "componentRef",
      "onScroll": onFallbackScroll
    }, {
      default: function _default8() {
        return [_createVNode$54(Filter, {
          "prefixCls": prefixCls2,
          "height": scrollHeight,
          "offset": offset4,
          "onInnerResize": collectHeight,
          "ref": "fillerInnerRef"
        }, {
          default: function _default9() {
            return [listChildren];
          }
        })];
      }
    }), useVirtual && _createVNode$54(ScrollBar, {
      "ref": "scrollBarRef",
      "prefixCls": prefixCls2,
      "scrollTop": scrollTop2,
      "height": height,
      "scrollHeight": scrollHeight,
      "count": mergedData.length,
      "onScroll": onScrollBar,
      "onStartMove": function onStartMove() {
        _this.state.scrollMoving = true;
      },
      "onStopMove": function onStopMove() {
        _this.state.scrollMoving = false;
      }
    }, null)]);
  }
});
const { ref: ref$Q, watch: watch$w } = await importShared("vue");
function useMemo(getValue2, condition, shouldUpdate) {
  var cacheRef = ref$Q(getValue2());
  watch$w(condition, function(next3, pre) {
    if (shouldUpdate) {
      if (shouldUpdate(next3, pre)) {
        cacheRef.value = getValue2();
      }
    } else {
      cacheRef.value = getValue2();
    }
  });
  return cacheRef;
}
const { Fragment: _Fragment$e, createVNode: _createVNode$53 } = await importShared("vue");
var __rest$V = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$_, defineComponent: defineComponent$2X, nextTick: nextTick$y, reactive: reactive$d, watch: watch$v } = await importShared("vue");
var OptionListProps = {
  prefixCls: PropTypes.string,
  id: PropTypes.string,
  options: PropTypes.array,
  flattenOptions: PropTypes.array,
  height: PropTypes.number,
  itemHeight: PropTypes.number,
  values: PropTypes.any,
  multiple: PropTypes.looseBool,
  open: PropTypes.looseBool,
  defaultActiveFirstOption: PropTypes.looseBool,
  notFoundContent: PropTypes.any,
  menuItemSelectedIcon: PropTypes.any,
  childrenAsData: PropTypes.looseBool,
  searchValue: PropTypes.string,
  virtual: PropTypes.looseBool,
  onSelect: PropTypes.func,
  onToggleOpen: {
    type: Function
  },
  /** Tell Select that some value is now active to make accessibility work */
  onActiveValue: PropTypes.func,
  onScroll: PropTypes.func,
  /** Tell Select that mouse enter the popup to force re-render */
  onMouseenter: PropTypes.func
};
var OptionList = defineComponent$2X({
  name: "OptionList",
  inheritAttrs: false,
  slots: ["option"],
  setup: function setup10(props2) {
    var itemPrefixCls = computed$_(function() {
      return "".concat(props2.prefixCls, "-item");
    });
    var memoFlattenOptions = useMemo(function() {
      return props2.flattenOptions;
    }, [function() {
      return props2.open;
    }, function() {
      return props2.flattenOptions;
    }], function(next3) {
      return next3[0];
    });
    var listRef = createRef$1();
    var onListMouseDown = function onListMouseDown2(event) {
      event.preventDefault();
    };
    var scrollIntoView2 = function scrollIntoView3(index2) {
      if (listRef.current) {
        listRef.current.scrollTo({
          index: index2
        });
      }
    };
    var getEnabledActiveIndex = function getEnabledActiveIndex2(index2) {
      var offset4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      var len = memoFlattenOptions.value.length;
      for (var i2 = 0; i2 < len; i2 += 1) {
        var current2 = (index2 + i2 * offset4 + len) % len;
        var _memoFlattenOptions$v = memoFlattenOptions.value[current2], group = _memoFlattenOptions$v.group, data79 = _memoFlattenOptions$v.data;
        if (!group && !data79.disabled) {
          return current2;
        }
      }
      return -1;
    };
    var state = reactive$d({
      activeIndex: getEnabledActiveIndex(0)
    });
    var setActive = function setActive2(index2) {
      var fromKeyboard = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      state.activeIndex = index2;
      var info3 = {
        source: fromKeyboard ? "keyboard" : "mouse"
      };
      var flattenItem = memoFlattenOptions.value[index2];
      if (!flattenItem) {
        props2.onActiveValue(null, -1, info3);
        return;
      }
      props2.onActiveValue(flattenItem.data.value, index2, info3);
    };
    watch$v([function() {
      return memoFlattenOptions.value.length;
    }, function() {
      return props2.searchValue;
    }], function() {
      setActive(props2.defaultActiveFirstOption !== false ? getEnabledActiveIndex(0) : -1);
    }, {
      immediate: true
    });
    watch$v(function() {
      return props2.open;
    }, function() {
      if (!props2.multiple && props2.open && props2.values.size === 1) {
        var value26 = Array.from(props2.values)[0];
        var index2 = memoFlattenOptions.value.findIndex(function(_ref) {
          var data79 = _ref.data;
          return data79.value === value26;
        });
        setActive(index2);
        nextTick$y(function() {
          scrollIntoView2(index2);
        });
      }
      if (props2.open) {
        nextTick$y(function() {
          var _a;
          (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.scrollTo(void 0);
        });
      }
    }, {
      immediate: true,
      flush: "post"
    });
    var onSelectValue = function onSelectValue2(value26) {
      if (value26 !== void 0) {
        props2.onSelect(value26, {
          selected: !props2.values.has(value26)
        });
      }
      if (!props2.multiple) {
        props2.onToggleOpen(false);
      }
    };
    function renderItem(index2) {
      var item = memoFlattenOptions.value[index2];
      if (!item) return null;
      var itemData = item.data || {};
      var value26 = itemData.value, label = itemData.label, children = itemData.children;
      var attrs = pickAttrs(itemData, true);
      var mergedLabel = props2.childrenAsData ? children : label;
      return item ? _createVNode$53("div", _objectSpread2$2(_objectSpread2$2({
        "aria-label": typeof mergedLabel === "string" ? mergedLabel : void 0
      }, attrs), {}, {
        "key": index2,
        "role": "option",
        "id": "".concat(props2.id, "_list_").concat(index2),
        "aria-selected": props2.values.has(value26)
      }), [value26]) : null;
    }
    return {
      memoFlattenOptions,
      renderItem,
      listRef,
      state,
      onListMouseDown,
      itemPrefixCls,
      setActive,
      onSelectValue,
      onKeydown: function onKeydown2(event) {
        var which = event.which;
        switch (which) {
          case KeyCode$1.UP:
          case KeyCode$1.DOWN: {
            var offset4 = 0;
            if (which === KeyCode$1.UP) {
              offset4 = -1;
            } else if (which === KeyCode$1.DOWN) {
              offset4 = 1;
            }
            if (offset4 !== 0) {
              var nextActiveIndex = getEnabledActiveIndex(state.activeIndex + offset4, offset4);
              scrollIntoView2(nextActiveIndex);
              setActive(nextActiveIndex, true);
            }
            break;
          }
          case KeyCode$1.ENTER: {
            var item = memoFlattenOptions.value[state.activeIndex];
            if (item && !item.data.disabled) {
              onSelectValue(item.data.value);
            } else {
              onSelectValue(void 0);
            }
            if (props2.open) {
              event.preventDefault();
            }
            break;
          }
          case KeyCode$1.ESC: {
            props2.onToggleOpen(false);
            if (props2.open) {
              event.stopPropagation();
            }
          }
        }
      },
      onKeyup: function onKeyup() {
      },
      scrollTo: function scrollTo3(index2) {
        scrollIntoView2(index2);
      }
    };
  },
  render: function render3() {
    var renderItem = this.renderItem, listRef = this.listRef, onListMouseDown = this.onListMouseDown, itemPrefixCls = this.itemPrefixCls, setActive = this.setActive, onSelectValue = this.onSelectValue, memoFlattenOptions = this.memoFlattenOptions, $slots = this.$slots;
    var _this$$props = this.$props, id2 = _this$$props.id, childrenAsData = _this$$props.childrenAsData, values = _this$$props.values, height = _this$$props.height, itemHeight = _this$$props.itemHeight, menuItemSelectedIcon = _this$$props.menuItemSelectedIcon, notFoundContent = _this$$props.notFoundContent, virtual = _this$$props.virtual, onScroll2 = _this$$props.onScroll, onMouseenter2 = _this$$props.onMouseenter;
    var renderOption = $slots.option;
    var activeIndex = this.state.activeIndex;
    if (memoFlattenOptions.length === 0) {
      return _createVNode$53("div", {
        "role": "listbox",
        "id": "".concat(id2, "_list"),
        "class": "".concat(itemPrefixCls, "-empty"),
        "onMousedown": onListMouseDown
      }, [notFoundContent]);
    }
    return _createVNode$53(_Fragment$e, null, [_createVNode$53("div", {
      "role": "listbox",
      "id": "".concat(id2, "_list"),
      "style": {
        height: 0,
        width: 0,
        overflow: "hidden"
      }
    }, [renderItem(activeIndex - 1), renderItem(activeIndex), renderItem(activeIndex + 1)]), _createVNode$53(List$2, {
      "itemKey": "key",
      "ref": listRef,
      "data": memoFlattenOptions,
      "height": height,
      "itemHeight": itemHeight,
      "fullHeight": false,
      "onMousedown": onListMouseDown,
      "onScroll": onScroll2,
      "virtual": virtual,
      "onMouseenter": onMouseenter2,
      "children": function children(_ref2, itemIndex) {
        var _classNames;
        var group = _ref2.group, groupOption = _ref2.groupOption, data79 = _ref2.data;
        var label = data79.label, key2 = data79.key;
        if (group) {
          return _createVNode$53("div", {
            "class": classNames(itemPrefixCls, "".concat(itemPrefixCls, "-group"))
          }, [renderOption ? renderOption(data79) : label !== void 0 ? label : key2]);
        }
        var disabled = data79.disabled, value26 = data79.value, title = data79.title, children2 = data79.children, style3 = data79.style, cls = data79.class, className = data79.className, otherProps = __rest$V(data79, ["disabled", "value", "title", "children", "style", "class", "className"]);
        var selected = values.has(value26);
        var optionPrefixCls = "".concat(itemPrefixCls, "-option");
        var optionClassName = classNames(itemPrefixCls, optionPrefixCls, cls, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(optionPrefixCls, "-grouped"), groupOption), _defineProperty$U(_classNames, "".concat(optionPrefixCls, "-active"), activeIndex === itemIndex && !disabled), _defineProperty$U(_classNames, "".concat(optionPrefixCls, "-disabled"), disabled), _defineProperty$U(_classNames, "".concat(optionPrefixCls, "-selected"), selected), _classNames));
        var mergedLabel = childrenAsData ? children2 : label;
        var iconVisible = !menuItemSelectedIcon || typeof menuItemSelectedIcon === "function" || selected;
        var content = mergedLabel || value26;
        var optionTitle = typeof content === "string" || typeof content === "number" ? content.toString() : void 0;
        if (title !== void 0) {
          optionTitle = title;
        }
        return _createVNode$53("div", _objectSpread2$2(_objectSpread2$2({}, otherProps), {}, {
          "aria-selected": selected,
          "class": optionClassName,
          "title": optionTitle,
          "onMousemove": function onMousemove(e2) {
            if (otherProps.onMousemove) {
              otherProps.onMousemove(e2);
            }
            if (activeIndex === itemIndex || disabled) {
              return;
            }
            setActive(itemIndex);
          },
          "onClick": function onClick7(e2) {
            if (!disabled) {
              onSelectValue(value26);
            }
            if (otherProps.onClick) {
              otherProps.onClick(e2);
            }
          },
          "style": style3
        }), [_createVNode$53("div", {
          "class": "".concat(optionPrefixCls, "-content")
        }, [renderOption ? renderOption(data79) : content]), isValidElement(menuItemSelectedIcon) || selected, iconVisible && _createVNode$53(TransBtn, {
          "class": "".concat(itemPrefixCls, "-option-state"),
          "customizeIcon": menuItemSelectedIcon,
          "customizeIconProps": {
            isSelected: selected
          }
        }, {
          default: function _default8() {
            return [selected ? "✓" : null];
          }
        })]);
      }
    }, null)]);
  }
});
OptionList.props = OptionListProps;
var Option$3 = function Option() {
  return null;
};
Option$3.isSelectOption = true;
Option$3.displayName = "ASelectOption";
var OptGroup$1 = function OptGroup() {
  return null;
};
OptGroup$1.isSelectOptGroup = true;
OptGroup$1.displayName = "ASelectOptGroup";
var __rest$U = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
function convertNodeToOption(node) {
  var _a = node, key2 = _a.key, children = _a.children, _b = _a.props, value26 = _b.value, disabled = _b.disabled, restProps = __rest$U(_b, ["value", "disabled"]);
  var child = children && children.default ? children.default() : void 0;
  return _extends$1({
    key: key2,
    value: value26 !== void 0 ? value26 : key2,
    children: child,
    disabled: disabled || disabled === ""
  }, restProps);
}
function convertChildrenToData$1(nodes) {
  var optionOnly = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var dd = flattenChildren(nodes).map(function(node, index2) {
    var _a;
    if (!isValidElement(node) || !node.type) {
      return null;
    }
    var isSelectOptGroup = node.type.isSelectOptGroup, key2 = node.key, children = node.children, props2 = node.props;
    if (optionOnly || !isSelectOptGroup) {
      return convertNodeToOption(node);
    }
    var child = children && children.default ? children.default() : void 0;
    var label = (props2 === null || props2 === void 0 ? void 0 : props2.label) || ((_a = children.label) === null || _a === void 0 ? void 0 : _a.call(children)) || key2;
    return _extends$1(_extends$1({
      key: "__RC_SELECT_GRP__".concat(key2 === null ? index2 : String(key2), "__")
    }, props2), {
      label,
      options: convertChildrenToData$1(child || [])
    });
  }).filter(function(data79) {
    return data79;
  });
  return dd;
}
function _toArray$1(r2) {
  return _arrayWithHoles$2(r2) || _iterableToArray(r2) || _unsupportedIterableToArray$2(r2) || _nonIterableRest$2();
}
function toArray$5(value26) {
  if (Array.isArray(value26)) {
    return value26;
  }
  return value26 !== void 0 ? [value26] : [];
}
function toInnerValue(value26, _ref) {
  var labelInValue = _ref.labelInValue, combobox = _ref.combobox;
  var valueMap = /* @__PURE__ */ new Map();
  if (value26 === void 0 || value26 === "" && combobox) {
    return [[], valueMap];
  }
  var values = Array.isArray(value26) ? value26 : [value26];
  var rawValues = values;
  if (labelInValue) {
    rawValues = values.filter(function(item) {
      return item !== null;
    }).map(function(itemValue) {
      var key2 = itemValue.key, val = itemValue.value;
      var finalVal = val !== void 0 ? val : key2;
      valueMap.set(finalVal, itemValue);
      return finalVal;
    });
  }
  return [rawValues, valueMap];
}
function toOuterValues(valueList, _ref2) {
  var optionLabelProp = _ref2.optionLabelProp, labelInValue = _ref2.labelInValue, prevValueMap = _ref2.prevValueMap, options2 = _ref2.options, getLabeledValue3 = _ref2.getLabeledValue;
  var values = valueList;
  if (labelInValue) {
    values = values.map(function(val) {
      return getLabeledValue3(val, {
        options: options2,
        prevValueMap,
        labelInValue,
        optionLabelProp
      });
    });
  }
  return values;
}
function removeLastEnabledValue(measureValues, values) {
  var newValues = _toConsumableArray(values);
  var removeIndex;
  for (removeIndex = measureValues.length - 1; removeIndex >= 0; removeIndex -= 1) {
    if (!measureValues[removeIndex].disabled) {
      break;
    }
  }
  var removedValue = null;
  if (removeIndex !== -1) {
    removedValue = newValues[removeIndex];
    newValues.splice(removeIndex, 1);
  }
  return {
    values: newValues,
    removedValue
  };
}
var isClient = typeof window !== "undefined" && window.document && window.document.documentElement;
var isBrowserClient = isClient;
var uuid$2 = 0;
function getUUID() {
  var retId;
  if (isBrowserClient) {
    retId = uuid$2;
    uuid$2 += 1;
  } else {
    retId = "TEST_OR_SSR";
  }
  return retId;
}
const { cloneVNode: cloneVNode$7, isVNode: isVNode$3 } = await importShared("vue");
function getKey$1(data79, index2) {
  var key2 = data79.key;
  var value26;
  if ("value" in data79) {
    value26 = data79.value;
  }
  if (key2 !== null && key2 !== void 0) {
    return key2;
  }
  if (value26 !== void 0) {
    return value26;
  }
  return "rc-index-key-".concat(index2);
}
function flattenOptions(options2) {
  var flattenList = [];
  function dig(list, isGroupOption) {
    list.forEach(function(data79) {
      if (isGroupOption || !("options" in data79)) {
        flattenList.push({
          key: getKey$1(data79, flattenList.length),
          groupOption: isGroupOption,
          data: data79
        });
      } else {
        flattenList.push({
          key: getKey$1(data79, flattenList.length),
          group: true,
          data: data79
        });
        dig(data79.options, true);
      }
    });
  }
  dig(options2, false);
  return flattenList;
}
function injectPropsWithOption(option) {
  var newOption = _extends$1({}, option);
  if (!("props" in newOption)) {
    Object.defineProperty(newOption, "props", {
      get: function get2() {
        return newOption;
      }
    });
  }
  return newOption;
}
function findValueOption(values, options2) {
  var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref$prevValueOptions = _ref.prevValueOptions, prevValueOptions = _ref$prevValueOptions === void 0 ? [] : _ref$prevValueOptions;
  var optionMap = /* @__PURE__ */ new Map();
  options2.forEach(function(flattenItem) {
    if (!flattenItem.group) {
      var data79 = flattenItem.data;
      optionMap.set(data79.value, data79);
    }
  });
  return values.map(function(val) {
    var option = optionMap.get(val);
    if (!option) {
      option = _extends$1({}, prevValueOptions.find(function(opt) {
        return opt._INTERNAL_OPTION_VALUE_ === val;
      }));
    }
    return injectPropsWithOption(option);
  });
}
var getLabeledValue = function getLabeledValue2(value26, _ref2) {
  var options2 = _ref2.options, prevValueMap = _ref2.prevValueMap, labelInValue = _ref2.labelInValue, optionLabelProp = _ref2.optionLabelProp;
  var item = findValueOption([value26], options2)[0];
  var result = {
    value: value26
  };
  var prevValItem = labelInValue ? prevValueMap.get(value26) : void 0;
  if (prevValItem && _typeof$3(prevValItem) === "object" && "label" in prevValItem) {
    result.label = prevValItem.label;
    if (item && typeof prevValItem.label === "string" && typeof item[optionLabelProp] === "string" && prevValItem.label.trim() !== item[optionLabelProp].trim()) ;
  } else if (item && optionLabelProp in item) {
    if (Array.isArray(item[optionLabelProp])) {
      result.label = isVNode$3(item[optionLabelProp][0]) ? cloneVNode$7(item[optionLabelProp][0]) : item[optionLabelProp];
    } else {
      result.label = item[optionLabelProp];
    }
  } else {
    result.label = value26;
    result.isCacheable = true;
  }
  result.key = result.value;
  return result;
};
function toRawString(content) {
  return toArray$5(content).map(function(item) {
    var _a, _b;
    if (isVNode$3(item)) {
      return ((_a = item === null || item === void 0 ? void 0 : item.el) === null || _a === void 0 ? void 0 : _a.innerText) || ((_b = item === null || item === void 0 ? void 0 : item.el) === null || _b === void 0 ? void 0 : _b.wholeText);
    } else {
      return item;
    }
  }).join("");
}
function getFilterFunction(optionFilterProp) {
  return function(searchValue2, option) {
    var lowerSearchText = searchValue2.toLowerCase();
    if ("options" in option) {
      return toRawString(option.label).toLowerCase().includes(lowerSearchText);
    }
    var rawValue = option[optionFilterProp];
    var value26 = toRawString(rawValue).toLowerCase();
    return value26.includes(lowerSearchText);
  };
}
function filterOptions(searchValue2, options2, _ref3) {
  var optionFilterProp = _ref3.optionFilterProp, filterOption2 = _ref3.filterOption;
  var filteredOptions = [];
  var filterFunc;
  if (filterOption2 === false) {
    return _toConsumableArray(options2);
  }
  if (typeof filterOption2 === "function") {
    filterFunc = filterOption2;
  } else {
    filterFunc = getFilterFunction(optionFilterProp);
  }
  options2.forEach(function(item) {
    if ("options" in item) {
      var matchGroup = filterFunc(searchValue2, item);
      if (matchGroup) {
        filteredOptions.push(item);
      } else {
        var subOptions = item.options.filter(function(subItem) {
          return filterFunc(searchValue2, subItem);
        });
        if (subOptions.length) {
          filteredOptions.push(_extends$1(_extends$1({}, item), {
            options: subOptions
          }));
        }
      }
      return;
    }
    if (filterFunc(searchValue2, injectPropsWithOption(item))) {
      filteredOptions.push(item);
    }
  });
  return filteredOptions;
}
function getSeparatedContent(text, tokens2) {
  if (!tokens2 || !tokens2.length) {
    return null;
  }
  var match5 = false;
  function separate(str, _ref4) {
    var _ref5 = _toArray$1(_ref4), token2 = _ref5[0], restTokens = _ref5.slice(1);
    if (!token2) {
      return [str];
    }
    var list2 = str.split(token2);
    match5 = match5 || list2.length > 1;
    return list2.reduce(function(prevList, unitStr) {
      return [].concat(_toConsumableArray(prevList), _toConsumableArray(separate(unitStr, restTokens)));
    }, []).filter(function(unit) {
      return unit;
    });
  }
  var list = separate(text, tokens2);
  return match5 ? list : null;
}
function isValueDisabled(value26, options2) {
  var option = findValueOption([value26], options2)[0];
  return option.disabled;
}
function fillOptionsWithMissingValue(options2, value26, optionLabelProp, labelInValue) {
  var values = toArray$5(value26).slice().sort();
  var cloneOptions = _toConsumableArray(options2);
  var optionValues = /* @__PURE__ */ new Set();
  options2.forEach(function(opt) {
    if (opt.options) {
      opt.options.forEach(function(subOpt) {
        optionValues.add(subOpt.value);
      });
    } else {
      optionValues.add(opt.value);
    }
  });
  values.forEach(function(item) {
    var val = labelInValue ? item.value : item;
    if (!optionValues.has(val)) {
      var _ref6;
      cloneOptions.push(labelInValue ? (_ref6 = {}, _defineProperty$U(_ref6, optionLabelProp, item.label), _defineProperty$U(_ref6, "value", val), _ref6) : {
        value: val
      });
    }
  });
  return cloneOptions;
}
const { cloneVNode: cloneVNode$6 } = await importShared("vue");
function cloneElement(vnode) {
  var nodeProps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var override = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
  var mergeRef = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
  var ele = vnode;
  if (Array.isArray(vnode)) {
    ele = filterEmpty(vnode)[0];
  }
  if (!ele) {
    return null;
  }
  var node = cloneVNode$6(ele, nodeProps, mergeRef);
  node.props = override ? _extends$1(_extends$1({}, node.props), nodeProps) : node.props;
  warning$5(_typeof$3(node.props.class) !== "object", "class must be string");
  return node;
}
function onCompositionStart(e2) {
  e2.target.composing = true;
}
function onCompositionEnd(e2) {
  if (!e2.target.composing) return;
  e2.target.composing = false;
  trigger(e2.target, "input");
}
function trigger(el, type3) {
  var e2 = document.createEvent("HTMLEvents");
  e2.initEvent(type3, true, true);
  el.dispatchEvent(e2);
}
function addEventListener$2(el, event, handler8, options2) {
  el.addEventListener(event, handler8, options2);
}
var antInput = {
  created: function created(el, binding) {
    if (!binding.modifiers || !binding.modifiers.lazy) {
      addEventListener$2(el, "compositionstart", onCompositionStart);
      addEventListener$2(el, "compositionend", onCompositionEnd);
      addEventListener$2(el, "change", onCompositionEnd);
    }
  }
};
const { createVNode: _createVNode$52 } = await importShared("vue");
const { defineComponent: defineComponent$2W, getCurrentInstance: getCurrentInstance$3, inject: inject$1i, onMounted: onMounted$q, withDirectives: withDirectives$8 } = await importShared("vue");
var Input$1 = defineComponent$2W({
  name: "Input",
  inheritAttrs: false,
  props: {
    inputRef: PropTypes.any,
    prefixCls: PropTypes.string,
    id: PropTypes.string,
    inputElement: PropTypes.any,
    disabled: PropTypes.looseBool,
    autofocus: PropTypes.looseBool,
    autocomplete: PropTypes.string,
    editable: PropTypes.looseBool,
    accessibilityIndex: PropTypes.number,
    value: PropTypes.string,
    open: PropTypes.looseBool,
    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    /** Pass accessibility props to input */
    attrs: PropTypes.object,
    onKeydown: PropTypes.func,
    onMousedown: PropTypes.func,
    onChange: PropTypes.func,
    onPaste: PropTypes.func,
    onCompositionstart: PropTypes.func,
    onCompositionend: PropTypes.func,
    onFocus: PropTypes.func,
    onBlur: PropTypes.func
  },
  setup: function setup11(props2) {
    return {
      blurTimeout: null,
      VCSelectContainerEvent: inject$1i("VCSelectContainerEvent")
    };
  },
  render: function render4() {
    var _this = this;
    var _a;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, id2 = _this$$props.id, inputElement = _this$$props.inputElement, disabled = _this$$props.disabled, tabindex = _this$$props.tabindex, autofocus = _this$$props.autofocus, autocomplete = _this$$props.autocomplete, editable = _this$$props.editable, accessibilityIndex = _this$$props.accessibilityIndex, value26 = _this$$props.value, _onKeydown = _this$$props.onKeydown, _onMousedown = _this$$props.onMousedown, onChange9 = _this$$props.onChange, onPaste = _this$$props.onPaste, _onCompositionstart = _this$$props.onCompositionstart, _onCompositionend = _this$$props.onCompositionend, _onFocus = _this$$props.onFocus, _onBlur = _this$$props.onBlur, open6 = _this$$props.open, inputRef = _this$$props.inputRef, attrs = _this$$props.attrs;
    var inputNode = inputElement || withDirectives$8(_createVNode$52("input", null, null), [[antInput]]);
    var inputProps2 = inputNode.props || {};
    var onOriginKeyDown = inputProps2.onKeydown, onOriginInput = inputProps2.onInput, onOriginFocus = inputProps2.onFocus, onOriginBlur = inputProps2.onBlur, onOriginMouseDown = inputProps2.onMousedown, onOriginCompositionStart = inputProps2.onCompositionstart, onOriginCompositionEnd = inputProps2.onCompositionend, style3 = inputProps2.style;
    inputNode = cloneElement(inputNode, _extends$1(_extends$1(_extends$1({
      id: id2,
      ref: inputRef,
      disabled,
      tabindex,
      autocomplete: autocomplete || "off",
      autofocus,
      class: classNames("".concat(prefixCls2, "-selection-search-input"), (_a = inputNode === null || inputNode === void 0 ? void 0 : inputNode.props) === null || _a === void 0 ? void 0 : _a.className),
      style: _extends$1(_extends$1({}, style3), {
        opacity: editable ? null : 0
      }),
      role: "combobox",
      "aria-expanded": open6,
      "aria-haspopup": "listbox",
      "aria-owns": "".concat(id2, "_list"),
      "aria-autocomplete": "list",
      "aria-controls": "".concat(id2, "_list"),
      "aria-activedescendant": "".concat(id2, "_list_").concat(accessibilityIndex)
    }, attrs), {
      value: editable ? value26 : "",
      readonly: !editable,
      unselectable: !editable ? "on" : null,
      onKeydown: function onKeydown2(event) {
        _onKeydown(event);
        if (onOriginKeyDown) {
          onOriginKeyDown(event);
        }
      },
      onMousedown: function onMousedown2(event) {
        _onMousedown(event);
        if (onOriginMouseDown) {
          onOriginMouseDown(event);
        }
      },
      onInput: function onInput(event) {
        onChange9(event);
        if (onOriginInput) {
          onOriginInput(event);
        }
      },
      onCompositionstart: function onCompositionstart2(event) {
        _onCompositionstart(event);
        if (onOriginCompositionStart) {
          onOriginCompositionStart(event);
        }
      },
      onCompositionend: function onCompositionend2(event) {
        _onCompositionend(event);
        if (onOriginCompositionEnd) {
          onOriginCompositionEnd(event);
        }
      },
      onPaste,
      onFocus: function onFocus6() {
        var _a2;
        clearTimeout(_this.blurTimeout);
        onOriginFocus && onOriginFocus(arguments.length <= 0 ? void 0 : arguments[0]);
        _onFocus && _onFocus(arguments.length <= 0 ? void 0 : arguments[0]);
        (_a2 = _this.VCSelectContainerEvent) === null || _a2 === void 0 ? void 0 : _a2.focus(arguments.length <= 0 ? void 0 : arguments[0]);
      },
      onBlur: function onBlur7() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this.blurTimeout = setTimeout(function() {
          var _a2;
          onOriginBlur && onOriginBlur(args[0]);
          _onBlur && _onBlur(args[0]);
          (_a2 = _this.VCSelectContainerEvent) === null || _a2 === void 0 ? void 0 : _a2.blur(args[0]);
        }, 200);
      }
    }), inputNode.type === "textarea" ? {} : {
      type: "search"
    }), true, true);
    return inputNode;
  }
});
const { computed: computed$Z, defineComponent: defineComponent$2V, inject: inject$1h, provide: provide$q } = await importShared("vue");
var OverflowContextProviderKey = Symbol("OverflowContextProviderKey");
var OverflowContextProvider = defineComponent$2V({
  name: "OverflowContextProvider",
  inheritAttrs: false,
  props: {
    value: {
      type: Object
    }
  },
  setup: function setup12(props2, _ref) {
    var slots = _ref.slots;
    provide$q(OverflowContextProviderKey, computed$Z(function() {
      return props2.value;
    }));
    return function() {
      var _a;
      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
  }
});
var useInjectOverflowContext = function useInjectOverflowContext2() {
  return inject$1h(OverflowContextProviderKey, computed$Z(function() {
    return null;
  }));
};
const { createVNode: _createVNode$51 } = await importShared("vue");
var __rest$T = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$Y, defineComponent: defineComponent$2U, onUnmounted: onUnmounted$5, ref: ref$P } = await importShared("vue");
var UNDEFINED = void 0;
const Item$1 = defineComponent$2U({
  name: "Item",
  props: {
    prefixCls: String,
    item: PropTypes.any,
    renderItem: Function,
    responsive: Boolean,
    itemKey: {
      type: [String, Number]
    },
    registerSize: Function,
    display: Boolean,
    order: Number,
    component: PropTypes.any,
    invalidate: Boolean
  },
  setup: function setup13(props2, _ref) {
    var slots = _ref.slots, expose = _ref.expose;
    var mergedHidden = computed$Y(function() {
      return props2.responsive && !props2.display;
    });
    var itemNodeRef = ref$P();
    expose({
      itemNodeRef
    });
    function internalRegisterSize(width) {
      props2.registerSize(props2.itemKey, width);
    }
    onUnmounted$5(function() {
      internalRegisterSize(null);
    });
    return function() {
      var _a;
      var prefixCls2 = props2.prefixCls, invalidate = props2.invalidate, item = props2.item, renderItem = props2.renderItem, responsive = props2.responsive;
      props2.registerSize;
      props2.itemKey;
      props2.display;
      var order = props2.order, _props$component = props2.component, Component = _props$component === void 0 ? "div" : _props$component, restProps = __rest$T(props2, ["prefixCls", "invalidate", "item", "renderItem", "responsive", "registerSize", "itemKey", "display", "order", "component"]);
      var children = (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
      var childNode = renderItem && item !== UNDEFINED ? renderItem(item) : children;
      var overflowStyle;
      if (!invalidate) {
        overflowStyle = {
          opacity: mergedHidden.value ? 0 : 1,
          height: mergedHidden.value ? 0 : UNDEFINED,
          overflowY: mergedHidden.value ? "hidden" : UNDEFINED,
          order: responsive ? order : UNDEFINED,
          pointerEvents: mergedHidden.value ? "none" : UNDEFINED,
          position: mergedHidden.value ? "absolute" : UNDEFINED
        };
      }
      var overflowProps = {};
      if (mergedHidden.value) {
        overflowProps["aria-hidden"] = true;
      }
      var itemNode = _createVNode$51(Component, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
        "class": classNames(!invalidate && prefixCls2),
        "style": overflowStyle
      }, overflowProps), restProps), {}, {
        "ref": itemNodeRef
      }), {
        default: function _default8() {
          return [childNode];
        }
      });
      return _createVNode$51(ResizeObserver, {
        "disabled": !responsive,
        "onResize": function onResize(_ref2) {
          var offsetWidth = _ref2.offsetWidth;
          internalRegisterSize(offsetWidth);
        }
      }, {
        default: function _default8() {
          return [itemNode];
        }
      });
    };
  }
});
const { createVNode: _createVNode$50 } = await importShared("vue");
var __rest$S = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2T } = await importShared("vue");
const RawItem = defineComponent$2T({
  name: "RawItem",
  inheritAttrs: false,
  props: {
    component: PropTypes.any,
    title: PropTypes.any
  },
  setup: function setup14(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var context2 = useInjectOverflowContext();
    return function() {
      var _a, _b;
      if (!context2.value) {
        var _props$component = props2.component, Component = _props$component === void 0 ? "div" : _props$component, _restProps = __rest$S(props2, ["component"]);
        return _createVNode$50(Component, _objectSpread2$2(_objectSpread2$2({}, _restProps), attrs), {
          default: function _default8() {
            return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
          }
        });
      }
      var _c = context2.value, contextClassName = _c.className, restContext = __rest$S(_c, ["className"]);
      var className = attrs.class, restProps = __rest$S(attrs, ["class"]);
      return _createVNode$50(OverflowContextProvider, {
        "value": null
      }, {
        default: function _default8() {
          return [_createVNode$50(Item$1, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
            "class": classNames(contextClassName, className)
          }, restContext), restProps), props2), {
            default: function _default9() {
              return [(_b = slots.default) === null || _b === void 0 ? void 0 : _b.call(slots)];
            }
          })];
        }
      });
    };
  }
});
const { createVNode: _createVNode$4$ } = await importShared("vue");
var __rest$R = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$X, defineComponent: defineComponent$2S, ref: ref$O, watch: watch$u } = await importShared("vue");
var RESPONSIVE = "responsive";
var INVALIDATE = "invalidate";
function defaultRenderRest(omittedItems) {
  return "+ ".concat(omittedItems.length, " ...");
}
var Overflow = defineComponent$2S({
  name: "Overflow",
  inheritAttrs: false,
  props: {
    prefixCls: String,
    data: Array,
    itemKey: [String, Number, Function],
    /** Used for `responsive`. It will limit render node to avoid perf issue */
    itemWidth: {
      type: Number,
      default: 10
    },
    renderItem: Function,
    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */
    renderRawItem: Function,
    maxCount: [Number, String],
    renderRest: Function,
    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */
    renderRawRest: Function,
    suffix: PropTypes.any,
    component: String,
    itemComponent: PropTypes.any,
    /** @private This API may be refactor since not well design */
    onVisibleChange: Function,
    /** When set to `full`, ssr will render full items by default and remove at client side */
    ssr: String
  },
  emits: ["visibleChange"],
  setup: function setup15(props2, _ref) {
    var attrs = _ref.attrs, emit = _ref.emit;
    var fullySSR = computed$X(function() {
      return props2.ssr === "full";
    });
    var containerWidth = ref$O(null);
    var mergedContainerWidth = computed$X(function() {
      return containerWidth.value || 0;
    });
    var itemWidths = ref$O(/* @__PURE__ */ new Map());
    var prevRestWidth = ref$O(0);
    var restWidth = ref$O(0);
    var suffixWidth = ref$O(0);
    var suffixFixedStart = ref$O(null);
    var displayCount = ref$O(null);
    var mergedDisplayCount = computed$X(function() {
      if (displayCount.value === null && fullySSR.value) {
        return Number.MAX_SAFE_INTEGER;
      }
      return displayCount.value || 0;
    });
    var restReady = ref$O(false);
    var itemPrefixCls = computed$X(function() {
      return "".concat(props2.prefixCls, "-item");
    });
    var mergedRestWidth = computed$X(function() {
      return Math.max(prevRestWidth.value, restWidth.value);
    });
    var isResponsive = computed$X(function() {
      return !!(props2.data.length && props2.maxCount === RESPONSIVE);
    });
    var invalidate = computed$X(function() {
      return props2.maxCount === INVALIDATE;
    });
    var showRest = computed$X(function() {
      return isResponsive.value || typeof props2.maxCount === "number" && props2.data.length > props2.maxCount;
    });
    var mergedData = computed$X(function() {
      var items = props2.data;
      if (isResponsive.value) {
        if (containerWidth.value === null && fullySSR.value) {
          items = props2.data;
        } else {
          items = props2.data.slice(0, Math.min(props2.data.length, mergedContainerWidth.value / props2.itemWidth));
        }
      } else if (typeof props2.maxCount === "number") {
        items = props2.data.slice(0, props2.maxCount);
      }
      return items;
    });
    var omittedItems = computed$X(function() {
      if (isResponsive.value) {
        return props2.data.slice(mergedDisplayCount.value + 1);
      }
      return props2.data.slice(mergedData.value.length);
    });
    var getKey4 = function getKey5(item, index2) {
      var _a, _b;
      if (typeof props2.itemKey === "function") {
        return props2.itemKey(item);
      }
      return (_b = props2.itemKey && ((_a = item) === null || _a === void 0 ? void 0 : _a[props2.itemKey])) !== null && _b !== void 0 ? _b : index2;
    };
    var mergedRenderItem = computed$X(function() {
      return props2.renderItem || function(item) {
        return item;
      };
    });
    var updateDisplayCount = function updateDisplayCount2(count, notReady) {
      displayCount.value = count;
      if (!notReady) {
        restReady.value = count < props2.data.length - 1;
        emit("visibleChange", count);
      }
    };
    var onOverflowResize = function onOverflowResize2(_2, element) {
      containerWidth.value = element.clientWidth;
    };
    var registerSize = function registerSize2(key2, width) {
      var clone4 = new Map(itemWidths.value);
      if (width === null) {
        clone4.delete(key2);
      } else {
        clone4.set(key2, width);
      }
      itemWidths.value = clone4;
    };
    var registerOverflowSize = function registerOverflowSize2(_2, width) {
      prevRestWidth.value = restWidth.value;
      restWidth.value = width;
    };
    var registerSuffixSize = function registerSuffixSize2(_2, width) {
      suffixWidth.value = width;
    };
    var getItemWidth = function getItemWidth2(index2) {
      return itemWidths.value.get(getKey4(mergedData.value[index2], index2));
    };
    watch$u([mergedContainerWidth, itemWidths, restWidth, suffixWidth, function() {
      return props2.itemKey;
    }, mergedData], function() {
      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {
        var totalWidth = suffixWidth.value;
        var len = mergedData.value.length;
        var lastIndex = len - 1;
        if (!len) {
          updateDisplayCount(0);
          suffixFixedStart.value = null;
          return;
        }
        for (var i2 = 0; i2 < len; i2 += 1) {
          var currentItemWidth = getItemWidth(i2);
          if (currentItemWidth === void 0) {
            updateDisplayCount(i2 - 1, true);
            break;
          }
          totalWidth += currentItemWidth;
          if (
            // Only one means `totalWidth` is the final width
            lastIndex === 0 && totalWidth <= mergedContainerWidth.value || i2 === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value
          ) {
            updateDisplayCount(lastIndex);
            suffixFixedStart.value = null;
            break;
          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {
            updateDisplayCount(i2 - 1);
            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;
            break;
          }
        }
        if (props2.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {
          suffixFixedStart.value = null;
        }
      }
    });
    return function() {
      var displayRest = restReady.value && !!omittedItems.value.length;
      var itemComponent = props2.itemComponent, renderRawItem = props2.renderRawItem, renderRawRest = props2.renderRawRest, renderRest = props2.renderRest, _props$prefixCls = props2.prefixCls, prefixCls2 = _props$prefixCls === void 0 ? "rc-overflow" : _props$prefixCls, suffix = props2.suffix, _props$component = props2.component, Component = _props$component === void 0 ? "div" : _props$component;
      var className = attrs.class, style3 = attrs.style, restAttrs = __rest$R(attrs, ["class", "style"]);
      var suffixStyle = {};
      if (suffixFixedStart.value !== null && isResponsive.value) {
        suffixStyle = {
          position: "absolute",
          left: "".concat(suffixFixedStart.value, "px"),
          top: 0
        };
      }
      var itemSharedProps = {
        prefixCls: itemPrefixCls.value,
        responsive: isResponsive.value,
        component: itemComponent,
        invalidate: invalidate.value
      };
      var internalRenderItemNode = renderRawItem ? function(item, index2) {
        var key2 = getKey4(item, index2);
        return _createVNode$4$(OverflowContextProvider, {
          "key": key2,
          "value": _extends$1(_extends$1({}, itemSharedProps), {
            order: index2,
            item,
            itemKey: key2,
            registerSize,
            display: index2 <= mergedDisplayCount.value
          })
        }, {
          default: function _default8() {
            return [renderRawItem(item, index2)];
          }
        });
      } : function(item, index2) {
        var key2 = getKey4(item, index2);
        return _createVNode$4$(Item$1, _objectSpread2$2(_objectSpread2$2({}, itemSharedProps), {}, {
          "order": index2,
          "key": key2,
          "item": item,
          "renderItem": mergedRenderItem.value,
          "itemKey": key2,
          "registerSize": registerSize,
          "display": index2 <= mergedDisplayCount.value
        }), null);
      };
      var restNode;
      var restContextProps = {
        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,
        className: "".concat(itemPrefixCls.value, "-rest"),
        registerSize: registerOverflowSize,
        display: displayRest
      };
      if (!renderRawRest) {
        var mergedRenderRest = renderRest || defaultRenderRest;
        restNode = _createVNode$4$(Item$1, _objectSpread2$2(_objectSpread2$2({}, itemSharedProps), restContextProps), {
          default: function _default8() {
            return [typeof mergedRenderRest === "function" ? mergedRenderRest(omittedItems.value) : mergedRenderRest];
          }
        });
      } else if (renderRawRest) {
        restNode = _createVNode$4$(OverflowContextProvider, {
          "value": _extends$1(_extends$1({}, itemSharedProps), restContextProps)
        }, {
          default: function _default8() {
            return [renderRawRest(omittedItems.value)];
          }
        });
      }
      var overflowNode = _createVNode$4$(Component, _objectSpread2$2({
        "class": classNames(!invalidate.value && prefixCls2, className),
        "style": style3
      }, restAttrs), {
        default: function _default8() {
          return [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode : null, suffix && _createVNode$4$(Item$1, _objectSpread2$2(_objectSpread2$2({}, itemSharedProps), {}, {
            "order": mergedDisplayCount.value,
            "class": "".concat(itemPrefixCls.value, "-suffix"),
            "registerSize": registerSuffixSize,
            "display": true,
            "style": suffixStyle
          }), {
            default: function _default9() {
              return [suffix];
            }
          })];
        }
      });
      return _createVNode$4$(ResizeObserver, {
        "disabled": !isResponsive.value,
        "onResize": onOverflowResize
      }, {
        default: function _default8() {
          return [overflowNode];
        }
      });
    };
  }
});
Overflow.Item = RawItem;
Overflow.RESPONSIVE = RESPONSIVE;
Overflow.INVALIDATE = INVALIDATE;
const { Fragment: _Fragment$d, createTextVNode: _createTextVNode$a, createVNode: _createVNode$4_ } = await importShared("vue");
const { computed: computed$W, defineComponent: defineComponent$2R, onMounted: onMounted$p, ref: ref$N, watch: watch$t } = await importShared("vue");
var props$4 = {
  id: PropTypes.string,
  prefixCls: PropTypes.string,
  values: PropTypes.array,
  open: PropTypes.looseBool,
  searchValue: PropTypes.string,
  inputRef: PropTypes.any,
  placeholder: PropTypes.any,
  disabled: PropTypes.looseBool,
  mode: PropTypes.string,
  showSearch: PropTypes.looseBool,
  autofocus: PropTypes.looseBool,
  autocomplete: PropTypes.string,
  accessibilityIndex: PropTypes.number,
  tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  removeIcon: PropTypes.VNodeChild,
  choiceTransitionName: PropTypes.string,
  maxTagCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  maxTagTextLength: PropTypes.number,
  maxTagPlaceholder: PropTypes.any.def(function() {
    return function(omittedValues) {
      return "+ ".concat(omittedValues.length, " ...");
    };
  }),
  tagRender: PropTypes.func,
  onToggleOpen: {
    type: Function
  },
  onSelect: PropTypes.func,
  onInputChange: PropTypes.func,
  onInputPaste: PropTypes.func,
  onInputKeyDown: PropTypes.func,
  onInputMouseDown: PropTypes.func,
  onInputCompositionStart: PropTypes.func,
  onInputCompositionEnd: PropTypes.func
};
var onPreventMouseDown = function onPreventMouseDown2(event) {
  event.preventDefault();
  event.stopPropagation();
};
var SelectSelector = defineComponent$2R({
  name: "MultipleSelectSelector",
  inheritAttrs: false,
  props: props$4,
  setup: function setup16(props2) {
    var measureRef = ref$N();
    var inputWidth = ref$N(0);
    var focused = ref$N(false);
    var selectionPrefixCls = computed$W(function() {
      return "".concat(props2.prefixCls, "-selection");
    });
    var inputValue = computed$W(function() {
      return props2.open || props2.mode === "tags" ? props2.searchValue : "";
    });
    var inputEditable = computed$W(function() {
      return props2.mode === "tags" || props2.showSearch && (props2.open || focused.value);
    });
    onMounted$p(function() {
      watch$t(inputValue, function() {
        inputWidth.value = measureRef.value.scrollWidth;
      }, {
        flush: "post",
        immediate: true
      });
    });
    function defaultRenderSelector(content, itemDisabled, closable, onClose) {
      return _createVNode$4_("span", {
        "class": classNames("".concat(selectionPrefixCls.value, "-item"), _defineProperty$U({}, "".concat(selectionPrefixCls.value, "-item-disabled"), itemDisabled))
      }, [_createVNode$4_("span", {
        "class": "".concat(selectionPrefixCls.value, "-item-content")
      }, [content]), closable && _createVNode$4_(TransBtn, {
        "class": "".concat(selectionPrefixCls.value, "-item-remove"),
        "onMousedown": onPreventMouseDown,
        "onClick": onClose,
        "customizeIcon": props2.removeIcon
      }, {
        default: function _default8() {
          return [_createTextVNode$a("×")];
        }
      })]);
    }
    function customizeRenderSelector(value26, content, itemDisabled, closable, onClose) {
      var onMouseDown3 = function onMouseDown4(e2) {
        onPreventMouseDown(e2);
        props2.onToggleOpen(!open);
      };
      return _createVNode$4_("span", {
        "onMousedown": onMouseDown3
      }, [props2.tagRender({
        label: content,
        value: value26,
        disabled: itemDisabled,
        closable,
        onClose
      })]);
    }
    function renderItem(_ref) {
      var itemDisabled = _ref.disabled, label = _ref.label, value26 = _ref.value;
      var closable = !props2.disabled && !itemDisabled;
      var displayLabel = label;
      if (typeof props2.maxTagTextLength === "number") {
        if (typeof label === "string" || typeof label === "number") {
          var strLabel = String(displayLabel);
          if (strLabel.length > props2.maxTagTextLength) {
            displayLabel = "".concat(strLabel.slice(0, props2.maxTagTextLength), "...");
          }
        }
      }
      var onClose = function onClose2(event) {
        if (event) event.stopPropagation();
        props2.onSelect(value26, {
          selected: false
        });
      };
      return typeof props2.tagRender === "function" ? customizeRenderSelector(value26, displayLabel, itemDisabled, closable, onClose) : defaultRenderSelector(displayLabel, itemDisabled, closable, onClose);
    }
    function renderRest(omittedValues) {
      var _props$maxTagPlacehol = props2.maxTagPlaceholder, maxTagPlaceholder = _props$maxTagPlacehol === void 0 ? function(omittedValues2) {
        return "+ ".concat(omittedValues2.length, " ...");
      } : _props$maxTagPlacehol;
      var content = typeof maxTagPlaceholder === "function" ? maxTagPlaceholder(omittedValues) : maxTagPlaceholder;
      return defaultRenderSelector(content, false);
    }
    return function() {
      var id2 = props2.id, prefixCls2 = props2.prefixCls, values = props2.values, open6 = props2.open, inputRef = props2.inputRef, placeholder = props2.placeholder, disabled = props2.disabled, autofocus = props2.autofocus, autocomplete = props2.autocomplete, accessibilityIndex = props2.accessibilityIndex, tabindex = props2.tabindex, onInputChange3 = props2.onInputChange, onInputPaste = props2.onInputPaste, onInputKeyDown = props2.onInputKeyDown, onInputMouseDown = props2.onInputMouseDown, onInputCompositionStart = props2.onInputCompositionStart, onInputCompositionEnd = props2.onInputCompositionEnd;
      var inputNode = _createVNode$4_("div", {
        "class": "".concat(selectionPrefixCls.value, "-search"),
        "style": {
          width: inputWidth.value + "px"
        },
        "key": "input"
      }, [_createVNode$4_(Input$1, {
        "inputRef": inputRef,
        "open": open6,
        "prefixCls": prefixCls2,
        "id": id2,
        "inputElement": null,
        "disabled": disabled,
        "autofocus": autofocus,
        "autocomplete": autocomplete,
        "editable": inputEditable.value,
        "accessibilityIndex": accessibilityIndex,
        "value": inputValue.value,
        "onKeydown": onInputKeyDown,
        "onMousedown": onInputMouseDown,
        "onChange": onInputChange3,
        "onPaste": onInputPaste,
        "onCompositionstart": onInputCompositionStart,
        "onCompositionend": onInputCompositionEnd,
        "tabindex": tabindex,
        "attrs": pickAttrs(props2, true),
        "onFocus": function onFocus6() {
          return focused.value = true;
        },
        "onBlur": function onBlur7() {
          return focused.value = false;
        }
      }, null), _createVNode$4_("span", {
        "ref": measureRef,
        "class": "".concat(selectionPrefixCls.value, "-search-mirror"),
        "aria-hidden": true
      }, [inputValue.value, _createTextVNode$a(" ")])]);
      var selectionNode = _createVNode$4_(Overflow, {
        "prefixCls": "".concat(selectionPrefixCls.value, "-overflow"),
        "data": values,
        "renderItem": renderItem,
        "renderRest": renderRest,
        "suffix": inputNode,
        "itemKey": "key",
        "maxCount": props2.maxTagCount,
        "key": "overflow"
      }, null);
      return _createVNode$4_(_Fragment$d, null, [selectionNode, !values.length && !inputValue.value && _createVNode$4_("span", {
        "class": "".concat(selectionPrefixCls.value, "-placeholder")
      }, [placeholder])]);
    };
  }
});
const { createVNode: _createVNode$4Z, Fragment: _Fragment$c } = await importShared("vue");
const { computed: computed$V, defineComponent: defineComponent$2Q, Fragment, ref: ref$M, watch: watch$s } = await importShared("vue");
var props$3 = {
  inputElement: PropTypes.any,
  id: PropTypes.string,
  prefixCls: PropTypes.string,
  values: PropTypes.array,
  open: PropTypes.looseBool,
  searchValue: PropTypes.string,
  inputRef: PropTypes.any,
  placeholder: PropTypes.any,
  disabled: PropTypes.looseBool,
  mode: PropTypes.string,
  showSearch: PropTypes.looseBool,
  autofocus: PropTypes.looseBool,
  autocomplete: PropTypes.string,
  accessibilityIndex: PropTypes.number,
  tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  activeValue: PropTypes.string,
  backfill: PropTypes.looseBool,
  onInputChange: PropTypes.func,
  onInputPaste: PropTypes.func,
  onInputKeyDown: PropTypes.func,
  onInputMouseDown: PropTypes.func,
  onInputCompositionStart: PropTypes.func,
  onInputCompositionEnd: PropTypes.func
};
var SingleSelector$1 = defineComponent$2Q({
  name: "SingleSelector",
  setup: function setup17(props2) {
    var inputChanged = ref$M(false);
    var combobox = computed$V(function() {
      return props2.mode === "combobox";
    });
    var inputEditable = computed$V(function() {
      return combobox.value || props2.showSearch;
    });
    var inputValue = computed$V(function() {
      var inputValue2 = props2.searchValue || "";
      if (combobox.value && props2.activeValue && !inputChanged.value) {
        inputValue2 = props2.activeValue;
      }
      return inputValue2;
    });
    watch$s([combobox, function() {
      return props2.activeValue;
    }], function() {
      if (combobox.value) {
        inputChanged.value = false;
      }
    }, {
      immediate: true
    });
    var hasTextInput = computed$V(function() {
      return props2.mode !== "combobox" && !props2.open ? false : !!inputValue.value;
    });
    var title = computed$V(function() {
      var item = props2.values[0];
      return item && (typeof item.label === "string" || typeof item.label === "number") ? item.label.toString() : void 0;
    });
    return function() {
      var inputElement = props2.inputElement, prefixCls2 = props2.prefixCls, id2 = props2.id, values = props2.values, inputRef = props2.inputRef, disabled = props2.disabled, autofocus = props2.autofocus, autocomplete = props2.autocomplete, accessibilityIndex = props2.accessibilityIndex, open6 = props2.open, placeholder = props2.placeholder, tabindex = props2.tabindex, onInputKeyDown = props2.onInputKeyDown, onInputMouseDown = props2.onInputMouseDown, onInputChange3 = props2.onInputChange, onInputPaste = props2.onInputPaste, onInputCompositionStart = props2.onInputCompositionStart, onInputCompositionEnd = props2.onInputCompositionEnd;
      var item = values[0];
      return _createVNode$4Z(_Fragment$c, null, [_createVNode$4Z("span", {
        "class": "".concat(prefixCls2, "-selection-search")
      }, [_createVNode$4Z(Input$1, {
        "inputRef": inputRef,
        "prefixCls": prefixCls2,
        "id": id2,
        "open": open6,
        "inputElement": inputElement,
        "disabled": disabled,
        "autofocus": autofocus,
        "autocomplete": autocomplete,
        "editable": inputEditable.value,
        "accessibilityIndex": accessibilityIndex,
        "value": inputValue.value,
        "onKeydown": onInputKeyDown,
        "onMousedown": onInputMouseDown,
        "onChange": function onChange9(e2) {
          inputChanged.value = true;
          onInputChange3(e2);
        },
        "onPaste": onInputPaste,
        "onCompositionstart": onInputCompositionStart,
        "onCompositionend": onInputCompositionEnd,
        "tabindex": tabindex,
        "attrs": pickAttrs(props2, true)
      }, null)]), !combobox.value && item && !hasTextInput.value && _createVNode$4Z("span", {
        "class": "".concat(prefixCls2, "-selection-item"),
        "title": title.value
      }, [_createVNode$4Z(_Fragment$c, {
        "key": item.key || item.value
      }, [item.label])]), !item && !hasTextInput.value && _createVNode$4Z("span", {
        "class": "".concat(prefixCls2, "-selection-placeholder")
      }, [placeholder])]);
    };
  }
});
SingleSelector$1.props = props$3;
SingleSelector$1.inheritAttrs = false;
const { onBeforeUpdate: onBeforeUpdate$1 } = await importShared("vue");
function useLock() {
  var duration2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 250;
  var lock = null;
  var timeout;
  onBeforeUpdate$1(function() {
    window.clearTimeout(timeout);
  });
  function doLock(locked) {
    if (locked || lock === null) {
      lock = locked;
    }
    window.clearTimeout(timeout);
    timeout = window.setTimeout(function() {
      lock = null;
    }, duration2);
  }
  return [function() {
    return lock;
  }, doLock];
}
const { createVNode: _createVNode$4Y } = await importShared("vue");
const { defineComponent: defineComponent$2P } = await importShared("vue");
var Selector$2 = defineComponent$2P({
  name: "Selector",
  inheritAttrs: false,
  props: {
    id: PropTypes.string,
    prefixCls: PropTypes.string,
    showSearch: PropTypes.looseBool,
    open: PropTypes.looseBool,
    /** Display in the Selector value, it's not same as `value` prop */
    values: PropTypes.array,
    multiple: PropTypes.looseBool,
    mode: PropTypes.string,
    searchValue: PropTypes.string,
    activeValue: PropTypes.string,
    inputElement: PropTypes.any,
    autofocus: PropTypes.looseBool,
    accessibilityIndex: PropTypes.number,
    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    disabled: PropTypes.looseBool,
    placeholder: PropTypes.any,
    removeIcon: PropTypes.any,
    // Tags
    maxTagCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    maxTagTextLength: PropTypes.number,
    maxTagPlaceholder: PropTypes.any,
    tagRender: PropTypes.func,
    /** Check if `tokenSeparators` contains `\n` or `\r\n` */
    tokenWithEnter: PropTypes.looseBool,
    // Motion
    choiceTransitionName: PropTypes.string,
    onToggleOpen: {
      type: Function
    },
    /** `onSearch` returns go next step boolean to check if need do toggle open */
    onSearch: PropTypes.func,
    onSearchSubmit: PropTypes.func,
    onSelect: PropTypes.func,
    onInputKeyDown: {
      type: Function
    },
    /**
     * @private get real dom for trigger align.
     * This may be removed after React provides replacement of `findDOMNode`
     */
    domRef: PropTypes.func
  },
  setup: function setup18(props2) {
    var inputRef = createRef$1();
    var compositionStatus = false;
    var _useLock = useLock(0), _useLock2 = _slicedToArray$2(_useLock, 2), getInputMouseDown = _useLock2[0], setInputMouseDown = _useLock2[1];
    var onInternalInputKeyDown = function onInternalInputKeyDown2(event) {
      var which = event.which;
      if (which === KeyCode$1.UP || which === KeyCode$1.DOWN) {
        event.preventDefault();
      }
      if (props2.onInputKeyDown) {
        props2.onInputKeyDown(event);
      }
      if (which === KeyCode$1.ENTER && props2.mode === "tags" && !compositionStatus && !props2.open) {
        props2.onSearchSubmit(event.target.value);
      }
      if (![KeyCode$1.SHIFT, KeyCode$1.TAB, KeyCode$1.BACKSPACE, KeyCode$1.ESC].includes(which)) {
        props2.onToggleOpen(true);
      }
    };
    var onInternalInputMouseDown = function onInternalInputMouseDown2() {
      setInputMouseDown(true);
    };
    var pastedText = null;
    var triggerOnSearch = function triggerOnSearch2(value26) {
      if (props2.onSearch(value26, true, compositionStatus) !== false) {
        props2.onToggleOpen(true);
      }
    };
    var onInputCompositionStart = function onInputCompositionStart2() {
      compositionStatus = true;
    };
    var onInputCompositionEnd = function onInputCompositionEnd2(e2) {
      compositionStatus = false;
      if (props2.mode !== "combobox") {
        triggerOnSearch(e2.target.value);
      }
    };
    var onInputChange3 = function onInputChange4(event) {
      var value26 = event.target.value;
      if (props2.tokenWithEnter && pastedText && /[\r\n]/.test(pastedText)) {
        var replacedText = pastedText.replace(/[\r\n]+$/, "").replace(/\r\n/g, " ").replace(/[\r\n]/g, " ");
        value26 = value26.replace(replacedText, pastedText);
      }
      pastedText = null;
      triggerOnSearch(value26);
    };
    var onInputPaste = function onInputPaste2(e2) {
      var clipboardData = e2.clipboardData;
      var value26 = clipboardData.getData("text");
      pastedText = value26;
    };
    var onClick7 = function onClick8(_ref) {
      var target = _ref.target;
      if (target !== inputRef.current) {
        var isIE = document.body.style.msTouchAction !== void 0;
        if (isIE) {
          setTimeout(function() {
            inputRef.current.focus();
          });
        } else {
          inputRef.current.focus();
        }
      }
    };
    var onMousedown2 = function onMousedown3(event) {
      var inputMouseDown = getInputMouseDown();
      if (event.target !== inputRef.current && !inputMouseDown) {
        event.preventDefault();
      }
      if (props2.mode !== "combobox" && (!props2.showSearch || !inputMouseDown) || !props2.open) {
        if (props2.open) {
          props2.onSearch("", true, false);
        }
        props2.onToggleOpen();
      }
    };
    return {
      focus: function focus27() {
        inputRef.current.focus();
      },
      blur: function blur24() {
        inputRef.current.blur();
      },
      onMousedown: onMousedown2,
      onClick: onClick7,
      onInputPaste,
      inputRef,
      onInternalInputKeyDown,
      onInternalInputMouseDown,
      onInputChange: onInputChange3,
      onInputCompositionEnd,
      onInputCompositionStart
    };
  },
  render: function render5() {
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, domRef = _this$$props.domRef, multiple = _this$$props.multiple;
    var onMousedown2 = this.onMousedown, onClick7 = this.onClick, inputRef = this.inputRef, onInputPaste = this.onInputPaste, onInternalInputKeyDown = this.onInternalInputKeyDown, onInternalInputMouseDown = this.onInternalInputMouseDown, onInputChange3 = this.onInputChange, onInputCompositionStart = this.onInputCompositionStart, onInputCompositionEnd = this.onInputCompositionEnd;
    var sharedProps = {
      inputRef,
      onInputKeyDown: onInternalInputKeyDown,
      onInputMouseDown: onInternalInputMouseDown,
      onInputChange: onInputChange3,
      onInputPaste,
      onInputCompositionStart,
      onInputCompositionEnd
    };
    var selectNode = multiple ? _createVNode$4Y(SelectSelector, _objectSpread2$2(_objectSpread2$2({}, this.$props), sharedProps), null) : _createVNode$4Y(SingleSelector$1, _objectSpread2$2(_objectSpread2$2({}, this.$props), sharedProps), null);
    return _createVNode$4Y("div", {
      "ref": domRef,
      "class": "".concat(prefixCls2, "-selector"),
      "onClick": onClick7,
      "onMousedown": onMousedown2
    }, [selectNode]);
  }
});
function contains(root2, n2) {
  if (!root2) {
    return false;
  }
  return root2.contains(n2);
}
var availablePrefixs = ["moz", "ms", "webkit"];
function requestAnimationFramePolyfill() {
  var lastTime = 0;
  return function(callback) {
    var currTime = (/* @__PURE__ */ new Date()).getTime();
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));
    var id2 = window.setTimeout(function() {
      callback(currTime + timeToCall);
    }, timeToCall);
    lastTime = currTime + timeToCall;
    return id2;
  };
}
function getRequestAnimationFrame() {
  if (typeof window === "undefined") {
    return function() {
    };
  }
  if (window.requestAnimationFrame) {
    return window.requestAnimationFrame.bind(window);
  }
  var prefix = availablePrefixs.filter(function(key2) {
    return "".concat(key2, "RequestAnimationFrame") in window;
  })[0];
  return prefix ? window["".concat(prefix, "RequestAnimationFrame")] : requestAnimationFramePolyfill();
}
function cancelRequestAnimationFrame(id2) {
  if (typeof window === "undefined") {
    return null;
  }
  if (window.cancelAnimationFrame) {
    return window.cancelAnimationFrame(id2);
  }
  var prefix = availablePrefixs.filter(function(key2) {
    return "".concat(key2, "CancelAnimationFrame") in window || "".concat(key2, "CancelRequestAnimationFrame") in window;
  })[0];
  return prefix ? (window["".concat(prefix, "CancelAnimationFrame")] || window["".concat(prefix, "CancelRequestAnimationFrame")]).call(this, id2) : clearTimeout(id2);
}
var raf = getRequestAnimationFrame();
var cancelAnimationTimeout = function cancelAnimationTimeout2(frame) {
  return cancelRequestAnimationFrame(frame.id);
};
var requestAnimationTimeout = function requestAnimationTimeout2(callback, delay) {
  var start = Date.now();
  function timeout() {
    if (Date.now() - start >= delay) {
      callback.call();
    } else {
      frame.id = raf(timeout);
    }
  }
  var frame = {
    id: raf(timeout)
  };
  return frame;
};
function ownKeys$1(object3, enumerableOnly) {
  var keys2 = Object.keys(object3);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object3);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object3, sym).enumerable;
    })), keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread2$1(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = null != arguments[i2] ? arguments[i2] : {};
    i2 % 2 ? ownKeys$1(Object(source), true).forEach(function(key2) {
      _defineProperty$T(target, key2, source[key2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key2) {
      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
    });
  }
  return target;
}
function _typeof$2(obj) {
  "@babel/helpers - typeof";
  return _typeof$2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof$2(obj);
}
function _defineProperty$T(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value: value26,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var vendorPrefix;
var jsCssMap = {
  Webkit: "-webkit-",
  Moz: "-moz-",
  // IE did it wrong again ...
  ms: "-ms-",
  O: "-o-"
};
function getVendorPrefix() {
  if (vendorPrefix !== void 0) {
    return vendorPrefix;
  }
  vendorPrefix = "";
  var style3 = document.createElement("p").style;
  var testProp = "Transform";
  for (var key2 in jsCssMap) {
    if (key2 + testProp in style3) {
      vendorPrefix = key2;
    }
  }
  return vendorPrefix;
}
function getTransitionName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "TransitionProperty") : "transitionProperty";
}
function getTransformName() {
  return getVendorPrefix() ? "".concat(getVendorPrefix(), "Transform") : "transform";
}
function setTransitionProperty(node, value26) {
  var name = getTransitionName();
  if (name) {
    node.style[name] = value26;
    if (name !== "transitionProperty") {
      node.style.transitionProperty = value26;
    }
  }
}
function setTransform$1(node, value26) {
  var name = getTransformName();
  if (name) {
    node.style[name] = value26;
    if (name !== "transform") {
      node.style.transform = value26;
    }
  }
}
function getTransitionProperty(node) {
  return node.style.transitionProperty || node.style[getTransitionName()];
}
function getTransformXY(node) {
  var style3 = window.getComputedStyle(node, null);
  var transform = style3.getPropertyValue("transform") || style3.getPropertyValue(getTransformName());
  if (transform && transform !== "none") {
    var matrix = transform.replace(/[^0-9\-.,]/g, "").split(",");
    return {
      x: parseFloat(matrix[12] || matrix[4], 0),
      y: parseFloat(matrix[13] || matrix[5], 0)
    };
  }
  return {
    x: 0,
    y: 0
  };
}
var matrix2d = /matrix\((.*)\)/;
var matrix3d = /matrix3d\((.*)\)/;
function setTransformXY(node, xy) {
  var style3 = window.getComputedStyle(node, null);
  var transform = style3.getPropertyValue("transform") || style3.getPropertyValue(getTransformName());
  if (transform && transform !== "none") {
    var arr;
    var match2d = transform.match(matrix2d);
    if (match2d) {
      match2d = match2d[1];
      arr = match2d.split(",").map(function(item) {
        return parseFloat(item, 10);
      });
      arr[4] = xy.x;
      arr[5] = xy.y;
      setTransform$1(node, "matrix(".concat(arr.join(","), ")"));
    } else {
      var match3d = transform.match(matrix3d)[1];
      arr = match3d.split(",").map(function(item) {
        return parseFloat(item, 10);
      });
      arr[12] = xy.x;
      arr[13] = xy.y;
      setTransform$1(node, "matrix3d(".concat(arr.join(","), ")"));
    }
  } else {
    setTransform$1(node, "translateX(".concat(xy.x, "px) translateY(").concat(xy.y, "px) translateZ(0)"));
  }
}
var RE_NUM$1 = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
var getComputedStyleX$1;
function forceRelayout(elem) {
  var originalStyle = elem.style.display;
  elem.style.display = "none";
  elem.offsetHeight;
  elem.style.display = originalStyle;
}
function css$1(el, name, v2) {
  var value26 = v2;
  if (_typeof$2(name) === "object") {
    for (var i2 in name) {
      if (name.hasOwnProperty(i2)) {
        css$1(el, i2, name[i2]);
      }
    }
    return void 0;
  }
  if (typeof value26 !== "undefined") {
    if (typeof value26 === "number") {
      value26 = "".concat(value26, "px");
    }
    el.style[name] = value26;
    return void 0;
  }
  return getComputedStyleX$1(el, name);
}
function getClientPosition$2(elem) {
  var box;
  var x2;
  var y2;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  box = elem.getBoundingClientRect();
  x2 = Math.floor(box.left);
  y2 = Math.floor(box.top);
  x2 -= docElem.clientLeft || body.clientLeft || 0;
  y2 -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x2,
    top: y2
  };
}
function getScroll$3(w2, top) {
  var ret = w2["page".concat(top ? "Y" : "X", "Offset")];
  var method3 = "scroll".concat(top ? "Top" : "Left");
  if (typeof ret !== "number") {
    var d2 = w2.document;
    ret = d2.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d2.body[method3];
    }
  }
  return ret;
}
function getScrollLeft$1(w2) {
  return getScroll$3(w2);
}
function getScrollTop$1(w2) {
  return getScroll$3(w2, true);
}
function getOffset$3(el) {
  var pos = getClientPosition$2(el);
  var doc = el.ownerDocument;
  var w2 = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft$1(w2);
  pos.top += getScrollTop$1(w2);
  return pos;
}
function isWindow$1(obj) {
  return obj !== null && obj !== void 0 && obj == obj.window;
}
function getDocument(node) {
  if (isWindow$1(node)) {
    return node.document;
  }
  if (node.nodeType === 9) {
    return node;
  }
  return node.ownerDocument;
}
function _getComputedStyle$1(elem, name, cs) {
  var computedStyle = cs;
  var val = "";
  var d2 = getDocument(elem);
  computedStyle = computedStyle || d2.defaultView.getComputedStyle(elem, null);
  if (computedStyle) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }
  return val;
}
var _RE_NUM_NO_PX$1 = new RegExp("^(".concat(RE_NUM$1, ")(?!px)[a-z%]+$"), "i");
var RE_POS$1 = /^(top|right|bottom|left)$/;
var CURRENT_STYLE$1 = "currentStyle";
var RUNTIME_STYLE$1 = "runtimeStyle";
var LEFT$1 = "left";
var PX$1 = "px";
function _getComputedStyleIE$1(elem, name) {
  var ret = elem[CURRENT_STYLE$1] && elem[CURRENT_STYLE$1][name];
  if (_RE_NUM_NO_PX$1.test(ret) && !RE_POS$1.test(name)) {
    var style3 = elem.style;
    var left = style3[LEFT$1];
    var rsLeft = elem[RUNTIME_STYLE$1][LEFT$1];
    elem[RUNTIME_STYLE$1][LEFT$1] = elem[CURRENT_STYLE$1][LEFT$1];
    style3[LEFT$1] = name === "fontSize" ? "1em" : ret || 0;
    ret = style3.pixelLeft + PX$1;
    style3[LEFT$1] = left;
    elem[RUNTIME_STYLE$1][LEFT$1] = rsLeft;
  }
  return ret === "" ? "auto" : ret;
}
if (typeof window !== "undefined") {
  getComputedStyleX$1 = window.getComputedStyle ? _getComputedStyle$1 : _getComputedStyleIE$1;
}
function getOffsetDirection(dir, option) {
  if (dir === "left") {
    return option.useCssRight ? "right" : dir;
  }
  return option.useCssBottom ? "bottom" : dir;
}
function oppositeOffsetDirection(dir) {
  if (dir === "left") {
    return "right";
  } else if (dir === "right") {
    return "left";
  } else if (dir === "top") {
    return "bottom";
  } else if (dir === "bottom") {
    return "top";
  }
}
function setLeftTop(elem, offset4, option) {
  if (css$1(elem, "position") === "static") {
    elem.style.position = "relative";
  }
  var presetH = -999;
  var presetV = -999;
  var horizontalProperty = getOffsetDirection("left", option);
  var verticalProperty = getOffsetDirection("top", option);
  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);
  if (horizontalProperty !== "left") {
    presetH = 999;
  }
  if (verticalProperty !== "top") {
    presetV = 999;
  }
  var originalTransition = "";
  var originalOffset = getOffset$3(elem);
  if ("left" in offset4 || "top" in offset4) {
    originalTransition = getTransitionProperty(elem) || "";
    setTransitionProperty(elem, "none");
  }
  if ("left" in offset4) {
    elem.style[oppositeHorizontalProperty] = "";
    elem.style[horizontalProperty] = "".concat(presetH, "px");
  }
  if ("top" in offset4) {
    elem.style[oppositeVerticalProperty] = "";
    elem.style[verticalProperty] = "".concat(presetV, "px");
  }
  forceRelayout(elem);
  var old = getOffset$3(elem);
  var originalStyle = {};
  for (var key2 in offset4) {
    if (offset4.hasOwnProperty(key2)) {
      var dir = getOffsetDirection(key2, option);
      var preset = key2 === "left" ? presetH : presetV;
      var off = originalOffset[key2] - old[key2];
      if (dir === key2) {
        originalStyle[dir] = preset + off;
      } else {
        originalStyle[dir] = preset - off;
      }
    }
  }
  css$1(elem, originalStyle);
  forceRelayout(elem);
  if ("left" in offset4 || "top" in offset4) {
    setTransitionProperty(elem, originalTransition);
  }
  var ret = {};
  for (var _key in offset4) {
    if (offset4.hasOwnProperty(_key)) {
      var _dir = getOffsetDirection(_key, option);
      var _off = offset4[_key] - originalOffset[_key];
      if (_key === _dir) {
        ret[_dir] = originalStyle[_dir] + _off;
      } else {
        ret[_dir] = originalStyle[_dir] - _off;
      }
    }
  }
  css$1(elem, ret);
}
function setTransform$1$1(elem, offset4) {
  var originalOffset = getOffset$3(elem);
  var originalXY = getTransformXY(elem);
  var resultXY = {
    x: originalXY.x,
    y: originalXY.y
  };
  if ("left" in offset4) {
    resultXY.x = originalXY.x + offset4.left - originalOffset.left;
  }
  if ("top" in offset4) {
    resultXY.y = originalXY.y + offset4.top - originalOffset.top;
  }
  setTransformXY(elem, resultXY);
}
function setOffset$1(elem, offset4, option) {
  if (option.ignoreShake) {
    var oriOffset = getOffset$3(elem);
    var oLeft = oriOffset.left.toFixed(0);
    var oTop = oriOffset.top.toFixed(0);
    var tLeft = offset4.left.toFixed(0);
    var tTop = offset4.top.toFixed(0);
    if (oLeft === tLeft && oTop === tTop) {
      return;
    }
  }
  if (option.useCssRight || option.useCssBottom) {
    setLeftTop(elem, offset4, option);
  } else if (option.useCssTransform && getTransformName() in document.body.style) {
    setTransform$1$1(elem, offset4);
  } else {
    setLeftTop(elem, offset4, option);
  }
}
function each$1(arr, fn) {
  for (var i2 = 0; i2 < arr.length; i2++) {
    fn(arr[i2]);
  }
}
function isBorderBoxFn$1(elem) {
  return getComputedStyleX$1(elem, "boxSizing") === "border-box";
}
var BOX_MODELS$1 = ["margin", "border", "padding"];
var CONTENT_INDEX$1 = -1;
var PADDING_INDEX$1 = 2;
var BORDER_INDEX$1 = 1;
var MARGIN_INDEX$1 = 0;
function swap$1(elem, options2, callback) {
  var old = {};
  var style3 = elem.style;
  var name;
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      old[name] = style3[name];
      style3[name] = options2[name];
    }
  }
  callback.call(elem);
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      style3[name] = old[name];
    }
  }
}
function getPBMWidth$1(elem, props2, which) {
  var value26 = 0;
  var prop;
  var j2;
  var i2;
  for (j2 = 0; j2 < props2.length; j2++) {
    prop = props2[j2];
    if (prop) {
      for (i2 = 0; i2 < which.length; i2++) {
        var cssProp = void 0;
        if (prop === "border") {
          cssProp = "".concat(prop).concat(which[i2], "Width");
        } else {
          cssProp = prop + which[i2];
        }
        value26 += parseFloat(getComputedStyleX$1(elem, cssProp)) || 0;
      }
    }
  }
  return value26;
}
var domUtils$1 = {
  getParent: function getParent(element) {
    var parent2 = element;
    do {
      if (parent2.nodeType === 11 && parent2.host) {
        parent2 = parent2.host;
      } else {
        parent2 = parent2.parentNode;
      }
    } while (parent2 && parent2.nodeType !== 1 && parent2.nodeType !== 9);
    return parent2;
  }
};
each$1(["Width", "Height"], function(name) {
  domUtils$1["doc".concat(name)] = function(refWin) {
    var d2 = refWin.document;
    return Math.max(
      // firefox chrome documentElement.scrollHeight< body.scrollHeight
      // ie standard mode : documentElement.scrollHeight> body.scrollHeight
      d2.documentElement["scroll".concat(name)],
      // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
      d2.body["scroll".concat(name)],
      domUtils$1["viewport".concat(name)](d2)
    );
  };
  domUtils$1["viewport".concat(name)] = function(win) {
    var prop = "client".concat(name);
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop];
    return doc.compatMode === "CSS1Compat" && documentElementProp || body && body[prop] || documentElementProp;
  };
});
function getWH$1(elem, name, ex) {
  var extra = ex;
  if (isWindow$1(elem)) {
    return name === "width" ? domUtils$1.viewportWidth(elem) : domUtils$1.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === "width" ? domUtils$1.docWidth(elem) : domUtils$1.docHeight(elem);
  }
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  var borderBoxValue = name === "width" ? Math.floor(elem.getBoundingClientRect().width) : Math.floor(elem.getBoundingClientRect().height);
  var isBorderBox = isBorderBoxFn$1(elem);
  var cssBoxValue = 0;
  if (borderBoxValue === null || borderBoxValue === void 0 || borderBoxValue <= 0) {
    borderBoxValue = void 0;
    cssBoxValue = getComputedStyleX$1(elem, name);
    if (cssBoxValue === null || cssBoxValue === void 0 || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    cssBoxValue = Math.floor(parseFloat(cssBoxValue)) || 0;
  }
  if (extra === void 0) {
    extra = isBorderBox ? BORDER_INDEX$1 : CONTENT_INDEX$1;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== void 0 || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX$1) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth$1(elem, ["border", "padding"], which);
    }
    return cssBoxValue;
  } else if (borderBoxValueOrIsBorderBox) {
    if (extra === BORDER_INDEX$1) {
      return val;
    }
    return val + (extra === PADDING_INDEX$1 ? -getPBMWidth$1(elem, ["border"], which) : getPBMWidth$1(elem, ["margin"], which));
  }
  return cssBoxValue + getPBMWidth$1(elem, BOX_MODELS$1.slice(extra), which);
}
var cssShow$1 = {
  position: "absolute",
  visibility: "hidden",
  display: "block"
};
function getWHIgnoreDisplay$1() {
  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
    args[_key2] = arguments[_key2];
  }
  var val;
  var elem = args[0];
  if (elem.offsetWidth !== 0) {
    val = getWH$1.apply(void 0, args);
  } else {
    swap$1(elem, cssShow$1, function() {
      val = getWH$1.apply(void 0, args);
    });
  }
  return val;
}
each$1(["width", "height"], function(name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils$1["outer".concat(first)] = function(el, includeMargin) {
    return el && getWHIgnoreDisplay$1(el, name, includeMargin ? MARGIN_INDEX$1 : BORDER_INDEX$1);
  };
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  domUtils$1[name] = function(elem, v2) {
    var val = v2;
    if (val !== void 0) {
      if (elem) {
        var isBorderBox = isBorderBoxFn$1(elem);
        if (isBorderBox) {
          val += getPBMWidth$1(elem, ["padding", "border"], which);
        }
        return css$1(elem, name, val);
      }
      return void 0;
    }
    return elem && getWHIgnoreDisplay$1(elem, name, CONTENT_INDEX$1);
  };
});
function mix$1(to2, from2) {
  for (var i2 in from2) {
    if (from2.hasOwnProperty(i2)) {
      to2[i2] = from2[i2];
    }
  }
  return to2;
}
var utils = {
  getWindow: function getWindow(node) {
    if (node && node.document && node.setTimeout) {
      return node;
    }
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  getDocument,
  offset: function offset(el, value26, option) {
    if (typeof value26 !== "undefined") {
      setOffset$1(el, value26, option || {});
    } else {
      return getOffset$3(el);
    }
  },
  isWindow: isWindow$1,
  each: each$1,
  css: css$1,
  clone: function clone2(obj) {
    var i2;
    var ret = {};
    for (i2 in obj) {
      if (obj.hasOwnProperty(i2)) {
        ret[i2] = obj[i2];
      }
    }
    var overflow3 = obj.overflow;
    if (overflow3) {
      for (i2 in obj) {
        if (obj.hasOwnProperty(i2)) {
          ret.overflow[i2] = obj.overflow[i2];
        }
      }
    }
    return ret;
  },
  mix: mix$1,
  getWindowScrollLeft: function getWindowScrollLeft(w2) {
    return getScrollLeft$1(w2);
  },
  getWindowScrollTop: function getWindowScrollTop(w2) {
    return getScrollTop$1(w2);
  },
  merge: function merge() {
    var ret = {};
    for (var i2 = 0; i2 < arguments.length; i2++) {
      utils.mix(ret, i2 < 0 || arguments.length <= i2 ? void 0 : arguments[i2]);
    }
    return ret;
  },
  viewportWidth: 0,
  viewportHeight: 0
};
mix$1(utils, domUtils$1);
var getParent2 = utils.getParent;
function getOffsetParent(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return null;
  }
  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent2;
  var positionStyle = utils.css(element, "position");
  var skipStatic = positionStyle === "fixed" || positionStyle === "absolute";
  if (!skipStatic) {
    return element.nodeName.toLowerCase() === "html" ? null : getParent2(element);
  }
  for (parent2 = getParent2(element); parent2 && parent2 !== body && parent2.nodeType !== 9; parent2 = getParent2(parent2)) {
    positionStyle = utils.css(parent2, "position");
    if (positionStyle !== "static") {
      return parent2;
    }
  }
  return null;
}
var getParent$1 = utils.getParent;
function isAncestorFixed(element) {
  if (utils.isWindow(element) || element.nodeType === 9) {
    return false;
  }
  var doc = utils.getDocument(element);
  var body = doc.body;
  var parent2 = null;
  for (
    parent2 = getParent$1(element);
    // 修复元素位于 document.documentElement 下导致崩溃问题
    parent2 && parent2 !== body && parent2 !== doc;
    parent2 = getParent$1(parent2)
  ) {
    var positionStyle = utils.css(parent2, "position");
    if (positionStyle === "fixed") {
      return true;
    }
  }
  return false;
}
function getVisibleRectForElement(element, alwaysByViewport) {
  var visibleRect = {
    left: 0,
    right: Infinity,
    top: 0,
    bottom: Infinity
  };
  var el = getOffsetParent(element);
  var doc = utils.getDocument(element);
  var win = doc.defaultView || doc.parentWindow;
  var body = doc.body;
  var documentElement = doc.documentElement;
  while (el) {
    if ((navigator.userAgent.indexOf("MSIE") === -1 || el.clientWidth !== 0) && // body may have overflow set on it, yet we still get the entire
    // viewport. In some browsers, el.offsetParent may be
    // document.documentElement, so check for that too.
    el !== body && el !== documentElement && utils.css(el, "overflow") !== "visible") {
      var pos = utils.offset(el);
      pos.left += el.clientLeft;
      pos.top += el.clientTop;
      visibleRect.top = Math.max(visibleRect.top, pos.top);
      visibleRect.right = Math.min(
        visibleRect.right,
        // consider area without scrollBar
        pos.left + el.clientWidth
      );
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.left);
    } else if (el === body || el === documentElement) {
      break;
    }
    el = getOffsetParent(el);
  }
  var originalPosition = null;
  if (!utils.isWindow(element) && element.nodeType !== 9) {
    originalPosition = element.style.position;
    var position = utils.css(element, "position");
    if (position === "absolute") {
      element.style.position = "fixed";
    }
  }
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);
  var documentWidth = documentElement.scrollWidth;
  var documentHeight = documentElement.scrollHeight;
  var bodyStyle = window.getComputedStyle(body);
  if (bodyStyle.overflowX === "hidden") {
    documentWidth = win.innerWidth;
  }
  if (bodyStyle.overflowY === "hidden") {
    documentHeight = win.innerHeight;
  }
  if (element.style) {
    element.style.position = originalPosition;
  }
  if (alwaysByViewport || isAncestorFixed(element)) {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY);
    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);
    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);
  } else {
    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);
    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);
    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);
    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);
  }
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
}
function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow3) {
  var pos = utils.clone(elFuturePos);
  var size = {
    width: elRegion.width,
    height: elRegion.height
  };
  if (overflow3.adjustX && pos.left < visibleRect.left) {
    pos.left = visibleRect.left;
  }
  if (overflow3.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
    size.width -= pos.left + size.width - visibleRect.right;
  }
  if (overflow3.adjustX && pos.left + size.width > visibleRect.right) {
    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
  }
  if (overflow3.adjustY && pos.top < visibleRect.top) {
    pos.top = visibleRect.top;
  }
  if (overflow3.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
    size.height -= pos.top + size.height - visibleRect.bottom;
  }
  if (overflow3.adjustY && pos.top + size.height > visibleRect.bottom) {
    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
  }
  return utils.mix(pos, size);
}
function getRegion(node) {
  var offset4;
  var w2;
  var h2;
  if (!utils.isWindow(node) && node.nodeType !== 9) {
    offset4 = utils.offset(node);
    w2 = utils.outerWidth(node);
    h2 = utils.outerHeight(node);
  } else {
    var win = utils.getWindow(node);
    offset4 = {
      left: utils.getWindowScrollLeft(win),
      top: utils.getWindowScrollTop(win)
    };
    w2 = utils.viewportWidth(win);
    h2 = utils.viewportHeight(win);
  }
  offset4.width = w2;
  offset4.height = h2;
  return offset4;
}
function getAlignOffset(region, align) {
  var V2 = align.charAt(0);
  var H = align.charAt(1);
  var w2 = region.width;
  var h2 = region.height;
  var x2 = region.left;
  var y2 = region.top;
  if (V2 === "c") {
    y2 += h2 / 2;
  } else if (V2 === "b") {
    y2 += h2;
  }
  if (H === "c") {
    x2 += w2 / 2;
  } else if (H === "r") {
    x2 += w2;
  }
  return {
    left: x2,
    top: y2
  };
}
function getElFuturePos(elRegion, refNodeRegion, points, offset4, targetOffset2) {
  var p1 = getAlignOffset(refNodeRegion, points[1]);
  var p2 = getAlignOffset(elRegion, points[0]);
  var diff2 = [p2.left - p1.left, p2.top - p1.top];
  return {
    left: Math.round(elRegion.left - diff2[0] + offset4[0] - targetOffset2[0]),
    top: Math.round(elRegion.top - diff2[1] + offset4[1] - targetOffset2[1])
  };
}
function isFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
}
function isFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
}
function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
}
function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
}
function flip(points, reg, map2) {
  var ret = [];
  utils.each(points, function(p) {
    ret.push(p.replace(reg, function(m2) {
      return map2[m2];
    }));
  });
  return ret;
}
function flipOffset(offset4, index2) {
  offset4[index2] = -offset4[index2];
  return offset4;
}
function convertOffset(str, offsetLen) {
  var n2;
  if (/%$/.test(str)) {
    n2 = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
  } else {
    n2 = parseInt(str, 10);
  }
  return n2 || 0;
}
function normalizeOffset(offset4, el) {
  offset4[0] = convertOffset(offset4[0], el.width);
  offset4[1] = convertOffset(offset4[1], el.height);
}
function doAlign(el, tgtRegion, align, isTgtRegionVisible) {
  var points = align.points;
  var offset4 = align.offset || [0, 0];
  var targetOffset2 = align.targetOffset || [0, 0];
  var overflow3 = align.overflow;
  var source = align.source || el;
  offset4 = [].concat(offset4);
  targetOffset2 = [].concat(targetOffset2);
  overflow3 = overflow3 || {};
  var newOverflowCfg = {};
  var fail = 0;
  var alwaysByViewport = !!(overflow3 && overflow3.alwaysByViewport);
  var visibleRect = getVisibleRectForElement(source, alwaysByViewport);
  var elRegion = getRegion(source);
  normalizeOffset(offset4, elRegion);
  normalizeOffset(targetOffset2, tgtRegion);
  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset4, targetOffset2);
  var newElRegion = utils.merge(elRegion, elFuturePos);
  if (visibleRect && (overflow3.adjustX || overflow3.adjustY) && isTgtRegionVisible) {
    if (overflow3.adjustX) {
      if (isFailX(elFuturePos, elRegion, visibleRect)) {
        var newPoints = flip(points, /[lr]/gi, {
          l: "r",
          r: "l"
        });
        var newOffset = flipOffset(offset4, 0);
        var newTargetOffset = flipOffset(targetOffset2, 0);
        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);
        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = newPoints;
          offset4 = newOffset;
          targetOffset2 = newTargetOffset;
        }
      }
    }
    if (overflow3.adjustY) {
      if (isFailY(elFuturePos, elRegion, visibleRect)) {
        var _newPoints = flip(points, /[tb]/gi, {
          t: "b",
          b: "t"
        });
        var _newOffset = flipOffset(offset4, 1);
        var _newTargetOffset = flipOffset(targetOffset2, 1);
        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);
        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
          fail = 1;
          points = _newPoints;
          offset4 = _newOffset;
          targetOffset2 = _newTargetOffset;
        }
      }
    }
    if (fail) {
      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset4, targetOffset2);
      utils.mix(newElRegion, elFuturePos);
    }
    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);
    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);
    if (isStillFailX || isStillFailY) {
      var _newPoints2 = points;
      if (isStillFailX) {
        _newPoints2 = flip(points, /[lr]/gi, {
          l: "r",
          r: "l"
        });
      }
      if (isStillFailY) {
        _newPoints2 = flip(points, /[tb]/gi, {
          t: "b",
          b: "t"
        });
      }
      points = _newPoints2;
      offset4 = align.offset || [0, 0];
      targetOffset2 = align.targetOffset || [0, 0];
    }
    newOverflowCfg.adjustX = overflow3.adjustX && isStillFailX;
    newOverflowCfg.adjustY = overflow3.adjustY && isStillFailY;
    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);
    }
  }
  if (newElRegion.width !== elRegion.width) {
    utils.css(source, "width", utils.width(source) + newElRegion.width - elRegion.width);
  }
  if (newElRegion.height !== elRegion.height) {
    utils.css(source, "height", utils.height(source) + newElRegion.height - elRegion.height);
  }
  utils.offset(source, {
    left: newElRegion.left,
    top: newElRegion.top
  }, {
    useCssRight: align.useCssRight,
    useCssBottom: align.useCssBottom,
    useCssTransform: align.useCssTransform,
    ignoreShake: align.ignoreShake
  });
  return {
    points,
    offset: offset4,
    targetOffset: targetOffset2,
    overflow: newOverflowCfg
  };
}
function isOutOfVisibleRect(target, alwaysByViewport) {
  var visibleRect = getVisibleRectForElement(target, alwaysByViewport);
  var targetRegion = getRegion(target);
  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;
}
function alignElement(el, refNode, align) {
  var target = align.target || refNode;
  var refNodeRegion = getRegion(target);
  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target, align.overflow && align.overflow.alwaysByViewport);
  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);
}
alignElement.__getOffsetParent = getOffsetParent;
alignElement.__getVisibleRectForElement = getVisibleRectForElement;
function alignPoint(el, tgtPoint, align) {
  var pageX;
  var pageY;
  var doc = utils.getDocument(el);
  var win = doc.defaultView || doc.parentWindow;
  var scrollX = utils.getWindowScrollLeft(win);
  var scrollY = utils.getWindowScrollTop(win);
  var viewportWidth = utils.viewportWidth(win);
  var viewportHeight = utils.viewportHeight(win);
  if ("pageX" in tgtPoint) {
    pageX = tgtPoint.pageX;
  } else {
    pageX = scrollX + tgtPoint.clientX;
  }
  if ("pageY" in tgtPoint) {
    pageY = tgtPoint.pageY;
  } else {
    pageY = scrollY + tgtPoint.clientY;
  }
  var tgtRegion = {
    left: pageX,
    top: pageY,
    width: 0,
    height: 0
  };
  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;
  var points = [align.points[0], "cc"];
  return doAlign(el, tgtRegion, _objectSpread2$1(_objectSpread2$1({}, align), {}, {
    points
  }), pointInView);
}
const isVisible = function(element) {
  if (!element) {
    return false;
  }
  if (element.offsetParent) {
    return true;
  }
  if (element.getBBox) {
    var box = element.getBBox();
    if (box.width || box.height) {
      return true;
    }
  }
  if (element.getBoundingClientRect) {
    var _box = element.getBoundingClientRect();
    if (_box.width || _box.height) {
      return true;
    }
  }
  return false;
};
function isSamePoint(prev3, next3) {
  if (prev3 === next3) return true;
  if (!prev3 || !next3) return false;
  if ("pageX" in next3 && "pageY" in next3) {
    return prev3.pageX === next3.pageX && prev3.pageY === next3.pageY;
  }
  if ("clientX" in next3 && "clientY" in next3) {
    return prev3.clientX === next3.clientX && prev3.clientY === next3.clientY;
  }
  return false;
}
function restoreFocus(activeElement, container) {
  if (activeElement !== document.activeElement && contains(container, activeElement) && typeof activeElement.focus === "function") {
    activeElement.focus();
  }
}
function monitorResize(element, callback) {
  var prevWidth = null;
  var prevHeight = null;
  function onResize(_ref) {
    var _ref2 = _slicedToArray$2(_ref, 1), target = _ref2[0].target;
    if (!document.documentElement.contains(target)) return;
    var _target$getBoundingCl = target.getBoundingClientRect(), width = _target$getBoundingCl.width, height = _target$getBoundingCl.height;
    var fixedWidth = Math.floor(width);
    var fixedHeight = Math.floor(height);
    if (prevWidth !== fixedWidth || prevHeight !== fixedHeight) {
      Promise.resolve().then(function() {
        callback({
          width: fixedWidth,
          height: fixedHeight
        });
      });
    }
    prevWidth = fixedWidth;
    prevHeight = fixedHeight;
  }
  var resizeObserver = new index$k(onResize);
  if (element) {
    resizeObserver.observe(element);
  }
  return function() {
    resizeObserver.disconnect();
  };
}
const useBuffer = function(callback, buffer) {
  var called = false;
  var timeout = null;
  function cancelTrigger() {
    window.clearTimeout(timeout);
  }
  function trigger2(force) {
    if (!called || force === true) {
      if (callback() === false) {
        return;
      }
      called = true;
      cancelTrigger();
      timeout = window.setTimeout(function() {
        called = false;
      }, buffer.value);
    } else {
      cancelTrigger();
      timeout = window.setTimeout(function() {
        called = false;
        trigger2();
      }, buffer.value);
    }
  }
  return [trigger2, function() {
    called = false;
    cancelTrigger();
  }];
};
const { defineComponent: defineComponent$2O, ref: ref$L, computed: computed$U, onMounted: onMounted$o, onUpdated: onUpdated$4, watch: watch$r, onUnmounted: onUnmounted$4 } = await importShared("vue");
var alignProps = {
  align: Object,
  target: [Object, Function],
  onAlign: Function,
  monitorBufferTime: Number,
  monitorWindowResize: Boolean,
  disabled: Boolean
};
function getElement(func) {
  if (typeof func !== "function") return null;
  return func();
}
function getPoint(point) {
  if (_typeof$3(point) !== "object" || !point) return null;
  return point;
}
const Align = defineComponent$2O({
  name: "Align",
  props: alignProps,
  emits: ["align"],
  setup: function setup19(props2, _ref) {
    var expose = _ref.expose, slots = _ref.slots;
    var cacheRef = ref$L({});
    var nodeRef = ref$L();
    var forceAlignPropsRef = computed$U(function() {
      return {
        disabled: props2.disabled,
        target: props2.target,
        onAlign: props2.onAlign
      };
    });
    var _useBuffer = useBuffer(function() {
      var _forceAlignPropsRef$v = forceAlignPropsRef.value, latestDisabled = _forceAlignPropsRef$v.disabled, latestTarget = _forceAlignPropsRef$v.target, latestOnAlign = _forceAlignPropsRef$v.onAlign;
      if (!latestDisabled && latestTarget && nodeRef.value && nodeRef.value.$el) {
        var source = nodeRef.value.$el;
        var result;
        var element = getElement(latestTarget);
        var point = getPoint(latestTarget);
        cacheRef.value.element = element;
        cacheRef.value.point = point;
        var _document = document, activeElement = _document.activeElement;
        if (element && isVisible(element)) {
          result = alignElement(source, element, props2.align);
        } else if (point) {
          result = alignPoint(source, point, props2.align);
        }
        restoreFocus(activeElement, source);
        if (latestOnAlign && result) {
          latestOnAlign(source, result);
        }
        return true;
      }
      return false;
    }, computed$U(function() {
      return props2.monitorBufferTime;
    })), _useBuffer2 = _slicedToArray$2(_useBuffer, 2), _forceAlign = _useBuffer2[0], cancelForceAlign = _useBuffer2[1];
    var resizeMonitor = ref$L({
      cancel: function cancel2() {
      }
    });
    var sourceResizeMonitor = ref$L({
      cancel: function cancel2() {
      }
    });
    var goAlign = function goAlign2() {
      var target = props2.target;
      var element = getElement(target);
      var point = getPoint(target);
      if (nodeRef.value && nodeRef.value.$el !== sourceResizeMonitor.value.element) {
        sourceResizeMonitor.value.cancel();
        sourceResizeMonitor.value.element = nodeRef.value.$el;
        sourceResizeMonitor.value.cancel = monitorResize(nodeRef.value.$el, _forceAlign);
      }
      if (cacheRef.value.element !== element || !isSamePoint(cacheRef.value.point, point)) {
        _forceAlign();
        if (resizeMonitor.value.element !== element) {
          resizeMonitor.value.cancel();
          resizeMonitor.value.element = element;
          resizeMonitor.value.cancel = monitorResize(element, _forceAlign);
        }
      }
    };
    onMounted$o(function() {
      goAlign();
    });
    onUpdated$4(function() {
      goAlign();
    });
    watch$r(function() {
      return props2.disabled;
    }, function(disabled) {
      if (!disabled) {
        _forceAlign();
      } else {
        cancelForceAlign();
      }
    }, {
      flush: "post"
    });
    var winResizeRef = ref$L(null);
    watch$r(function() {
      return props2.monitorWindowResize;
    }, function(monitorWindowResize) {
      if (monitorWindowResize) {
        if (!winResizeRef.value) {
          winResizeRef.value = addEventListenerWrap(window, "resize", _forceAlign);
        }
      } else if (winResizeRef.value) {
        winResizeRef.value.remove();
        winResizeRef.value = null;
      }
    }, {
      flush: "post"
    });
    onUnmounted$4(function() {
      resizeMonitor.value.cancel();
      sourceResizeMonitor.value.cancel();
      if (winResizeRef.value) winResizeRef.value.remove();
      cancelForceAlign();
    });
    expose({
      forceAlign: function forceAlign() {
        return _forceAlign(true);
      }
    });
    return function() {
      var child = slots === null || slots === void 0 ? void 0 : slots.default();
      if (child) {
        return cloneElement(child[0], {
          ref: nodeRef
        }, true, true);
      }
      return child && child[0];
    };
  }
});
const { createVNode: _createVNode$4X } = await importShared("vue");
const { Text: Text$3 } = await importShared("vue");
const LazyRenderBox$1 = {
  name: "LazyRenderBox",
  props: {
    visible: PropTypes.looseBool,
    hiddenClassName: PropTypes.string
  },
  render: function render6() {
    var hiddenClassName = this.$props.hiddenClassName;
    var child = getSlot(this);
    if (hiddenClassName || child && child.length > 1 || child && child[0] && child[0].type === Text$3) {
      return _createVNode$4X("div", null, [child]);
    }
    return child && child[0];
  }
};
const { createVNode: _createVNode$4W } = await importShared("vue");
const PopupInner = {
  props: {
    hiddenClassName: PropTypes.string.def(""),
    prefixCls: PropTypes.string,
    visible: PropTypes.looseBool
  },
  render: function render7() {
    var _this = this;
    var _a, _b;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, visible9 = _this$$props.visible, hiddenClassName = _this$$props.hiddenClassName;
    return _createVNode$4W("div", {
      "class": !visible9 ? hiddenClassName : ""
    }, [_createVNode$4W(LazyRenderBox$1, {
      "class": "".concat(prefixCls2, "-content"),
      "visible": visible9
    }, {
      default: function _default8() {
        return [(_b = (_a = _this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)];
      }
    })]);
  }
};
const { nextTick: nextTick$x } = await importShared("vue");
const BaseMixin = {
  methods: {
    setState: function setState() {
      var state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : void 0;
      var newState = typeof state === "function" ? state(this.$data, this.$props) : state;
      if (this.getDerivedStateFromProps) {
        var s2 = this.getDerivedStateFromProps(getOptionProps(this), _extends$1(_extends$1({}, this.$data), newState));
        if (s2 === null) {
          return;
        } else {
          newState = _extends$1(_extends$1({}, newState), s2 || {});
        }
      }
      _extends$1(this.$data, newState);
      if (this._.isMounted) {
        this.$forceUpdate();
      }
      nextTick$x(function() {
        callback && callback();
      });
    },
    __emit: function __emit() {
      var args = [].slice.call(arguments, 0);
      var eventName = args[0];
      eventName = "on".concat(eventName[0].toUpperCase()).concat(eventName.substring(1));
      var event = this.$props[eventName] || this.$attrs[eventName];
      if (args.length && event) {
        if (Array.isArray(event)) {
          for (var i2 = 0, l2 = event.length; i2 < l2; i2++) {
            event[i2].apply(event, _toConsumableArray(args.slice(1)));
          }
        } else {
          event.apply(void 0, _toConsumableArray(args.slice(1)));
        }
      }
    }
  }
};
function isPointsEq(a1, a2, isAlignPoint) {
  if (isAlignPoint) {
    return a1[0] === a2[0];
  }
  return a1[0] === a2[0] && a1[1] === a2[1];
}
function getAlignFromPlacement(builtinPlacements, placementStr, align) {
  var baseAlign = builtinPlacements[placementStr] || {};
  return _extends$1(_extends$1({}, baseAlign), align);
}
function getAlignPopupClassName(builtinPlacements, prefixCls2, align, isAlignPoint) {
  var points = align.points;
  for (var placement2 in builtinPlacements) {
    if (builtinPlacements.hasOwnProperty(placement2)) {
      if (isPointsEq(builtinPlacements[placement2].points, points, isAlignPoint)) {
        return "".concat(prefixCls2, "-placement-").concat(placement2);
      }
    }
  }
  return "";
}
function noop$H() {
}
function saveRef(name, component) {
  this[name] = component;
}
const { createVNode: _createVNode$4V } = await importShared("vue");
const { onUpdated: onUpdated$3 } = await importShared("vue");
const { getCurrentInstance: getCurrentInstance$2 } = await importShared("vue");
const { defineComponent: defineComponent$2N, nextTick: nextTick$w, Transition: T$2, TransitionGroup: TG } = await importShared("vue");
var getTransitionProps = function getTransitionProps2(transitionName2) {
  var opt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var transitionProps = transitionName2 ? _extends$1({
    appear: true,
    // appearFromClass: `${transitionName}-appear ${transitionName}-appear-prepare`,
    // appearActiveClass: `antdv-base-transtion`,
    appearToClass: "".concat(transitionName2, "-appear ").concat(transitionName2, "-appear-active"),
    enterFromClass: "".concat(transitionName2, "-enter ").concat(transitionName2, "-enter-prepare"),
    // enterActiveClass: `antdv-base-transtion`,
    enterToClass: "".concat(transitionName2, "-enter ").concat(transitionName2, "-enter-active"),
    leaveFromClass: " ".concat(transitionName2, "-leave"),
    leaveActiveClass: "".concat(transitionName2, "-leave ").concat(transitionName2, "-leave-active"),
    leaveToClass: "".concat(transitionName2, "-leave ").concat(transitionName2, "-leave-active")
  }, opt) : _extends$1({
    css: false
  }, opt);
  return transitionProps;
};
var getTransitionGroupProps = function getTransitionGroupProps2(transitionName2) {
  var opt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var transitionProps = transitionName2 ? _extends$1({
    appear: true,
    // appearFromClass: `${transitionName}-appear ${transitionName}-appear-prepare`,
    appearActiveClass: "".concat(transitionName2),
    appearToClass: "".concat(transitionName2, "-appear ").concat(transitionName2, "-appear-active"),
    enterFromClass: "".concat(transitionName2, "-appear ").concat(transitionName2, "-enter ").concat(transitionName2, "-appear-prepare ").concat(transitionName2, "-enter-prepare"),
    enterActiveClass: "".concat(transitionName2),
    enterToClass: "".concat(transitionName2, "-enter ").concat(transitionName2, "-appear ").concat(transitionName2, "-appear-active ").concat(transitionName2, "-enter-active"),
    leaveActiveClass: "".concat(transitionName2, " ").concat(transitionName2, "-leave"),
    leaveToClass: "".concat(transitionName2, "-leave-active")
  }, opt) : _extends$1({
    css: false
  }, opt);
  return transitionProps;
};
var Transition = T$2;
var TransitionGroup = TG;
var getCollapsedHeight = function getCollapsedHeight2() {
  return {
    height: 0,
    opacity: 0
  };
};
var getRealHeight = function getRealHeight2(node) {
  return {
    height: "".concat(node.scrollHeight, "px"),
    opacity: 1
  };
};
var getCurrentHeight = function getCurrentHeight2(node) {
  return {
    height: "".concat(node.offsetHeight, "px")
  };
};
var collapseMotion = function collapseMotion2(style3, className) {
  return {
    name: "ant-motion-collapse",
    appear: true,
    css: true,
    onBeforeEnter: function onBeforeEnter(node) {
      className.value = "ant-motion-collapse";
      style3.value = getCollapsedHeight();
    },
    onEnter: function onEnter2(node) {
      nextTick$w(function() {
        style3.value = getRealHeight(node);
      });
    },
    onAfterEnter: function onAfterEnter() {
      className.value = "";
      style3.value = {};
    },
    onBeforeLeave: function onBeforeLeave(node) {
      className.value = "ant-motion-collapse";
      style3.value = getCurrentHeight(node);
    },
    onLeave: function onLeave2(node) {
      window.setTimeout(function() {
        style3.value = getCollapsedHeight();
      });
    },
    onAfterLeave: function onAfterLeave() {
      className.value = "";
      style3.value = {};
    }
  };
};
const { withDirectives: _withDirectives$6, vShow: _vShow$6, createVNode: _createVNode$4U } = await importShared("vue");
const Popup = {
  name: "VCTriggerPopup",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    visible: PropTypes.looseBool,
    getClassNameFromAlign: PropTypes.func,
    getRootDomNode: PropTypes.func,
    align: PropTypes.any,
    destroyPopupOnHide: PropTypes.looseBool,
    prefixCls: PropTypes.string,
    getContainer: PropTypes.func,
    transitionName: PropTypes.string,
    animation: PropTypes.any,
    maskAnimation: PropTypes.string,
    maskTransitionName: PropTypes.string,
    mask: PropTypes.looseBool,
    zIndex: PropTypes.number,
    popupClassName: PropTypes.any,
    popupStyle: PropTypes.object.def(function() {
      return {};
    }),
    stretch: PropTypes.string,
    point: PropTypes.shape({
      pageX: PropTypes.number,
      pageY: PropTypes.number
    }).loose
  },
  data: function data() {
    this.domEl = null;
    this.currentAlignClassName = void 0;
    this.transitionProps = {};
    this.savePopupRef = saveRef.bind(this, "popupInstance");
    this.saveAlignRef = saveRef.bind(this, "alignInstance");
    return {
      // Used for stretch
      stretchChecked: false,
      targetWidth: void 0,
      targetHeight: void 0
    };
  },
  mounted: function mounted2() {
    var _this = this;
    this.$nextTick(function() {
      _this.rootNode = _this.getPopupDomNode();
      _this.setStretchSize();
    });
  },
  // 如添加会导致动画失效，如放开会导致快速输入时闪动 https://github.com/vueComponent/ant-design-vue/issues/1327，
  // 目前方案是保留动画，闪动问题(动画多次执行)进一步定位
  // beforeUpdate() {
  //   if (this.domEl && this.domEl.rcEndListener) {
  //     this.domEl.rcEndListener();
  //     this.domEl = null;
  //   }
  // },
  updated: function updated() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.setStretchSize();
    });
  },
  methods: {
    onAlign: function onAlign(popupDomNode, align) {
      var props2 = this.$props;
      var currentAlignClassName = props2.getClassNameFromAlign(align);
      if (this.currentAlignClassName !== currentAlignClassName) {
        this.currentAlignClassName = currentAlignClassName;
        popupDomNode.className = this.getClassName(currentAlignClassName, popupDomNode.className);
      }
      var onaAlign = this.$attrs.onaAlign;
      onaAlign && onaAlign(popupDomNode, align);
    },
    // Record size if stretch needed
    setStretchSize: function setStretchSize() {
      var _this$$props = this.$props, stretch = _this$$props.stretch, getRootDomNode2 = _this$$props.getRootDomNode, visible9 = _this$$props.visible;
      var _this$$data = this.$data, stretchChecked = _this$$data.stretchChecked, targetHeight = _this$$data.targetHeight, targetWidth = _this$$data.targetWidth;
      if (!stretch || !visible9) {
        if (stretchChecked) {
          this.setState({
            stretchChecked: false
          });
        }
        return;
      }
      var $ele = getRootDomNode2();
      if (!$ele) return;
      var height = $ele.offsetHeight;
      var width = $ele.offsetWidth;
      if (targetHeight !== height || targetWidth !== width || !stretchChecked) {
        this.setState({
          stretchChecked: true,
          targetHeight: height,
          targetWidth: width
        });
      }
    },
    getPopupDomNode: function getPopupDomNode() {
      return findDOMNode(this.popupInstance);
    },
    getTargetElement: function getTargetElement() {
      return this.$props.getRootDomNode();
    },
    // `target` on `rc-align` can accept as a function to get the bind element or a point.
    // ref: https://www.npmjs.com/package/rc-align
    getAlignTarget: function getAlignTarget() {
      var point = this.$props.point;
      if (point) {
        return point;
      }
      return this.getTargetElement;
    },
    getMaskTransitionName: function getMaskTransitionName() {
      var props2 = this.$props;
      var transitionName2 = props2.maskTransitionName;
      var animation2 = props2.maskAnimation;
      if (!transitionName2 && animation2) {
        transitionName2 = "".concat(props2.prefixCls, "-").concat(animation2);
      }
      return transitionName2;
    },
    getTransitionName: function getTransitionName2() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      var animation2 = props2.animation;
      if (!transitionName2) {
        if (typeof animation2 === "string") {
          transitionName2 = "".concat(animation2);
        } else if (animation2 && animation2.props && animation2.props.name) {
          transitionName2 = animation2.props.name;
        }
      }
      return transitionName2;
    },
    getClassName: function getClassName(currentAlignClassName) {
      var _this3 = this;
      var originClassName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      var enterActiveClass = [];
      if (this.transitionProps) {
        Object.keys(this.transitionProps).forEach(function(k2) {
          if (typeof _this3.transitionProps[k2] === "string") {
            enterActiveClass.push.apply(enterActiveClass, _toConsumableArray(_this3.transitionProps[k2].split(" ")));
          }
        });
      }
      var classNames2 = originClassName.split(" ").filter(function(c2) {
        return enterActiveClass.indexOf(c2) !== -1;
      }).join(" ");
      return "".concat(this.$props.prefixCls, " ").concat(this.$attrs.class || "", " ").concat(this.$props.popupClassName, " ").concat(currentAlignClassName, " ").concat(classNames2);
    },
    getPopupElement: function getPopupElement() {
      var _this4 = this;
      var _a, _b;
      var savePopupRef6 = this.savePopupRef;
      var props2 = this.$props, $attrs = this.$attrs, $slots = this.$slots, getTransitionName6 = this.getTransitionName;
      var _this$$data2 = this.$data, stretchChecked = _this$$data2.stretchChecked, targetHeight = _this$$data2.targetHeight, targetWidth = _this$$data2.targetWidth;
      var _$attrs$style = $attrs.style, style3 = _$attrs$style === void 0 ? {} : _$attrs$style;
      var onEvents = splitAttrs($attrs).onEvents;
      var align = props2.align, visible9 = props2.visible, prefixCls2 = props2.prefixCls, animation2 = props2.animation, popupStyle = props2.popupStyle, getClassNameFromAlign = props2.getClassNameFromAlign, destroyPopupOnHide = props2.destroyPopupOnHide, stretch = props2.stretch;
      var className = this.getClassName(this.currentAlignClassName || getClassNameFromAlign(align));
      if (!visible9) {
        this.currentAlignClassName = null;
      }
      var sizeStyle = {};
      if (stretch) {
        if (stretch.indexOf("height") !== -1) {
          sizeStyle.height = typeof targetHeight === "number" ? "".concat(targetHeight, "px") : targetHeight;
        } else if (stretch.indexOf("minHeight") !== -1) {
          sizeStyle.minHeight = typeof targetHeight === "number" ? "".concat(targetHeight, "px") : targetHeight;
        }
        if (stretch.indexOf("width") !== -1) {
          sizeStyle.width = typeof targetWidth === "number" ? "".concat(targetWidth, "px") : targetWidth;
        } else if (stretch.indexOf("minWidth") !== -1) {
          sizeStyle.minWidth = typeof targetWidth === "number" ? "".concat(targetWidth, "px") : targetWidth;
        }
        if (!stretchChecked) {
          setTimeout(function() {
            if (_this4.alignInstance) {
              _this4.alignInstance.forceAlign();
            }
          }, 0);
        }
      }
      var popupInnerProps = _extends$1(_extends$1({
        prefixCls: prefixCls2,
        visible: visible9,
        // hiddenClassName,
        class: className
      }, onEvents), {
        ref: savePopupRef6,
        style: _extends$1(_extends$1(_extends$1(_extends$1({}, sizeStyle), popupStyle), style3), this.getZIndexStyle())
      });
      var transitionName2 = getTransitionName6();
      var useTransition = !!transitionName2;
      var transitionProps = getTransitionProps(transitionName2);
      if (_typeof$3(animation2) === "object") {
        useTransition = true;
        transitionProps = _extends$1(_extends$1({}, transitionProps), animation2);
      }
      if (!useTransition) {
        transitionProps = {};
      }
      this.transitionProps = transitionProps;
      if (destroyPopupOnHide) {
        return _createVNode$4U(Transition, transitionProps, {
          default: function _default8() {
            return [visible9 ? _createVNode$4U(Align, {
              "target": _this4.getAlignTarget(),
              "key": "popup",
              "ref": _this4.saveAlignRef,
              "monitorWindowResize": true,
              "align": align,
              "onAlign": _this4.onAlign
            }, {
              default: function _default9() {
                return [_createVNode$4U(PopupInner, popupInnerProps, {
                  default: function _default10() {
                    return [(_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots)];
                  }
                })];
              }
            }) : null];
          }
        });
      }
      return _createVNode$4U(Transition, transitionProps, {
        default: function _default8() {
          return [_withDirectives$6(_createVNode$4U(Align, {
            "target": _this4.getAlignTarget(),
            "key": "popup",
            "ref": _this4.saveAlignRef,
            "monitorWindowResize": true,
            "disabled": !visible9,
            "align": align,
            "onAlign": _this4.onAlign
          }, {
            default: function _default9() {
              return [_createVNode$4U(PopupInner, popupInnerProps, {
                default: function _default10() {
                  return [(_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots)];
                }
              })];
            }
          }), [[_vShow$6, visible9]])];
        }
      });
    },
    getZIndexStyle: function getZIndexStyle() {
      var style3 = {};
      var props2 = this.$props;
      if (props2.zIndex !== void 0) {
        style3.zIndex = props2.zIndex;
      }
      return style3;
    },
    getMaskElement: function getMaskElement() {
      var props2 = this.$props;
      var maskElement = null;
      if (props2.mask) {
        var maskTransition = this.getMaskTransitionName();
        maskElement = _withDirectives$6(_createVNode$4U(LazyRenderBox$1, {
          "style": this.getZIndexStyle(),
          "key": "mask",
          "class": "".concat(props2.prefixCls, "-mask"),
          "visible": props2.visible
        }, null), [[_vShow$6, props2.visible]]);
        if (maskTransition) {
          var _maskElement = /* @__PURE__ */ function() {
            return maskElement;
          }();
          maskElement = _createVNode$4U(Transition, {
            "appear": true,
            "name": maskTransition
          }, {
            default: function _default8() {
              return [_maskElement];
            }
          });
        }
      }
      return maskElement;
    }
  },
  render: function render8() {
    var getMaskElement3 = this.getMaskElement, getPopupElement4 = this.getPopupElement;
    return _createVNode$4U("div", null, [getMaskElement3(), getPopupElement4()]);
  }
};
const { createVNode: _createVNode$4T } = await importShared("vue");
const { defineComponent: defineComponent$2M, nextTick: nextTick$v, Teleport: Teleport$1 } = await importShared("vue");
const Portal$1 = defineComponent$2M({
  name: "Portal",
  props: {
    getContainer: PropTypes.func.isRequired,
    children: PropTypes.any.isRequired,
    didUpdate: PropTypes.func
  },
  data: function data2() {
    this._container = null;
    return {};
  },
  mounted: function mounted3() {
    this.createContainer();
  },
  updated: function updated2() {
    var _this = this;
    var didUpdate = this.$props.didUpdate;
    if (didUpdate) {
      nextTick$v(function() {
        didUpdate(_this.$props);
      });
    }
  },
  beforeUnmount: function beforeUnmount2() {
    this.removeContainer();
  },
  methods: {
    createContainer: function createContainer() {
      this._container = this.$props.getContainer();
      this.$forceUpdate();
    },
    removeContainer: function removeContainer() {
      if (this._container && this._container.parentNode) {
        this._container.parentNode.removeChild(this._container);
      }
    }
  },
  render: function render9() {
    var _this2 = this;
    if (this._container) {
      return _createVNode$4T(Teleport$1, {
        "to": this._container
      }, {
        default: function _default8() {
          return [_this2.$props.children];
        }
      });
    }
    return null;
  }
});
const { createVNode: _createVNode$4S } = await importShared("vue");
const { defineComponent: defineComponent$2L, inject: inject$1g, provide: provide$p } = await importShared("vue");
function returnEmptyString() {
  return "";
}
function returnDocument() {
  return window.document;
}
var ALL_HANDLERS = ["onClick", "onMousedown", "onTouchstart", "onMouseenter", "onMouseleave", "onFocus", "onBlur", "onContextmenu"];
const Trigger = defineComponent$2L({
  name: "Trigger",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    action: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).def([]),
    showAction: PropTypes.any.def([]),
    hideAction: PropTypes.any.def([]),
    getPopupClassNameFromAlign: PropTypes.any.def(returnEmptyString),
    onPopupVisibleChange: PropTypes.func.def(noop$H),
    afterPopupVisibleChange: PropTypes.func.def(noop$H),
    popup: PropTypes.any,
    popupStyle: PropTypes.object.def(function() {
      return {};
    }),
    prefixCls: PropTypes.string.def("rc-trigger-popup"),
    popupClassName: PropTypes.string.def(""),
    popupPlacement: PropTypes.string,
    builtinPlacements: PropTypes.object,
    popupTransitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    popupAnimation: PropTypes.any,
    mouseEnterDelay: PropTypes.number.def(0),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    zIndex: PropTypes.number,
    focusDelay: PropTypes.number.def(0),
    blurDelay: PropTypes.number.def(0.15),
    getPopupContainer: PropTypes.func,
    getDocument: PropTypes.func.def(returnDocument),
    forceRender: PropTypes.looseBool,
    destroyPopupOnHide: PropTypes.looseBool.def(false),
    mask: PropTypes.looseBool.def(false),
    maskClosable: PropTypes.looseBool.def(true),
    // onPopupAlign: PropTypes.func.def(noop),
    popupAlign: PropTypes.object.def(function() {
      return {};
    }),
    popupVisible: PropTypes.looseBool,
    defaultPopupVisible: PropTypes.looseBool.def(false),
    maskTransitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    maskAnimation: PropTypes.string,
    stretch: PropTypes.string,
    alignPoint: PropTypes.looseBool
    // Maybe we can support user pass position in the future
  },
  setup: function setup20() {
    return {
      vcTriggerContext: inject$1g("vcTriggerContext", {}),
      savePopupRef: inject$1g("savePopupRef", noop$H),
      dialogContext: inject$1g("dialogContext", null)
    };
  },
  data: function data3() {
    var _this = this;
    var props2 = this.$props;
    var popupVisible4;
    if (hasProp(this, "popupVisible")) {
      popupVisible4 = !!props2.popupVisible;
    } else {
      popupVisible4 = !!props2.defaultPopupVisible;
    }
    ALL_HANDLERS.forEach(function(h2) {
      _this["fire".concat(h2)] = function(e2) {
        _this.fireEvents(h2, e2);
      };
    });
    this._component = null;
    this.focusTime = null;
    this.clickOutsideHandler = null;
    this.contextmenuOutsideHandler1 = null;
    this.contextmenuOutsideHandler2 = null;
    this.touchOutsideHandler = null;
    return {
      prevPopupVisible: popupVisible4,
      sPopupVisible: popupVisible4,
      point: null
    };
  },
  watch: {
    popupVisible: function popupVisible(val) {
      if (val !== void 0) {
        this.prevPopupVisible = this.sPopupVisible;
        this.sPopupVisible = val;
      }
    }
  },
  created: function created2() {
    provide$p("vcTriggerContext", this);
  },
  deactivated: function deactivated() {
    this.setPopupVisible(false);
  },
  mounted: function mounted4() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.updatedCal();
    });
  },
  updated: function updated3() {
    var _this3 = this;
    this.$nextTick(function() {
      _this3.updatedCal();
    });
  },
  beforeUnmount: function beforeUnmount3() {
    this.clearDelayTimer();
    this.clearOutsideHandler();
    clearTimeout(this.mouseDownTimeout);
  },
  methods: {
    updatedCal: function updatedCal() {
      var props2 = this.$props;
      var state = this.$data;
      if (state.sPopupVisible) {
        var currentDocument;
        if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextmenuToShow())) {
          currentDocument = props2.getDocument();
          this.clickOutsideHandler = addEventListenerWrap(currentDocument, "mousedown", this.onDocumentClick);
        }
        if (!this.touchOutsideHandler) {
          currentDocument = currentDocument || props2.getDocument();
          this.touchOutsideHandler = addEventListenerWrap(currentDocument, "touchstart", this.onDocumentClick, supportsPassive ? {
            passive: false
          } : false);
        }
        if (!this.contextmenuOutsideHandler1 && this.isContextmenuToShow()) {
          currentDocument = currentDocument || props2.getDocument();
          this.contextmenuOutsideHandler1 = addEventListenerWrap(currentDocument, "scroll", this.onContextmenuClose);
        }
        if (!this.contextmenuOutsideHandler2 && this.isContextmenuToShow()) {
          this.contextmenuOutsideHandler2 = addEventListenerWrap(window, "blur", this.onContextmenuClose);
        }
      } else {
        this.clearOutsideHandler();
      }
    },
    onMouseenter: function onMouseenter(e2) {
      var mouseEnterDelay = this.$props.mouseEnterDelay;
      this.fireEvents("onMouseenter", e2);
      this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e2);
    },
    onMouseMove: function onMouseMove2(e2) {
      this.fireEvents("onMousemove", e2);
      this.setPoint(e2);
    },
    onMouseleave: function onMouseleave(e2) {
      this.fireEvents("onMouseleave", e2);
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onPopupMouseenter: function onPopupMouseenter() {
      this.clearDelayTimer();
    },
    onPopupMouseleave: function onPopupMouseleave(e2) {
      if (e2 && e2.relatedTarget && !e2.relatedTarget.setTimeout && this._component && this._component.getPopupDomNode && contains(this._component.getPopupDomNode(), e2.relatedTarget)) {
        return;
      }
      this.delaySetPopupVisible(false, this.$props.mouseLeaveDelay);
    },
    onFocus: function onFocus(e2) {
      this.fireEvents("onFocus", e2);
      this.clearDelayTimer();
      if (this.isFocusToShow()) {
        this.focusTime = Date.now();
        this.delaySetPopupVisible(true, this.$props.focusDelay);
      }
    },
    onMousedown: function onMousedown(e2) {
      this.fireEvents("onMousedown", e2);
      this.preClickTime = Date.now();
    },
    onTouchstart: function onTouchstart(e2) {
      this.fireEvents("onTouchstart", e2);
      this.preTouchTime = Date.now();
    },
    onBlur: function onBlur(e2) {
      if (!contains(e2.target, e2.relatedTarget || document.activeElement)) {
        this.fireEvents("onBlur", e2);
        this.clearDelayTimer();
        if (this.isBlurToHide()) {
          this.delaySetPopupVisible(false, this.$props.blurDelay);
        }
      }
    },
    onContextmenu: function onContextmenu(e2) {
      e2.preventDefault();
      this.fireEvents("onContextmenu", e2);
      this.setPopupVisible(true, e2);
    },
    onContextmenuClose: function onContextmenuClose() {
      if (this.isContextmenuToShow()) {
        this.close();
      }
    },
    onClick: function onClick(event) {
      this.fireEvents("onClick", event);
      if (this.focusTime) {
        var preTime;
        if (this.preClickTime && this.preTouchTime) {
          preTime = Math.min(this.preClickTime, this.preTouchTime);
        } else if (this.preClickTime) {
          preTime = this.preClickTime;
        } else if (this.preTouchTime) {
          preTime = this.preTouchTime;
        }
        if (Math.abs(preTime - this.focusTime) < 20) {
          return;
        }
        this.focusTime = 0;
      }
      this.preClickTime = 0;
      this.preTouchTime = 0;
      if (this.isClickToShow() && (this.isClickToHide() || this.isBlurToHide()) && event && event.preventDefault) {
        event.preventDefault();
      }
      if (event && event.domEvent) {
        event.domEvent.preventDefault();
      }
      var nextVisible = !this.$data.sPopupVisible;
      if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
        this.setPopupVisible(!this.$data.sPopupVisible, event);
      }
    },
    onPopupMouseDown: function onPopupMouseDown() {
      var _this4 = this;
      var _this$vcTriggerContex = this.vcTriggerContext, vcTriggerContext = _this$vcTriggerContex === void 0 ? {} : _this$vcTriggerContex;
      this.hasPopupMouseDown = true;
      clearTimeout(this.mouseDownTimeout);
      this.mouseDownTimeout = setTimeout(function() {
        _this4.hasPopupMouseDown = false;
      }, 0);
      if (vcTriggerContext.onPopupMouseDown) {
        vcTriggerContext.onPopupMouseDown.apply(vcTriggerContext, arguments);
      }
    },
    onDocumentClick: function onDocumentClick(event) {
      if (this.$props.mask && !this.$props.maskClosable) {
        return;
      }
      var target = event.target;
      var root2 = findDOMNode(this);
      if (!contains(root2, target) && !this.hasPopupMouseDown) {
        this.close();
      }
    },
    getPopupDomNode: function getPopupDomNode2() {
      if (this._component && this._component.getPopupDomNode) {
        return this._component.getPopupDomNode();
      }
      return null;
    },
    getRootDomNode: function getRootDomNode() {
      return findDOMNode(this);
    },
    handleGetPopupClassFromAlign: function handleGetPopupClassFromAlign(align) {
      var className = [];
      var props2 = this.$props;
      var popupPlacement = props2.popupPlacement, builtinPlacements = props2.builtinPlacements, prefixCls2 = props2.prefixCls, alignPoint2 = props2.alignPoint, getPopupClassNameFromAlign = props2.getPopupClassNameFromAlign;
      if (popupPlacement && builtinPlacements) {
        className.push(getAlignPopupClassName(builtinPlacements, prefixCls2, align, alignPoint2));
      }
      if (getPopupClassNameFromAlign) {
        className.push(getPopupClassNameFromAlign(align));
      }
      return className.join(" ");
    },
    getPopupAlign: function getPopupAlign() {
      var props2 = this.$props;
      var popupPlacement = props2.popupPlacement, popupAlign = props2.popupAlign, builtinPlacements = props2.builtinPlacements;
      if (popupPlacement && builtinPlacements) {
        return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);
      }
      return popupAlign;
    },
    savePopup: function savePopup(node) {
      this._component = node;
      this.savePopupRef(node);
    },
    getComponent: function getComponent$1() {
      var self2 = this;
      var mouseProps = {};
      if (this.isMouseEnterToShow()) {
        mouseProps.onMouseenter = self2.onPopupMouseenter;
      }
      if (this.isMouseLeaveToHide()) {
        mouseProps.onMouseleave = self2.onPopupMouseleave;
      }
      mouseProps.onMousedown = this.onPopupMouseDown;
      mouseProps[supportsPassive ? "onTouchstartPassive" : "onTouchstart"] = this.onPopupMouseDown;
      var handleGetPopupClassFromAlign2 = self2.handleGetPopupClassFromAlign, getRootDomNode2 = self2.getRootDomNode, getContainer5 = self2.getContainer, $attrs = self2.$attrs;
      var _self$$props = self2.$props, prefixCls2 = _self$$props.prefixCls, destroyPopupOnHide = _self$$props.destroyPopupOnHide, popupClassName = _self$$props.popupClassName, action = _self$$props.action, popupAnimation = _self$$props.popupAnimation, popupTransitionName = _self$$props.popupTransitionName, popupStyle = _self$$props.popupStyle, mask = _self$$props.mask, maskAnimation = _self$$props.maskAnimation, maskTransitionName = _self$$props.maskTransitionName, zIndex = _self$$props.zIndex, stretch = _self$$props.stretch, alignPoint2 = _self$$props.alignPoint;
      var _this$$data = this.$data, sPopupVisible = _this$$data.sPopupVisible, point = _this$$data.point;
      var align = this.getPopupAlign();
      var popupProps = _extends$1(_extends$1({
        prefixCls: prefixCls2,
        destroyPopupOnHide,
        visible: sPopupVisible,
        point: alignPoint2 ? point : null,
        action,
        align,
        animation: popupAnimation,
        getClassNameFromAlign: handleGetPopupClassFromAlign2,
        stretch,
        getRootDomNode: getRootDomNode2,
        mask,
        zIndex,
        transitionName: popupTransitionName,
        maskAnimation,
        maskTransitionName,
        getContainer: getContainer5,
        popupClassName,
        popupStyle,
        onAlign: $attrs.onPopupAlign || noop$H
      }, mouseProps), {
        ref: this.savePopup
      });
      return _createVNode$4S(Popup, popupProps, {
        default: function _default8() {
          return [getComponent(self2, "popup")];
        }
      });
    },
    getContainer: function getContainer() {
      var props2 = this.$props, dialogContext = this.dialogContext;
      var popupContainer = document.createElement("div");
      popupContainer.style.position = "absolute";
      popupContainer.style.top = "0";
      popupContainer.style.left = "0";
      popupContainer.style.width = "100%";
      var mountNode = props2.getPopupContainer ? props2.getPopupContainer(findDOMNode(this), dialogContext) : props2.getDocument().body;
      mountNode.appendChild(popupContainer);
      this.popupContainer = popupContainer;
      return popupContainer;
    },
    setPopupVisible: function setPopupVisible(sPopupVisible, event) {
      var alignPoint2 = this.alignPoint, prevPopupVisible = this.sPopupVisible, onPopupVisibleChange = this.onPopupVisibleChange;
      this.clearDelayTimer();
      if (prevPopupVisible !== sPopupVisible) {
        if (!hasProp(this, "popupVisible")) {
          this.setState({
            sPopupVisible,
            prevPopupVisible
          });
        }
        onPopupVisibleChange && onPopupVisibleChange(sPopupVisible);
      }
      if (alignPoint2 && event) {
        this.setPoint(event);
      }
    },
    setPoint: function setPoint(point) {
      var alignPoint2 = this.$props.alignPoint;
      if (!alignPoint2 || !point) return;
      this.setState({
        point: {
          pageX: point.pageX,
          pageY: point.pageY
        }
      });
    },
    handlePortalUpdate: function handlePortalUpdate() {
      if (this.prevPopupVisible !== this.sPopupVisible) {
        this.afterPopupVisibleChange(this.sPopupVisible);
      }
    },
    delaySetPopupVisible: function delaySetPopupVisible(visible9, delayS, event) {
      var _this5 = this;
      var delay = delayS * 1e3;
      this.clearDelayTimer();
      if (delay) {
        var point = event ? {
          pageX: event.pageX,
          pageY: event.pageY
        } : null;
        this.delayTimer = requestAnimationTimeout(function() {
          _this5.setPopupVisible(visible9, point);
          _this5.clearDelayTimer();
        }, delay);
      } else {
        this.setPopupVisible(visible9, event);
      }
    },
    clearDelayTimer: function clearDelayTimer() {
      if (this.delayTimer) {
        cancelAnimationTimeout(this.delayTimer);
        this.delayTimer = null;
      }
    },
    clearOutsideHandler: function clearOutsideHandler() {
      if (this.clickOutsideHandler) {
        this.clickOutsideHandler.remove();
        this.clickOutsideHandler = null;
      }
      if (this.contextmenuOutsideHandler1) {
        this.contextmenuOutsideHandler1.remove();
        this.contextmenuOutsideHandler1 = null;
      }
      if (this.contextmenuOutsideHandler2) {
        this.contextmenuOutsideHandler2.remove();
        this.contextmenuOutsideHandler2 = null;
      }
      if (this.touchOutsideHandler) {
        this.touchOutsideHandler.remove();
        this.touchOutsideHandler = null;
      }
    },
    createTwoChains: function createTwoChains(event) {
      var fn = function fn2() {
      };
      var events = getEvents(this);
      if (this.childOriginEvents[event] && events[event]) {
        return this["fire".concat(event)];
      }
      fn = this.childOriginEvents[event] || events[event] || fn;
      return fn;
    },
    isClickToShow: function isClickToShow() {
      var _this$$props = this.$props, action = _this$$props.action, showAction = _this$$props.showAction;
      return action.indexOf("click") !== -1 || showAction.indexOf("click") !== -1;
    },
    isContextmenuToShow: function isContextmenuToShow() {
      var _this$$props2 = this.$props, action = _this$$props2.action, showAction = _this$$props2.showAction;
      return action.indexOf("contextmenu") !== -1 || showAction.indexOf("contextmenu") !== -1;
    },
    isClickToHide: function isClickToHide() {
      var _this$$props3 = this.$props, action = _this$$props3.action, hideAction = _this$$props3.hideAction;
      return action.indexOf("click") !== -1 || hideAction.indexOf("click") !== -1;
    },
    isMouseEnterToShow: function isMouseEnterToShow() {
      var _this$$props4 = this.$props, action = _this$$props4.action, showAction = _this$$props4.showAction;
      return action.indexOf("hover") !== -1 || showAction.indexOf("mouseenter") !== -1;
    },
    isMouseLeaveToHide: function isMouseLeaveToHide() {
      var _this$$props5 = this.$props, action = _this$$props5.action, hideAction = _this$$props5.hideAction;
      return action.indexOf("hover") !== -1 || hideAction.indexOf("mouseleave") !== -1;
    },
    isFocusToShow: function isFocusToShow() {
      var _this$$props6 = this.$props, action = _this$$props6.action, showAction = _this$$props6.showAction;
      return action.indexOf("focus") !== -1 || showAction.indexOf("focus") !== -1;
    },
    isBlurToHide: function isBlurToHide() {
      var _this$$props7 = this.$props, action = _this$$props7.action, hideAction = _this$$props7.hideAction;
      return action.indexOf("focus") !== -1 || hideAction.indexOf("blur") !== -1;
    },
    forcePopupAlign: function forcePopupAlign() {
      if (this.$data.sPopupVisible && this._component && this._component.alignInstance) {
        this._component.alignInstance.forceAlign();
      }
    },
    fireEvents: function fireEvents(type3, e2) {
      if (this.childOriginEvents[type3]) {
        this.childOriginEvents[type3](e2);
      }
      var event = this.$props[type3] || this.$attrs[type3];
      if (event) {
        event(e2);
      }
    },
    close: function close() {
      this.setPopupVisible(false);
    }
  },
  render: function render10() {
    var _this6 = this;
    var sPopupVisible = this.sPopupVisible, $attrs = this.$attrs;
    var children = filterEmpty(getSlot(this));
    var _this$$props8 = this.$props, forceRender = _this$$props8.forceRender, alignPoint2 = _this$$props8.alignPoint;
    if (children.length > 1) {
      warning$5(false, "Trigger children just support only one default", true);
    }
    var child = children[0];
    this.childOriginEvents = getEvents(child);
    var newChildProps = {
      key: "trigger"
    };
    if (this.isContextmenuToShow()) {
      newChildProps.onContextmenu = this.onContextmenu;
    } else {
      newChildProps.onContextmenu = this.createTwoChains("onContextmenu");
    }
    if (this.isClickToHide() || this.isClickToShow()) {
      newChildProps.onClick = this.onClick;
      newChildProps.onMousedown = this.onMousedown;
      newChildProps[supportsPassive ? "onTouchstartPassive" : "onTouchstart"] = this.onTouchstart;
    } else {
      newChildProps.onClick = this.createTwoChains("onClick");
      newChildProps.onMousedown = this.createTwoChains("onMousedown");
      newChildProps[supportsPassive ? "onTouchstartPassive" : "onTouchstart"] = this.createTwoChains("onTouchstart");
    }
    if (this.isMouseEnterToShow()) {
      newChildProps.onMouseenter = this.onMouseenter;
      if (alignPoint2) {
        newChildProps.onMousemove = this.onMouseMove;
      }
    } else {
      newChildProps.onMouseenter = this.createTwoChains("onMouseenter");
    }
    if (this.isMouseLeaveToHide()) {
      newChildProps.onMouseleave = this.onMouseleave;
    } else {
      newChildProps.onMouseleave = this.createTwoChains("onMouseleave");
    }
    if (this.isFocusToShow() || this.isBlurToHide()) {
      newChildProps.onFocus = this.onFocus;
      newChildProps.onBlur = this.onBlur;
    } else {
      newChildProps.onFocus = this.createTwoChains("onFocus");
      newChildProps.onBlur = function(e2) {
        if (e2 && (!e2.relatedTarget || !contains(e2.target, e2.relatedTarget))) {
          _this6.createTwoChains("onBlur")(e2);
        }
      };
    }
    var childrenClassName = classNames(child && child.props && child.props.class, $attrs.class);
    if (childrenClassName) {
      newChildProps.class = childrenClassName;
    }
    var trigger2 = cloneElement(child, newChildProps);
    var portal;
    if (sPopupVisible || this._component || forceRender) {
      portal = _createVNode$4S(Portal$1, {
        "key": "portal",
        "children": this.getComponent(),
        "getContainer": this.getContainer,
        "didUpdate": this.handlePortalUpdate
      }, null);
    }
    return [portal, trigger2];
  }
});
const { createVNode: _createVNode$4R } = await importShared("vue");
var __rest$Q = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2K } = await importShared("vue");
var getBuiltInPlacements = function getBuiltInPlacements2(dropdownMatchSelectWidth) {
  var adjustX = typeof dropdownMatchSelectWidth !== "number" ? 0 : 1;
  return {
    bottomLeft: {
      points: ["tl", "bl"],
      offset: [0, 4],
      overflow: {
        adjustX,
        adjustY: 1
      }
    },
    bottomRight: {
      points: ["tr", "br"],
      offset: [0, 4],
      overflow: {
        adjustX,
        adjustY: 1
      }
    },
    topLeft: {
      points: ["bl", "tl"],
      offset: [0, -4],
      overflow: {
        adjustX,
        adjustY: 1
      }
    },
    topRight: {
      points: ["br", "tr"],
      offset: [0, -4],
      overflow: {
        adjustX,
        adjustY: 1
      }
    }
  };
};
var SelectTrigger$1 = defineComponent$2K({
  name: "SelectTrigger",
  inheritAttrs: false,
  created: function created3() {
    this.popupRef = createRef$1();
  },
  methods: {
    getPopupElement: function getPopupElement2() {
      return this.popupRef.current;
    }
  },
  render: function render11() {
    var _this = this;
    var _a = _extends$1(_extends$1({}, this.$props), this.$attrs), _a$empty = _a.empty, empty2 = _a$empty === void 0 ? false : _a$empty, props2 = __rest$Q(_a, ["empty"]);
    var visible9 = props2.visible, dropdownAlign = props2.dropdownAlign, prefixCls2 = props2.prefixCls, popupElement = props2.popupElement, dropdownClassName = props2.dropdownClassName, dropdownStyle = props2.dropdownStyle, dropdownMatchSelectWidth = props2.dropdownMatchSelectWidth, containerWidth = props2.containerWidth, dropdownRender = props2.dropdownRender, animation2 = props2.animation, transitionName2 = props2.transitionName, direction = props2.direction, getPopupContainer = props2.getPopupContainer;
    var dropdownPrefixCls = "".concat(prefixCls2, "-dropdown");
    var popupNode = popupElement;
    if (dropdownRender) {
      popupNode = dropdownRender({
        menuNode: popupElement,
        props: props2
      });
    }
    var builtInPlacements = getBuiltInPlacements(dropdownMatchSelectWidth);
    var mergedTransitionName = animation2 ? "".concat(dropdownPrefixCls, "-").concat(animation2) : transitionName2;
    var popupStyle = _extends$1({
      minWidth: "".concat(containerWidth, "px")
    }, dropdownStyle);
    if (typeof dropdownMatchSelectWidth === "number") {
      popupStyle.width = "".concat(dropdownMatchSelectWidth, "px");
    } else if (dropdownMatchSelectWidth) {
      popupStyle.width = "".concat(containerWidth, "px");
    }
    return _createVNode$4R(Trigger, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
      "showAction": [],
      "hideAction": [],
      "popupPlacement": direction === "rtl" ? "bottomRight" : "bottomLeft",
      "builtinPlacements": builtInPlacements,
      "prefixCls": dropdownPrefixCls,
      "popupTransitionName": mergedTransitionName,
      "popup": _createVNode$4R("div", {
        "ref": this.popupRef
      }, [popupNode]),
      "popupAlign": dropdownAlign,
      "popupVisible": visible9,
      "getPopupContainer": getPopupContainer,
      "popupClassName": classNames(dropdownClassName, _defineProperty$U({}, "".concat(dropdownPrefixCls, "-empty"), empty2)),
      "popupStyle": popupStyle
    }), {
      default: function _default8() {
        return [getSlot(_this)[0]];
      }
    });
  }
});
SelectTrigger$1.props = {
  dropdownAlign: PropTypes.object,
  visible: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  dropdownClassName: PropTypes.string,
  dropdownStyle: PropTypes.object,
  empty: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  popupClassName: PropTypes.string,
  animation: PropTypes.string,
  transitionName: PropTypes.string,
  getPopupContainer: PropTypes.func,
  dropdownRender: PropTypes.func,
  containerWidth: PropTypes.number,
  dropdownMatchSelectWidth: PropTypes.oneOfType([Number, Boolean]).def(true),
  popupElement: PropTypes.any,
  direction: PropTypes.string,
  getTriggerDOMNode: PropTypes.func
};
var INTERNAL_PROPS_MARK = "RC_SELECT_INTERNAL_PROPS_MARK";
const { onMounted: onMounted$n, ref: ref$K } = await importShared("vue");
function useDelayReset() {
  var timeout = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;
  var bool = ref$K(false);
  var delay;
  var cancelLatest = function cancelLatest2() {
    window.clearTimeout(delay);
  };
  onMounted$n(function() {
    cancelLatest();
  });
  var delaySetBool = function delaySetBool2(value26, callback) {
    cancelLatest();
    delay = window.setTimeout(function() {
      bool.value = value26;
      if (callback) {
        callback();
      }
    }, timeout);
  };
  return [bool, delaySetBool, cancelLatest];
}
const { onBeforeUnmount: onBeforeUnmount$e, onMounted: onMounted$m } = await importShared("vue");
function useSelectTriggerControl(refs, open6, triggerOpen) {
  function onGlobalMouseDown(event) {
    var _a, _b, _c;
    var target = event.target;
    if (target.shadowRoot && event.composed) {
      target = event.composedPath()[0] || target;
    }
    var elements = [(_a = refs[0]) === null || _a === void 0 ? void 0 : _a.value, (_c = (_b = refs[1]) === null || _b === void 0 ? void 0 : _b.value) === null || _c === void 0 ? void 0 : _c.getPopupElement()];
    if (open6.value && elements.every(function(element) {
      return element && !element.contains(target) && element !== target;
    })) {
      triggerOpen(false);
    }
  }
  onMounted$m(function() {
    window.addEventListener("mousedown", onGlobalMouseDown);
  });
  onBeforeUnmount$e(function() {
    window.removeEventListener("mousedown", onGlobalMouseDown);
  });
}
const { computed: computed$T } = await importShared("vue");
function useCacheDisplayValue(values) {
  var prevValues = _toConsumableArray(values.value);
  var mergedValues = computed$T(function() {
    var valueLabels = /* @__PURE__ */ new Map();
    prevValues.forEach(function(_ref) {
      var value26 = _ref.value, label = _ref.label;
      if (value26 !== label) {
        valueLabels.set(value26, label);
      }
    });
    var resultValues = values.value.map(function(item) {
      var cacheLabel = valueLabels.get(item.value);
      if (item.isCacheable && cacheLabel) {
        return _extends$1(_extends$1({}, item), {
          label: cacheLabel
        });
      }
      return item;
    });
    prevValues = resultValues;
    return resultValues;
  });
  return mergedValues;
}
const { computed: computed$S } = await importShared("vue");
function useCacheOptions(options2) {
  var optionMap = computed$S(function() {
    var map2 = /* @__PURE__ */ new Map();
    options2.value.forEach(function(item) {
      var value26 = item.data.value;
      map2.set(value26, item);
    });
    return map2;
  });
  var getValueOption = function getValueOption2(vals) {
    return vals.map(function(value26) {
      return optionMap.value.get(value26);
    }).filter(Boolean);
  };
  return getValueOption;
}
var initDefaultProps2 = function initDefaultProps3(types2, defaultProps2) {
  var propTypes2 = _extends$1({}, types2);
  Object.keys(defaultProps2).forEach(function(k2) {
    var prop = propTypes2[k2];
    if (prop) {
      prop.default = defaultProps2[k2];
    } else {
      throw new Error("not have ".concat(k2, " prop"));
    }
  });
  return propTypes2;
};
const isMobile$1 = function() {
  if (typeof navigator === "undefined" || typeof window === "undefined") {
    return false;
  }
  var agent = navigator.userAgent || navigator.vendor || window.opera;
  if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(agent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(agent === null || agent === void 0 ? void 0 : agent.substr(0, 4))) {
    return true;
  }
  return false;
};
const { createTextVNode: _createTextVNode$9, createVNode: _createVNode$4Q, resolveDirective: _resolveDirective$l } = await importShared("vue");
var __rest$P = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$R, defineComponent: defineComponent$2J, onBeforeUnmount: onBeforeUnmount$d, onMounted: onMounted$l, provide: provide$o, ref: ref$J, watch: watch$q, watchEffect: watchEffect$7 } = await importShared("vue");
var DEFAULT_OMIT_PROPS = ["children", "removeIcon", "placeholder", "autofocus", "maxTagCount", "maxTagTextLength", "maxTagPlaceholder", "choiceTransitionName", "onInputKeyDown", "tabindex"];
var BaseProps = function BaseProps2() {
  return {
    prefixCls: PropTypes.string,
    id: PropTypes.string,
    class: PropTypes.string,
    style: PropTypes.any,
    // Options
    options: PropTypes.array,
    mode: PropTypes.string,
    // Value
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    labelInValue: PropTypes.looseBool,
    // Search
    inputValue: PropTypes.string,
    searchValue: PropTypes.string,
    optionFilterProp: PropTypes.string,
    /**
     * In Select, `false` means do nothing.
     * In TreeSelect, `false` will highlight match item.
     * It's by design.
     */
    filterOption: PropTypes.any,
    filterSort: PropTypes.func,
    showSearch: PropTypes.looseBool,
    autoClearSearchValue: PropTypes.looseBool,
    onSearch: PropTypes.func,
    onClear: PropTypes.func,
    // Icons
    allowClear: PropTypes.looseBool,
    clearIcon: PropTypes.VNodeChild,
    showArrow: PropTypes.looseBool,
    inputIcon: PropTypes.VNodeChild,
    removeIcon: PropTypes.VNodeChild,
    menuItemSelectedIcon: PropTypes.VNodeChild,
    // Dropdown
    open: PropTypes.looseBool,
    defaultOpen: PropTypes.looseBool,
    listHeight: PropTypes.number,
    listItemHeight: PropTypes.number,
    dropdownStyle: PropTypes.object,
    dropdownClassName: PropTypes.string,
    dropdownMatchSelectWidth: withUndefined(PropTypes.oneOfType([Boolean, Number])),
    virtual: PropTypes.looseBool,
    dropdownRender: PropTypes.func,
    dropdownAlign: PropTypes.any,
    animation: PropTypes.string,
    transitionName: PropTypes.string,
    getPopupContainer: PropTypes.func,
    direction: PropTypes.string,
    // Others
    disabled: PropTypes.looseBool,
    loading: PropTypes.looseBool,
    autofocus: PropTypes.looseBool,
    defaultActiveFirstOption: PropTypes.looseBool,
    notFoundContent: PropTypes.VNodeChild,
    placeholder: PropTypes.VNodeChild,
    backfill: PropTypes.looseBool,
    getInputElement: PropTypes.func,
    optionLabelProp: PropTypes.string,
    maxTagTextLength: PropTypes.number,
    maxTagCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    maxTagPlaceholder: PropTypes.any,
    tokenSeparators: PropTypes.arrayOf(PropTypes.string),
    tagRender: PropTypes.func,
    showAction: PropTypes.array,
    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    // Events
    onKeyup: PropTypes.func,
    onKeydown: PropTypes.func,
    onPopupScroll: PropTypes.func,
    onDropdownVisibleChange: PropTypes.func,
    onSelect: PropTypes.func,
    onDeselect: PropTypes.func,
    onInputKeyDown: {
      type: Function
    },
    onClick: PropTypes.func,
    onChange: PropTypes.func,
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onMousedown: PropTypes.func,
    onMouseenter: PropTypes.func,
    onMouseleave: PropTypes.func,
    // Motion
    choiceTransitionName: PropTypes.string,
    // Internal props
    /**
     * Only used in current version for internal event process.
     * Do not use in production environment.
     */
    internalProps: PropTypes.object,
    children: PropTypes.array
  };
};
function generateSelector$1(config2) {
  var defaultPrefixCls = config2.prefixCls, OptionList2 = config2.components.optionList, convertChildrenToData2 = config2.convertChildrenToData, flattenOptions2 = config2.flattenOptions, getLabeledValue3 = config2.getLabeledValue, filterOptions2 = config2.filterOptions, isValueDisabled2 = config2.isValueDisabled, findValueOption2 = config2.findValueOption, fillOptionsWithMissingValue2 = config2.fillOptionsWithMissingValue, omitDOMProps = config2.omitDOMProps;
  var Select2 = defineComponent$2J({
    name: "Select",
    slots: ["option"],
    props: initDefaultProps2(BaseProps(), {}),
    setup: function setup161(props2) {
      var _a;
      var useInternalProps = computed$R(function() {
        return props2.internalProps && props2.internalProps.mark === INTERNAL_PROPS_MARK;
      });
      warning$5(props2.optionFilterProp !== "children", "Select", "optionFilterProp not support children, please use label instead");
      var containerRef = ref$J(null);
      var triggerRef = ref$J(null);
      var selectorRef = ref$J(null);
      var listRef = ref$J(null);
      var tokenWithEnter = computed$R(function() {
        return (props2.tokenSeparators || []).some(function(tokenSeparator) {
          return ["\n", "\r\n"].includes(tokenSeparator);
        });
      });
      var _useDelayReset = useDelayReset(), _useDelayReset2 = _slicedToArray$2(_useDelayReset, 3), mockFocused = _useDelayReset2[0], setMockFocused = _useDelayReset2[1], cancelSetMockFocused = _useDelayReset2[2];
      var mergedId = computed$R(function() {
        return props2.id || "rc_select_".concat(getUUID());
      });
      var mergedOptionLabelProp = computed$R(function() {
        var mergedOptionLabelProp2 = props2.optionLabelProp;
        if (mergedOptionLabelProp2 === void 0) {
          mergedOptionLabelProp2 = props2.options ? "label" : "children";
        }
        return mergedOptionLabelProp2;
      });
      var mergedLabelInValue = computed$R(function() {
        return props2.mode === "combobox" ? false : props2.labelInValue;
      });
      var isMultiple2 = computed$R(function() {
        return props2.mode === "tags" || props2.mode === "multiple";
      });
      var mergedShowSearch = computed$R(function() {
        return props2.showSearch !== void 0 ? props2.showSearch : isMultiple2.value || props2.mode === "combobox";
      });
      var mobile = ref$J(false);
      onMounted$l(function() {
        mobile.value = isMobile$1();
      });
      var selectorDomRef = createRef$1();
      var innerSearchValue = ref$J("");
      var setInnerSearchValue = function setInnerSearchValue2(val) {
        innerSearchValue.value = val;
      };
      var mergedValue = ref$J(props2.value !== void 0 ? props2.value : props2.defaultValue);
      watch$q(function() {
        return props2.value;
      }, function() {
        mergedValue.value = props2.value;
        innerSearchValue.value = "";
      });
      var mergedRawValueArr = computed$R(function() {
        return toInnerValue(mergedValue.value, {
          labelInValue: mergedLabelInValue.value,
          combobox: props2.mode === "combobox"
        });
      });
      var mergedRawValue = computed$R(function() {
        return mergedRawValueArr.value[0];
      });
      var mergedValueMap = computed$R(function() {
        return mergedRawValueArr.value[1];
      });
      var rawValues = computed$R(function() {
        return new Set(mergedRawValue.value);
      });
      var activeValue = ref$J(null);
      var setActiveValue = function setActiveValue2(val) {
        activeValue.value = val;
      };
      var mergedSearchValue = computed$R(function() {
        var mergedSearchValue2 = innerSearchValue.value;
        if (props2.mode === "combobox" && mergedValue.value !== void 0) {
          mergedSearchValue2 = mergedValue.value;
        } else if (props2.searchValue !== void 0) {
          mergedSearchValue2 = props2.searchValue;
        } else if (props2.inputValue) {
          mergedSearchValue2 = props2.inputValue;
        }
        return mergedSearchValue2;
      });
      var mergedOptions = computed$R(function() {
        var newOptions = props2.options;
        if (newOptions === void 0) {
          newOptions = convertChildrenToData2(props2.children);
        }
        if (props2.mode === "tags" && fillOptionsWithMissingValue2) {
          newOptions = fillOptionsWithMissingValue2(newOptions, mergedValue.value, mergedOptionLabelProp.value, props2.labelInValue);
        }
        return newOptions || [];
      });
      var mergedFlattenOptions = computed$R(function() {
        return flattenOptions2(mergedOptions.value, props2);
      });
      var getValueOption = useCacheOptions(mergedFlattenOptions);
      var displayOptions = computed$R(function() {
        if (!mergedSearchValue.value || !mergedShowSearch.value) {
          return _toConsumableArray(mergedOptions.value);
        }
        var _props$optionFilterPr = props2.optionFilterProp, optionFilterProp = _props$optionFilterPr === void 0 ? "value" : _props$optionFilterPr, mode4 = props2.mode, filterOption2 = props2.filterOption;
        var filteredOptions = filterOptions2(mergedSearchValue.value, mergedOptions.value, {
          optionFilterProp,
          filterOption: mode4 === "combobox" && filterOption2 === void 0 ? function() {
            return true;
          } : filterOption2
        });
        if (mode4 === "tags" && filteredOptions.every(function(opt) {
          return opt[optionFilterProp] !== mergedSearchValue.value;
        })) {
          filteredOptions.unshift({
            value: mergedSearchValue.value,
            label: mergedSearchValue.value,
            key: "__RC_SELECT_TAG_PLACEHOLDER__"
          });
        }
        if (props2.filterSort && Array.isArray(filteredOptions)) {
          return _toConsumableArray(filteredOptions).sort(props2.filterSort);
        }
        return filteredOptions;
      });
      var displayFlattenOptions = computed$R(function() {
        return flattenOptions2(displayOptions.value, props2);
      });
      onMounted$l(function() {
        watch$q(mergedSearchValue, function() {
          if (listRef.value && listRef.value.scrollTo) {
            listRef.value.scrollTo(0);
          }
        }, {
          flush: "post",
          immediate: true
        });
      });
      var displayValues = computed$R(function() {
        var tmpValues = mergedRawValue.value.map(function(val) {
          var valueOptions = getValueOption([val]);
          var displayValue = getLabeledValue3(val, {
            options: valueOptions,
            prevValueMap: mergedValueMap.value,
            labelInValue: mergedLabelInValue.value,
            optionLabelProp: mergedOptionLabelProp.value
          });
          return _extends$1(_extends$1({}, displayValue), {
            disabled: isValueDisabled2(val, valueOptions)
          });
        });
        if (!props2.mode && tmpValues.length === 1 && tmpValues[0].value === null && tmpValues[0].label === null) {
          return [];
        }
        return tmpValues;
      });
      displayValues = useCacheDisplayValue(displayValues);
      var triggerSelect2 = function triggerSelect22(newValue, isSelect, source) {
        var newValueOption = getValueOption([newValue]);
        var outOption = findValueOption2([newValue], newValueOption)[0];
        var _props$internalProps = props2.internalProps, internalProps = _props$internalProps === void 0 ? {} : _props$internalProps;
        if (!internalProps.skipTriggerSelect) {
          var selectValue = mergedLabelInValue.value ? getLabeledValue3(newValue, {
            options: newValueOption,
            prevValueMap: mergedValueMap.value,
            labelInValue: mergedLabelInValue.value,
            optionLabelProp: mergedOptionLabelProp.value
          }) : newValue;
          if (isSelect && props2.onSelect) {
            props2.onSelect(selectValue, outOption);
          } else if (!isSelect && props2.onDeselect) {
            props2.onDeselect(selectValue, outOption);
          }
        }
        if (useInternalProps.value) {
          if (isSelect && internalProps.onRawSelect) {
            internalProps.onRawSelect(newValue, outOption, source);
          } else if (!isSelect && internalProps.onRawDeselect) {
            internalProps.onRawDeselect(newValue, outOption, source);
          }
        }
      };
      var prevValueOptions = ref$J([]);
      var setPrevValueOptions = function setPrevValueOptions2(val) {
        prevValueOptions.value = val;
      };
      var triggerChange5 = function triggerChange22(newRawValues) {
        if (useInternalProps.value && props2.internalProps && props2.internalProps.skipTriggerChange) {
          return;
        }
        var newRawValuesOptions = getValueOption(newRawValues);
        var outValues = toOuterValues(Array.from(newRawValues), {
          labelInValue: mergedLabelInValue.value,
          options: newRawValuesOptions,
          getLabeledValue: getLabeledValue3,
          prevValueMap: mergedValueMap.value,
          optionLabelProp: mergedOptionLabelProp.value
        });
        var outValue = isMultiple2.value ? outValues : outValues[0];
        if (props2.onChange && (mergedRawValue.value.length !== 0 || outValues.length !== 0)) {
          var outOptions = findValueOption2(newRawValues, newRawValuesOptions, {
            prevValueOptions: prevValueOptions.value
          });
          setPrevValueOptions(outOptions.map(function(option, index2) {
            var clone4 = _extends$1({}, option);
            Object.defineProperty(clone4, "_INTERNAL_OPTION_VALUE_", {
              get: function get2() {
                return newRawValues[index2];
              }
            });
            return clone4;
          }));
          props2.onChange(outValue, isMultiple2.value ? outOptions : outOptions[0]);
        }
        mergedValue.value = outValue;
      };
      var onInternalSelect = function onInternalSelect2(newValue, _ref) {
        var selected = _ref.selected, source = _ref.source;
        var _props$autoClearSearc = props2.autoClearSearchValue, autoClearSearchValue = _props$autoClearSearc === void 0 ? true : _props$autoClearSearc;
        if (props2.disabled) {
          return;
        }
        var newRawValue;
        if (isMultiple2.value) {
          newRawValue = new Set(mergedRawValue.value);
          if (selected) {
            newRawValue.add(newValue);
          } else {
            newRawValue.delete(newValue);
          }
        } else {
          newRawValue = /* @__PURE__ */ new Set();
          newRawValue.add(newValue);
        }
        if (isMultiple2.value || !isMultiple2.value && Array.from(mergedRawValue.value)[0] !== newValue) {
          triggerChange5(Array.from(newRawValue));
        }
        triggerSelect2(newValue, !isMultiple2.value || selected, source);
        if (props2.mode === "combobox") {
          setInnerSearchValue(String(newValue));
          setActiveValue("");
        } else if (!isMultiple2.value || autoClearSearchValue) {
          setInnerSearchValue("");
          setActiveValue("");
        }
      };
      var onInternalOptionSelect = function onInternalOptionSelect2(newValue, info3) {
        onInternalSelect(newValue, _extends$1(_extends$1({}, info3), {
          source: "option"
        }));
      };
      var onInternalSelectionSelect = function onInternalSelectionSelect2(newValue, info3) {
        onInternalSelect(newValue, _extends$1(_extends$1({}, info3), {
          source: "selection"
        }));
      };
      var initOpen = props2.open !== void 0 ? props2.open : props2.defaultOpen;
      var innerOpen = ref$J(initOpen);
      var mergedOpen = ref$J(initOpen);
      var setInnerOpen = function setInnerOpen2(val) {
        innerOpen.value = props2.open !== void 0 ? props2.open : val;
        mergedOpen.value = innerOpen.value;
      };
      watch$q(function() {
        return props2.open;
      }, function() {
        setInnerOpen(props2.open);
      });
      var emptyListContent = computed$R(function() {
        return !props2.notFoundContent && !displayOptions.value.length;
      });
      watchEffect$7(function() {
        mergedOpen.value = innerOpen.value;
        if (props2.disabled || emptyListContent.value && mergedOpen.value && props2.mode === "combobox") {
          mergedOpen.value = false;
        }
      });
      var triggerOpen = computed$R(function() {
        return emptyListContent.value ? false : mergedOpen.value;
      });
      var onToggleOpen = function onToggleOpen2(newOpen) {
        var nextOpen = newOpen !== void 0 ? newOpen : !mergedOpen.value;
        if (innerOpen.value !== nextOpen && !props2.disabled) {
          setInnerOpen(nextOpen);
          if (props2.onDropdownVisibleChange) {
            props2.onDropdownVisibleChange(nextOpen);
          }
        }
      };
      useSelectTriggerControl([containerRef, triggerRef], triggerOpen, onToggleOpen);
      var triggerSearch = function triggerSearch2(searchText, fromTyping, isCompositing) {
        var ret = true;
        var newSearchText = searchText;
        var preSearchValue = mergedSearchValue.value;
        setActiveValue(null);
        var patchLabels = isCompositing ? null : getSeparatedContent(searchText, props2.tokenSeparators);
        var patchRawValues = patchLabels;
        if (props2.mode === "combobox") {
          if (fromTyping) {
            triggerChange5([newSearchText]);
          }
        } else if (patchLabels) {
          newSearchText = "";
          if (props2.mode !== "tags") {
            patchRawValues = patchLabels.map(function(label) {
              var item = mergedFlattenOptions.value.find(function(_ref2) {
                var data79 = _ref2.data;
                return data79[mergedOptionLabelProp.value] === label;
              });
              return item ? item.data.value : null;
            }).filter(function(val) {
              return val !== null;
            });
          }
          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue.value), _toConsumableArray(patchRawValues))));
          triggerChange5(newRawValues);
          newRawValues.forEach(function(newRawValue) {
            triggerSelect2(newRawValue, true, "input");
          });
          onToggleOpen(false);
          ret = false;
        }
        setInnerSearchValue(newSearchText);
        if (props2.onSearch && preSearchValue !== newSearchText) {
          props2.onSearch(newSearchText);
        }
        return ret;
      };
      var onSearchSubmit = function onSearchSubmit2(searchText) {
        if (!searchText || !searchText.trim()) {
          return;
        }
        var newRawValues = Array.from(new Set([].concat(_toConsumableArray(mergedRawValue.value), [searchText])));
        triggerChange5(newRawValues);
        newRawValues.forEach(function(newRawValue) {
          triggerSelect2(newRawValue, true, "input");
        });
        setInnerSearchValue("");
      };
      watch$q(function() {
        return props2.disabled;
      }, function() {
        if (innerOpen.value && !!props2.disabled) {
          setInnerOpen(false);
        }
      }, {
        immediate: true
      });
      watch$q(mergedOpen, function() {
        if (!mergedOpen.value && !isMultiple2.value && props2.mode !== "combobox") {
          triggerSearch("", false, false);
        }
      }, {
        immediate: true
      });
      var _useLock = useLock(), _useLock2 = _slicedToArray$2(_useLock, 2), getClearLock = _useLock2[0], setClearLock = _useLock2[1];
      var onInternalKeyDown = function onInternalKeyDown2(event) {
        var clearLock = getClearLock();
        var which = event.which;
        if (which === KeyCode$1.ENTER) {
          if (props2.mode !== "combobox") {
            event.preventDefault();
          }
          if (!mergedOpen.value) {
            onToggleOpen(true);
          }
        }
        setClearLock(!!mergedSearchValue.value);
        if (which === KeyCode$1.BACKSPACE && !clearLock && isMultiple2.value && !mergedSearchValue.value && mergedRawValue.value.length) {
          var removeInfo = removeLastEnabledValue(displayValues.value, mergedRawValue.value);
          if (removeInfo.removedValue !== null) {
            triggerChange5(removeInfo.values);
            triggerSelect2(removeInfo.removedValue, false, "input");
          }
        }
        if (mergedOpen.value && listRef.value) {
          listRef.value.onKeydown(event);
        }
        if (props2.onKeydown) {
          props2.onKeydown(event);
        }
      };
      var onInternalKeyUp = function onInternalKeyUp2(event) {
        if (mergedOpen.value && listRef.value) {
          listRef.value.onKeyup(event);
        }
        if (props2.onKeyup) {
          props2.onKeyup(event);
        }
      };
      var focusRef = ref$J(false);
      var onContainerFocus = function onContainerFocus2() {
        setMockFocused(true);
        if (!props2.disabled) {
          if (props2.onFocus && !focusRef.value) {
            props2.onFocus(arguments.length <= 0 ? void 0 : arguments[0]);
          }
          if (props2.showAction && props2.showAction.includes("focus")) {
            onToggleOpen(true);
          }
        }
        focusRef.value = true;
      };
      var onContainerBlur = function onContainerBlur2() {
        setMockFocused(false, function() {
          focusRef.value = false;
          onToggleOpen(false);
        });
        if (props2.disabled) {
          return;
        }
        var searchVal = mergedSearchValue.value;
        if (searchVal) {
          if (props2.mode === "tags") {
            triggerSearch("", false, false);
            triggerChange5(Array.from(new Set([].concat(_toConsumableArray(mergedRawValue.value), [searchVal]))));
          } else if (props2.mode === "multiple") {
            setInnerSearchValue("");
          }
        }
        if (props2.onBlur) {
          props2.onBlur(arguments.length <= 0 ? void 0 : arguments[0]);
        }
      };
      provide$o("VCSelectContainerEvent", {
        focus: onContainerFocus,
        blur: onContainerBlur
      });
      var activeTimeoutIds = [];
      onMounted$l(function() {
        activeTimeoutIds.forEach(function(timeoutId) {
          return window.clearTimeout(timeoutId);
        });
        activeTimeoutIds.splice(0, activeTimeoutIds.length);
      });
      onBeforeUnmount$d(function() {
        activeTimeoutIds.forEach(function(timeoutId) {
          return window.clearTimeout(timeoutId);
        });
        activeTimeoutIds.splice(0, activeTimeoutIds.length);
      });
      var onInternalMouseDown = function onInternalMouseDown2(event) {
        var target = event.target;
        var popupElement = triggerRef.value && triggerRef.value.getPopupElement();
        if (popupElement && popupElement.contains(target)) {
          var timeoutId = window.setTimeout(function() {
            var index2 = activeTimeoutIds.indexOf(timeoutId);
            if (index2 !== -1) {
              activeTimeoutIds.splice(index2, 1);
            }
            cancelSetMockFocused();
            if (!mobile.value && !popupElement.contains(document.activeElement)) {
              selectorRef.value.focus();
            }
          });
          activeTimeoutIds.push(timeoutId);
        }
        if (props2.onMousedown) {
          props2.onMousedown(event);
        }
      };
      var accessibilityIndex = ref$J(0);
      var mergedDefaultActiveFirstOption = computed$R(function() {
        return props2.defaultActiveFirstOption !== void 0 ? props2.defaultActiveFirstOption : props2.mode !== "combobox";
      });
      var onActiveValue = function onActiveValue2(active, index2) {
        var _ref3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref3$source = _ref3.source, source = _ref3$source === void 0 ? "keyboard" : _ref3$source;
        accessibilityIndex.value = index2;
        if (props2.backfill && props2.mode === "combobox" && active !== null && source === "keyboard") {
          setActiveValue(String(active));
        }
      };
      var containerWidth = ref$J(null);
      onMounted$l(function() {
        watch$q(triggerOpen, function() {
          if (triggerOpen.value) {
            var newWidth = Math.ceil(containerRef.value.offsetWidth);
            if (containerWidth.value !== newWidth) {
              containerWidth.value = newWidth;
            }
          }
        }, {
          immediate: true
        });
      });
      var focus27 = function focus28() {
        selectorRef.value.focus();
      };
      var blur24 = function blur25() {
        selectorRef.value.blur();
      };
      return {
        focus: focus27,
        blur: blur24,
        scrollTo: (_a = listRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo,
        tokenWithEnter,
        mockFocused,
        mergedId,
        containerWidth,
        onActiveValue,
        accessibilityIndex,
        mergedDefaultActiveFirstOption,
        onInternalMouseDown,
        onContainerFocus,
        onContainerBlur,
        onInternalKeyDown,
        isMultiple: isMultiple2,
        mergedOpen,
        displayOptions,
        displayFlattenOptions,
        rawValues,
        onInternalOptionSelect,
        onToggleOpen,
        mergedSearchValue,
        useInternalProps,
        triggerChange: triggerChange5,
        triggerSearch,
        mergedRawValue,
        mergedShowSearch,
        onInternalKeyUp,
        triggerOpen,
        mergedOptions,
        onInternalSelectionSelect,
        selectorDomRef,
        displayValues,
        activeValue,
        onSearchSubmit,
        containerRef,
        listRef,
        triggerRef,
        selectorRef
      };
    },
    methods: {
      // We need force update here since popup dom is render async
      onPopupMouseEnter: function onPopupMouseEnter() {
        this.$forceUpdate();
      }
    },
    render: function render165() {
      var _classNames2, _this = this;
      var tokenWithEnter = this.tokenWithEnter, mockFocused = this.mockFocused, mergedId = this.mergedId, containerWidth = this.containerWidth, onActiveValue = this.onActiveValue, accessibilityIndex = this.accessibilityIndex, mergedDefaultActiveFirstOption = this.mergedDefaultActiveFirstOption, onInternalMouseDown = this.onInternalMouseDown, onInternalKeyDown = this.onInternalKeyDown, isMultiple2 = this.isMultiple, mergedOpen = this.mergedOpen, displayOptions = this.displayOptions, displayFlattenOptions = this.displayFlattenOptions, rawValues = this.rawValues, onInternalOptionSelect = this.onInternalOptionSelect, onToggleOpen = this.onToggleOpen, mergedSearchValue = this.mergedSearchValue, onPopupMouseEnter = this.onPopupMouseEnter, useInternalProps = this.useInternalProps, triggerChange5 = this.triggerChange, triggerSearch = this.triggerSearch, mergedRawValue = this.mergedRawValue, mergedShowSearch = this.mergedShowSearch, onInternalKeyUp = this.onInternalKeyUp, triggerOpen = this.triggerOpen, mergedOptions = this.mergedOptions, onInternalSelectionSelect = this.onInternalSelectionSelect, selectorDomRef = this.selectorDomRef, displayValues = this.displayValues, activeValue = this.activeValue, onSearchSubmit = this.onSearchSubmit, slots = this.$slots;
      var _a = this.$props, _a$prefixCls = _a.prefixCls, prefixCls2 = _a$prefixCls === void 0 ? defaultPrefixCls : _a$prefixCls, className = _a.class;
      _a.id;
      _a.open;
      _a.defaultOpen;
      var options2 = _a.options;
      _a.children;
      var mode4 = _a.mode;
      _a.value;
      _a.defaultValue;
      _a.labelInValue;
      _a.showSearch;
      _a.inputValue;
      _a.searchValue;
      _a.filterOption;
      _a.optionFilterProp;
      _a.autoClearSearchValue;
      _a.onSearch;
      var allowClear = _a.allowClear, clearIcon = _a.clearIcon, showArrow = _a.showArrow, inputIcon = _a.inputIcon, menuItemSelectedIcon = _a.menuItemSelectedIcon, disabled = _a.disabled, loading = _a.loading;
      _a.defaultActiveFirstOption;
      var _a$notFoundContent = _a.notFoundContent, notFoundContent = _a$notFoundContent === void 0 ? "Not Found" : _a$notFoundContent;
      _a.optionLabelProp;
      _a.backfill;
      var getInputElement2 = _a.getInputElement, getPopupContainer = _a.getPopupContainer, _a$listHeight = _a.listHeight, listHeight = _a$listHeight === void 0 ? 200 : _a$listHeight, _a$listItemHeight = _a.listItemHeight, listItemHeight = _a$listItemHeight === void 0 ? 20 : _a$listItemHeight, animation2 = _a.animation, transitionName2 = _a.transitionName, virtual = _a.virtual, dropdownStyle = _a.dropdownStyle, dropdownClassName = _a.dropdownClassName, dropdownMatchSelectWidth = _a.dropdownMatchSelectWidth, dropdownRender = _a.dropdownRender, dropdownAlign = _a.dropdownAlign;
      _a.showAction;
      var direction = _a.direction;
      _a.tokenSeparators;
      var tagRender = _a.tagRender, onPopupScroll = _a.onPopupScroll;
      _a.onDropdownVisibleChange;
      _a.onFocus;
      _a.onBlur;
      _a.onKeyup;
      _a.onKeydown;
      _a.onMousedown;
      _a.onChange;
      _a.onSelect;
      _a.onDeselect;
      var onClear4 = _a.onClear, _a$internalProps = _a.internalProps, internalProps = _a$internalProps === void 0 ? {} : _a$internalProps, restProps = __rest$P(_a, ["prefixCls", "class", "id", "open", "defaultOpen", "options", "children", "mode", "value", "defaultValue", "labelInValue", "showSearch", "inputValue", "searchValue", "filterOption", "optionFilterProp", "autoClearSearchValue", "onSearch", "allowClear", "clearIcon", "showArrow", "inputIcon", "menuItemSelectedIcon", "disabled", "loading", "defaultActiveFirstOption", "notFoundContent", "optionLabelProp", "backfill", "getInputElement", "getPopupContainer", "listHeight", "listItemHeight", "animation", "transitionName", "virtual", "dropdownStyle", "dropdownClassName", "dropdownMatchSelectWidth", "dropdownRender", "dropdownAlign", "showAction", "direction", "tokenSeparators", "tagRender", "onPopupScroll", "onDropdownVisibleChange", "onFocus", "onBlur", "onKeyup", "onKeydown", "onMousedown", "onChange", "onSelect", "onDeselect", "onClear", "internalProps"]);
      var customizeInputElement = mode4 === "combobox" && getInputElement2 && getInputElement2() || null;
      var domProps = omitDOMProps ? omitDOMProps(restProps) : restProps;
      DEFAULT_OMIT_PROPS.forEach(function(prop) {
        delete domProps[prop];
      });
      var popupNode = _createVNode$4Q(OptionList2, {
        "ref": "listRef",
        "prefixCls": prefixCls2,
        "id": mergedId,
        "open": mergedOpen,
        "childrenAsData": !options2,
        "options": displayOptions,
        "flattenOptions": displayFlattenOptions,
        "multiple": isMultiple2,
        "values": rawValues,
        "height": listHeight,
        "itemHeight": listItemHeight,
        "onSelect": onInternalOptionSelect,
        "onToggleOpen": onToggleOpen,
        "onActiveValue": onActiveValue,
        "defaultActiveFirstOption": mergedDefaultActiveFirstOption,
        "notFoundContent": notFoundContent,
        "onScroll": onPopupScroll,
        "searchValue": mergedSearchValue,
        "menuItemSelectedIcon": menuItemSelectedIcon,
        "virtual": virtual !== false && dropdownMatchSelectWidth !== false,
        "onMouseenter": onPopupMouseEnter
      }, {
        option: slots.option
      });
      var clearNode;
      var onClearMouseDown = function onClearMouseDown2() {
        if (useInternalProps && internalProps.onClear) {
          internalProps.onClear();
        }
        if (onClear4) {
          onClear4();
        }
        triggerChange5([]);
        triggerSearch("", false, false);
      };
      if (!disabled && allowClear && (mergedRawValue.length || mergedSearchValue)) {
        clearNode = _createVNode$4Q(TransBtn, {
          "class": "".concat(prefixCls2, "-clear"),
          "onMousedown": onClearMouseDown,
          "customizeIcon": clearIcon
        }, {
          default: function _default8() {
            return [_createTextVNode$9("×")];
          }
        });
      }
      var mergedShowArrow = showArrow !== void 0 ? showArrow : loading || !isMultiple2 && mode4 !== "combobox";
      var arrowNode;
      if (mergedShowArrow) {
        arrowNode = _createVNode$4Q(TransBtn, {
          "class": classNames("".concat(prefixCls2, "-arrow"), _defineProperty$U({}, "".concat(prefixCls2, "-arrow-loading"), loading)),
          "customizeIcon": inputIcon,
          "customizeIconProps": {
            loading,
            searchValue: mergedSearchValue,
            open: mergedOpen,
            focused: mockFocused,
            showSearch: mergedShowSearch
          }
        }, null);
      }
      var mergedClassName = classNames(prefixCls2, className, (_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-focused"), mockFocused), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-multiple"), isMultiple2), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-single"), !isMultiple2), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-allow-clear"), allowClear), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-show-arrow"), mergedShowArrow), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-loading"), loading), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-open"), mergedOpen), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-customize-input"), customizeInputElement), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-show-search"), mergedShowSearch), _classNames2));
      return _createVNode$4Q("div", _objectSpread2$2(_objectSpread2$2({
        "class": mergedClassName
      }, domProps), {}, {
        "ref": "containerRef",
        "onMousedown": onInternalMouseDown,
        "onKeydown": onInternalKeyDown,
        "onKeyup": onInternalKeyUp
      }), [mockFocused && !mergedOpen && _createVNode$4Q("span", {
        "style": {
          width: 0,
          height: 0,
          display: "flex",
          overflow: "hidden",
          opacity: 0
        },
        "aria-live": "polite"
      }, ["".concat(mergedRawValue.join(", "))]), _createVNode$4Q(SelectTrigger$1, {
        "ref": "triggerRef",
        "disabled": disabled,
        "prefixCls": prefixCls2,
        "visible": triggerOpen,
        "popupElement": popupNode,
        "containerWidth": containerWidth,
        "animation": animation2,
        "transitionName": transitionName2,
        "dropdownStyle": dropdownStyle,
        "dropdownClassName": dropdownClassName,
        "direction": direction,
        "dropdownMatchSelectWidth": dropdownMatchSelectWidth,
        "dropdownRender": dropdownRender,
        "dropdownAlign": dropdownAlign,
        "getPopupContainer": getPopupContainer,
        "empty": !mergedOptions.length,
        "getTriggerDOMNode": function getTriggerDOMNode() {
          return selectorDomRef.current;
        }
      }, {
        default: function _default8() {
          return [_createVNode$4Q(Selector$2, _objectSpread2$2(_objectSpread2$2({}, _this.$props), {}, {
            "domRef": selectorDomRef,
            "prefixCls": prefixCls2,
            "inputElement": customizeInputElement,
            "ref": "selectorRef",
            "id": mergedId,
            "showSearch": mergedShowSearch,
            "mode": mode4,
            "accessibilityIndex": accessibilityIndex,
            "multiple": isMultiple2,
            "tagRender": tagRender,
            "values": displayValues,
            "open": mergedOpen,
            "onToggleOpen": onToggleOpen,
            "searchValue": mergedSearchValue,
            "activeValue": activeValue,
            "onSearch": triggerSearch,
            "onSearchSubmit": onSearchSubmit,
            "onSelect": onInternalSelectionSelect,
            "tokenWithEnter": tokenWithEnter
          }), null)];
        }
      }), arrowNode, clearNode]);
    }
  });
  return Select2;
}
function arrayMap(array3, iteratee) {
  var index2 = -1, length = array3 == null ? 0 : array3.length, result = Array(length);
  while (++index2 < length) {
    result[index2] = iteratee(array3[index2], index2, array3);
  }
  return result;
}
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}
function eq(value26, other) {
  return value26 === other || value26 !== value26 && other !== other;
}
function assocIndexOf(array3, key2) {
  var length = array3.length;
  while (length--) {
    if (eq(array3[length][0], key2)) {
      return length;
    }
  }
  return -1;
}
var arrayProto = Array.prototype;
var splice = arrayProto.splice;
function listCacheDelete(key2) {
  var data79 = this.__data__, index2 = assocIndexOf(data79, key2);
  if (index2 < 0) {
    return false;
  }
  var lastIndex = data79.length - 1;
  if (index2 == lastIndex) {
    data79.pop();
  } else {
    splice.call(data79, index2, 1);
  }
  --this.size;
  return true;
}
function listCacheGet(key2) {
  var data79 = this.__data__, index2 = assocIndexOf(data79, key2);
  return index2 < 0 ? void 0 : data79[index2][1];
}
function listCacheHas(key2) {
  return assocIndexOf(this.__data__, key2) > -1;
}
function listCacheSet(key2, value26) {
  var data79 = this.__data__, index2 = assocIndexOf(data79, key2);
  if (index2 < 0) {
    ++this.size;
    data79.push([key2, value26]);
  } else {
    data79[index2][1] = value26;
  }
  return this;
}
function ListCache(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
ListCache.prototype.clear = listCacheClear;
ListCache.prototype["delete"] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;
function stackClear() {
  this.__data__ = new ListCache();
  this.size = 0;
}
function stackDelete(key2) {
  var data79 = this.__data__, result = data79["delete"](key2);
  this.size = data79.size;
  return result;
}
function stackGet(key2) {
  return this.__data__.get(key2);
}
function stackHas(key2) {
  return this.__data__.has(key2);
}
function isObject$1(value26) {
  var type3 = typeof value26;
  return value26 != null && (type3 == "object" || type3 == "function");
}
var asyncTag = "[object AsyncFunction]", funcTag$2 = "[object Function]", genTag$1 = "[object GeneratorFunction]", proxyTag = "[object Proxy]";
function isFunction2(value26) {
  if (!isObject$1(value26)) {
    return false;
  }
  var tag = baseGetTag(value26);
  return tag == funcTag$2 || tag == genTag$1 || tag == asyncTag || tag == proxyTag;
}
var coreJsData = root["__core-js_shared__"];
var maskSrcKey = function() {
  var uid2 = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
  return uid2 ? "Symbol(src)_1." + uid2 : "";
}();
function isMasked(func) {
  return !!maskSrcKey && maskSrcKey in func;
}
var funcProto$1 = Function.prototype;
var funcToString$1 = funcProto$1.toString;
function toSource(func) {
  if (func != null) {
    try {
      return funcToString$1.call(func);
    } catch (e2) {
    }
    try {
      return func + "";
    } catch (e2) {
    }
  }
  return "";
}
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
var reIsHostCtor = /^\[object .+?Constructor\]$/;
var funcProto = Function.prototype, objectProto$c = Object.prototype;
var funcToString = funcProto.toString;
var hasOwnProperty$a = objectProto$c.hasOwnProperty;
var reIsNative = RegExp(
  "^" + funcToString.call(hasOwnProperty$a).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function baseIsNative(value26) {
  if (!isObject$1(value26) || isMasked(value26)) {
    return false;
  }
  var pattern2 = isFunction2(value26) ? reIsNative : reIsHostCtor;
  return pattern2.test(toSource(value26));
}
function getValue$1(object3, key2) {
  return object3 == null ? void 0 : object3[key2];
}
function getNative(object3, key2) {
  var value26 = getValue$1(object3, key2);
  return baseIsNative(value26) ? value26 : void 0;
}
var Map$1 = getNative(root, "Map");
var nativeCreate = getNative(Object, "create");
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}
function hashDelete(key2) {
  var result = this.has(key2) && delete this.__data__[key2];
  this.size -= result ? 1 : 0;
  return result;
}
var HASH_UNDEFINED$2 = "__lodash_hash_undefined__";
var objectProto$b = Object.prototype;
var hasOwnProperty$9 = objectProto$b.hasOwnProperty;
function hashGet(key2) {
  var data79 = this.__data__;
  if (nativeCreate) {
    var result = data79[key2];
    return result === HASH_UNDEFINED$2 ? void 0 : result;
  }
  return hasOwnProperty$9.call(data79, key2) ? data79[key2] : void 0;
}
var objectProto$a = Object.prototype;
var hasOwnProperty$8 = objectProto$a.hasOwnProperty;
function hashHas(key2) {
  var data79 = this.__data__;
  return nativeCreate ? data79[key2] !== void 0 : hasOwnProperty$8.call(data79, key2);
}
var HASH_UNDEFINED$1 = "__lodash_hash_undefined__";
function hashSet(key2, value26) {
  var data79 = this.__data__;
  this.size += this.has(key2) ? 0 : 1;
  data79[key2] = nativeCreate && value26 === void 0 ? HASH_UNDEFINED$1 : value26;
  return this;
}
function Hash(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
Hash.prototype.clear = hashClear;
Hash.prototype["delete"] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    "hash": new Hash(),
    "map": new (Map$1 || ListCache)(),
    "string": new Hash()
  };
}
function isKeyable(value26) {
  var type3 = typeof value26;
  return type3 == "string" || type3 == "number" || type3 == "symbol" || type3 == "boolean" ? value26 !== "__proto__" : value26 === null;
}
function getMapData(map2, key2) {
  var data79 = map2.__data__;
  return isKeyable(key2) ? data79[typeof key2 == "string" ? "string" : "hash"] : data79.map;
}
function mapCacheDelete(key2) {
  var result = getMapData(this, key2)["delete"](key2);
  this.size -= result ? 1 : 0;
  return result;
}
function mapCacheGet(key2) {
  return getMapData(this, key2).get(key2);
}
function mapCacheHas(key2) {
  return getMapData(this, key2).has(key2);
}
function mapCacheSet(key2, value26) {
  var data79 = getMapData(this, key2), size = data79.size;
  data79.set(key2, value26);
  this.size += data79.size == size ? 0 : 1;
  return this;
}
function MapCache(entries) {
  var index2 = -1, length = entries == null ? 0 : entries.length;
  this.clear();
  while (++index2 < length) {
    var entry = entries[index2];
    this.set(entry[0], entry[1]);
  }
}
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype["delete"] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;
var LARGE_ARRAY_SIZE$1 = 200;
function stackSet(key2, value26) {
  var data79 = this.__data__;
  if (data79 instanceof ListCache) {
    var pairs = data79.__data__;
    if (!Map$1 || pairs.length < LARGE_ARRAY_SIZE$1 - 1) {
      pairs.push([key2, value26]);
      this.size = ++data79.size;
      return this;
    }
    data79 = this.__data__ = new MapCache(pairs);
  }
  data79.set(key2, value26);
  this.size = data79.size;
  return this;
}
function Stack(entries) {
  var data79 = this.__data__ = new ListCache(entries);
  this.size = data79.size;
}
Stack.prototype.clear = stackClear;
Stack.prototype["delete"] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;
function arrayEach(array3, iteratee) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    if (iteratee(array3[index2], index2, array3) === false) {
      break;
    }
  }
  return array3;
}
var defineProperty = function() {
  try {
    var func = getNative(Object, "defineProperty");
    func({}, "", {});
    return func;
  } catch (e2) {
  }
}();
function baseAssignValue(object3, key2, value26) {
  if (key2 == "__proto__" && defineProperty) {
    defineProperty(object3, key2, {
      "configurable": true,
      "enumerable": true,
      "value": value26,
      "writable": true
    });
  } else {
    object3[key2] = value26;
  }
}
var objectProto$9 = Object.prototype;
var hasOwnProperty$7 = objectProto$9.hasOwnProperty;
function assignValue(object3, key2, value26) {
  var objValue = object3[key2];
  if (!(hasOwnProperty$7.call(object3, key2) && eq(objValue, value26)) || value26 === void 0 && !(key2 in object3)) {
    baseAssignValue(object3, key2, value26);
  }
}
function copyObject(source, props2, object3, customizer) {
  var isNew = !object3;
  object3 || (object3 = {});
  var index2 = -1, length = props2.length;
  while (++index2 < length) {
    var key2 = props2[index2];
    var newValue = void 0;
    if (newValue === void 0) {
      newValue = source[key2];
    }
    if (isNew) {
      baseAssignValue(object3, key2, newValue);
    } else {
      assignValue(object3, key2, newValue);
    }
  }
  return object3;
}
function baseTimes(n2, iteratee) {
  var index2 = -1, result = Array(n2);
  while (++index2 < n2) {
    result[index2] = iteratee(index2);
  }
  return result;
}
var argsTag$3 = "[object Arguments]";
function baseIsArguments(value26) {
  return isObjectLike(value26) && baseGetTag(value26) == argsTag$3;
}
var objectProto$8 = Object.prototype;
var hasOwnProperty$6 = objectProto$8.hasOwnProperty;
var propertyIsEnumerable$1 = objectProto$8.propertyIsEnumerable;
var isArguments = baseIsArguments(/* @__PURE__ */ function() {
  return arguments;
}()) ? baseIsArguments : function(value26) {
  return isObjectLike(value26) && hasOwnProperty$6.call(value26, "callee") && !propertyIsEnumerable$1.call(value26, "callee");
};
var isArray = Array.isArray;
function stubFalse() {
  return false;
}
var freeExports$2 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule$2 = freeExports$2 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports$2 = freeModule$2 && freeModule$2.exports === freeExports$2;
var Buffer$1 = moduleExports$2 ? root.Buffer : void 0;
var nativeIsBuffer = Buffer$1 ? Buffer$1.isBuffer : void 0;
var isBuffer = nativeIsBuffer || stubFalse;
var MAX_SAFE_INTEGER$3 = 9007199254740991;
var reIsUint = /^(?:0|[1-9]\d*)$/;
function isIndex(value26, length) {
  var type3 = typeof value26;
  length = length == null ? MAX_SAFE_INTEGER$3 : length;
  return !!length && (type3 == "number" || type3 != "symbol" && reIsUint.test(value26)) && (value26 > -1 && value26 % 1 == 0 && value26 < length);
}
var MAX_SAFE_INTEGER$2 = 9007199254740991;
function isLength(value26) {
  return typeof value26 == "number" && value26 > -1 && value26 % 1 == 0 && value26 <= MAX_SAFE_INTEGER$2;
}
var argsTag$2 = "[object Arguments]", arrayTag$2 = "[object Array]", boolTag$3 = "[object Boolean]", dateTag$3 = "[object Date]", errorTag$2 = "[object Error]", funcTag$1 = "[object Function]", mapTag$5 = "[object Map]", numberTag$4 = "[object Number]", objectTag$3 = "[object Object]", regexpTag$3 = "[object RegExp]", setTag$5 = "[object Set]", stringTag$3 = "[object String]", weakMapTag$2 = "[object WeakMap]";
var arrayBufferTag$3 = "[object ArrayBuffer]", dataViewTag$4 = "[object DataView]", float32Tag$2 = "[object Float32Array]", float64Tag$2 = "[object Float64Array]", int8Tag$2 = "[object Int8Array]", int16Tag$2 = "[object Int16Array]", int32Tag$2 = "[object Int32Array]", uint8Tag$2 = "[object Uint8Array]", uint8ClampedTag$2 = "[object Uint8ClampedArray]", uint16Tag$2 = "[object Uint16Array]", uint32Tag$2 = "[object Uint32Array]";
var typedArrayTags = {};
typedArrayTags[float32Tag$2] = typedArrayTags[float64Tag$2] = typedArrayTags[int8Tag$2] = typedArrayTags[int16Tag$2] = typedArrayTags[int32Tag$2] = typedArrayTags[uint8Tag$2] = typedArrayTags[uint8ClampedTag$2] = typedArrayTags[uint16Tag$2] = typedArrayTags[uint32Tag$2] = true;
typedArrayTags[argsTag$2] = typedArrayTags[arrayTag$2] = typedArrayTags[arrayBufferTag$3] = typedArrayTags[boolTag$3] = typedArrayTags[dataViewTag$4] = typedArrayTags[dateTag$3] = typedArrayTags[errorTag$2] = typedArrayTags[funcTag$1] = typedArrayTags[mapTag$5] = typedArrayTags[numberTag$4] = typedArrayTags[objectTag$3] = typedArrayTags[regexpTag$3] = typedArrayTags[setTag$5] = typedArrayTags[stringTag$3] = typedArrayTags[weakMapTag$2] = false;
function baseIsTypedArray(value26) {
  return isObjectLike(value26) && isLength(value26.length) && !!typedArrayTags[baseGetTag(value26)];
}
function baseUnary(func) {
  return function(value26) {
    return func(value26);
  };
}
var freeExports$1 = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule$1 = freeExports$1 && typeof module == "object" && module && !module.nodeType && module;
var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;
var freeProcess = moduleExports$1 && freeGlobal.process;
var nodeUtil = function() {
  try {
    var types2 = freeModule$1 && freeModule$1.require && freeModule$1.require("util").types;
    if (types2) {
      return types2;
    }
    return freeProcess && freeProcess.binding && freeProcess.binding("util");
  } catch (e2) {
  }
}();
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
var objectProto$7 = Object.prototype;
var hasOwnProperty$5 = objectProto$7.hasOwnProperty;
function arrayLikeKeys(value26, inherited) {
  var isArr = isArray(value26), isArg = !isArr && isArguments(value26), isBuff = !isArr && !isArg && isBuffer(value26), isType = !isArr && !isArg && !isBuff && isTypedArray(value26), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value26.length, String) : [], length = result.length;
  for (var key2 in value26) {
    if ((inherited || hasOwnProperty$5.call(value26, key2)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
    (key2 == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    isBuff && (key2 == "offset" || key2 == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    isType && (key2 == "buffer" || key2 == "byteLength" || key2 == "byteOffset") || // Skip index properties.
    isIndex(key2, length)))) {
      result.push(key2);
    }
  }
  return result;
}
var objectProto$6 = Object.prototype;
function isPrototype(value26) {
  var Ctor = value26 && value26.constructor, proto2 = typeof Ctor == "function" && Ctor.prototype || objectProto$6;
  return value26 === proto2;
}
var nativeKeys = overArg(Object.keys, Object);
var objectProto$5 = Object.prototype;
var hasOwnProperty$4 = objectProto$5.hasOwnProperty;
function baseKeys(object3) {
  if (!isPrototype(object3)) {
    return nativeKeys(object3);
  }
  var result = [];
  for (var key2 in Object(object3)) {
    if (hasOwnProperty$4.call(object3, key2) && key2 != "constructor") {
      result.push(key2);
    }
  }
  return result;
}
function isArrayLike(value26) {
  return value26 != null && isLength(value26.length) && !isFunction2(value26);
}
function keys(object3) {
  return isArrayLike(object3) ? arrayLikeKeys(object3) : baseKeys(object3);
}
function baseAssign(object3, source) {
  return object3 && copyObject(source, keys(source), object3);
}
function nativeKeysIn(object3) {
  var result = [];
  if (object3 != null) {
    for (var key2 in Object(object3)) {
      result.push(key2);
    }
  }
  return result;
}
var objectProto$4 = Object.prototype;
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;
function baseKeysIn(object3) {
  if (!isObject$1(object3)) {
    return nativeKeysIn(object3);
  }
  var isProto = isPrototype(object3), result = [];
  for (var key2 in object3) {
    if (!(key2 == "constructor" && (isProto || !hasOwnProperty$3.call(object3, key2)))) {
      result.push(key2);
    }
  }
  return result;
}
function keysIn(object3) {
  return isArrayLike(object3) ? arrayLikeKeys(object3, true) : baseKeysIn(object3);
}
function baseAssignIn(object3, source) {
  return object3 && copyObject(source, keysIn(source), object3);
}
var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
var moduleExports = freeModule && freeModule.exports === freeExports;
var Buffer = moduleExports ? root.Buffer : void 0, allocUnsafe = Buffer ? Buffer.allocUnsafe : void 0;
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
  buffer.copy(result);
  return result;
}
function copyArray(source, array3) {
  var index2 = -1, length = source.length;
  array3 || (array3 = Array(length));
  while (++index2 < length) {
    array3[index2] = source[index2];
  }
  return array3;
}
function arrayFilter(array3, predicate) {
  var index2 = -1, length = array3 == null ? 0 : array3.length, resIndex = 0, result = [];
  while (++index2 < length) {
    var value26 = array3[index2];
    if (predicate(value26, index2, array3)) {
      result[resIndex++] = value26;
    }
  }
  return result;
}
function stubArray() {
  return [];
}
var objectProto$3 = Object.prototype;
var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;
var nativeGetSymbols$1 = Object.getOwnPropertySymbols;
var getSymbols = !nativeGetSymbols$1 ? stubArray : function(object3) {
  if (object3 == null) {
    return [];
  }
  object3 = Object(object3);
  return arrayFilter(nativeGetSymbols$1(object3), function(symbol) {
    return propertyIsEnumerable.call(object3, symbol);
  });
};
function copySymbols(source, object3) {
  return copyObject(source, getSymbols(source), object3);
}
function arrayPush(array3, values) {
  var index2 = -1, length = values.length, offset4 = array3.length;
  while (++index2 < length) {
    array3[offset4 + index2] = values[index2];
  }
  return array3;
}
var nativeGetSymbols = Object.getOwnPropertySymbols;
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object3) {
  var result = [];
  while (object3) {
    arrayPush(result, getSymbols(object3));
    object3 = getPrototype(object3);
  }
  return result;
};
function copySymbolsIn(source, object3) {
  return copyObject(source, getSymbolsIn(source), object3);
}
function baseGetAllKeys(object3, keysFunc, symbolsFunc) {
  var result = keysFunc(object3);
  return isArray(object3) ? result : arrayPush(result, symbolsFunc(object3));
}
function getAllKeys(object3) {
  return baseGetAllKeys(object3, keys, getSymbols);
}
function getAllKeysIn(object3) {
  return baseGetAllKeys(object3, keysIn, getSymbolsIn);
}
var DataView = getNative(root, "DataView");
var Promise$1 = getNative(root, "Promise");
var Set$1 = getNative(root, "Set");
var WeakMap$1 = getNative(root, "WeakMap");
var mapTag$4 = "[object Map]", objectTag$2 = "[object Object]", promiseTag = "[object Promise]", setTag$4 = "[object Set]", weakMapTag$1 = "[object WeakMap]";
var dataViewTag$3 = "[object DataView]";
var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map$1), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$1), weakMapCtorString = toSource(WeakMap$1);
var getTag = baseGetTag;
if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag$3 || Map$1 && getTag(new Map$1()) != mapTag$4 || Promise$1 && getTag(Promise$1.resolve()) != promiseTag || Set$1 && getTag(new Set$1()) != setTag$4 || WeakMap$1 && getTag(new WeakMap$1()) != weakMapTag$1) {
  getTag = function(value26) {
    var result = baseGetTag(value26), Ctor = result == objectTag$2 ? value26.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString:
          return dataViewTag$3;
        case mapCtorString:
          return mapTag$4;
        case promiseCtorString:
          return promiseTag;
        case setCtorString:
          return setTag$4;
        case weakMapCtorString:
          return weakMapTag$1;
      }
    }
    return result;
  };
}
var objectProto$2 = Object.prototype;
var hasOwnProperty$2 = objectProto$2.hasOwnProperty;
function initCloneArray(array3) {
  var length = array3.length, result = new array3.constructor(length);
  if (length && typeof array3[0] == "string" && hasOwnProperty$2.call(array3, "index")) {
    result.index = array3.index;
    result.input = array3.input;
  }
  return result;
}
var Uint8Array = root.Uint8Array;
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}
var reFlags = /\w*$/;
function cloneRegExp(regexp3) {
  var result = new regexp3.constructor(regexp3.source, reFlags.exec(regexp3));
  result.lastIndex = regexp3.lastIndex;
  return result;
}
var symbolProto$2 = Symbol$1 ? Symbol$1.prototype : void 0, symbolValueOf$1 = symbolProto$2 ? symbolProto$2.valueOf : void 0;
function cloneSymbol(symbol) {
  return symbolValueOf$1 ? Object(symbolValueOf$1.call(symbol)) : {};
}
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}
var boolTag$2 = "[object Boolean]", dateTag$2 = "[object Date]", mapTag$3 = "[object Map]", numberTag$3 = "[object Number]", regexpTag$2 = "[object RegExp]", setTag$3 = "[object Set]", stringTag$2 = "[object String]", symbolTag$3 = "[object Symbol]";
var arrayBufferTag$2 = "[object ArrayBuffer]", dataViewTag$2 = "[object DataView]", float32Tag$1 = "[object Float32Array]", float64Tag$1 = "[object Float64Array]", int8Tag$1 = "[object Int8Array]", int16Tag$1 = "[object Int16Array]", int32Tag$1 = "[object Int32Array]", uint8Tag$1 = "[object Uint8Array]", uint8ClampedTag$1 = "[object Uint8ClampedArray]", uint16Tag$1 = "[object Uint16Array]", uint32Tag$1 = "[object Uint32Array]";
function initCloneByTag(object3, tag, isDeep) {
  var Ctor = object3.constructor;
  switch (tag) {
    case arrayBufferTag$2:
      return cloneArrayBuffer(object3);
    case boolTag$2:
    case dateTag$2:
      return new Ctor(+object3);
    case dataViewTag$2:
      return cloneDataView(object3, isDeep);
    case float32Tag$1:
    case float64Tag$1:
    case int8Tag$1:
    case int16Tag$1:
    case int32Tag$1:
    case uint8Tag$1:
    case uint8ClampedTag$1:
    case uint16Tag$1:
    case uint32Tag$1:
      return cloneTypedArray(object3, isDeep);
    case mapTag$3:
      return new Ctor();
    case numberTag$3:
    case stringTag$2:
      return new Ctor(object3);
    case regexpTag$2:
      return cloneRegExp(object3);
    case setTag$3:
      return new Ctor();
    case symbolTag$3:
      return cloneSymbol(object3);
  }
}
var objectCreate = Object.create;
var baseCreate = /* @__PURE__ */ function() {
  function object3() {
  }
  return function(proto2) {
    if (!isObject$1(proto2)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto2);
    }
    object3.prototype = proto2;
    var result = new object3();
    object3.prototype = void 0;
    return result;
  };
}();
function initCloneObject(object3) {
  return typeof object3.constructor == "function" && !isPrototype(object3) ? baseCreate(getPrototype(object3)) : {};
}
var mapTag$2 = "[object Map]";
function baseIsMap(value26) {
  return isObjectLike(value26) && getTag(value26) == mapTag$2;
}
var nodeIsMap = nodeUtil && nodeUtil.isMap;
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
var setTag$2 = "[object Set]";
function baseIsSet(value26) {
  return isObjectLike(value26) && getTag(value26) == setTag$2;
}
var nodeIsSet = nodeUtil && nodeUtil.isSet;
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
var CLONE_DEEP_FLAG$2 = 1, CLONE_FLAT_FLAG$1 = 2, CLONE_SYMBOLS_FLAG$2 = 4;
var argsTag$1 = "[object Arguments]", arrayTag$1 = "[object Array]", boolTag$1 = "[object Boolean]", dateTag$1 = "[object Date]", errorTag$1 = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag$1 = "[object Map]", numberTag$2 = "[object Number]", objectTag$1 = "[object Object]", regexpTag$1 = "[object RegExp]", setTag$1 = "[object Set]", stringTag$1 = "[object String]", symbolTag$2 = "[object Symbol]", weakMapTag = "[object WeakMap]";
var arrayBufferTag$1 = "[object ArrayBuffer]", dataViewTag$1 = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
var cloneableTags = {};
cloneableTags[argsTag$1] = cloneableTags[arrayTag$1] = cloneableTags[arrayBufferTag$1] = cloneableTags[dataViewTag$1] = cloneableTags[boolTag$1] = cloneableTags[dateTag$1] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag$1] = cloneableTags[numberTag$2] = cloneableTags[objectTag$1] = cloneableTags[regexpTag$1] = cloneableTags[setTag$1] = cloneableTags[stringTag$1] = cloneableTags[symbolTag$2] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag$1] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
function baseClone(value26, bitmask, customizer, key2, object3, stack) {
  var result, isDeep = bitmask & CLONE_DEEP_FLAG$2, isFlat = bitmask & CLONE_FLAT_FLAG$1, isFull = bitmask & CLONE_SYMBOLS_FLAG$2;
  if (customizer) {
    result = object3 ? customizer(value26, key2, object3, stack) : customizer(value26);
  }
  if (result !== void 0) {
    return result;
  }
  if (!isObject$1(value26)) {
    return value26;
  }
  var isArr = isArray(value26);
  if (isArr) {
    result = initCloneArray(value26);
    if (!isDeep) {
      return copyArray(value26, result);
    }
  } else {
    var tag = getTag(value26), isFunc = tag == funcTag || tag == genTag;
    if (isBuffer(value26)) {
      return cloneBuffer(value26, isDeep);
    }
    if (tag == objectTag$1 || tag == argsTag$1 || isFunc && !object3) {
      result = isFlat || isFunc ? {} : initCloneObject(value26);
      if (!isDeep) {
        return isFlat ? copySymbolsIn(value26, baseAssignIn(result, value26)) : copySymbols(value26, baseAssign(result, value26));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object3 ? value26 : {};
      }
      result = initCloneByTag(value26, tag, isDeep);
    }
  }
  stack || (stack = new Stack());
  var stacked = stack.get(value26);
  if (stacked) {
    return stacked;
  }
  stack.set(value26, result);
  if (isSet(value26)) {
    value26.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value26, stack));
    });
  } else if (isMap(value26)) {
    value26.forEach(function(subValue, key3) {
      result.set(key3, baseClone(subValue, bitmask, customizer, key3, value26, stack));
    });
  }
  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
  var props2 = isArr ? void 0 : keysFunc(value26);
  arrayEach(props2 || value26, function(subValue, key3) {
    if (props2) {
      key3 = subValue;
      subValue = value26[key3];
    }
    assignValue(result, key3, baseClone(subValue, bitmask, customizer, key3, value26, stack));
  });
  return result;
}
var symbolTag$1 = "[object Symbol]";
function isSymbol(value26) {
  return typeof value26 == "symbol" || isObjectLike(value26) && baseGetTag(value26) == symbolTag$1;
}
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
function isKey(value26, object3) {
  if (isArray(value26)) {
    return false;
  }
  var type3 = typeof value26;
  if (type3 == "number" || type3 == "symbol" || type3 == "boolean" || value26 == null || isSymbol(value26)) {
    return true;
  }
  return reIsPlainProp.test(value26) || !reIsDeepProp.test(value26) || object3 != null && value26 in Object(object3);
}
var FUNC_ERROR_TEXT$2 = "Expected a function";
function memoize(func, resolver) {
  if (typeof func != "function" || resolver != null && typeof resolver != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$2);
  }
  var memoized = function() {
    var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
    if (cache.has(key2)) {
      return cache.get(key2);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key2, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache)();
  return memoized;
}
memoize.Cache = MapCache;
var MAX_MEMOIZE_SIZE = 500;
function memoizeCapped(func) {
  var result = memoize(func, function(key2) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key2;
  });
  var cache = result.cache;
  return result;
}
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var reEscapeChar = /\\(\\)?/g;
var stringToPath = memoizeCapped(function(string2) {
  var result = [];
  if (string2.charCodeAt(0) === 46) {
    result.push("");
  }
  string2.replace(rePropName, function(match5, number3, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, "$1") : number3 || match5);
  });
  return result;
});
var symbolProto$1 = Symbol$1 ? Symbol$1.prototype : void 0, symbolToString = symbolProto$1 ? symbolProto$1.toString : void 0;
function baseToString(value26) {
  if (typeof value26 == "string") {
    return value26;
  }
  if (isArray(value26)) {
    return arrayMap(value26, baseToString) + "";
  }
  if (isSymbol(value26)) {
    return symbolToString ? symbolToString.call(value26) : "";
  }
  var result = value26 + "";
  return result == "0" && 1 / value26 == -Infinity ? "-0" : result;
}
function toString$1(value26) {
  return value26 == null ? "" : baseToString(value26);
}
function castPath(value26, object3) {
  if (isArray(value26)) {
    return value26;
  }
  return isKey(value26, object3) ? [value26] : stringToPath(toString$1(value26));
}
function last(array3) {
  var length = array3 == null ? 0 : array3.length;
  return length ? array3[length - 1] : void 0;
}
function toKey(value26) {
  if (typeof value26 == "string" || isSymbol(value26)) {
    return value26;
  }
  var result = value26 + "";
  return result == "0" && 1 / value26 == -Infinity ? "-0" : result;
}
function baseGet(object3, path2) {
  path2 = castPath(path2, object3);
  var index2 = 0, length = path2.length;
  while (object3 != null && index2 < length) {
    object3 = object3[toKey(path2[index2++])];
  }
  return index2 && index2 == length ? object3 : void 0;
}
function baseSlice(array3, start, end) {
  var index2 = -1, length = array3.length;
  if (start < 0) {
    start = -start > length ? 0 : length + start;
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : end - start >>> 0;
  start >>>= 0;
  var result = Array(length);
  while (++index2 < length) {
    result[index2] = array3[index2 + start];
  }
  return result;
}
function parent(object3, path2) {
  return path2.length < 2 ? object3 : baseGet(object3, baseSlice(path2, 0, -1));
}
function baseUnset(object3, path2) {
  path2 = castPath(path2, object3);
  object3 = parent(object3, path2);
  return object3 == null || delete object3[toKey(last(path2))];
}
function customOmitClone(value26) {
  return isPlainObject(value26) ? void 0 : value26;
}
var spreadableSymbol = Symbol$1 ? Symbol$1.isConcatSpreadable : void 0;
function isFlattenable(value26) {
  return isArray(value26) || isArguments(value26) || !!(spreadableSymbol && value26 && value26[spreadableSymbol]);
}
function baseFlatten(array3, depth, predicate, isStrict, result) {
  var index2 = -1, length = array3.length;
  predicate || (predicate = isFlattenable);
  result || (result = []);
  while (++index2 < length) {
    var value26 = array3[index2];
    if (predicate(value26)) {
      {
        arrayPush(result, value26);
      }
    } else {
      result[result.length] = value26;
    }
  }
  return result;
}
function flatten(array3) {
  var length = array3 == null ? 0 : array3.length;
  return length ? baseFlatten(array3) : [];
}
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0:
      return func.call(thisArg);
    case 1:
      return func.call(thisArg, args[0]);
    case 2:
      return func.call(thisArg, args[0], args[1]);
    case 3:
      return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}
var nativeMax$2 = Math.max;
function overRest(func, start, transform) {
  start = nativeMax$2(start === void 0 ? func.length - 1 : start, 0);
  return function() {
    var args = arguments, index2 = -1, length = nativeMax$2(args.length - start, 0), array3 = Array(length);
    while (++index2 < length) {
      array3[index2] = args[start + index2];
    }
    index2 = -1;
    var otherArgs = Array(start + 1);
    while (++index2 < start) {
      otherArgs[index2] = args[index2];
    }
    otherArgs[start] = transform(array3);
    return apply(func, this, otherArgs);
  };
}
function constant(value26) {
  return function() {
    return value26;
  };
}
function identity(value26) {
  return value26;
}
var baseSetToString = !defineProperty ? identity : function(func, string2) {
  return defineProperty(func, "toString", {
    "configurable": true,
    "enumerable": false,
    "value": constant(string2),
    "writable": true
  });
};
var HOT_COUNT = 800, HOT_SPAN = 16;
var nativeNow = Date.now;
function shortOut(func) {
  var count = 0, lastCalled = 0;
  return function() {
    var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(void 0, arguments);
  };
}
var setToString = shortOut(baseSetToString);
function flatRest(func) {
  return setToString(overRest(func, void 0, flatten), func + "");
}
var CLONE_DEEP_FLAG$1 = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG$1 = 4;
var omit = flatRest(function(object3, paths) {
  var result = {};
  if (object3 == null) {
    return result;
  }
  var isDeep = false;
  paths = arrayMap(paths, function(path2) {
    path2 = castPath(path2, object3);
    isDeep || (isDeep = path2.length > 1);
    return path2;
  });
  copyObject(object3, getAllKeysIn(object3), result);
  if (isDeep) {
    result = baseClone(result, CLONE_DEEP_FLAG$1 | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG$1, customOmitClone);
  }
  var length = paths.length;
  while (length--) {
    baseUnset(result, paths[length]);
  }
  return result;
});
const { createVNode: _createVNode$4P, resolveDirective: _resolveDirective$k } = await importShared("vue");
const { defineComponent: defineComponent$2I, ref: ref$I } = await importShared("vue");
var RefSelect = generateSelector$1({
  prefixCls: "rc-select",
  components: {
    optionList: OptionList
  },
  convertChildrenToData: convertChildrenToData$1,
  flattenOptions,
  getLabeledValue,
  filterOptions,
  isValueDisabled,
  findValueOption,
  fillOptionsWithMissingValue
});
var Select$3 = defineComponent$2I({
  setup: function setup21(props2, _ref) {
    var attrs = _ref.attrs, expose = _ref.expose, slots = _ref.slots;
    var selectRef = ref$I(null);
    expose({
      focus: function focus27() {
        var _a;
        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();
      },
      blur: function blur24() {
        var _a;
        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();
      }
    });
    return function() {
      var _a;
      return _createVNode$4P(RefSelect, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
        "ref": selectRef
      }, props2), attrs), {}, {
        "children": ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)) || []
      }), slots);
    };
  }
});
Select$3.inheritAttrs = false;
Select$3.props = omit(RefSelect.props, ["children"]);
Select$3.Option = Option$3;
Select$3.OptGroup = OptGroup$1;
var DownOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z" } }] }, "name": "down", "theme": "outlined" };
function bound01(n2, max4) {
  if (isOnePointZero(n2)) {
    n2 = "100%";
  }
  var isPercent = isPercentage(n2);
  n2 = max4 === 360 ? n2 : Math.min(max4, Math.max(0, parseFloat(n2)));
  if (isPercent) {
    n2 = parseInt(String(n2 * max4), 10) / 100;
  }
  if (Math.abs(n2 - max4) < 1e-6) {
    return 1;
  }
  if (max4 === 360) {
    n2 = (n2 < 0 ? n2 % max4 + max4 : n2 % max4) / parseFloat(String(max4));
  } else {
    n2 = n2 % max4 / parseFloat(String(max4));
  }
  return n2;
}
function isOnePointZero(n2) {
  return typeof n2 === "string" && n2.indexOf(".") !== -1 && parseFloat(n2) === 1;
}
function isPercentage(n2) {
  return typeof n2 === "string" && n2.indexOf("%") !== -1;
}
function boundAlpha(a2) {
  a2 = parseFloat(a2);
  if (isNaN(a2) || a2 < 0 || a2 > 1) {
    a2 = 1;
  }
  return a2;
}
function convertToPercentage(n2) {
  if (n2 <= 1) {
    return "".concat(Number(n2) * 100, "%");
  }
  return n2;
}
function pad2(c2) {
  return c2.length === 1 ? "0" + c2 : String(c2);
}
function rgbToRgb(r2, g2, b2) {
  return {
    r: bound01(r2, 255) * 255,
    g: bound01(g2, 255) * 255,
    b: bound01(b2, 255) * 255
  };
}
function hue2rgb(p, q2, t2) {
  if (t2 < 0) {
    t2 += 1;
  }
  if (t2 > 1) {
    t2 -= 1;
  }
  if (t2 < 1 / 6) {
    return p + (q2 - p) * (6 * t2);
  }
  if (t2 < 1 / 2) {
    return q2;
  }
  if (t2 < 2 / 3) {
    return p + (q2 - p) * (2 / 3 - t2) * 6;
  }
  return p;
}
function hslToRgb(h2, s2, l2) {
  var r2;
  var g2;
  var b2;
  h2 = bound01(h2, 360);
  s2 = bound01(s2, 100);
  l2 = bound01(l2, 100);
  if (s2 === 0) {
    g2 = l2;
    b2 = l2;
    r2 = l2;
  } else {
    var q2 = l2 < 0.5 ? l2 * (1 + s2) : l2 + s2 - l2 * s2;
    var p = 2 * l2 - q2;
    r2 = hue2rgb(p, q2, h2 + 1 / 3);
    g2 = hue2rgb(p, q2, h2);
    b2 = hue2rgb(p, q2, h2 - 1 / 3);
  }
  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
}
function rgbToHsv(r2, g2, b2) {
  r2 = bound01(r2, 255);
  g2 = bound01(g2, 255);
  b2 = bound01(b2, 255);
  var max4 = Math.max(r2, g2, b2);
  var min4 = Math.min(r2, g2, b2);
  var h2 = 0;
  var v2 = max4;
  var d2 = max4 - min4;
  var s2 = max4 === 0 ? 0 : d2 / max4;
  if (max4 === min4) {
    h2 = 0;
  } else {
    switch (max4) {
      case r2:
        h2 = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);
        break;
      case g2:
        h2 = (b2 - r2) / d2 + 2;
        break;
      case b2:
        h2 = (r2 - g2) / d2 + 4;
        break;
    }
    h2 /= 6;
  }
  return { h: h2, s: s2, v: v2 };
}
function hsvToRgb(h2, s2, v2) {
  h2 = bound01(h2, 360) * 6;
  s2 = bound01(s2, 100);
  v2 = bound01(v2, 100);
  var i2 = Math.floor(h2);
  var f2 = h2 - i2;
  var p = v2 * (1 - s2);
  var q2 = v2 * (1 - f2 * s2);
  var t2 = v2 * (1 - (1 - f2) * s2);
  var mod2 = i2 % 6;
  var r2 = [v2, q2, p, p, t2, v2][mod2];
  var g2 = [t2, v2, v2, q2, p, p][mod2];
  var b2 = [p, p, t2, v2, v2, q2][mod2];
  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };
}
function rgbToHex(r2, g2, b2, allow3Char) {
  var hex2 = [
    pad2(Math.round(r2).toString(16)),
    pad2(Math.round(g2).toString(16)),
    pad2(Math.round(b2).toString(16))
  ];
  return hex2.join("");
}
function convertHexToDecimal(h2) {
  return parseIntFromHex(h2) / 255;
}
function parseIntFromHex(val) {
  return parseInt(val, 16);
}
var names = {
  aliceblue: "#f0f8ff",
  antiquewhite: "#faebd7",
  aqua: "#00ffff",
  aquamarine: "#7fffd4",
  azure: "#f0ffff",
  beige: "#f5f5dc",
  bisque: "#ffe4c4",
  black: "#000000",
  blanchedalmond: "#ffebcd",
  blue: "#0000ff",
  blueviolet: "#8a2be2",
  brown: "#a52a2a",
  burlywood: "#deb887",
  cadetblue: "#5f9ea0",
  chartreuse: "#7fff00",
  chocolate: "#d2691e",
  coral: "#ff7f50",
  cornflowerblue: "#6495ed",
  cornsilk: "#fff8dc",
  crimson: "#dc143c",
  cyan: "#00ffff",
  darkblue: "#00008b",
  darkcyan: "#008b8b",
  darkgoldenrod: "#b8860b",
  darkgray: "#a9a9a9",
  darkgreen: "#006400",
  darkgrey: "#a9a9a9",
  darkkhaki: "#bdb76b",
  darkmagenta: "#8b008b",
  darkolivegreen: "#556b2f",
  darkorange: "#ff8c00",
  darkorchid: "#9932cc",
  darkred: "#8b0000",
  darksalmon: "#e9967a",
  darkseagreen: "#8fbc8f",
  darkslateblue: "#483d8b",
  darkslategray: "#2f4f4f",
  darkslategrey: "#2f4f4f",
  darkturquoise: "#00ced1",
  darkviolet: "#9400d3",
  deeppink: "#ff1493",
  deepskyblue: "#00bfff",
  dimgray: "#696969",
  dimgrey: "#696969",
  dodgerblue: "#1e90ff",
  firebrick: "#b22222",
  floralwhite: "#fffaf0",
  forestgreen: "#228b22",
  fuchsia: "#ff00ff",
  gainsboro: "#dcdcdc",
  ghostwhite: "#f8f8ff",
  goldenrod: "#daa520",
  gold: "#ffd700",
  gray: "#808080",
  green: "#008000",
  greenyellow: "#adff2f",
  grey: "#808080",
  honeydew: "#f0fff0",
  hotpink: "#ff69b4",
  indianred: "#cd5c5c",
  indigo: "#4b0082",
  ivory: "#fffff0",
  khaki: "#f0e68c",
  lavenderblush: "#fff0f5",
  lavender: "#e6e6fa",
  lawngreen: "#7cfc00",
  lemonchiffon: "#fffacd",
  lightblue: "#add8e6",
  lightcoral: "#f08080",
  lightcyan: "#e0ffff",
  lightgoldenrodyellow: "#fafad2",
  lightgray: "#d3d3d3",
  lightgreen: "#90ee90",
  lightgrey: "#d3d3d3",
  lightpink: "#ffb6c1",
  lightsalmon: "#ffa07a",
  lightseagreen: "#20b2aa",
  lightskyblue: "#87cefa",
  lightslategray: "#778899",
  lightslategrey: "#778899",
  lightsteelblue: "#b0c4de",
  lightyellow: "#ffffe0",
  lime: "#00ff00",
  limegreen: "#32cd32",
  linen: "#faf0e6",
  magenta: "#ff00ff",
  maroon: "#800000",
  mediumaquamarine: "#66cdaa",
  mediumblue: "#0000cd",
  mediumorchid: "#ba55d3",
  mediumpurple: "#9370db",
  mediumseagreen: "#3cb371",
  mediumslateblue: "#7b68ee",
  mediumspringgreen: "#00fa9a",
  mediumturquoise: "#48d1cc",
  mediumvioletred: "#c71585",
  midnightblue: "#191970",
  mintcream: "#f5fffa",
  mistyrose: "#ffe4e1",
  moccasin: "#ffe4b5",
  navajowhite: "#ffdead",
  navy: "#000080",
  oldlace: "#fdf5e6",
  olive: "#808000",
  olivedrab: "#6b8e23",
  orange: "#ffa500",
  orangered: "#ff4500",
  orchid: "#da70d6",
  palegoldenrod: "#eee8aa",
  palegreen: "#98fb98",
  paleturquoise: "#afeeee",
  palevioletred: "#db7093",
  papayawhip: "#ffefd5",
  peachpuff: "#ffdab9",
  peru: "#cd853f",
  pink: "#ffc0cb",
  plum: "#dda0dd",
  powderblue: "#b0e0e6",
  purple: "#800080",
  rebeccapurple: "#663399",
  red: "#ff0000",
  rosybrown: "#bc8f8f",
  royalblue: "#4169e1",
  saddlebrown: "#8b4513",
  salmon: "#fa8072",
  sandybrown: "#f4a460",
  seagreen: "#2e8b57",
  seashell: "#fff5ee",
  sienna: "#a0522d",
  silver: "#c0c0c0",
  skyblue: "#87ceeb",
  slateblue: "#6a5acd",
  slategray: "#708090",
  slategrey: "#708090",
  snow: "#fffafa",
  springgreen: "#00ff7f",
  steelblue: "#4682b4",
  tan: "#d2b48c",
  teal: "#008080",
  thistle: "#d8bfd8",
  tomato: "#ff6347",
  turquoise: "#40e0d0",
  violet: "#ee82ee",
  wheat: "#f5deb3",
  white: "#ffffff",
  whitesmoke: "#f5f5f5",
  yellow: "#ffff00",
  yellowgreen: "#9acd32"
};
function inputToRGB(color) {
  var rgb = { r: 0, g: 0, b: 0 };
  var a2 = 1;
  var s2 = null;
  var v2 = null;
  var l2 = null;
  var ok = false;
  var format3 = false;
  if (typeof color === "string") {
    color = stringInputToObject(color);
  }
  if (typeof color === "object") {
    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {
      rgb = rgbToRgb(color.r, color.g, color.b);
      ok = true;
      format3 = String(color.r).substr(-1) === "%" ? "prgb" : "rgb";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {
      s2 = convertToPercentage(color.s);
      v2 = convertToPercentage(color.v);
      rgb = hsvToRgb(color.h, s2, v2);
      ok = true;
      format3 = "hsv";
    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {
      s2 = convertToPercentage(color.s);
      l2 = convertToPercentage(color.l);
      rgb = hslToRgb(color.h, s2, l2);
      ok = true;
      format3 = "hsl";
    }
    if (Object.prototype.hasOwnProperty.call(color, "a")) {
      a2 = color.a;
    }
  }
  a2 = boundAlpha(a2);
  return {
    ok,
    format: color.format || format3,
    r: Math.min(255, Math.max(rgb.r, 0)),
    g: Math.min(255, Math.max(rgb.g, 0)),
    b: Math.min(255, Math.max(rgb.b, 0)),
    a: a2
  };
}
var CSS_INTEGER = "[-\\+]?\\d+%?";
var CSS_NUMBER = "[-\\+]?\\d*\\.\\d+%?";
var CSS_UNIT = "(?:".concat(CSS_NUMBER, ")|(?:").concat(CSS_INTEGER, ")");
var PERMISSIVE_MATCH3 = "[\\s|\\(]+(".concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")\\s*\\)?");
var PERMISSIVE_MATCH4 = "[\\s|\\(]+(".concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")[,|\\s]+(").concat(CSS_UNIT, ")\\s*\\)?");
var matchers = {
  CSS_UNIT: new RegExp(CSS_UNIT),
  rgb: new RegExp("rgb" + PERMISSIVE_MATCH3),
  rgba: new RegExp("rgba" + PERMISSIVE_MATCH4),
  hsl: new RegExp("hsl" + PERMISSIVE_MATCH3),
  hsla: new RegExp("hsla" + PERMISSIVE_MATCH4),
  hsv: new RegExp("hsv" + PERMISSIVE_MATCH3),
  hsva: new RegExp("hsva" + PERMISSIVE_MATCH4),
  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/
};
function stringInputToObject(color) {
  color = color.trim().toLowerCase();
  if (color.length === 0) {
    return false;
  }
  var named = false;
  if (names[color]) {
    color = names[color];
    named = true;
  } else if (color === "transparent") {
    return { r: 0, g: 0, b: 0, a: 0, format: "name" };
  }
  var match5 = matchers.rgb.exec(color);
  if (match5) {
    return { r: match5[1], g: match5[2], b: match5[3] };
  }
  match5 = matchers.rgba.exec(color);
  if (match5) {
    return { r: match5[1], g: match5[2], b: match5[3], a: match5[4] };
  }
  match5 = matchers.hsl.exec(color);
  if (match5) {
    return { h: match5[1], s: match5[2], l: match5[3] };
  }
  match5 = matchers.hsla.exec(color);
  if (match5) {
    return { h: match5[1], s: match5[2], l: match5[3], a: match5[4] };
  }
  match5 = matchers.hsv.exec(color);
  if (match5) {
    return { h: match5[1], s: match5[2], v: match5[3] };
  }
  match5 = matchers.hsva.exec(color);
  if (match5) {
    return { h: match5[1], s: match5[2], v: match5[3], a: match5[4] };
  }
  match5 = matchers.hex8.exec(color);
  if (match5) {
    return {
      r: parseIntFromHex(match5[1]),
      g: parseIntFromHex(match5[2]),
      b: parseIntFromHex(match5[3]),
      a: convertHexToDecimal(match5[4]),
      format: named ? "name" : "hex8"
    };
  }
  match5 = matchers.hex6.exec(color);
  if (match5) {
    return {
      r: parseIntFromHex(match5[1]),
      g: parseIntFromHex(match5[2]),
      b: parseIntFromHex(match5[3]),
      format: named ? "name" : "hex"
    };
  }
  match5 = matchers.hex4.exec(color);
  if (match5) {
    return {
      r: parseIntFromHex(match5[1] + match5[1]),
      g: parseIntFromHex(match5[2] + match5[2]),
      b: parseIntFromHex(match5[3] + match5[3]),
      a: convertHexToDecimal(match5[4] + match5[4]),
      format: named ? "name" : "hex8"
    };
  }
  match5 = matchers.hex3.exec(color);
  if (match5) {
    return {
      r: parseIntFromHex(match5[1] + match5[1]),
      g: parseIntFromHex(match5[2] + match5[2]),
      b: parseIntFromHex(match5[3] + match5[3]),
      format: named ? "name" : "hex"
    };
  }
  return false;
}
function isValidCSSUnit(color) {
  return Boolean(matchers.CSS_UNIT.exec(String(color)));
}
var hueStep = 2;
var saturationStep = 0.16;
var saturationStep2 = 0.05;
var brightnessStep1 = 0.05;
var brightnessStep2 = 0.15;
var lightColorCount = 5;
var darkColorCount = 4;
var darkColorMap = [{
  index: 7,
  opacity: 0.15
}, {
  index: 6,
  opacity: 0.25
}, {
  index: 5,
  opacity: 0.3
}, {
  index: 5,
  opacity: 0.45
}, {
  index: 5,
  opacity: 0.65
}, {
  index: 5,
  opacity: 0.85
}, {
  index: 4,
  opacity: 0.9
}, {
  index: 3,
  opacity: 0.95
}, {
  index: 2,
  opacity: 0.97
}, {
  index: 1,
  opacity: 0.98
}];
function toHsv(_ref) {
  var r2 = _ref.r, g2 = _ref.g, b2 = _ref.b;
  var hsv = rgbToHsv(r2, g2, b2);
  return {
    h: hsv.h * 360,
    s: hsv.s,
    v: hsv.v
  };
}
function toHex(_ref2) {
  var r2 = _ref2.r, g2 = _ref2.g, b2 = _ref2.b;
  return "#".concat(rgbToHex(r2, g2, b2));
}
function mix(rgb1, rgb2, amount) {
  var p = amount / 100;
  var rgb = {
    r: (rgb2.r - rgb1.r) * p + rgb1.r,
    g: (rgb2.g - rgb1.g) * p + rgb1.g,
    b: (rgb2.b - rgb1.b) * p + rgb1.b
  };
  return rgb;
}
function getHue(hsv, i2, light) {
  var hue;
  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {
    hue = light ? Math.round(hsv.h) - hueStep * i2 : Math.round(hsv.h) + hueStep * i2;
  } else {
    hue = light ? Math.round(hsv.h) + hueStep * i2 : Math.round(hsv.h) - hueStep * i2;
  }
  if (hue < 0) {
    hue += 360;
  } else if (hue >= 360) {
    hue -= 360;
  }
  return hue;
}
function getSaturation(hsv, i2, light) {
  if (hsv.h === 0 && hsv.s === 0) {
    return hsv.s;
  }
  var saturation;
  if (light) {
    saturation = hsv.s - saturationStep * i2;
  } else if (i2 === darkColorCount) {
    saturation = hsv.s + saturationStep;
  } else {
    saturation = hsv.s + saturationStep2 * i2;
  }
  if (saturation > 1) {
    saturation = 1;
  }
  if (light && i2 === lightColorCount && saturation > 0.1) {
    saturation = 0.1;
  }
  if (saturation < 0.06) {
    saturation = 0.06;
  }
  return Number(saturation.toFixed(2));
}
function getValue(hsv, i2, light) {
  var value26;
  if (light) {
    value26 = hsv.v + brightnessStep1 * i2;
  } else {
    value26 = hsv.v - brightnessStep2 * i2;
  }
  if (value26 > 1) {
    value26 = 1;
  }
  return Number(value26.toFixed(2));
}
function generate$1(color) {
  var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var patterns = [];
  var pColor = inputToRGB(color);
  for (var i2 = lightColorCount; i2 > 0; i2 -= 1) {
    var hsv = toHsv(pColor);
    var colorString = toHex(inputToRGB({
      h: getHue(hsv, i2, true),
      s: getSaturation(hsv, i2, true),
      v: getValue(hsv, i2, true)
    }));
    patterns.push(colorString);
  }
  patterns.push(toHex(pColor));
  for (var _i = 1; _i <= darkColorCount; _i += 1) {
    var _hsv = toHsv(pColor);
    var _colorString = toHex(inputToRGB({
      h: getHue(_hsv, _i),
      s: getSaturation(_hsv, _i),
      v: getValue(_hsv, _i)
    }));
    patterns.push(_colorString);
  }
  if (opts.theme === "dark") {
    return darkColorMap.map(function(_ref3) {
      var index2 = _ref3.index, opacity = _ref3.opacity;
      var darkColorString = toHex(mix(inputToRGB(opts.backgroundColor || "#141414"), inputToRGB(patterns[index2]), opacity * 100));
      return darkColorString;
    });
  }
  return patterns;
}
var presetPrimaryColors = {
  red: "#F5222D",
  volcano: "#FA541C",
  orange: "#FA8C16",
  gold: "#FAAD14",
  yellow: "#FADB14",
  lime: "#A0D911",
  green: "#52C41A",
  cyan: "#13C2C2",
  blue: "#1890FF",
  geekblue: "#2F54EB",
  purple: "#722ED1",
  magenta: "#EB2F96",
  grey: "#666666"
};
var presetPalettes = {};
var presetDarkPalettes = {};
Object.keys(presetPrimaryColors).forEach(function(key2) {
  presetPalettes[key2] = generate$1(presetPrimaryColors[key2]);
  presetPalettes[key2].primary = presetPalettes[key2][5];
  presetDarkPalettes[key2] = generate$1(presetPrimaryColors[key2], {
    theme: "dark",
    backgroundColor: "#141414"
  });
  presetDarkPalettes[key2].primary = presetDarkPalettes[key2][5];
});
var containers = [];
var styleElements = [];
var usage = "insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).";
function createStyleElement() {
  var styleElement = document.createElement("style");
  styleElement.setAttribute("type", "text/css");
  return styleElement;
}
function insertCss(css2, options2) {
  options2 = options2 || {};
  if (css2 === void 0) {
    throw new Error(usage);
  }
  var position = options2.prepend === true ? "prepend" : "append";
  var container = options2.container !== void 0 ? options2.container : document.querySelector("head");
  var containerId = containers.indexOf(container);
  if (containerId === -1) {
    containerId = containers.push(container) - 1;
    styleElements[containerId] = {};
  }
  var styleElement;
  if (styleElements[containerId] !== void 0 && styleElements[containerId][position] !== void 0) {
    styleElement = styleElements[containerId][position];
  } else {
    styleElement = styleElements[containerId][position] = createStyleElement();
    if (position === "prepend") {
      container.insertBefore(styleElement, container.childNodes[0]);
    } else {
      container.appendChild(styleElement);
    }
  }
  if (css2.charCodeAt(0) === 65279) {
    css2 = css2.substr(1, css2.length);
  }
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText += css2;
  } else {
    styleElement.textContent += css2;
  }
  return styleElement;
}
function _objectSpread$R(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$S(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$S(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
const { nextTick: nextTick$u, h: h$1 } = await importShared("vue");
function warning$4(valid, message) {
}
function isIconDefinition(target) {
  return typeof target === "object" && typeof target.name === "string" && typeof target.theme === "string" && (typeof target.icon === "object" || typeof target.icon === "function");
}
function generate(node, key2, rootProps) {
  if (!rootProps) {
    return h$1(node.tag, _objectSpread$R({
      key: key2
    }, node.attrs), (node.children || []).map(function(child, index2) {
      return generate(child, "".concat(key2, "-").concat(node.tag, "-").concat(index2));
    }));
  }
  return h$1(node.tag, _objectSpread$R({
    key: key2
  }, rootProps, node.attrs), (node.children || []).map(function(child, index2) {
    return generate(child, "".concat(key2, "-").concat(node.tag, "-").concat(index2));
  }));
}
function getSecondaryColor(primaryColor) {
  return generate$1(primaryColor)[0];
}
function normalizeTwoToneColors(twoToneColor) {
  if (!twoToneColor) {
    return [];
  }
  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];
}
var iconStyles = "\n.anticon {\n  display: inline-block;\n  color: inherit;\n  font-style: normal;\n  line-height: 0;\n  text-align: center;\n  text-transform: none;\n  vertical-align: -0.125em;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.anticon > * {\n  line-height: 1;\n}\n\n.anticon svg {\n  display: inline-block;\n}\n\n.anticon::before {\n  display: none;\n}\n\n.anticon .anticon-icon {\n  display: block;\n}\n\n.anticon[tabindex] {\n  cursor: pointer;\n}\n\n.anticon-spin::before,\n.anticon-spin {\n  display: inline-block;\n  -webkit-animation: loadingCircle 1s infinite linear;\n  animation: loadingCircle 1s infinite linear;\n}\n\n@-webkit-keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes loadingCircle {\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n";
var cssInjectedFlag = false;
var useInsertStyles = function useInsertStyles2() {
  var styleStr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : iconStyles;
  nextTick$u(function() {
    if (!cssInjectedFlag) {
      if (typeof window !== "undefined" && window.document && window.document.documentElement) {
        insertCss(styleStr, {
          prepend: true
        });
      }
      cssInjectedFlag = true;
    }
  });
};
var _excluded$1 = ["icon", "primaryColor", "secondaryColor"];
function _objectWithoutProperties$1(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose$1(source, excluded);
  var key2, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key2 = sourceSymbolKeys[i2];
      if (excluded.indexOf(key2) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2)) continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose$1(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key2 = sourceKeys[i2];
    if (excluded.indexOf(key2) >= 0) continue;
    target[key2] = source[key2];
  }
  return target;
}
function _objectSpread$Q(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$R(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$R(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var twoToneColorPalette = {
  primaryColor: "#333",
  secondaryColor: "#E6E6E6",
  calculated: false
};
function setTwoToneColors(_ref) {
  var primaryColor = _ref.primaryColor, secondaryColor = _ref.secondaryColor;
  twoToneColorPalette.primaryColor = primaryColor;
  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);
  twoToneColorPalette.calculated = !!secondaryColor;
}
function getTwoToneColors() {
  return _objectSpread$Q({}, twoToneColorPalette);
}
var IconBase = function IconBase2(props2, context2) {
  var _props$context$attrs = _objectSpread$Q({}, props2, context2.attrs), icon = _props$context$attrs.icon, primaryColor = _props$context$attrs.primaryColor, secondaryColor = _props$context$attrs.secondaryColor, restProps = _objectWithoutProperties$1(_props$context$attrs, _excluded$1);
  var colors = twoToneColorPalette;
  if (primaryColor) {
    colors = {
      primaryColor,
      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)
    };
  }
  useInsertStyles();
  warning$4(isIconDefinition(icon));
  if (!isIconDefinition(icon)) {
    return null;
  }
  var target = icon;
  if (target && typeof target.icon === "function") {
    target = _objectSpread$Q({}, target, {
      icon: target.icon(colors.primaryColor, colors.secondaryColor)
    });
  }
  return generate(target.icon, "svg-".concat(target.name), _objectSpread$Q({}, restProps, {
    "data-icon": target.name,
    width: "1em",
    height: "1em",
    fill: "currentColor",
    "aria-hidden": "true"
  }));
};
IconBase.props = {
  icon: Object,
  primaryColor: String,
  secondaryColor: String,
  focusable: String
};
IconBase.inheritAttrs = false;
IconBase.displayName = "IconBase";
IconBase.getTwoToneColors = getTwoToneColors;
IconBase.setTwoToneColors = setTwoToneColors;
function _slicedToArray$1(arr, i2) {
  return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i2) || _unsupportedIterableToArray$1(arr, i2) || _nonIterableRest$1();
}
function _nonIterableRest$1() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$1(o2, minLen) {
  if (!o2) return;
  if (typeof o2 === "string") return _arrayLikeToArray$1(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor) n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set") return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return _arrayLikeToArray$1(o2, minLen);
}
function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
function _iterableToArrayLimit$1(arr, i2) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles$1(arr) {
  if (Array.isArray(arr)) return arr;
}
function setTwoToneColor(twoToneColor) {
  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor), _normalizeTwoToneColo2 = _slicedToArray$1(_normalizeTwoToneColo, 2), primaryColor = _normalizeTwoToneColo2[0], secondaryColor = _normalizeTwoToneColo2[1];
  return IconBase.setTwoToneColors({
    primaryColor,
    secondaryColor
  });
}
function getTwoToneColor() {
  var colors = IconBase.getTwoToneColors();
  if (!colors.calculated) {
    return colors.primaryColor;
  }
  return [colors.primaryColor, colors.secondaryColor];
}
var _excluded = ["class", "icon", "spin", "rotate", "tabindex", "twoToneColor", "onClick"];
const { createVNode: _createVNode$4O } = await importShared("vue");
function _slicedToArray(arr, i2) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i2) || _unsupportedIterableToArray(arr, i2) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o2, minLen) {
  if (!o2) return;
  if (typeof o2 === "string") return _arrayLikeToArray(o2, minLen);
  var n2 = Object.prototype.toString.call(o2).slice(8, -1);
  if (n2 === "Object" && o2.constructor) n2 = o2.constructor.name;
  if (n2 === "Map" || n2 === "Set") return Array.from(o2);
  if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2)) return _arrayLikeToArray(o2, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i2 = 0, arr2 = new Array(len); i2 < len; i2++) {
    arr2[i2] = arr[i2];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i2) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i2 && _arr.length === i2) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
function _objectSpread$P(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$Q(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$Q(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key2, i2;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i2 = 0; i2 < sourceSymbolKeys.length; i2++) {
      key2 = sourceSymbolKeys[i2];
      if (excluded.indexOf(key2) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key2)) continue;
      target[key2] = source[key2];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key2, i2;
  for (i2 = 0; i2 < sourceKeys.length; i2++) {
    key2 = sourceKeys[i2];
    if (excluded.indexOf(key2) >= 0) continue;
    target[key2] = source[key2];
  }
  return target;
}
setTwoToneColor("#1890ff");
var Icon = function Icon2(props2, context2) {
  var _classObj;
  var _props$context$attrs = _objectSpread$P({}, props2, context2.attrs), cls = _props$context$attrs["class"], icon = _props$context$attrs.icon, spin = _props$context$attrs.spin, rotate = _props$context$attrs.rotate, tabindex = _props$context$attrs.tabindex, twoToneColor = _props$context$attrs.twoToneColor, onClick7 = _props$context$attrs.onClick, restProps = _objectWithoutProperties(_props$context$attrs, _excluded);
  var classObj = (_classObj = {
    anticon: true
  }, _defineProperty$Q(_classObj, "anticon-".concat(icon.name), Boolean(icon.name)), _defineProperty$Q(_classObj, cls, cls), _classObj);
  var svgClassString = spin === "" || !!spin || icon.name === "loading" ? "anticon-spin" : "";
  var iconTabIndex = tabindex;
  if (iconTabIndex === void 0 && onClick7) {
    iconTabIndex = -1;
    restProps.tabindex = iconTabIndex;
  }
  var svgStyle = rotate ? {
    msTransform: "rotate(".concat(rotate, "deg)"),
    transform: "rotate(".concat(rotate, "deg)")
  } : void 0;
  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor), _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2), primaryColor = _normalizeTwoToneColo2[0], secondaryColor = _normalizeTwoToneColo2[1];
  return _createVNode$4O("span", _objectSpread$P({
    "role": "img",
    "aria-label": icon.name
  }, restProps, {
    "onClick": onClick7,
    "class": classObj
  }), [_createVNode$4O(IconBase, {
    "class": svgClassString,
    "icon": icon,
    "primaryColor": primaryColor,
    "secondaryColor": secondaryColor,
    "style": svgStyle
  }, null)]);
};
Icon.props = {
  spin: Boolean,
  rotate: Number,
  icon: Object,
  twoToneColor: String
};
Icon.displayName = "AntdIcon";
Icon.inheritAttrs = false;
Icon.getTwoToneColor = getTwoToneColor;
Icon.setTwoToneColor = setTwoToneColor;
const { createVNode: _createVNode$4N } = await importShared("vue");
function _objectSpread$O(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$P(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$P(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var DownOutlined = function DownOutlined2(props2, context2) {
  var p = _objectSpread$O({}, props2, context2.attrs);
  return _createVNode$4N(Icon, _objectSpread$O({}, p, {
    "icon": DownOutlined$1
  }), null);
};
DownOutlined.displayName = "DownOutlined";
DownOutlined.inheritAttrs = false;
var LoadingOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z" } }] }, "name": "loading", "theme": "outlined" };
const { createVNode: _createVNode$4M } = await importShared("vue");
function _objectSpread$N(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$O(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$O(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var LoadingOutlined = function LoadingOutlined2(props2, context2) {
  var p = _objectSpread$N({}, props2, context2.attrs);
  return _createVNode$4M(Icon, _objectSpread$N({}, p, {
    "icon": LoadingOutlined$1
  }), null);
};
LoadingOutlined.displayName = "LoadingOutlined";
LoadingOutlined.inheritAttrs = false;
var CheckOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z" } }] }, "name": "check", "theme": "outlined" };
const { createVNode: _createVNode$4L } = await importShared("vue");
function _objectSpread$M(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$N(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$N(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CheckOutlined = function CheckOutlined2(props2, context2) {
  var p = _objectSpread$M({}, props2, context2.attrs);
  return _createVNode$4L(Icon, _objectSpread$M({}, p, {
    "icon": CheckOutlined$1
  }), null);
};
CheckOutlined.displayName = "CheckOutlined";
CheckOutlined.inheritAttrs = false;
var CloseOutlined$1 = { "icon": { "tag": "svg", "attrs": { "fill-rule": "evenodd", "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M799.86 166.31c.02 0 .04.02.08.06l57.69 57.7c.04.03.05.05.06.08a.12.12 0 010 .06c0 .03-.02.05-.06.09L569.93 512l287.7 287.7c.04.04.05.06.06.09a.12.12 0 010 .07c0 .02-.02.04-.06.08l-57.7 57.69c-.03.04-.05.05-.07.06a.12.12 0 01-.07 0c-.03 0-.05-.02-.09-.06L512 569.93l-287.7 287.7c-.04.04-.06.05-.09.06a.12.12 0 01-.07 0c-.02 0-.04-.02-.08-.06l-57.69-57.7c-.04-.03-.05-.05-.06-.07a.12.12 0 010-.07c0-.03.02-.05.06-.09L454.07 512l-287.7-287.7c-.04-.04-.05-.06-.06-.09a.12.12 0 010-.07c0-.02.02-.04.06-.08l57.7-57.69c.03-.04.05-.05.07-.06a.12.12 0 01.07 0c.03 0 .05.02.09.06L512 454.07l287.7-287.7c.04-.04.06-.05.09-.06a.12.12 0 01.07 0z" } }] }, "name": "close", "theme": "outlined" };
const { createVNode: _createVNode$4K } = await importShared("vue");
function _objectSpread$L(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$M(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$M(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CloseOutlined = function CloseOutlined2(props2, context2) {
  var p = _objectSpread$L({}, props2, context2.attrs);
  return _createVNode$4K(Icon, _objectSpread$L({}, p, {
    "icon": CloseOutlined$1
  }), null);
};
CloseOutlined.displayName = "CloseOutlined";
CloseOutlined.inheritAttrs = false;
var CloseCircleFilled$1 = { "icon": { "tag": "svg", "attrs": { "fill-rule": "evenodd", "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm127.98 274.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z" } }] }, "name": "close-circle", "theme": "filled" };
const { createVNode: _createVNode$4J } = await importShared("vue");
function _objectSpread$K(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$L(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$L(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CloseCircleFilled = function CloseCircleFilled2(props2, context2) {
  var p = _objectSpread$K({}, props2, context2.attrs);
  return _createVNode$4J(Icon, _objectSpread$K({}, p, {
    "icon": CloseCircleFilled$1
  }), null);
};
CloseCircleFilled.displayName = "CloseCircleFilled";
CloseCircleFilled.inheritAttrs = false;
var SearchOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z" } }] }, "name": "search", "theme": "outlined" };
const { createVNode: _createVNode$4I } = await importShared("vue");
function _objectSpread$J(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$K(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$K(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var SearchOutlined = function SearchOutlined2(props2, context2) {
  var p = _objectSpread$J({}, props2, context2.attrs);
  return _createVNode$4I(Icon, _objectSpread$J({}, p, {
    "icon": SearchOutlined$1
  }), null);
};
SearchOutlined.displayName = "SearchOutlined";
SearchOutlined.inheritAttrs = false;
const { createVNode: _createVNode$4H } = await importShared("vue");
function getIcons(props2) {
  var slots = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var loading = props2.loading, multiple = props2.multiple, prefixCls2 = props2.prefixCls;
  var suffixIcon = props2.suffixIcon || slots.suffixIcon && slots.suffixIcon();
  var clearIcon = props2.clearIcon || slots.clearIcon && slots.clearIcon();
  var menuItemSelectedIcon = props2.menuItemSelectedIcon || slots.menuItemSelectedIcon && slots.menuItemSelectedIcon();
  var removeIcon = props2.removeIcon || slots.removeIcon && slots.removeIcon();
  var mergedClearIcon = clearIcon;
  if (!clearIcon) {
    mergedClearIcon = _createVNode$4H(CloseCircleFilled, null, null);
  }
  var mergedSuffixIcon = null;
  if (suffixIcon !== void 0) {
    mergedSuffixIcon = suffixIcon;
  } else if (loading) {
    mergedSuffixIcon = _createVNode$4H(LoadingOutlined, {
      "spin": true
    }, null);
  } else {
    var iconCls = "".concat(prefixCls2, "-suffix");
    mergedSuffixIcon = function mergedSuffixIcon2(_ref) {
      var open6 = _ref.open, showSearch = _ref.showSearch;
      if (open6 && showSearch) {
        return _createVNode$4H(SearchOutlined, {
          "class": iconCls
        }, null);
      }
      return _createVNode$4H(DownOutlined, {
        "class": iconCls
      }, null);
    };
  }
  var mergedItemIcon = null;
  if (menuItemSelectedIcon !== void 0) {
    mergedItemIcon = menuItemSelectedIcon;
  } else if (multiple) {
    mergedItemIcon = _createVNode$4H(CheckOutlined, null, null);
  } else {
    mergedItemIcon = null;
  }
  var mergedRemoveIcon = null;
  if (removeIcon !== void 0) {
    mergedRemoveIcon = removeIcon;
  } else {
    mergedRemoveIcon = _createVNode$4H(CloseOutlined, null, null);
  }
  return {
    clearIcon: mergedClearIcon,
    suffixIcon: mergedSuffixIcon,
    itemIcon: mergedItemIcon,
    removeIcon: mergedRemoveIcon
  };
}
const { createVNode: _createVNode$4G, resolveDirective: _resolveDirective$j } = await importShared("vue");
const { computed: computed$Q, defineComponent: defineComponent$2H, ref: ref$H } = await importShared("vue");
var SelectProps = function SelectProps2() {
  return _extends$1(_extends$1({}, omit$1(BaseProps(), ["inputIcon", "mode", "getInputElement", "backfill", "class", "style"])), {
    value: {
      type: [Array, Object, String, Number]
    },
    defaultValue: {
      type: [Array, Object, String, Number]
    },
    notFoundContent: PropTypes.VNodeChild,
    suffixIcon: PropTypes.VNodeChild,
    itemIcon: PropTypes.VNodeChild,
    size: PropTypes.oneOf(tuple("small", "middle", "large", "default")),
    mode: PropTypes.oneOf(tuple("multiple", "tags", "SECRET_COMBOBOX_MODE_DO_NOT_USE")),
    bordered: PropTypes.looseBool.def(true),
    transitionName: PropTypes.string.def("slide-up"),
    choiceTransitionName: PropTypes.string.def("")
  });
};
var Select$2 = defineComponent$2H({
  name: "ASelect",
  Option: Option$3,
  OptGroup: OptGroup$1,
  inheritAttrs: false,
  props: SelectProps(),
  SECRET_COMBOBOX_MODE_DO_NOT_USE: "SECRET_COMBOBOX_MODE_DO_NOT_USE",
  emits: ["change", "update:value"],
  slots: ["notFoundContent", "suffixIcon", "itemIcon", "removeIcon", "clearIcon", "dropdownRender", "option"],
  setup: function setup22(props2, _ref) {
    var attrs = _ref.attrs, emit = _ref.emit, slots = _ref.slots, expose = _ref.expose;
    var selectRef = ref$H(null);
    var focus27 = function focus28() {
      if (selectRef.value) {
        selectRef.value.focus();
      }
    };
    var blur24 = function blur25() {
      if (selectRef.value) {
        selectRef.value.blur();
      }
    };
    var mode4 = computed$Q(function() {
      var mode5 = props2.mode;
      if (mode5 === "combobox") {
        return void 0;
      }
      if (mode5 === Select$2.SECRET_COMBOBOX_MODE_DO_NOT_USE) {
        return "combobox";
      }
      return mode5;
    });
    var _useConfigInject = useConfigInject("select", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction, configProvider = _useConfigInject.configProvider;
    var mergedClassName = computed$Q(function() {
      var _classNames;
      return classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-lg"), props2.size === "large"), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-sm"), props2.size === "small"), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-borderless"), !props2.bordered), _classNames));
    });
    var triggerChange5 = function triggerChange6() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      emit("update:value", args[0]);
      emit.apply(void 0, ["change"].concat(args));
    };
    expose({
      blur: blur24,
      focus: focus27
    });
    return function() {
      var _a;
      var notFoundContent = props2.notFoundContent, _props$listHeight = props2.listHeight, listHeight = _props$listHeight === void 0 ? 256 : _props$listHeight, _props$listItemHeight = props2.listItemHeight, listItemHeight = _props$listItemHeight === void 0 ? 24 : _props$listItemHeight, getPopupContainer = props2.getPopupContainer, dropdownClassName = props2.dropdownClassName, virtual = props2.virtual, dropdownMatchSelectWidth = props2.dropdownMatchSelectWidth;
      var renderEmpty2 = configProvider.renderEmpty, getContextPopupContainer = configProvider.getPopupContainer;
      var isMultiple2 = mode4.value === "multiple" || mode4.value === "tags";
      var mergedNotFound;
      if (notFoundContent !== void 0) {
        mergedNotFound = notFoundContent;
      } else if (slots.notFoundContent) {
        mergedNotFound = slots.notFoundContent();
      } else if (mode4.value === "combobox") {
        mergedNotFound = null;
      } else {
        mergedNotFound = renderEmpty2("Select");
      }
      var _getIcons = getIcons(_extends$1(_extends$1({}, props2), {
        multiple: isMultiple2,
        prefixCls: prefixCls2.value
      }), slots), suffixIcon = _getIcons.suffixIcon, itemIcon = _getIcons.itemIcon, removeIcon = _getIcons.removeIcon, clearIcon = _getIcons.clearIcon;
      var selectProps = omit$1(props2, ["prefixCls", "suffixIcon", "itemIcon", "removeIcon", "clearIcon", "size", "bordered"]);
      var rcSelectRtlDropDownClassName = classNames(dropdownClassName, _defineProperty$U({}, "".concat(prefixCls2.value, "-dropdown-").concat(direction.value), direction.value === "rtl"));
      return _createVNode$4G(Select$3, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
        "ref": selectRef,
        "virtual": virtual,
        "dropdownMatchSelectWidth": dropdownMatchSelectWidth
      }, selectProps), attrs), {}, {
        "listHeight": listHeight,
        "listItemHeight": listItemHeight,
        "mode": mode4.value,
        "prefixCls": prefixCls2.value,
        "direction": direction.value,
        "inputIcon": suffixIcon,
        "menuItemSelectedIcon": itemIcon,
        "removeIcon": removeIcon,
        "clearIcon": clearIcon,
        "notFoundContent": mergedNotFound,
        "class": [mergedClassName.value, attrs.class],
        "getPopupContainer": getPopupContainer || getContextPopupContainer,
        "dropdownClassName": rcSelectRtlDropDownClassName,
        "onChange": triggerChange5,
        "dropdownRender": selectProps.dropdownRender || slots.dropdownRender
      }), {
        default: function _default8() {
          return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
        },
        option: slots.option
      });
    };
  }
});
Select$2.install = function(app) {
  app.component(Select$2.name, Select$2);
  app.component(Select$2.Option.displayName, Select$2.Option);
  app.component(Select$2.OptGroup.displayName, Select$2.OptGroup);
  return app;
};
var SelectOption = Select$2.Option;
var SelectOptGroup = Select$2.OptGroup;
const inputProps = {
  prefixCls: PropTypes.string,
  inputPrefixCls: PropTypes.string,
  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  placeholder: {
    type: [String, Number]
  },
  type: PropTypes.string.def("text"),
  name: PropTypes.string,
  size: {
    type: String
  },
  disabled: PropTypes.looseBool,
  readonly: PropTypes.looseBool,
  addonBefore: PropTypes.VNodeChild,
  addonAfter: PropTypes.VNodeChild,
  prefix: PropTypes.VNodeChild,
  suffix: PropTypes.VNodeChild,
  autofocus: PropTypes.looseBool,
  allowClear: PropTypes.looseBool,
  lazy: PropTypes.looseBool.def(true),
  maxlength: PropTypes.number,
  loading: PropTypes.looseBool,
  onPressEnter: PropTypes.func,
  onKeydown: PropTypes.func,
  onKeyup: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  onChange: PropTypes.func,
  onInput: PropTypes.func,
  "onUpdate:value": PropTypes.func
};
const { createVNode: _createVNode$4F } = await importShared("vue");
const { defineComponent: defineComponent$2G } = await importShared("vue");
function hasPrefixSuffix(instance) {
  return !!(getComponent(instance, "prefix") || getComponent(instance, "suffix") || instance.$props.allowClear);
}
var ClearableInputType = ["text", "input"];
var ClearableLabeledInput = defineComponent$2G({
  name: "ClearableLabeledInput",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    inputType: PropTypes.oneOf(tuple("text", "input")),
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    allowClear: PropTypes.looseBool,
    element: PropTypes.VNodeChild,
    handleReset: PropTypes.func,
    disabled: PropTypes.looseBool,
    size: PropTypes.oneOf(tuple("small", "large", "default")),
    suffix: PropTypes.VNodeChild,
    prefix: PropTypes.VNodeChild,
    addonBefore: PropTypes.VNodeChild,
    addonAfter: PropTypes.VNodeChild,
    readonly: PropTypes.looseBool,
    isFocused: PropTypes.looseBool
  },
  methods: {
    renderClearIcon: function renderClearIcon(prefixCls2) {
      var _this$$props = this.$props, allowClear = _this$$props.allowClear, value26 = _this$$props.value, disabled = _this$$props.disabled, readonly = _this$$props.readonly, inputType = _this$$props.inputType, handleReset3 = _this$$props.handleReset;
      if (!allowClear) {
        return null;
      }
      var showClearIcon = !disabled && !readonly && value26 !== void 0 && value26 !== null && value26 !== "";
      var className = inputType === ClearableInputType[0] ? "".concat(prefixCls2, "-textarea-clear-icon") : "".concat(prefixCls2, "-clear-icon");
      return _createVNode$4F(CloseCircleFilled, {
        "onClick": handleReset3,
        "class": classNames(className, _defineProperty$U({}, "".concat(className, "-hidden"), !showClearIcon)),
        "role": "button"
      }, null);
    },
    renderSuffix: function renderSuffix(prefixCls2) {
      var _this$$props2 = this.$props, suffix = _this$$props2.suffix, allowClear = _this$$props2.allowClear;
      if (suffix || allowClear) {
        return _createVNode$4F("span", {
          "class": "".concat(prefixCls2, "-suffix")
        }, [this.renderClearIcon(prefixCls2), suffix]);
      }
      return null;
    },
    renderLabeledIcon: function renderLabeledIcon(prefixCls2, element) {
      var _classNames2;
      var _a;
      var props2 = this.$props;
      var style3 = this.$attrs.style;
      var suffix = this.renderSuffix(prefixCls2);
      if (!hasPrefixSuffix(this)) {
        return cloneElement(element, {
          value: props2.value
        });
      }
      var prefix = props2.prefix ? _createVNode$4F("span", {
        "class": "".concat(prefixCls2, "-prefix")
      }, [props2.prefix]) : null;
      var affixWrapperCls = classNames((_a = this.$attrs) === null || _a === void 0 ? void 0 : _a.class, "".concat(prefixCls2, "-affix-wrapper"), (_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-affix-wrapper-focused"), props2.isFocused), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-affix-wrapper-disabled"), props2.disabled), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-affix-wrapper-sm"), props2.size === "small"), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-affix-wrapper-lg"), props2.size === "large"), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-affix-wrapper-input-with-clear-btn"), props2.suffix && props2.allowClear && this.$props.value), _classNames2));
      return _createVNode$4F("span", {
        "class": affixWrapperCls,
        "style": style3
      }, [prefix, cloneElement(element, {
        style: null,
        value: props2.value,
        class: getInputClassName(prefixCls2, props2.size, props2.disabled)
      }), suffix]);
    },
    renderInputWithLabel: function renderInputWithLabel(prefixCls2, labeledElement) {
      var _classNames4;
      var _this$$props3 = this.$props, addonBefore = _this$$props3.addonBefore, addonAfter = _this$$props3.addonAfter, size = _this$$props3.size;
      var _this$$attrs = this.$attrs, style3 = _this$$attrs.style, className = _this$$attrs.class;
      if (!addonBefore && !addonAfter) {
        return labeledElement;
      }
      var wrapperClassName = "".concat(prefixCls2, "-group");
      var addonClassName = "".concat(wrapperClassName, "-addon");
      var addonBeforeNode = addonBefore ? _createVNode$4F("span", {
        "class": addonClassName
      }, [addonBefore]) : null;
      var addonAfterNode = addonAfter ? _createVNode$4F("span", {
        "class": addonClassName
      }, [addonAfter]) : null;
      var mergedWrapperClassName = classNames("".concat(prefixCls2, "-wrapper"), _defineProperty$U({}, wrapperClassName, addonBefore || addonAfter));
      var mergedGroupClassName = classNames(className, "".concat(prefixCls2, "-group-wrapper"), (_classNames4 = {}, _defineProperty$U(_classNames4, "".concat(prefixCls2, "-group-wrapper-sm"), size === "small"), _defineProperty$U(_classNames4, "".concat(prefixCls2, "-group-wrapper-lg"), size === "large"), _classNames4));
      return _createVNode$4F("span", {
        "class": mergedGroupClassName,
        "style": style3
      }, [_createVNode$4F("span", {
        "class": mergedWrapperClassName
      }, [addonBeforeNode, cloneElement(labeledElement, {
        style: null
      }), addonAfterNode])]);
    },
    renderTextAreaWithClearIcon: function renderTextAreaWithClearIcon(prefixCls2, element) {
      var _this$$props4 = this.$props, value26 = _this$$props4.value, allowClear = _this$$props4.allowClear;
      var _this$$attrs2 = this.$attrs, style3 = _this$$attrs2.style, className = _this$$attrs2.class;
      if (!allowClear) {
        return cloneElement(element, {
          value: value26
        });
      }
      var affixWrapperCls = classNames(className, "".concat(prefixCls2, "-affix-wrapper"), "".concat(prefixCls2, "-affix-wrapper-textarea-with-clear-btn"));
      return _createVNode$4F("span", {
        "class": affixWrapperCls,
        "style": style3
      }, [cloneElement(element, {
        style: null,
        value: value26
      }), this.renderClearIcon(prefixCls2)]);
    },
    renderClearableLabeledInput: function renderClearableLabeledInput() {
      var _this$$props5 = this.$props, prefixCls2 = _this$$props5.prefixCls, inputType = _this$$props5.inputType, element = _this$$props5.element;
      if (inputType === ClearableInputType[0]) {
        return this.renderTextAreaWithClearIcon(prefixCls2, element);
      }
      return this.renderInputWithLabel(prefixCls2, this.renderLabeledIcon(prefixCls2, element));
    }
  },
  render: function render12() {
    return this.renderClearableLabeledInput();
  }
});
const { createVNode: _createVNode$4E } = await importShared("vue");
const { defineComponent: defineComponent$2F, inject: inject$1f, nextTick: nextTick$t, withDirectives: withDirectives$7 } = await importShared("vue");
function fixControlledValue(value26) {
  if (typeof value26 === "undefined" || value26 === null) {
    return "";
  }
  return value26;
}
function resolveOnChange(target, e2, onChange9) {
  if (onChange9) {
    var event = e2;
    if (e2.type === "click") {
      Object.defineProperty(event, "target", {
        writable: true
      });
      Object.defineProperty(event, "currentTarget", {
        writable: true
      });
      event.target = target;
      event.currentTarget = target;
      var originalInputValue = target.value;
      target.value = "";
      onChange9(event);
      target.value = originalInputValue;
      return;
    }
    onChange9(event);
  }
}
function getInputClassName(prefixCls2, size, disabled) {
  var _classNames;
  return classNames(prefixCls2, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-sm"), size === "small"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _classNames));
}
const Input = defineComponent$2F({
  name: "AInput",
  inheritAttrs: false,
  props: _extends$1({}, inputProps),
  setup: function setup23() {
    return {
      configProvider: inject$1f("configProvider", defaultConfigProvider),
      removePasswordTimeout: void 0,
      input: null,
      clearableInput: null
    };
  },
  data: function data4() {
    var props2 = this.$props;
    var value26 = typeof props2.value === "undefined" ? props2.defaultValue : props2.value;
    return {
      stateValue: typeof value26 === "undefined" ? "" : value26,
      isFocused: false
    };
  },
  watch: {
    value: function value(val) {
      this.stateValue = val;
    }
  },
  mounted: function mounted5() {
    var _this = this;
    nextTick$t(function() {
      _this.clearPasswordValueAttribute();
    });
  },
  beforeUnmount: function beforeUnmount4() {
    if (this.removePasswordTimeout) {
      clearTimeout(this.removePasswordTimeout);
    }
  },
  methods: {
    handleInputFocus: function handleInputFocus(e2) {
      this.isFocused = true;
      this.onFocus && this.onFocus(e2);
    },
    handleInputBlur: function handleInputBlur(e2) {
      this.isFocused = false;
      this.onBlur && this.onBlur(e2);
    },
    focus: function focus() {
      this.input.focus();
    },
    blur: function blur() {
      this.input.blur();
    },
    select: function select() {
      this.input.select();
    },
    saveClearableInput: function saveClearableInput(input) {
      this.clearableInput = input;
    },
    saveInput: function saveInput(input) {
      this.input = input;
    },
    setValue: function setValue(value26, callback) {
      if (this.stateValue === value26) {
        return;
      }
      if (!hasProp(this, "value")) {
        this.stateValue = value26;
      } else {
        this.$forceUpdate();
      }
      nextTick$t(function() {
        callback && callback();
      });
    },
    triggerChange: function triggerChange(e2) {
      this.$emit("update:value", e2.target.value);
      this.$emit("change", e2);
      this.$emit("input", e2);
    },
    handleReset: function handleReset(e2) {
      var _this2 = this;
      this.setValue("", function() {
        _this2.focus();
      });
      resolveOnChange(this.input, e2, this.triggerChange);
    },
    renderInput: function renderInput(prefixCls2, _ref) {
      var addonBefore = _ref.addonBefore, addonAfter = _ref.addonAfter;
      var otherProps = omit$1(this.$props, ["prefixCls", "onPressEnter", "addonBefore", "addonAfter", "prefix", "suffix", "allowClear", "defaultValue", "lazy", "size", "inputPrefixCls", "loading"]);
      var handleKeyDown22 = this.handleKeyDown, handleChange22 = this.handleChange, handleInputFocus22 = this.handleInputFocus, handleInputBlur22 = this.handleInputBlur, size = this.size, disabled = this.disabled, $attrs = this.$attrs;
      var inputProps2 = _extends$1(_extends$1(_extends$1({}, otherProps), $attrs), {
        onKeydown: handleKeyDown22,
        class: classNames(getInputClassName(prefixCls2, size, disabled), _defineProperty$U({}, $attrs.class, $attrs.class && !addonBefore && !addonAfter)),
        ref: this.saveInput,
        key: "ant-input",
        onInput: handleChange22,
        onChange: handleChange22,
        onFocus: handleInputFocus22,
        onBlur: handleInputBlur22
      });
      if (!inputProps2.autofocus) {
        delete inputProps2.autofocus;
      }
      var inputNode = _createVNode$4E("input", inputProps2, null);
      return withDirectives$7(inputNode, [[antInput]]);
    },
    clearPasswordValueAttribute: function clearPasswordValueAttribute() {
      var _this3 = this;
      this.removePasswordTimeout = setTimeout(function() {
        if (_this3.input && _this3.input.getAttribute && _this3.input.getAttribute("type") === "password" && _this3.input.hasAttribute("value")) {
          _this3.input.removeAttribute("value");
        }
      });
    },
    handleChange: function handleChange(e2) {
      var _e$target = e2.target, value26 = _e$target.value, composing = _e$target.composing, isComposing = _e$target.isComposing;
      if ((isComposing || composing) && this.lazy || this.stateValue === value26) return;
      this.setValue(value26, this.clearPasswordValueAttribute);
      resolveOnChange(this.input, e2, this.triggerChange);
    },
    handleKeyDown: function handleKeyDown(e2) {
      if (e2.keyCode === 13) {
        this.$emit("pressEnter", e2);
      }
      this.$emit("keydown", e2);
    }
  },
  render: function render13() {
    var customizePrefixCls = this.$props.prefixCls;
    var _this$$data = this.$data, stateValue = _this$$data.stateValue, isFocused = _this$$data.isFocused;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("input", customizePrefixCls);
    var addonAfter = getComponent(this, "addonAfter");
    var addonBefore = getComponent(this, "addonBefore");
    var suffix = getComponent(this, "suffix");
    var prefix = getComponent(this, "prefix");
    var props2 = _extends$1(_extends$1(_extends$1({}, this.$attrs), getOptionProps(this)), {
      prefixCls: prefixCls2,
      inputType: "input",
      value: fixControlledValue(stateValue),
      element: this.renderInput(prefixCls2, {
        addonAfter,
        addonBefore
      }),
      handleReset: this.handleReset,
      addonAfter,
      addonBefore,
      suffix,
      prefix,
      isFocused
    });
    return _createVNode$4E(ClearableLabeledInput, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
      "ref": this.saveClearableInput
    }), null);
  }
});
const { createVNode: _createVNode$4D } = await importShared("vue");
const { defineComponent: defineComponent$2E, inject: inject$1e } = await importShared("vue");
const Group$3 = defineComponent$2E({
  name: "AInputGroup",
  props: {
    prefixCls: PropTypes.string,
    size: PropTypes.oneOf(tuple("small", "large", "default")),
    compact: PropTypes.looseBool
  },
  setup: function setup24() {
    return {
      configProvider: inject$1e("configProvider", defaultConfigProvider)
    };
  },
  computed: {
    classes: function classes() {
      var _ref;
      var customizePrefixCls = this.prefixCls, size = this.size, _this$compact = this.compact, compact = _this$compact === void 0 ? false : _this$compact, configProvider = this.configProvider;
      var getPrefixCls2 = configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("input-group", customizePrefixCls);
      return _ref = {}, _defineProperty$U(_ref, "".concat(prefixCls2), true), _defineProperty$U(_ref, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_ref, "".concat(prefixCls2, "-sm"), size === "small"), _defineProperty$U(_ref, "".concat(prefixCls2, "-compact"), compact), _ref;
    }
  },
  render: function render14() {
    return _createVNode$4D("span", {
      "class": this.classes
    }, [getSlot(this)]);
  }
});
var applePhone = /iPhone/i;
var appleIpod = /iPod/i;
var appleTablet = /iPad/i;
var androidPhone = /\bAndroid(?:.+)Mobile\b/i;
var androidTablet = /Android/i;
var amazonPhone = /\bAndroid(?:.+)SD4930UR\b/i;
var amazonTablet = /\bAndroid(?:.+)(?:KF[A-Z]{2,4})\b/i;
var windowsPhone = /Windows Phone/i;
var windowsTablet = /\bWindows(?:.+)ARM\b/i;
var otherBlackberry = /BlackBerry/i;
var otherBlackberry10 = /BB10/i;
var otherOpera = /Opera Mini/i;
var otherChrome = /\b(CriOS|Chrome)(?:.+)Mobile/i;
var otherFirefox = /Mobile(?:.+)Firefox\b/i;
function match(regex, userAgent) {
  return regex.test(userAgent);
}
function isMobile(userAgent) {
  var ua = userAgent || (typeof navigator !== "undefined" ? navigator.userAgent : "");
  var tmp = ua.split("[FBAN");
  if (typeof tmp[1] !== "undefined") {
    var _tmp = tmp;
    var _tmp2 = _slicedToArray$2(_tmp, 1);
    ua = _tmp2[0];
  }
  tmp = ua.split("Twitter");
  if (typeof tmp[1] !== "undefined") {
    var _tmp3 = tmp;
    var _tmp4 = _slicedToArray$2(_tmp3, 1);
    ua = _tmp4[0];
  }
  var result = {
    apple: {
      phone: match(applePhone, ua) && !match(windowsPhone, ua),
      ipod: match(appleIpod, ua),
      tablet: !match(applePhone, ua) && match(appleTablet, ua) && !match(windowsPhone, ua),
      device: (match(applePhone, ua) || match(appleIpod, ua) || match(appleTablet, ua)) && !match(windowsPhone, ua)
    },
    amazon: {
      phone: match(amazonPhone, ua),
      tablet: !match(amazonPhone, ua) && match(amazonTablet, ua),
      device: match(amazonPhone, ua) || match(amazonTablet, ua)
    },
    android: {
      phone: !match(windowsPhone, ua) && match(amazonPhone, ua) || !match(windowsPhone, ua) && match(androidPhone, ua),
      tablet: !match(windowsPhone, ua) && !match(amazonPhone, ua) && !match(androidPhone, ua) && (match(amazonTablet, ua) || match(androidTablet, ua)),
      device: !match(windowsPhone, ua) && (match(amazonPhone, ua) || match(amazonTablet, ua) || match(androidPhone, ua) || match(androidTablet, ua)) || match(/\bokhttp\b/i, ua)
    },
    windows: {
      phone: match(windowsPhone, ua),
      tablet: match(windowsTablet, ua),
      device: match(windowsPhone, ua) || match(windowsTablet, ua)
    },
    other: {
      blackberry: match(otherBlackberry, ua),
      blackberry10: match(otherBlackberry10, ua),
      opera: match(otherOpera, ua),
      firefox: match(otherFirefox, ua),
      chrome: match(otherChrome, ua),
      device: match(otherBlackberry, ua) || match(otherBlackberry10, ua) || match(otherOpera, ua) || match(otherFirefox, ua) || match(otherChrome, ua)
    },
    // Additional
    any: null,
    phone: null,
    tablet: null
  };
  result.any = result.apple.device || result.android.device || result.windows.device || result.other.device;
  result.phone = result.apple.phone || result.android.phone || result.windows.phone;
  result.tablet = result.apple.tablet || result.android.tablet || result.windows.tablet;
  return result;
}
var defaultResult = _extends$1(_extends$1({}, isMobile()), {
  isMobile
});
var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: "transitionstart",
    WebkitTransition: "webkitTransitionStart",
    MozTransition: "mozTransitionStart",
    OTransition: "oTransitionStart",
    msTransition: "MSTransitionStart"
  },
  animationstart: {
    animation: "animationstart",
    WebkitAnimation: "webkitAnimationStart",
    MozAnimation: "mozAnimationStart",
    OAnimation: "oAnimationStart",
    msAnimation: "MSAnimationStart"
  }
};
var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: "transitionend",
    WebkitTransition: "webkitTransitionEnd",
    MozTransition: "mozTransitionEnd",
    OTransition: "oTransitionEnd",
    msTransition: "MSTransitionEnd"
  },
  animationend: {
    animation: "animationend",
    WebkitAnimation: "webkitAnimationEnd",
    MozAnimation: "mozAnimationEnd",
    OAnimation: "oAnimationEnd",
    msAnimation: "MSAnimationEnd"
  }
};
var startEvents = [];
var endEvents = [];
function detectEvents() {
  var testEl = document.createElement("div");
  var style3 = testEl.style;
  if (!("AnimationEvent" in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }
  if (!("TransitionEvent" in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }
  function process2(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];
        for (var styleName in baseEvents) {
          if (styleName in style3) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }
  process2(START_EVENT_NAME_MAP, startEvents);
  process2(END_EVENT_NAME_MAP, endEvents);
}
if (typeof window !== "undefined" && typeof document !== "undefined") {
  detectEvents();
}
function addEventListener$1(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}
function removeEventListener$1(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}
var TransitionEvents = {
  // Start events
  startEvents,
  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    startEvents.forEach(function(startEvent) {
      addEventListener$1(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }
    startEvents.forEach(function(startEvent) {
      removeEventListener$1(node, startEvent, eventListener);
    });
  },
  // End events
  endEvents,
  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    endEvents.forEach(function(endEvent) {
      addEventListener$1(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }
    endEvents.forEach(function(endEvent) {
      removeEventListener$1(node, endEvent, eventListener);
    });
  }
};
const { nextTick: nextTick$s, inject: inject$1d, defineComponent: defineComponent$2D } = await importShared("vue");
var styleForPesudo;
function isHidden$1(element) {
  return !element || element.offsetParent === null;
}
function isNotGrey(color) {
  var match5 = (color || "").match(/rgba?\((\d*), (\d*), (\d*)(, [\.\d]*)?\)/);
  if (match5 && match5[1] && match5[2] && match5[3]) {
    return !(match5[1] === match5[2] && match5[2] === match5[3]);
  }
  return true;
}
const Wave = defineComponent$2D({
  name: "Wave",
  props: ["insertExtraNode"],
  setup: function setup25() {
    var configProvider = inject$1d("configProvider", defaultConfigProvider);
    return {
      configProvider
    };
  },
  mounted: function mounted6() {
    var _this = this;
    nextTick$s(function() {
      var node = findDOMNode(_this);
      if (node.nodeType !== 1) {
        return;
      }
      _this.instance = _this.bindAnimationEvent(node);
    });
  },
  beforeUnmount: function beforeUnmount5() {
    if (this.instance) {
      this.instance.cancel();
    }
    if (this.clickWaveTimeoutId) {
      clearTimeout(this.clickWaveTimeoutId);
    }
  },
  methods: {
    onClick: function onClick2(node, waveColor) {
      if (!node || isHidden$1(node) || node.className.indexOf("-leave") >= 0) {
        return;
      }
      var insertExtraNode = this.$props.insertExtraNode;
      this.extraNode = document.createElement("div");
      var extraNode = this.extraNode;
      extraNode.className = "ant-click-animating-node";
      var attributeName = this.getAttributeName();
      node.removeAttribute(attributeName);
      node.setAttribute(attributeName, "true");
      styleForPesudo = styleForPesudo || document.createElement("style");
      if (waveColor && waveColor !== "#ffffff" && waveColor !== "rgb(255, 255, 255)" && isNotGrey(waveColor) && !/rgba\(\d*, \d*, \d*, 0\)/.test(waveColor) && // any transparent rgba color
      waveColor !== "transparent") {
        if (this.csp && this.csp.nonce) {
          styleForPesudo.nonce = this.csp.nonce;
        }
        extraNode.style.borderColor = waveColor;
        styleForPesudo.innerHTML = "\n        [ant-click-animating-without-extra-node='true']::after, .ant-click-animating-node {\n          --antd-wave-shadow-color: ".concat(waveColor, ";\n        }");
        if (!document.body.contains(styleForPesudo)) {
          document.body.appendChild(styleForPesudo);
        }
      }
      if (insertExtraNode) {
        node.appendChild(extraNode);
      }
      TransitionEvents.addStartEventListener(node, this.onTransitionStart);
      TransitionEvents.addEndEventListener(node, this.onTransitionEnd);
    },
    onTransitionStart: function onTransitionStart(e2) {
      if (this._.isUnmounted) return;
      var node = findDOMNode(this);
      if (!e2 || e2.target !== node) {
        return;
      }
      if (!this.animationStart) {
        this.resetEffect(node);
      }
    },
    onTransitionEnd: function onTransitionEnd(e2) {
      if (!e2 || e2.animationName !== "fadeEffect") {
        return;
      }
      this.resetEffect(e2.target);
    },
    getAttributeName: function getAttributeName() {
      var insertExtraNode = this.$props.insertExtraNode;
      return insertExtraNode ? "ant-click-animating" : "ant-click-animating-without-extra-node";
    },
    bindAnimationEvent: function bindAnimationEvent(node) {
      var _this2 = this;
      if (!node || !node.getAttribute || node.getAttribute("disabled") || node.className.indexOf("disabled") >= 0) {
        return;
      }
      var onClick22 = function onClick32(e2) {
        if (e2.target.tagName === "INPUT" || isHidden$1(e2.target)) {
          return;
        }
        _this2.resetEffect(node);
        var waveColor = getComputedStyle(node).getPropertyValue("border-top-color") || // Firefox Compatible
        getComputedStyle(node).getPropertyValue("border-color") || getComputedStyle(node).getPropertyValue("background-color");
        _this2.clickWaveTimeoutId = window.setTimeout(function() {
          return _this2.onClick(node, waveColor);
        }, 0);
        wrapperRaf.cancel(_this2.animationStartId);
        _this2.animationStart = true;
        _this2.animationStartId = wrapperRaf(function() {
          _this2.animationStart = false;
        }, 10);
      };
      node.addEventListener("click", onClick22, true);
      return {
        cancel: function cancel2() {
          node.removeEventListener("click", onClick22, true);
        }
      };
    },
    resetEffect: function resetEffect(node) {
      if (!node || node === this.extraNode || !(node instanceof Element)) {
        return;
      }
      var insertExtraNode = this.$props.insertExtraNode;
      var attributeName = this.getAttributeName();
      node.setAttribute(attributeName, "false");
      if (styleForPesudo) {
        styleForPesudo.innerHTML = "";
      }
      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {
        node.removeChild(this.extraNode);
      }
      TransitionEvents.removeStartEventListener(node, this.onTransitionStart);
      TransitionEvents.removeEndEventListener(node, this.onTransitionEnd);
    }
  },
  render: function render15() {
    var _a, _b;
    var csp = this.configProvider.csp;
    if (csp) {
      this.csp = csp;
    }
    return (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)[0];
  }
});
var ButtonTypes = tuple("default", "primary", "ghost", "dashed", "link", "text");
var ButtonShapes = tuple("circle", "round");
var ButtonHTMLTypes = tuple("submit", "button", "reset");
function convertLegacyProps(type3) {
  if (type3 === "danger") {
    return {
      danger: true
    };
  }
  return {
    type: type3
  };
}
var buttonProps = function buttonProps2() {
  return {
    prefixCls: PropTypes.string,
    type: PropTypes.oneOf(ButtonTypes),
    htmlType: PropTypes.oneOf(ButtonHTMLTypes).def("button"),
    shape: PropTypes.oneOf(ButtonShapes),
    size: {
      type: String
    },
    loading: {
      type: [Boolean, Object],
      default: function _default8() {
        return false;
      }
    },
    disabled: PropTypes.looseBool,
    ghost: PropTypes.looseBool,
    block: PropTypes.looseBool,
    danger: PropTypes.looseBool,
    icon: PropTypes.VNodeChild,
    href: PropTypes.string,
    target: PropTypes.string,
    title: PropTypes.string,
    onClick: {
      type: Function
    }
  };
};
const devWarning = function(valid, component, message) {
  warningOnce(valid, "[ant-design-vue: ".concat(component, "] ").concat(message));
};
const { createVNode: _createVNode$4C } = await importShared("vue");
const { computed: computed$P, defineComponent: defineComponent$2C, onBeforeUnmount: onBeforeUnmount$c, onMounted: onMounted$k, onUpdated: onUpdated$2, ref: ref$G, Text: Text$2, watch: watch$p, watchEffect: watchEffect$6 } = await importShared("vue");
var rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);
var props$2 = buttonProps();
function isUnborderedButtonType(type3) {
  return type3 === "text" || type3 === "link";
}
const Button$1 = defineComponent$2C({
  name: "AButton",
  inheritAttrs: false,
  __ANT_BUTTON: true,
  props: props$2,
  slots: ["icon"],
  emits: ["click"],
  setup: function setup26(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs, emit = _ref.emit;
    var _useConfigInject = useConfigInject("btn", props2), prefixCls2 = _useConfigInject.prefixCls, autoInsertSpaceInButton = _useConfigInject.autoInsertSpaceInButton, direction = _useConfigInject.direction;
    var buttonNodeRef = ref$G(null);
    var delayTimeoutRef = ref$G(void 0);
    var isNeedInserted = false;
    var innerLoading = ref$G(false);
    var hasTwoCNChar = ref$G(false);
    var autoInsertSpace = computed$P(function() {
      return autoInsertSpaceInButton.value !== false;
    });
    var loadingOrDelay = computed$P(function() {
      return _typeof$3(props2.loading) === "object" && props2.loading.delay ? props2.loading.delay || true : !!props2.loading;
    });
    watch$p(loadingOrDelay, function(val) {
      clearTimeout(delayTimeoutRef.value);
      if (typeof loadingOrDelay.value === "number") {
        delayTimeoutRef.value = window.setTimeout(function() {
          innerLoading.value = val;
        }, loadingOrDelay.value);
      } else {
        innerLoading.value = val;
      }
    }, {
      immediate: true
    });
    var classes4 = computed$P(function() {
      var _ref2;
      var type3 = props2.type, shape = props2.shape, size = props2.size, ghost = props2.ghost, block = props2.block, danger = props2.danger;
      var pre = prefixCls2.value;
      var sizeCls = "";
      switch (size) {
        case "large":
          sizeCls = "lg";
          break;
        case "small":
          sizeCls = "sm";
          break;
      }
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(pre), true), _defineProperty$U(_ref2, "".concat(pre, "-").concat(type3), type3), _defineProperty$U(_ref2, "".concat(pre, "-").concat(shape), shape), _defineProperty$U(_ref2, "".concat(pre, "-").concat(sizeCls), sizeCls), _defineProperty$U(_ref2, "".concat(pre, "-loading"), innerLoading.value), _defineProperty$U(_ref2, "".concat(pre, "-background-ghost"), ghost && !isUnborderedButtonType(type3)), _defineProperty$U(_ref2, "".concat(pre, "-two-chinese-chars"), hasTwoCNChar.value && autoInsertSpace.value), _defineProperty$U(_ref2, "".concat(pre, "-block"), block), _defineProperty$U(_ref2, "".concat(pre, "-dangerous"), !!danger), _defineProperty$U(_ref2, "".concat(pre, "-rtl"), direction.value === "rtl"), _ref2;
    });
    var fixTwoCNChar = function fixTwoCNChar2() {
      var node = buttonNodeRef.value;
      if (!node || autoInsertSpaceInButton.value === false) {
        return;
      }
      var buttonText = node.textContent;
      if (isNeedInserted && isTwoCNChar(buttonText)) {
        if (!hasTwoCNChar.value) {
          hasTwoCNChar.value = true;
        }
      } else if (hasTwoCNChar.value) {
        hasTwoCNChar.value = false;
      }
    };
    var handleClick5 = function handleClick6(event) {
      if (innerLoading.value || props2.disabled) {
        event.preventDefault();
        return;
      }
      emit("click", event);
    };
    var insertSpace = function insertSpace2(child, needInserted) {
      var SPACE = needInserted ? " " : "";
      if (child.type === Text$2) {
        var text = child.children.trim();
        if (isTwoCNChar(text)) {
          text = text.split("").join(SPACE);
        }
        return _createVNode$4C("span", null, [text]);
      }
      return child;
    };
    watchEffect$6(function() {
      devWarning(!(props2.ghost && isUnborderedButtonType(props2.type)), "Button", "`link` or `text` button can't be a `ghost` button.");
    });
    onMounted$k(fixTwoCNChar);
    onUpdated$2(fixTwoCNChar);
    onBeforeUnmount$c(function() {
      delayTimeoutRef.value && clearTimeout(delayTimeoutRef.value);
    });
    return function() {
      var children = flattenChildren(getPropsSlot(slots, props2));
      var icon = getPropsSlot(slots, props2, "icon");
      isNeedInserted = children.length === 1 && !icon && !isUnborderedButtonType(props2.type);
      var type3 = props2.type, htmlType = props2.htmlType, disabled = props2.disabled, href = props2.href, title = props2.title, target = props2.target;
      var iconType = innerLoading.value ? "loading" : icon;
      var buttonProps3 = _extends$1(_extends$1({}, attrs), {
        title,
        disabled,
        class: [classes4.value, attrs.class, _defineProperty$U({}, "".concat(prefixCls2.value, "-icon-only"), children.length === 0 && !!iconType)],
        onClick: handleClick5
      });
      var iconNode = innerLoading.value ? _createVNode$4C(LoadingOutlined, null, null) : icon;
      var kids = children.map(function(child) {
        return insertSpace(child, isNeedInserted && autoInsertSpace.value);
      });
      if (href !== void 0) {
        return _createVNode$4C("a", _objectSpread2$2(_objectSpread2$2({}, buttonProps3), {}, {
          "href": href,
          "target": target,
          "ref": buttonNodeRef
        }), [iconNode, kids]);
      }
      var buttonNode = _createVNode$4C("button", _objectSpread2$2(_objectSpread2$2({}, buttonProps3), {}, {
        "ref": buttonNodeRef,
        "type": htmlType
      }), [iconNode, kids]);
      if (isUnborderedButtonType(type3)) {
        return buttonNode;
      }
      return _createVNode$4C(Wave, {
        "ref": "wave"
      }, {
        default: function _default8() {
          return [buttonNode];
        }
      });
    };
  }
});
const { createVNode: _createVNode$4B } = await importShared("vue");
const { computed: computed$O, defineComponent: defineComponent$2B } = await importShared("vue");
var buttonGroupProps = {
  prefixCls: PropTypes.string,
  size: {
    type: String
  }
};
const ButtonGroup$1 = defineComponent$2B({
  name: "AButtonGroup",
  props: buttonGroupProps,
  setup: function setup27(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("btn-group", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var classes4 = computed$O(function() {
      var _ref2;
      var size = props2.size;
      var sizeCls = "";
      switch (size) {
        case "large":
          sizeCls = "lg";
          break;
        case "small":
          sizeCls = "sm";
          break;
      }
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2.value), true), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-").concat(sizeCls), sizeCls), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _ref2;
    });
    return function() {
      var _a;
      return _createVNode$4B("div", {
        "class": classes4.value
      }, [flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots))]);
    };
  }
});
Button$1.Group = ButtonGroup$1;
Button$1.install = function(app) {
  app.component(Button$1.name, Button$1);
  app.component(ButtonGroup$1.name, ButtonGroup$1);
  return app;
};
const { createVNode: _createVNode$4A } = await importShared("vue");
var __rest$O = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2A, inject: inject$1c } = await importShared("vue");
const Search$1 = defineComponent$2A({
  name: "AInputSearch",
  inheritAttrs: false,
  props: _extends$1(_extends$1({}, inputProps), {
    // 不能设置默认值 https://github.com/vueComponent/ant-design-vue/issues/1916
    enterButton: PropTypes.VNodeChild,
    onSearch: PropTypes.func
  }),
  setup: function setup28() {
    return {
      configProvider: inject$1c("configProvider", defaultConfigProvider),
      input: null
    };
  },
  methods: {
    saveInput: function saveInput2(node) {
      this.input = node;
    },
    handleChange: function handleChange2(e2) {
      this.$emit("update:value", e2.target.value);
      if (e2 && e2.target && e2.type === "click") {
        this.$emit("search", e2.target.value, e2);
      }
      this.$emit("change", e2);
    },
    handleSearch: function handleSearch(e2) {
      if (this.loading || this.disabled) {
        return;
      }
      this.$emit("search", this.input.stateValue, e2);
      if (!defaultResult.tablet) {
        this.input.focus();
      }
    },
    focus: function focus2() {
      this.input.focus();
    },
    blur: function blur2() {
      this.input.blur();
    },
    renderLoading: function renderLoading(prefixCls2) {
      var size = this.$props.size;
      var enterButton = getComponent(this, "enterButton");
      enterButton = enterButton || enterButton === "";
      if (enterButton) {
        return _createVNode$4A(Button$1, {
          "class": "".concat(prefixCls2, "-button"),
          "type": "primary",
          "size": size,
          "key": "enterButton"
        }, {
          default: function _default8() {
            return [_createVNode$4A(LoadingOutlined, null, null)];
          }
        });
      }
      return _createVNode$4A(LoadingOutlined, {
        "class": "".concat(prefixCls2, "-icon"),
        "key": "loadingIcon"
      }, null);
    },
    renderSuffix: function renderSuffix2(prefixCls2) {
      var loading = this.loading;
      var suffix = getComponent(this, "suffix");
      var enterButton = getComponent(this, "enterButton");
      enterButton = enterButton || enterButton === "";
      if (loading && !enterButton) {
        return [suffix, this.renderLoading(prefixCls2)];
      }
      if (enterButton) return suffix;
      var icon = _createVNode$4A(SearchOutlined, {
        "class": "".concat(prefixCls2, "-icon"),
        "key": "searchIcon",
        "onClick": this.handleSearch
      }, null);
      if (suffix) {
        return [suffix, icon];
      }
      return icon;
    },
    renderAddonAfter: function renderAddonAfter(prefixCls2) {
      var size = this.size, disabled = this.disabled, loading = this.loading;
      var btnClassName = "".concat(prefixCls2, "-button");
      var enterButton = getComponent(this, "enterButton");
      enterButton = enterButton || enterButton === "";
      var addonAfter = getComponent(this, "addonAfter");
      if (loading && enterButton) {
        return [this.renderLoading(prefixCls2), addonAfter];
      }
      if (!enterButton) return addonAfter;
      var enterButtonAsElement = Array.isArray(enterButton) ? enterButton[0] : enterButton;
      var button;
      var isAntdButton = enterButtonAsElement.type && isPlainObject(enterButtonAsElement.type) && enterButtonAsElement.type.__ANT_BUTTON;
      if (enterButtonAsElement.tagName === "button" || isAntdButton) {
        button = cloneElement(enterButtonAsElement, _extends$1(_extends$1({
          key: "enterButton",
          class: isAntdButton ? btnClassName : ""
        }, isAntdButton ? {
          size
        } : {}), {
          onClick: this.handleSearch
        }));
      } else {
        button = _createVNode$4A(Button$1, {
          "class": btnClassName,
          "type": "primary",
          "size": size,
          "disabled": disabled,
          "key": "enterButton",
          "onClick": this.handleSearch
        }, {
          default: function _default8() {
            return [enterButton === true || enterButton === "" ? _createVNode$4A(SearchOutlined, null, null) : enterButton];
          }
        });
      }
      if (addonAfter) {
        return [button, addonAfter];
      }
      return button;
    }
  },
  render: function render16() {
    var _a = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), customizePrefixCls = _a.prefixCls, customizeInputPrefixCls = _a.inputPrefixCls, size = _a.size, className = _a.class, restProps = __rest$O(_a, ["prefixCls", "inputPrefixCls", "size", "class"]);
    delete restProps.onSearch;
    delete restProps.loading;
    delete restProps.enterButton;
    delete restProps.addonBefore;
    delete restProps["onUpdate:value"];
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("input-search", customizePrefixCls);
    var inputPrefixCls = getPrefixCls2("input", customizeInputPrefixCls);
    var enterButton = getComponent(this, "enterButton");
    var addonBefore = getComponent(this, "addonBefore");
    enterButton = enterButton || enterButton === "";
    var inputClassName;
    if (enterButton) {
      var _classNames;
      inputClassName = classNames(prefixCls2, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-enter-button"), !!enterButton), _defineProperty$U(_classNames, "".concat(prefixCls2, "-").concat(size), !!size), _classNames));
    } else {
      inputClassName = classNames(prefixCls2, className);
    }
    var inputProps2 = _extends$1(_extends$1({}, restProps), {
      prefixCls: inputPrefixCls,
      size,
      suffix: this.renderSuffix(prefixCls2),
      prefix: getComponent(this, "prefix"),
      addonAfter: this.renderAddonAfter(prefixCls2),
      addonBefore,
      class: inputClassName,
      onPressEnter: this.handleSearch,
      onChange: this.handleChange
    });
    return _createVNode$4A(Input, _objectSpread2$2(_objectSpread2$2({}, inputProps2), {}, {
      "ref": this.saveInput
    }), null);
  }
});
var HIDDEN_TEXTAREA_STYLE = "\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n";
var SIZING_STYLE = ["letter-spacing", "line-height", "padding-top", "padding-bottom", "font-family", "font-weight", "font-size", "font-variant", "text-rendering", "text-transform", "width", "text-indent", "padding-left", "padding-right", "border-width", "box-sizing"];
var computedStyleCache = {};
var hiddenTextarea;
function calculateNodeStyling(node) {
  var useCache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var nodeRef = node.getAttribute("id") || node.getAttribute("data-reactid") || node.getAttribute("name");
  if (useCache && computedStyleCache[nodeRef]) {
    return computedStyleCache[nodeRef];
  }
  var style3 = window.getComputedStyle(node);
  var boxSizing = style3.getPropertyValue("box-sizing") || style3.getPropertyValue("-moz-box-sizing") || style3.getPropertyValue("-webkit-box-sizing");
  var paddingSize = parseFloat(style3.getPropertyValue("padding-bottom")) + parseFloat(style3.getPropertyValue("padding-top"));
  var borderSize = parseFloat(style3.getPropertyValue("border-bottom-width")) + parseFloat(style3.getPropertyValue("border-top-width"));
  var sizingStyle = SIZING_STYLE.map(function(name) {
    return "".concat(name, ":").concat(style3.getPropertyValue(name));
  }).join(";");
  var nodeInfo = {
    sizingStyle,
    paddingSize,
    borderSize,
    boxSizing
  };
  if (useCache && nodeRef) {
    computedStyleCache[nodeRef] = nodeInfo;
  }
  return nodeInfo;
}
function calculateNodeHeight(uiTextNode) {
  var useCache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var minRows = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
  var maxRows = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  if (!hiddenTextarea) {
    hiddenTextarea = document.createElement("textarea");
    document.body.appendChild(hiddenTextarea);
  }
  if (uiTextNode.getAttribute("wrap")) {
    hiddenTextarea.setAttribute("wrap", uiTextNode.getAttribute("wrap"));
  } else {
    hiddenTextarea.removeAttribute("wrap");
  }
  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache), paddingSize = _calculateNodeStyling.paddingSize, borderSize = _calculateNodeStyling.borderSize, boxSizing = _calculateNodeStyling.boxSizing, sizingStyle = _calculateNodeStyling.sizingStyle;
  hiddenTextarea.setAttribute("style", "".concat(sizingStyle, ";").concat(HIDDEN_TEXTAREA_STYLE));
  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || "";
  var minHeight = Number.MIN_SAFE_INTEGER;
  var maxHeight = Number.MAX_SAFE_INTEGER;
  var height = hiddenTextarea.scrollHeight;
  var overflowY;
  if (boxSizing === "border-box") {
    height += borderSize;
  } else if (boxSizing === "content-box") {
    height -= paddingSize;
  }
  if (minRows !== null || maxRows !== null) {
    hiddenTextarea.value = " ";
    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;
    if (minRows !== null) {
      minHeight = singleRowHeight * minRows;
      if (boxSizing === "border-box") {
        minHeight = minHeight + paddingSize + borderSize;
      }
      height = Math.max(minHeight, height);
    }
    if (maxRows !== null) {
      maxHeight = singleRowHeight * maxRows;
      if (boxSizing === "border-box") {
        maxHeight = maxHeight + paddingSize + borderSize;
      }
      overflowY = height > maxHeight ? "" : "hidden";
      height = Math.min(maxHeight, height);
    }
  }
  return {
    height: "".concat(height, "px"),
    minHeight: "".concat(minHeight, "px"),
    maxHeight: "".concat(maxHeight, "px"),
    overflowY,
    resize: "none"
  };
}
const { createVNode: _createVNode$4z } = await importShared("vue");
const { nextTick: nextTick$r } = await importShared("vue");
const { defineComponent: defineComponent$2z, withDirectives: withDirectives$6 } = await importShared("vue");
var RESIZE_STATUS_NONE = 0;
var RESIZE_STATUS_RESIZING = 1;
var RESIZE_STATUS_RESIZED = 2;
var TextAreaProps$1 = _extends$1(_extends$1({}, inputProps), {
  autosize: {
    type: [Boolean, Object],
    default: void 0
  },
  autoSize: {
    type: [Boolean, Object],
    default: void 0
  },
  onResize: PropTypes.func
});
var ResizableTextArea = defineComponent$2z({
  name: "ResizableTextArea",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: TextAreaProps$1,
  setup: function setup29() {
    return {
      nextFrameActionId: void 0,
      textArea: null,
      resizeFrameId: void 0
    };
  },
  data: function data5() {
    return {
      textareaStyles: {},
      resizeStatus: RESIZE_STATUS_NONE
    };
  },
  watch: {
    value: function value2() {
      var _this = this;
      nextTick$r(function() {
        _this.resizeTextarea();
      });
    }
  },
  mounted: function mounted7() {
    this.resizeTextarea();
  },
  beforeUnmount: function beforeUnmount6() {
    wrapperRaf.cancel(this.nextFrameActionId);
    wrapperRaf.cancel(this.resizeFrameId);
  },
  methods: {
    saveTextArea: function saveTextArea(textArea) {
      this.textArea = textArea;
    },
    handleResize: function handleResize(size) {
      var resizeStatus = this.$data.resizeStatus;
      if (resizeStatus !== RESIZE_STATUS_NONE) {
        return;
      }
      this.$emit("resize", size);
    },
    resizeOnNextFrame: function resizeOnNextFrame() {
      wrapperRaf.cancel(this.nextFrameActionId);
      this.nextFrameActionId = wrapperRaf(this.resizeTextarea);
    },
    resizeTextarea: function resizeTextarea() {
      var _this2 = this;
      var autoSize = this.$props.autoSize || this.$props.autosize;
      if (!autoSize || !this.textArea) {
        return;
      }
      var minRows = autoSize.minRows, maxRows = autoSize.maxRows;
      var textareaStyles = calculateNodeHeight(this.textArea, false, minRows, maxRows);
      this.setState({
        textareaStyles,
        resizeStatus: RESIZE_STATUS_RESIZING
      }, function() {
        wrapperRaf.cancel(_this2.resizeFrameId);
        _this2.resizeFrameId = wrapperRaf(function() {
          _this2.setState({
            resizeStatus: RESIZE_STATUS_RESIZED
          }, function() {
            _this2.resizeFrameId = wrapperRaf(function() {
              _this2.setState({
                resizeStatus: RESIZE_STATUS_NONE
              });
              _this2.fixFirefoxAutoScroll();
            });
          });
        });
      });
    },
    // https://github.com/ant-design/ant-design/issues/21870
    fixFirefoxAutoScroll: function fixFirefoxAutoScroll() {
      try {
        if (document.activeElement === this.textArea) {
          var currentStart = this.textArea.selectionStart;
          var currentEnd = this.textArea.selectionEnd;
          this.textArea.setSelectionRange(currentStart, currentEnd);
        }
      } catch (e2) {
      }
    },
    renderTextArea: function renderTextArea() {
      var _this3 = this;
      var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
      var prefixCls2 = props2.prefixCls, autoSize = props2.autoSize, autosize = props2.autosize, disabled = props2.disabled, className = props2.class;
      var _this$$data = this.$data, textareaStyles = _this$$data.textareaStyles, resizeStatus = _this$$data.resizeStatus;
      warning$5(autosize === void 0, "Input.TextArea", "autosize is deprecated, please use autoSize instead.");
      var otherProps = omit$1(props2, ["prefixCls", "onPressEnter", "autoSize", "autosize", "defaultValue", "allowClear", "type", "lazy"]);
      var cls = classNames(prefixCls2, className, _defineProperty$U({}, "".concat(prefixCls2, "-disabled"), disabled));
      if ("value" in otherProps) {
        otherProps.value = otherProps.value || "";
      }
      var style3 = _extends$1(_extends$1(_extends$1({}, props2.style), textareaStyles), resizeStatus === RESIZE_STATUS_RESIZING ? {
        overflowX: "hidden",
        overflowY: "hidden"
      } : null);
      var textareaProps = _extends$1(_extends$1({}, otherProps), {
        style: style3,
        class: cls
      });
      if (!textareaProps.autofocus) {
        delete textareaProps.autofocus;
      }
      return _createVNode$4z(ResizeObserver, {
        "onResize": this.handleResize,
        "disabled": !(autoSize || autosize)
      }, {
        default: function _default8() {
          return [withDirectives$6(_createVNode$4z("textarea", _objectSpread2$2(_objectSpread2$2({}, textareaProps), {}, {
            "ref": _this3.saveTextArea
          }), null), [[antInput]])];
        }
      });
    }
  },
  render: function render17() {
    return this.renderTextArea();
  }
});
const { createVNode: _createVNode$4y } = await importShared("vue");
const { defineComponent: defineComponent$2y, inject: inject$1b, nextTick: nextTick$q } = await importShared("vue");
var TextAreaProps = _extends$1(_extends$1({}, inputProps), {
  autosize: withUndefined(PropTypes.oneOfType([Object, Boolean])),
  autoSize: withUndefined(PropTypes.oneOfType([Object, Boolean])),
  showCount: PropTypes.looseBool,
  onCompositionstart: PropTypes.func,
  onCompositionend: PropTypes.func
});
const TextArea = defineComponent$2y({
  name: "ATextarea",
  inheritAttrs: false,
  props: _extends$1({}, TextAreaProps),
  setup: function setup30() {
    return {
      configProvider: inject$1b("configProvider", defaultConfigProvider),
      resizableTextArea: null,
      clearableInput: null
    };
  },
  data: function data6() {
    var value26 = typeof this.value === "undefined" ? this.defaultValue : this.value;
    return {
      stateValue: typeof value26 === "undefined" ? "" : value26
    };
  },
  watch: {
    value: function value3(val) {
      this.stateValue = val;
    }
  },
  mounted: function mounted8() {
    nextTick$q(function() {
    });
  },
  methods: {
    setValue: function setValue2(value26, callback) {
      if (!hasProp(this, "value")) {
        this.stateValue = value26;
      } else {
        this.$forceUpdate();
      }
      nextTick$q(function() {
        callback && callback();
      });
    },
    handleKeyDown: function handleKeyDown2(e2) {
      if (e2.keyCode === 13) {
        this.$emit("pressEnter", e2);
      }
      this.$emit("keydown", e2);
    },
    triggerChange: function triggerChange2(e2) {
      this.$emit("update:value", e2.target.value);
      this.$emit("change", e2);
      this.$emit("input", e2);
    },
    handleChange: function handleChange3(e2) {
      var _this2 = this;
      var _e$target = e2.target, value26 = _e$target.value, composing = _e$target.composing, isComposing = _e$target.isComposing;
      if ((isComposing || composing) && this.lazy || this.stateValue === value26) return;
      this.setValue(e2.target.value, function() {
        var _a;
        (_a = _this2.resizableTextArea) === null || _a === void 0 ? void 0 : _a.resizeTextarea();
      });
      resolveOnChange(this.resizableTextArea.textArea, e2, this.triggerChange);
    },
    focus: function focus3() {
      this.resizableTextArea.textArea.focus();
    },
    blur: function blur3() {
      this.resizableTextArea.textArea.blur();
    },
    saveTextArea: function saveTextArea2(resizableTextArea) {
      this.resizableTextArea = resizableTextArea;
    },
    saveClearableInput: function saveClearableInput2(clearableInput) {
      this.clearableInput = clearableInput;
    },
    handleReset: function handleReset2(e2) {
      var _this3 = this;
      this.setValue("", function() {
        _this3.resizableTextArea.renderTextArea();
        _this3.focus();
      });
      resolveOnChange(this.resizableTextArea.textArea, e2, this.triggerChange);
    },
    renderTextArea: function renderTextArea2(prefixCls2) {
      var props2 = getOptionProps(this);
      var _this$$attrs = this.$attrs, style3 = _this$$attrs.style, customClass = _this$$attrs.class;
      var resizeProps = _extends$1(_extends$1(_extends$1({}, props2), this.$attrs), {
        style: !props2.showCount && style3,
        class: !props2.showCount && customClass,
        showCount: null,
        prefixCls: prefixCls2,
        onInput: this.handleChange,
        onChange: this.handleChange,
        onKeydown: this.handleKeyDown
      });
      return _createVNode$4y(ResizableTextArea, _objectSpread2$2(_objectSpread2$2({}, resizeProps), {}, {
        "ref": this.saveTextArea
      }), null);
    }
  },
  render: function render18() {
    var stateValue = this.stateValue, customizePrefixCls = this.prefixCls, maxlength = this.maxlength, showCount = this.showCount;
    var _this$$attrs2 = this.$attrs, style3 = _this$$attrs2.style, customClass = _this$$attrs2.class;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("input", customizePrefixCls);
    var value26 = fixControlledValue(stateValue);
    var hasMaxlength = Number(maxlength) > 0;
    value26 = hasMaxlength ? value26.slice(0, maxlength) : value26;
    var props2 = _extends$1(_extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), {
      prefixCls: prefixCls2,
      inputType: "text",
      element: this.renderTextArea(prefixCls2),
      handleReset: this.handleReset
    });
    var textareaNode = _createVNode$4y(ClearableLabeledInput, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
      "value": value26,
      "ref": this.saveClearableInput
    }), null);
    if (showCount) {
      var valueLength = _toConsumableArray(value26).length;
      var dataCount = "".concat(valueLength).concat(hasMaxlength ? " / ".concat(maxlength) : "");
      textareaNode = _createVNode$4y("div", {
        "class": classNames("".concat(prefixCls2, "-textarea"), "".concat(prefixCls2, "-textarea-show-count"), customClass),
        "style": style3,
        "data-count": dataCount
      }, [textareaNode]);
    }
    return textareaNode;
  }
});
var EyeOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z" } }] }, "name": "eye", "theme": "outlined" };
const { createVNode: _createVNode$4x } = await importShared("vue");
function _objectSpread$I(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$J(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$J(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var EyeOutlined = function EyeOutlined2(props2, context2) {
  var p = _objectSpread$I({}, props2, context2.attrs);
  return _createVNode$4x(Icon, _objectSpread$I({}, p, {
    "icon": EyeOutlined$1
  }), null);
};
EyeOutlined.displayName = "EyeOutlined";
EyeOutlined.inheritAttrs = false;
var EyeInvisibleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z" } }, { "tag": "path", "attrs": { "d": "M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z" } }] }, "name": "eye-invisible", "theme": "outlined" };
const { createVNode: _createVNode$4w } = await importShared("vue");
function _objectSpread$H(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$I(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$I(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var EyeInvisibleOutlined = function EyeInvisibleOutlined2(props2, context2) {
  var p = _objectSpread$H({}, props2, context2.attrs);
  return _createVNode$4w(Icon, _objectSpread$H({}, p, {
    "icon": EyeInvisibleOutlined$1
  }), null);
};
EyeInvisibleOutlined.displayName = "EyeInvisibleOutlined";
EyeInvisibleOutlined.inheritAttrs = false;
const { createVNode: _createVNode$4v } = await importShared("vue");
var __rest$N = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2x, inject: inject$1a } = await importShared("vue");
var ActionMap = {
  click: "onClick",
  hover: "onMouseover"
};
const Password = defineComponent$2x({
  name: "AInputPassword",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: _extends$1(_extends$1({}, inputProps), {
    prefixCls: PropTypes.string,
    inputPrefixCls: PropTypes.string,
    action: PropTypes.string.def("click"),
    visibilityToggle: PropTypes.looseBool.def(true),
    iconRender: PropTypes.func.def(function(visible9) {
      return visible9 ? _createVNode$4v(EyeOutlined, null, null) : _createVNode$4v(EyeInvisibleOutlined, null, null);
    })
  }),
  setup: function setup31() {
    return {
      input: null,
      configProvider: inject$1a("configProvider", defaultConfigProvider)
    };
  },
  data: function data7() {
    return {
      visible: false
    };
  },
  methods: {
    saveInput: function saveInput3(node) {
      this.input = node;
    },
    focus: function focus4() {
      this.input.focus();
    },
    blur: function blur4() {
      this.input.blur();
    },
    onVisibleChange: function onVisibleChange() {
      if (this.disabled) {
        return;
      }
      this.setState({
        visible: !this.visible
      });
    },
    getIcon: function getIcon(prefixCls2) {
      var _iconProps;
      var action = this.$props.action;
      var iconTrigger = ActionMap[action] || "";
      var iconRender = this.$slots.iconRender || this.$props.iconRender;
      var icon = iconRender(this.visible);
      var iconProps = (_iconProps = {}, _defineProperty$U(_iconProps, iconTrigger, this.onVisibleChange), _defineProperty$U(_iconProps, "onMousedown", function onMousedown2(e2) {
        e2.preventDefault();
      }), _defineProperty$U(_iconProps, "onMouseup", function onMouseup(e2) {
        e2.preventDefault();
      }), _defineProperty$U(_iconProps, "class", "".concat(prefixCls2, "-icon")), _defineProperty$U(_iconProps, "key", "passwordIcon"), _iconProps);
      return cloneElement(icon, iconProps);
    }
  },
  render: function render19() {
    var _a = getOptionProps(this), customizePrefixCls = _a.prefixCls, customizeInputPrefixCls = _a.inputPrefixCls, size = _a.size;
    _a.suffix;
    _a.action;
    var visibilityToggle = _a.visibilityToggle;
    _a.iconRender;
    var restProps = __rest$N(_a, ["prefixCls", "inputPrefixCls", "size", "suffix", "action", "visibilityToggle", "iconRender"]);
    var className = this.$attrs.class;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var inputPrefixCls = getPrefixCls2("input", customizeInputPrefixCls);
    var prefixCls2 = getPrefixCls2("input-password", customizePrefixCls);
    var suffixIcon = visibilityToggle && this.getIcon(prefixCls2);
    var inputClassName = classNames(prefixCls2, className, _defineProperty$U({}, "".concat(prefixCls2, "-").concat(size), !!size));
    var inputProps2 = _extends$1(_extends$1(_extends$1(_extends$1({}, restProps), {
      prefixCls: inputPrefixCls,
      size,
      suffix: suffixIcon,
      prefix: getComponent(this, "prefix"),
      addonAfter: getComponent(this, "addonAfter"),
      addonBefore: getComponent(this, "addonBefore")
    }), this.$attrs), {
      type: this.visible ? "text" : "password",
      class: inputClassName,
      ref: "input"
    });
    return _createVNode$4v(Input, _objectSpread2$2(_objectSpread2$2({}, inputProps2), {}, {
      "ref": this.saveInput
    }), null);
  }
});
Input.Group = Group$3;
Input.Search = Search$1;
Input.TextArea = TextArea;
Input.Password = Password;
Input.install = function(app) {
  app.component(Input.name, Input);
  app.component(Input.Group.name, Input.Group);
  app.component(Input.Search.name, Input.Search);
  app.component(Input.TextArea.name, Input.TextArea);
  app.component(Input.Password.name, Input.Password);
  return app;
};
var Option$2 = function Option2() {
  return null;
};
Option$2.isSelectOption = true;
Option$2.displayName = "AAutoCompleteOption";
var OptGroup2 = function OptGroup3() {
  return null;
};
OptGroup2.isSelectOptGroup = true;
OptGroup2.displayName = "AAutoCompleteOptGroup";
const { createVNode: _createVNode$4u } = await importShared("vue");
const { defineComponent: defineComponent$2w, inject: inject$19, provide: provide$n } = await importShared("vue");
function isSelectOptionOrSelectOptGroup(child) {
  var _a, _b;
  return ((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.isSelectOption) || ((_b = child === null || child === void 0 ? void 0 : child.type) === null || _b === void 0 ? void 0 : _b.isSelectOptGroup);
}
var autoCompleteProps = _extends$1(_extends$1({}, SelectProps()), {
  dataSource: PropTypes.array,
  dropdownMenuStyle: PropTypes.style,
  optionLabelProp: PropTypes.string,
  dropdownMatchSelectWidth: PropTypes.looseBool
});
var AutoCompleteOption = Option$2;
var AutoCompleteOptGroup = OptGroup2;
var AutoComplete = defineComponent$2w({
  name: "AAutoComplete",
  inheritAttrs: false,
  props: _extends$1(_extends$1({}, autoCompleteProps), {
    prefixCls: PropTypes.string,
    showSearch: PropTypes.looseBool,
    transitionName: PropTypes.string.def("slide-up"),
    choiceTransitionName: PropTypes.string.def("zoom"),
    autofocus: PropTypes.looseBool,
    backfill: PropTypes.looseBool,
    optionLabelProp: PropTypes.string.def("children"),
    filterOption: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.func]).def(false),
    defaultActiveFirstOption: PropTypes.looseBool.def(true)
  }),
  emits: ["change", "select", "focus", "blur"],
  Option: Option$2,
  OptGroup: OptGroup2,
  setup: function setup32(props2, _ref) {
    var slots = _ref.slots;
    warning$5(!(props2.dataSource !== void 0 || "dataSource" in slots), "AutoComplete", "`dataSource` is deprecated, please use `options` instead.");
    return {
      configProvider: inject$19("configProvider", defaultConfigProvider),
      popupRef: null,
      select: null
    };
  },
  created: function created4() {
    provide$n("savePopupRef", this.savePopupRef);
  },
  methods: {
    savePopupRef: function savePopupRef(ref2) {
      this.popupRef = ref2;
    },
    saveSelect: function saveSelect(node) {
      this.select = node;
    },
    getInputElement: function getInputElement() {
      var children = getSlot(this);
      var element = children.length ? children[0] : _createVNode$4u(Input, {
        "lazy": false
      }, null);
      return element;
    },
    focus: function focus5() {
      if (this.select) {
        this.select.focus();
      }
    },
    blur: function blur5() {
      if (this.select) {
        this.select.blur();
      }
    }
  },
  render: function render20() {
    var _cls;
    var size = this.size, customizePrefixCls = this.prefixCls, dataSource3 = this.dataSource;
    var optionChildren;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("select", customizePrefixCls);
    var className = this.$attrs.class;
    var cls = (_cls = {}, _defineProperty$U(_cls, className, !!className), _defineProperty$U(_cls, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_cls, "".concat(prefixCls2, "-sm"), size === "small"), _defineProperty$U(_cls, "".concat(prefixCls2, "-show-search"), true), _defineProperty$U(_cls, "".concat(prefixCls2, "-auto-complete"), true), _cls);
    var childArray = getSlot(this, "dataSource");
    if ("options" in this.$slots) {
      childArray = getSlot(this, "options");
    }
    if (childArray.length && isSelectOptionOrSelectOptGroup(childArray[0])) {
      optionChildren = childArray;
    } else {
      optionChildren = dataSource3 ? dataSource3.map(function(item) {
        if (isValidElement(item)) {
          return item;
        }
        switch (_typeof$3(item)) {
          case "string":
            return _createVNode$4u(Option$2, {
              "key": item,
              "value": item
            }, {
              default: function _default8() {
                return [item];
              }
            });
          case "object":
            return _createVNode$4u(Option$2, {
              "key": item.value,
              "value": item.value
            }, {
              default: function _default8() {
                return [item.text];
              }
            });
          default:
            throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`.");
        }
      }) : [];
    }
    var selectProps = _extends$1(_extends$1(_extends$1({}, omit$1(getOptionProps(this), ["dataSource", "optionLabelProp"])), this.$attrs), {
      mode: Select$2.SECRET_COMBOBOX_MODE_DO_NOT_USE,
      // optionLabelProp,
      getInputElement: this.getInputElement,
      notFoundContent: getComponent(this, "notFoundContent"),
      // placeholder: '',
      class: cls,
      ref: this.saveSelect
    });
    return _createVNode$4u(Select$2, selectProps, {
      default: function _default8() {
        return [optionChildren];
      }
    });
  }
});
AutoComplete.install = function(app) {
  app.component(AutoComplete.name, AutoComplete);
  app.component(AutoComplete.Option.displayName, AutoComplete.Option);
  app.component(AutoComplete.OptGroup.displayName, AutoComplete.OptGroup);
  return app;
};
var CheckCircleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z" } }, { "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z" } }] }, "name": "check-circle", "theme": "outlined" };
const { createVNode: _createVNode$4t } = await importShared("vue");
function _objectSpread$G(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$H(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$H(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CheckCircleOutlined = function CheckCircleOutlined2(props2, context2) {
  var p = _objectSpread$G({}, props2, context2.attrs);
  return _createVNode$4t(Icon, _objectSpread$G({}, p, {
    "icon": CheckCircleOutlined$1
  }), null);
};
CheckCircleOutlined.displayName = "CheckCircleOutlined";
CheckCircleOutlined.inheritAttrs = false;
var ExclamationCircleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z" } }, { "tag": "path", "attrs": { "d": "M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z" } }] }, "name": "exclamation-circle", "theme": "outlined" };
const { createVNode: _createVNode$4s } = await importShared("vue");
function _objectSpread$F(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$G(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$G(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ExclamationCircleOutlined = function ExclamationCircleOutlined2(props2, context2) {
  var p = _objectSpread$F({}, props2, context2.attrs);
  return _createVNode$4s(Icon, _objectSpread$F({}, p, {
    "icon": ExclamationCircleOutlined$1
  }), null);
};
ExclamationCircleOutlined.displayName = "ExclamationCircleOutlined";
ExclamationCircleOutlined.inheritAttrs = false;
var InfoCircleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z" } }, { "tag": "path", "attrs": { "d": "M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z" } }] }, "name": "info-circle", "theme": "outlined" };
const { createVNode: _createVNode$4r } = await importShared("vue");
function _objectSpread$E(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$F(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$F(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var InfoCircleOutlined = function InfoCircleOutlined2(props2, context2) {
  var p = _objectSpread$E({}, props2, context2.attrs);
  return _createVNode$4r(Icon, _objectSpread$E({}, p, {
    "icon": InfoCircleOutlined$1
  }), null);
};
InfoCircleOutlined.displayName = "InfoCircleOutlined";
InfoCircleOutlined.inheritAttrs = false;
var CloseCircleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "fill-rule": "evenodd", "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64c247.4 0 448 200.6 448 448S759.4 960 512 960 64 759.4 64 512 264.6 64 512 64zm0 76c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm128.01 198.83c.03 0 .05.01.09.06l45.02 45.01a.2.2 0 01.05.09.12.12 0 010 .07c0 .02-.01.04-.05.08L557.25 512l127.87 127.86a.27.27 0 01.05.06v.02a.12.12 0 010 .07c0 .03-.01.05-.05.09l-45.02 45.02a.2.2 0 01-.09.05.12.12 0 01-.07 0c-.02 0-.04-.01-.08-.05L512 557.25 384.14 685.12c-.04.04-.06.05-.08.05a.12.12 0 01-.07 0c-.03 0-.05-.01-.09-.05l-45.02-45.02a.2.2 0 01-.05-.09.12.12 0 010-.07c0-.02.01-.04.06-.08L466.75 512 338.88 384.14a.27.27 0 01-.05-.06l-.01-.02a.12.12 0 010-.07c0-.03.01-.05.05-.09l45.02-45.02a.2.2 0 01.09-.05.12.12 0 01.07 0c.02 0 .04.01.08.06L512 466.75l127.86-127.86c.04-.05.06-.06.08-.06a.12.12 0 01.07 0z" } }] }, "name": "close-circle", "theme": "outlined" };
const { createVNode: _createVNode$4q } = await importShared("vue");
function _objectSpread$D(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$E(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$E(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CloseCircleOutlined = function CloseCircleOutlined2(props2, context2) {
  var p = _objectSpread$D({}, props2, context2.attrs);
  return _createVNode$4q(Icon, _objectSpread$D({}, p, {
    "icon": CloseCircleOutlined$1
  }), null);
};
CloseCircleOutlined.displayName = "CloseCircleOutlined";
CloseCircleOutlined.inheritAttrs = false;
var CheckCircleFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z" } }] }, "name": "check-circle", "theme": "filled" };
const { createVNode: _createVNode$4p } = await importShared("vue");
function _objectSpread$C(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$D(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$D(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CheckCircleFilled = function CheckCircleFilled2(props2, context2) {
  var p = _objectSpread$C({}, props2, context2.attrs);
  return _createVNode$4p(Icon, _objectSpread$C({}, p, {
    "icon": CheckCircleFilled$1
  }), null);
};
CheckCircleFilled.displayName = "CheckCircleFilled";
CheckCircleFilled.inheritAttrs = false;
var ExclamationCircleFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z" } }] }, "name": "exclamation-circle", "theme": "filled" };
const { createVNode: _createVNode$4o } = await importShared("vue");
function _objectSpread$B(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$C(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$C(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ExclamationCircleFilled = function ExclamationCircleFilled2(props2, context2) {
  var p = _objectSpread$B({}, props2, context2.attrs);
  return _createVNode$4o(Icon, _objectSpread$B({}, p, {
    "icon": ExclamationCircleFilled$1
  }), null);
};
ExclamationCircleFilled.displayName = "ExclamationCircleFilled";
ExclamationCircleFilled.inheritAttrs = false;
var InfoCircleFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z" } }] }, "name": "info-circle", "theme": "filled" };
const { createVNode: _createVNode$4n } = await importShared("vue");
function _objectSpread$A(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$B(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$B(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var InfoCircleFilled = function InfoCircleFilled2(props2, context2) {
  var p = _objectSpread$A({}, props2, context2.attrs);
  return _createVNode$4n(Icon, _objectSpread$A({}, p, {
    "icon": InfoCircleFilled$1
  }), null);
};
InfoCircleFilled.displayName = "InfoCircleFilled";
InfoCircleFilled.inheritAttrs = false;
const { withDirectives: _withDirectives$5, vShow: _vShow$5, createVNode: _createVNode$4m } = await importShared("vue");
const { inject: inject$18, cloneVNode: cloneVNode$5, defineComponent: defineComponent$2v, ref: ref$F } = await importShared("vue");
function noop$G() {
}
var iconMapFilled = {
  success: CheckCircleFilled,
  info: InfoCircleFilled,
  error: CloseCircleFilled,
  warning: ExclamationCircleFilled
};
var iconMapOutlined = {
  success: CheckCircleOutlined,
  info: InfoCircleOutlined,
  error: CloseCircleOutlined,
  warning: ExclamationCircleOutlined
};
var AlertTypes = tuple("success", "info", "warning", "error");
var alertProps = {
  /**
   * Type of Alert styles, options: `success`, `info`, `warning`, `error`
   */
  type: PropTypes.oneOf(AlertTypes),
  /** Whether Alert can be closed */
  closable: PropTypes.looseBool,
  /** Close text to show */
  closeText: PropTypes.VNodeChild,
  /** Content of Alert */
  message: PropTypes.VNodeChild,
  /** Additional content of Alert */
  description: PropTypes.VNodeChild,
  /** Trigger when animation ending of Alert */
  afterClose: PropTypes.func.def(noop$G),
  /** Whether to show icon */
  showIcon: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  banner: PropTypes.looseBool,
  icon: PropTypes.VNodeChild,
  onClose: PropTypes.VNodeChild
};
var Alert = defineComponent$2v({
  name: "AAlert",
  inheritAttrs: false,
  props: alertProps,
  emits: ["close"],
  setup: function setup33(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit, attrs = _ref.attrs, expose = _ref.expose;
    var configProvider = inject$18("configProvider", defaultConfigProvider);
    var closing = ref$F(false);
    var closed = ref$F(false);
    var alertNode = ref$F();
    var handleClose2 = function handleClose3(e2) {
      e2.preventDefault();
      var dom = alertNode.value;
      dom.style.height = "".concat(dom.offsetHeight, "px");
      dom.style.height = "".concat(dom.offsetHeight, "px");
      closing.value = true;
      emit("close", e2);
    };
    var animationEnd = function animationEnd2() {
      var _a;
      closing.value = false;
      closed.value = true;
      (_a = props2.afterClose) === null || _a === void 0 ? void 0 : _a.call(props2);
    };
    expose({
      animationEnd
    });
    return function() {
      var _classNames;
      var customizePrefixCls = props2.prefixCls, banner = props2.banner;
      var getPrefixCls2 = configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("alert", customizePrefixCls);
      var closable = props2.closable, type3 = props2.type, showIcon = props2.showIcon;
      var closeText = getPropsSlot(slots, props2, "closeText");
      var description = getPropsSlot(slots, props2, "description");
      var message = getPropsSlot(slots, props2, "message");
      var icon = getPropsSlot(slots, props2, "icon");
      showIcon = banner && showIcon === void 0 ? true : showIcon;
      type3 = banner && type3 === void 0 ? "warning" : type3 || "info";
      var IconType = (description ? iconMapOutlined : iconMapFilled)[type3] || null;
      if (closeText) {
        closable = true;
      }
      var alertCls = classNames(prefixCls2, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-").concat(type3), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-closing"), closing.value), _defineProperty$U(_classNames, "".concat(prefixCls2, "-with-description"), !!description), _defineProperty$U(_classNames, "".concat(prefixCls2, "-no-icon"), !showIcon), _defineProperty$U(_classNames, "".concat(prefixCls2, "-banner"), !!banner), _defineProperty$U(_classNames, "".concat(prefixCls2, "-closable"), closable), _classNames));
      var closeIcon = closable ? _createVNode$4m("button", {
        "type": "button",
        "onClick": handleClose2,
        "class": "".concat(prefixCls2, "-close-icon"),
        "tabindex": 0
      }, [closeText ? _createVNode$4m("span", {
        "class": "".concat(prefixCls2, "-close-text")
      }, [closeText]) : _createVNode$4m(CloseOutlined, null, null)]) : null;
      var iconNode = icon && (isValidElement(icon) ? cloneVNode$5(icon, {
        class: "".concat(prefixCls2, "-icon")
      }) : _createVNode$4m("span", {
        "class": "".concat(prefixCls2, "-icon")
      }, [icon])) || _createVNode$4m(IconType, {
        "class": "".concat(prefixCls2, "-icon")
      }, null);
      var transitionProps = getTransitionProps("".concat(prefixCls2, "-slide-up"), {
        appear: false,
        onAfterLeave: animationEnd
      });
      return closed.value ? null : _createVNode$4m(Transition, transitionProps, {
        default: function _default8() {
          return [_withDirectives$5(_createVNode$4m("div", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
            "class": [attrs.class, alertCls],
            "data-show": !closing.value,
            "ref": alertNode
          }), [showIcon ? iconNode : null, _createVNode$4m("div", {
            "class": "".concat(prefixCls2, "-content")
          }, [_createVNode$4m("div", {
            "class": "".concat(prefixCls2, "-message")
          }, [message]), _createVNode$4m("div", {
            "class": "".concat(prefixCls2, "-description")
          }, [description])]), closeIcon]), [[_vShow$5, !closing.value]])];
        }
      });
    };
  }
});
const index$i = withInstall(Alert);
var responsiveArray = ["xxl", "xl", "lg", "md", "sm", "xs"];
var responsiveMap = {
  xs: "(max-width: 575px)",
  sm: "(min-width: 576px)",
  md: "(min-width: 768px)",
  lg: "(min-width: 992px)",
  xl: "(min-width: 1200px)",
  xxl: "(min-width: 1600px)"
};
var subscribers = /* @__PURE__ */ new Map();
var subUid = -1;
var screens = {};
var responsiveObserve = {
  matchHandlers: {},
  dispatch: function dispatch(pointMap) {
    screens = pointMap;
    subscribers.forEach(function(func) {
      return func(screens);
    });
    return subscribers.size >= 1;
  },
  subscribe: function subscribe(func) {
    if (!subscribers.size) this.register();
    subUid += 1;
    subscribers.set(subUid, func);
    func(screens);
    return subUid;
  },
  unsubscribe: function unsubscribe(token2) {
    subscribers.delete(token2);
    if (!subscribers.size) this.unregister();
  },
  unregister: function unregister() {
    var _this = this;
    Object.keys(responsiveMap).forEach(function(screen) {
      var matchMediaQuery = responsiveMap[screen];
      var handler8 = _this.matchHandlers[matchMediaQuery];
      handler8 === null || handler8 === void 0 ? void 0 : handler8.mql.removeListener(handler8 === null || handler8 === void 0 ? void 0 : handler8.listener);
    });
    subscribers.clear();
  },
  register: function register() {
    var _this2 = this;
    Object.keys(responsiveMap).forEach(function(screen) {
      var matchMediaQuery = responsiveMap[screen];
      var listener = function listener2(_ref) {
        var matches = _ref.matches;
        _this2.dispatch(_extends$1(_extends$1({}, screens), _defineProperty$U({}, screen, matches)));
      };
      var mql = window.matchMedia(matchMediaQuery);
      mql.addListener(listener);
      _this2.matchHandlers[matchMediaQuery] = {
        mql,
        listener
      };
      listener(mql);
    });
  }
};
const { onMounted: onMounted$j, onUnmounted: onUnmounted$3, ref: ref$E } = await importShared("vue");
function useBreakpoint() {
  var screens2 = ref$E({});
  var token2 = null;
  onMounted$j(function() {
    token2 = responsiveObserve.subscribe(function(supportScreens) {
      screens2.value = supportScreens;
    });
  });
  onUnmounted$3(function() {
    responsiveObserve.unsubscribe(token2);
  });
  return screens2;
}
const { computed: computed$N, inject: inject$17, provide: provide$m } = await importShared("vue");
var sizeProvider = Symbol("SizeProvider");
var useProvideSize = function useProvideSize2(props2) {
  var configProvider = inject$17("configProvider", defaultConfigProvider);
  var size = computed$N(function() {
    return props2.size || configProvider.componentSize;
  });
  provide$m(sizeProvider, size);
  return size;
};
var useInjectSize = function useInjectSize2(props2) {
  var size = props2 ? computed$N(function() {
    return props2.size;
  }) : inject$17(sizeProvider, computed$N(function() {
    return "default";
  }));
  return size;
};
const { createVNode: _createVNode$4l } = await importShared("vue");
const { computed: computed$M, defineComponent: defineComponent$2u, nextTick: nextTick$p, onMounted: onMounted$i, ref: ref$D, watch: watch$o } = await importShared("vue");
var avatarProps$1 = {
  prefixCls: PropTypes.string,
  shape: PropTypes.oneOf(tuple("circle", "square")).def("circle"),
  size: {
    type: [Number, String, Object],
    default: function _default2() {
      return "default";
    }
  },
  src: PropTypes.string,
  /** Srcset of image avatar */
  srcset: PropTypes.string,
  icon: PropTypes.VNodeChild,
  alt: PropTypes.string,
  gap: PropTypes.number,
  draggable: PropTypes.bool,
  loadError: {
    type: Function
  }
};
var Avatar = defineComponent$2u({
  name: "AAvatar",
  inheritAttrs: false,
  props: avatarProps$1,
  slots: ["icon"],
  setup: function setup34(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var isImgExist = ref$D(true);
    var isMounted = ref$D(false);
    var scale = ref$D(1);
    var avatarChildrenRef = ref$D(null);
    var avatarNodeRef = ref$D(null);
    var _useConfigInject = useConfigInject("avatar", props2), prefixCls2 = _useConfigInject.prefixCls;
    var groupSize = useInjectSize();
    var screens2 = useBreakpoint();
    var responsiveSize = computed$M(function() {
      if (_typeof$3(props2.size) !== "object") {
        return void 0;
      }
      var currentBreakpoint = responsiveArray.find(function(screen) {
        return screens2.value[screen];
      });
      var currentSize = props2.size[currentBreakpoint];
      return currentSize;
    });
    var responsiveSizeStyle = function responsiveSizeStyle2(hasIcon) {
      if (responsiveSize.value) {
        return {
          width: "".concat(responsiveSize.value, "px"),
          height: "".concat(responsiveSize.value, "px"),
          lineHeight: "".concat(responsiveSize.value, "px"),
          fontSize: "".concat(hasIcon ? responsiveSize.value / 2 : 18, "px")
        };
      }
      return {};
    };
    var setScaleParam = function setScaleParam2() {
      if (!avatarChildrenRef.value || !avatarNodeRef.value) {
        return;
      }
      var childrenWidth = avatarChildrenRef.value.offsetWidth;
      var nodeWidth = avatarNodeRef.value.offsetWidth;
      if (childrenWidth !== 0 && nodeWidth !== 0) {
        var _props$gap = props2.gap, gap = _props$gap === void 0 ? 4 : _props$gap;
        if (gap * 2 < nodeWidth) {
          scale.value = nodeWidth - gap * 2 < childrenWidth ? (nodeWidth - gap * 2) / childrenWidth : 1;
        }
      }
    };
    var handleImgLoadError = function handleImgLoadError2() {
      var loadError = props2.loadError;
      var errorFlag = loadError === null || loadError === void 0 ? void 0 : loadError();
      if (errorFlag !== false) {
        isImgExist.value = false;
      }
    };
    watch$o(function() {
      return props2.src;
    }, function() {
      nextTick$p(function() {
        isImgExist.value = true;
        scale.value = 1;
      });
    });
    watch$o(function() {
      return props2.gap;
    }, function() {
      nextTick$p(function() {
        setScaleParam();
      });
    });
    onMounted$i(function() {
      nextTick$p(function() {
        setScaleParam();
        isMounted.value = true;
      });
    });
    return function() {
      var _classString;
      var _a;
      var shape = props2.shape, customSize = props2.size, src = props2.src, alt = props2.alt, srcset = props2.srcset, draggable = props2.draggable;
      var icon = getPropsSlot(slots, props2, "icon");
      var pre = prefixCls2.value;
      var size = customSize === "default" ? groupSize.value : customSize;
      var classString = (_classString = {}, _defineProperty$U(_classString, "".concat(attrs.class), !!attrs.class), _defineProperty$U(_classString, pre, true), _defineProperty$U(_classString, "".concat(pre, "-lg"), size === "large"), _defineProperty$U(_classString, "".concat(pre, "-sm"), size === "small"), _defineProperty$U(_classString, "".concat(pre, "-").concat(shape), shape), _defineProperty$U(_classString, "".concat(pre, "-image"), src && isImgExist.value), _defineProperty$U(_classString, "".concat(pre, "-icon"), icon), _classString);
      var sizeStyle = typeof size === "number" ? {
        width: "".concat(size, "px"),
        height: "".concat(size, "px"),
        lineHeight: "".concat(size, "px"),
        fontSize: icon ? "".concat(size / 2, "px") : "18px"
      } : {};
      var children = (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
      var childrenToRender;
      if (src && isImgExist.value) {
        childrenToRender = _createVNode$4l("img", {
          "draggable": draggable,
          "src": src,
          "srcset": srcset,
          "onError": handleImgLoadError,
          "alt": alt
        }, null);
      } else if (icon) {
        childrenToRender = icon;
      } else if (isMounted.value || scale.value !== 1) {
        var transformString = "scale(".concat(scale.value, ") translateX(-50%)");
        var childrenStyle = {
          msTransform: transformString,
          WebkitTransform: transformString,
          transform: transformString
        };
        var sizeChildrenStyle = typeof size === "number" ? {
          lineHeight: "".concat(size, "px")
        } : {};
        childrenToRender = _createVNode$4l(ResizeObserver, {
          "onResize": setScaleParam
        }, {
          default: function _default8() {
            return [_createVNode$4l("span", {
              "class": "".concat(pre, "-string"),
              "ref": avatarChildrenRef,
              "style": _extends$1(_extends$1({}, sizeChildrenStyle), childrenStyle)
            }, [children])];
          }
        });
      } else {
        childrenToRender = _createVNode$4l("span", {
          "class": "".concat(pre, "-string"),
          "ref": avatarChildrenRef,
          "style": {
            opacity: 0
          }
        }, [children]);
      }
      return _createVNode$4l("span", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "ref": avatarNodeRef,
        "class": classString,
        "style": _extends$1(_extends$1(_extends$1({}, sizeStyle), responsiveSizeStyle(!!icon)), attrs.style)
      }), [childrenToRender]);
    };
  }
});
var autoAdjustOverflow$4 = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset$4 = [0, 0];
var placements$4 = {
  left: {
    points: ["cr", "cl"],
    overflow: autoAdjustOverflow$4,
    offset: [-4, 0],
    targetOffset: targetOffset$4
  },
  right: {
    points: ["cl", "cr"],
    overflow: autoAdjustOverflow$4,
    offset: [4, 0],
    targetOffset: targetOffset$4
  },
  top: {
    points: ["bc", "tc"],
    overflow: autoAdjustOverflow$4,
    offset: [0, -4],
    targetOffset: targetOffset$4
  },
  bottom: {
    points: ["tc", "bc"],
    overflow: autoAdjustOverflow$4,
    offset: [0, 4],
    targetOffset: targetOffset$4
  },
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$4,
    offset: [0, -4],
    targetOffset: targetOffset$4
  },
  leftTop: {
    points: ["tr", "tl"],
    overflow: autoAdjustOverflow$4,
    offset: [-4, 0],
    targetOffset: targetOffset$4
  },
  topRight: {
    points: ["br", "tr"],
    overflow: autoAdjustOverflow$4,
    offset: [0, -4],
    targetOffset: targetOffset$4
  },
  rightTop: {
    points: ["tl", "tr"],
    overflow: autoAdjustOverflow$4,
    offset: [4, 0],
    targetOffset: targetOffset$4
  },
  bottomRight: {
    points: ["tr", "br"],
    overflow: autoAdjustOverflow$4,
    offset: [0, 4],
    targetOffset: targetOffset$4
  },
  rightBottom: {
    points: ["bl", "br"],
    overflow: autoAdjustOverflow$4,
    offset: [4, 0],
    targetOffset: targetOffset$4
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$4,
    offset: [0, 4],
    targetOffset: targetOffset$4
  },
  leftBottom: {
    points: ["br", "bl"],
    overflow: autoAdjustOverflow$4,
    offset: [-4, 0],
    targetOffset: targetOffset$4
  }
};
const { createVNode: _createVNode$4k } = await importShared("vue");
const Content$1 = {
  name: "Content",
  props: {
    prefixCls: PropTypes.string,
    overlay: PropTypes.any,
    trigger: PropTypes.any,
    overlayInnerStyle: PropTypes.any
  },
  updated: function updated4() {
    var trigger2 = this.trigger;
    if (trigger2) {
      trigger2.forcePopupAlign();
    }
  },
  render: function render21() {
    var overlay = this.overlay, prefixCls2 = this.prefixCls, overlayInnerStyle = this.overlayInnerStyle;
    return _createVNode$4k("div", {
      "class": "".concat(prefixCls2, "-inner"),
      "role": "tooltip",
      "style": overlayInnerStyle
    }, [typeof overlay === "function" ? overlay() : overlay]);
  }
};
const { createVNode: _createVNode$4j } = await importShared("vue");
var __rest$M = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2t } = await importShared("vue");
function noop$F() {
}
const Tooltip$1 = defineComponent$2t({
  name: "Tooltip",
  inheritAttrs: false,
  props: {
    trigger: PropTypes.any.def(["hover"]),
    defaultVisible: PropTypes.looseBool,
    visible: PropTypes.looseBool,
    placement: PropTypes.string.def("right"),
    transitionName: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    animation: PropTypes.any,
    afterVisibleChange: PropTypes.func.def(function() {
    }),
    overlay: PropTypes.any,
    overlayStyle: PropTypes.object,
    overlayClassName: PropTypes.string,
    prefixCls: PropTypes.string.def("rc-tooltip"),
    mouseEnterDelay: PropTypes.number.def(0),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    getTooltipContainer: PropTypes.func,
    destroyTooltipOnHide: PropTypes.looseBool.def(false),
    align: PropTypes.object.def(function() {
      return {};
    }),
    arrowContent: PropTypes.any.def(null),
    tipId: PropTypes.string,
    builtinPlacements: PropTypes.object,
    overlayInnerStyle: PropTypes.style
  },
  methods: {
    getPopupElement: function getPopupElement3() {
      var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, tipId = _this$$props.tipId, overlayInnerStyle = _this$$props.overlayInnerStyle;
      return [_createVNode$4j("div", {
        "class": "".concat(prefixCls2, "-arrow"),
        "key": "arrow"
      }, [getComponent(this, "arrowContent")]), _createVNode$4j(Content$1, {
        "key": "content",
        "trigger": this.$refs.trigger,
        "prefixCls": prefixCls2,
        "id": tipId,
        "overlay": getComponent(this, "overlay"),
        "overlayInnerStyle": overlayInnerStyle
      }, null)];
    },
    getPopupDomNode: function getPopupDomNode3() {
      return this.$refs.trigger.getPopupDomNode();
    }
  },
  render: function render22(h2) {
    var _this = this;
    var _a = getOptionProps(this), overlayClassName = _a.overlayClassName, trigger2 = _a.trigger, mouseEnterDelay = _a.mouseEnterDelay, mouseLeaveDelay = _a.mouseLeaveDelay, overlayStyle = _a.overlayStyle, prefixCls2 = _a.prefixCls, afterVisibleChange2 = _a.afterVisibleChange, transitionName2 = _a.transitionName, animation2 = _a.animation, placement2 = _a.placement, align = _a.align, destroyTooltipOnHide = _a.destroyTooltipOnHide, defaultVisible = _a.defaultVisible, getTooltipContainer = _a.getTooltipContainer, restProps = __rest$M(_a, ["overlayClassName", "trigger", "mouseEnterDelay", "mouseLeaveDelay", "overlayStyle", "prefixCls", "afterVisibleChange", "transitionName", "animation", "placement", "align", "destroyTooltipOnHide", "defaultVisible", "getTooltipContainer"]);
    var extraProps = _extends$1({}, restProps);
    if (hasProp(this, "visible")) {
      extraProps.popupVisible = this.$props.visible;
    }
    var $attrs = this.$attrs;
    var triggerProps = _extends$1(_extends$1(_extends$1({
      popupClassName: overlayClassName,
      prefixCls: prefixCls2,
      action: trigger2,
      builtinPlacements: placements$4,
      popupPlacement: placement2,
      popupAlign: align,
      getPopupContainer: getTooltipContainer,
      afterPopupVisibleChange: afterVisibleChange2,
      popupTransitionName: transitionName2,
      popupAnimation: animation2,
      defaultPopupVisible: defaultVisible,
      destroyPopupOnHide: destroyTooltipOnHide,
      mouseLeaveDelay,
      popupStyle: overlayStyle,
      mouseEnterDelay
    }, extraProps), $attrs), {
      onPopupVisibleChange: $attrs.onVisibleChange || noop$F,
      onPopupAlign: $attrs.onPopupAlign || noop$F,
      ref: "trigger",
      popup: this.getPopupElement()
    });
    return _createVNode$4j(Trigger, triggerProps, {
      default: function _default8() {
        return [getSlot(_this)[0]];
      }
    });
  }
});
var autoAdjustOverflowEnabled = {
  adjustX: 1,
  adjustY: 1
};
var autoAdjustOverflowDisabled = {
  adjustX: 0,
  adjustY: 0
};
var targetOffset$3 = [0, 0];
function getOverflowOptions(autoAdjustOverflow2) {
  if (typeof autoAdjustOverflow2 === "boolean") {
    return autoAdjustOverflow2 ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;
  }
  return _extends$1(_extends$1({}, autoAdjustOverflowDisabled), autoAdjustOverflow2);
}
function getPlacements(config2) {
  var _config$arrowWidth = config2.arrowWidth, arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth, _config$horizontalArr = config2.horizontalArrowShift, horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr, _config$verticalArrow = config2.verticalArrowShift, verticalArrowShift = _config$verticalArrow, _config$autoAdjustOve = config2.autoAdjustOverflow, autoAdjustOverflow2 = _config$autoAdjustOve === void 0 ? true : _config$autoAdjustOve;
  var placementMap = {
    left: {
      points: ["cr", "cl"],
      offset: [-4, 0]
    },
    right: {
      points: ["cl", "cr"],
      offset: [4, 0]
    },
    top: {
      points: ["bc", "tc"],
      offset: [0, -4]
    },
    bottom: {
      points: ["tc", "bc"],
      offset: [0, 4]
    },
    topLeft: {
      points: ["bl", "tc"],
      offset: [-(horizontalArrowShift + arrowWidth), -4]
    },
    leftTop: {
      points: ["tr", "cl"],
      offset: [-4, -(verticalArrowShift + arrowWidth)]
    },
    topRight: {
      points: ["br", "tc"],
      offset: [horizontalArrowShift + arrowWidth, -4]
    },
    rightTop: {
      points: ["tl", "cr"],
      offset: [4, -(verticalArrowShift + arrowWidth)]
    },
    bottomRight: {
      points: ["tr", "bc"],
      offset: [horizontalArrowShift + arrowWidth, 4]
    },
    rightBottom: {
      points: ["bl", "cr"],
      offset: [4, verticalArrowShift + arrowWidth]
    },
    bottomLeft: {
      points: ["tl", "bc"],
      offset: [-(horizontalArrowShift + arrowWidth), 4]
    },
    leftBottom: {
      points: ["br", "cl"],
      offset: [-4, verticalArrowShift + arrowWidth]
    }
  };
  Object.keys(placementMap).forEach(function(key2) {
    placementMap[key2] = config2.arrowPointAtCenter ? _extends$1(_extends$1({}, placementMap[key2]), {
      overflow: getOverflowOptions(autoAdjustOverflow2),
      targetOffset: targetOffset$3
    }) : _extends$1(_extends$1({}, placements$4[key2]), {
      overflow: getOverflowOptions(autoAdjustOverflow2)
    });
    placementMap[key2].ignoreShake = true;
  });
  return placementMap;
}
var PresetStatusColorTypes = tuple("success", "processing", "error", "default", "warning");
var PresetColorTypes = tuple("pink", "red", "yellow", "orange", "cyan", "green", "blue", "purple", "geekblue", "magenta", "volcano", "gold", "lime");
var triggerType = PropTypes.oneOf(tuple("hover", "focus", "click", "contextmenu"));
const abstractTooltipProps = function() {
  return {
    trigger: PropTypes.oneOfType([triggerType, PropTypes.arrayOf(triggerType)]).def("hover"),
    visible: PropTypes.looseBool,
    defaultVisible: PropTypes.looseBool,
    placement: PropTypes.oneOf(tuple("top", "left", "right", "bottom", "topLeft", "topRight", "bottomLeft", "bottomRight", "leftTop", "leftBottom", "rightTop", "rightBottom")).def("top"),
    color: PropTypes.string,
    transitionName: PropTypes.string.def("zoom-big-fast"),
    overlayStyle: PropTypes.object.def(function() {
      return {};
    }),
    overlayClassName: PropTypes.string,
    openClassName: PropTypes.string,
    prefixCls: PropTypes.string,
    mouseEnterDelay: PropTypes.number.def(0.1),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    getPopupContainer: PropTypes.func,
    arrowPointAtCenter: PropTypes.looseBool.def(false),
    autoAdjustOverflow: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object]).def(true),
    destroyTooltipOnHide: PropTypes.looseBool.def(false),
    align: PropTypes.object.def(function() {
      return {};
    }),
    builtinPlacements: PropTypes.object,
    children: PropTypes.array,
    onVisibleChange: PropTypes.func,
    "onUpdate:visible": PropTypes.func
  };
};
const { createVNode: _createVNode$4i } = await importShared("vue");
const { defineComponent: defineComponent$2s, inject: inject$16 } = await importShared("vue");
var splitObject = function splitObject2(obj, keys2) {
  var picked = {};
  var omitted = _extends$1({}, obj);
  keys2.forEach(function(key2) {
    if (obj && key2 in obj) {
      picked[key2] = obj[key2];
      delete omitted[key2];
    }
  });
  return {
    picked,
    omitted
  };
};
var props$1 = abstractTooltipProps();
var PresetColorRegex$1 = new RegExp("^(".concat(PresetColorTypes.join("|"), ")(-inverse)?$"));
var tooltipProps$2 = _extends$1(_extends$1({}, props$1), {
  title: PropTypes.VNodeChild
});
const ToolTip = defineComponent$2s({
  name: "ATooltip",
  inheritAttrs: false,
  props: tooltipProps$2,
  emits: ["update:visible", "visibleChange"],
  setup: function setup35() {
    return {
      configProvider: inject$16("configProvider", defaultConfigProvider)
    };
  },
  data: function data8() {
    return {
      sVisible: !!this.$props.visible || !!this.$props.defaultVisible
    };
  },
  watch: {
    visible: function visible(val) {
      this.sVisible = val;
    }
  },
  methods: {
    handleVisibleChange: function handleVisibleChange(visible9) {
      if (!hasProp(this, "visible")) {
        this.sVisible = this.isNoTitle() ? false : visible9;
      }
      if (!this.isNoTitle()) {
        this.$emit("update:visible", visible9);
        this.$emit("visibleChange", visible9);
      }
    },
    getPopupDomNode: function getPopupDomNode4() {
      return this.$refs.tooltip.getPopupDomNode();
    },
    getPlacements: function getPlacements$1() {
      var _this$$props = this.$props, builtinPlacements = _this$$props.builtinPlacements, arrowPointAtCenter = _this$$props.arrowPointAtCenter, autoAdjustOverflow2 = _this$$props.autoAdjustOverflow;
      return builtinPlacements || getPlacements({
        arrowPointAtCenter,
        verticalArrowShift: 8,
        autoAdjustOverflow: autoAdjustOverflow2
      });
    },
    // Fix Tooltip won't hide at disabled button
    // mouse events don't trigger at disabled button in Chrome
    // https://github.com/react-component/tooltip/issues/18
    getDisabledCompatibleChildren: function getDisabledCompatibleChildren(ele) {
      if ((_typeof$3(ele.type) === "object" && (ele.type.__ANT_BUTTON === true || ele.type.__ANT_SWITCH === true || ele.type.__ANT_CHECKBOX === true) || ele.type === "button") && ele.props && (ele.props.disabled || ele.props.disabled === "")) {
        var _splitObject = splitObject(getStyle$1(ele), ["position", "left", "right", "top", "bottom", "float", "display", "zIndex"]), picked = _splitObject.picked, omitted = _splitObject.omitted;
        var spanStyle = _extends$1(_extends$1({
          display: "inline-block"
        }, picked), {
          cursor: "not-allowed",
          width: ele.props && ele.props.block ? "100%" : null
        });
        var buttonStyle = _extends$1(_extends$1({}, omitted), {
          pointerEvents: "none"
        });
        var child = cloneElement(ele, {
          style: buttonStyle
        }, true);
        return _createVNode$4i("span", {
          "style": spanStyle
        }, [child]);
      }
      return ele;
    },
    isNoTitle: function isNoTitle() {
      var title = getComponent(this, "title");
      return !title && title !== 0;
    },
    getOverlay: function getOverlay() {
      var title = getComponent(this, "title");
      if (title === 0) {
        return title;
      }
      return title || "";
    },
    // 动态设置动画点
    onPopupAlign: function onPopupAlign(domNode, align) {
      var placements2 = this.getPlacements();
      var placement2 = Object.keys(placements2).filter(function(key2) {
        return placements2[key2].points[0] === align.points[0] && placements2[key2].points[1] === align.points[1];
      })[0];
      if (!placement2) {
        return;
      }
      var rect = domNode.getBoundingClientRect();
      var transformOrigin = {
        top: "50%",
        left: "50%"
      };
      if (placement2.indexOf("top") >= 0 || placement2.indexOf("Bottom") >= 0) {
        transformOrigin.top = "".concat(rect.height - align.offset[1], "px");
      } else if (placement2.indexOf("Top") >= 0 || placement2.indexOf("bottom") >= 0) {
        transformOrigin.top = "".concat(-align.offset[1], "px");
      }
      if (placement2.indexOf("left") >= 0 || placement2.indexOf("Right") >= 0) {
        transformOrigin.left = "".concat(rect.width - align.offset[0], "px");
      } else if (placement2.indexOf("right") >= 0 || placement2.indexOf("Left") >= 0) {
        transformOrigin.left = "".concat(-align.offset[0], "px");
      }
      domNode.style.transformOrigin = "".concat(transformOrigin.left, " ").concat(transformOrigin.top);
    }
  },
  render: function render23() {
    var _classNames;
    var $props = this.$props, $data = this.$data, $attrs = this.$attrs;
    var customizePrefixCls = $props.prefixCls, openClassName = $props.openClassName, getPopupContainer = $props.getPopupContainer, color = $props.color, overlayClassName = $props.overlayClassName;
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("tooltip", customizePrefixCls);
    var children = this.children || filterEmpty(getSlot(this));
    children = children.length === 1 ? children[0] : children;
    var sVisible = $data.sVisible;
    if (!hasProp(this, "visible") && this.isNoTitle()) {
      sVisible = false;
    }
    if (!children) {
      return null;
    }
    var child = this.getDisabledCompatibleChildren(isValidElement(children) ? children : _createVNode$4i("span", null, [children]));
    var childCls = classNames((_classNames = {}, _defineProperty$U(_classNames, openClassName || "".concat(prefixCls2, "-open"), sVisible), _defineProperty$U(_classNames, child.props && child.props.class, child.props && child.props.class), _classNames));
    var customOverlayClassName = classNames(overlayClassName, _defineProperty$U({}, "".concat(prefixCls2, "-").concat(color), color && PresetColorRegex$1.test(color)));
    var formattedOverlayInnerStyle;
    var arrowContentStyle;
    if (color && !PresetColorRegex$1.test(color)) {
      formattedOverlayInnerStyle = {
        backgroundColor: color
      };
      arrowContentStyle = {
        backgroundColor: color
      };
    }
    var vcTooltipProps = _extends$1(_extends$1(_extends$1({}, $attrs), $props), {
      prefixCls: prefixCls2,
      getTooltipContainer: getPopupContainer || getContextPopupContainer,
      builtinPlacements: this.getPlacements(),
      overlay: this.getOverlay(),
      visible: sVisible,
      ref: "tooltip",
      overlayClassName: customOverlayClassName,
      overlayInnerStyle: formattedOverlayInnerStyle,
      arrowContent: _createVNode$4i("span", {
        "class": "".concat(prefixCls2, "-arrow-content"),
        "style": arrowContentStyle
      }, null),
      onVisibleChange: this.handleVisibleChange,
      onPopupAlign: this.onPopupAlign
    });
    return _createVNode$4i(Tooltip$1, vcTooltipProps, {
      default: function _default8() {
        return [sVisible ? cloneElement(child, {
          class: childCls
        }) : child];
      }
    });
  }
});
const Tooltip = withInstall(ToolTip);
const { createVNode: _createVNode$4h } = await importShared("vue");
const { defineComponent: defineComponent$2r, inject: inject$15 } = await importShared("vue");
var props = abstractTooltipProps();
var Popover = defineComponent$2r({
  name: "APopover",
  props: _extends$1(_extends$1({}, props), {
    prefixCls: PropTypes.string,
    transitionName: PropTypes.string.def("zoom-big"),
    content: PropTypes.any,
    title: PropTypes.any
  }),
  setup: function setup36() {
    return {
      configProvider: inject$15("configProvider", defaultConfigProvider)
    };
  },
  methods: {
    getPopupDomNode: function getPopupDomNode5() {
      return this.$refs.tooltip.getPopupDomNode();
    }
  },
  render: function render24() {
    var _this = this;
    var title = this.title, customizePrefixCls = this.prefixCls, $slots = this.$slots;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("popover", customizePrefixCls);
    var props2 = getOptionProps(this);
    delete props2.title;
    delete props2.content;
    var tooltipProps2 = _extends$1(_extends$1({}, props2), {
      prefixCls: prefixCls2,
      ref: "tooltip",
      title: _createVNode$4h("div", null, [(title || $slots.title) && _createVNode$4h("div", {
        "class": "".concat(prefixCls2, "-title")
      }, [getComponent(this, "title")]), _createVNode$4h("div", {
        "class": "".concat(prefixCls2, "-inner-content")
      }, [getComponent(this, "content")])])
    });
    return _createVNode$4h(Tooltip, tooltipProps2, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
const Popover$1 = withInstall(Popover);
const { createVNode: _createVNode$4g } = await importShared("vue");
const { defineComponent: defineComponent$2q } = await importShared("vue");
var groupProps = {
  prefixCls: PropTypes.string,
  maxCount: PropTypes.number,
  maxStyle: {
    type: Object,
    default: function _default3() {
      return {};
    }
  },
  maxPopoverPlacement: PropTypes.oneOf(tuple("top", "bottom")).def("top"),
  /*
   * Size of avatar, options: `large`, `small`, `default`
   * or a custom number size
   * */
  size: avatarProps$1.size
};
var Group$2 = defineComponent$2q({
  name: "AAvatarGroup",
  inheritAttrs: false,
  props: groupProps,
  setup: function setup37(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _useConfigInject = useConfigInject("avatar-group", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    useProvideSize(props2);
    return function() {
      var _cls;
      var _props$maxPopoverPlac = props2.maxPopoverPlacement, maxPopoverPlacement = _props$maxPopoverPlac === void 0 ? "top" : _props$maxPopoverPlac, maxCount2 = props2.maxCount, maxStyle = props2.maxStyle;
      var cls = (_cls = {}, _defineProperty$U(_cls, prefixCls2.value, true), _defineProperty$U(_cls, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _defineProperty$U(_cls, "".concat(attrs.class), !!attrs.class), _cls);
      var children = getPropsSlot(slots, props2);
      var childrenWithProps = flattenChildren(children).map(function(child, index2) {
        return cloneElement(child, {
          key: "avatar-key-".concat(index2)
        });
      });
      var numOfChildren = childrenWithProps.length;
      if (maxCount2 && maxCount2 < numOfChildren) {
        var childrenShow = childrenWithProps.slice(0, maxCount2);
        var childrenHidden = childrenWithProps.slice(maxCount2, numOfChildren);
        childrenShow.push(_createVNode$4g(Popover$1, {
          "key": "avatar-popover-key",
          "content": childrenHidden,
          "trigger": "hover",
          "placement": maxPopoverPlacement,
          "overlayClassName": "".concat(prefixCls2.value, "-popover")
        }, {
          default: function _default8() {
            return [_createVNode$4g(Avatar, {
              "style": maxStyle
            }, {
              default: function _default9() {
                return ["+".concat(numOfChildren - maxCount2)];
              }
            })];
          }
        }));
        return _createVNode$4g("div", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
          "class": cls,
          "style": attrs.style
        }), [childrenShow]);
      }
      return _createVNode$4g("div", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "class": cls,
        "style": attrs.style
      }), [childrenWithProps]);
    };
  }
});
Avatar.Group = Group$2;
Avatar.install = function(app) {
  app.component(Avatar.name, Avatar);
  app.component(Group$2.name, Group$2);
  return app;
};
var VerticalAlignTopOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M859.9 168H164.1c-4.5 0-8.1 3.6-8.1 8v60c0 4.4 3.6 8 8.1 8h695.8c4.5 0 8.1-3.6 8.1-8v-60c0-4.4-3.6-8-8.1-8zM518.3 355a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V848c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V509.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 355z" } }] }, "name": "vertical-align-top", "theme": "outlined" };
const { createVNode: _createVNode$4f } = await importShared("vue");
function _objectSpread$z(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$A(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$A(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var VerticalAlignTopOutlined = function VerticalAlignTopOutlined2(props2, context2) {
  var p = _objectSpread$z({}, props2, context2.attrs);
  return _createVNode$4f(Icon, _objectSpread$z({}, p, {
    "icon": VerticalAlignTopOutlined$1
  }), null);
};
VerticalAlignTopOutlined.displayName = "VerticalAlignTopOutlined";
VerticalAlignTopOutlined.inheritAttrs = false;
const { createVNode: _createVNode$4e } = await importShared("vue");
const { defineComponent: defineComponent$2p, inject: inject$14, nextTick: nextTick$o, onActivated, onBeforeUnmount: onBeforeUnmount$b, onMounted: onMounted$h, reactive: reactive$c, ref: ref$C, watch: watch$n, onDeactivated, computed: computed$L } = await importShared("vue");
var backTopProps = {
  visibilityHeight: PropTypes.number.def(400),
  duration: PropTypes.number.def(450),
  target: Function,
  prefixCls: PropTypes.string,
  onClick: PropTypes.func
  // visible: PropTypes.looseBool, // Only for test. Don't use it.
};
var BackTop = defineComponent$2p({
  name: "ABackTop",
  inheritAttrs: false,
  props: backTopProps,
  emits: ["click"],
  setup: function setup38(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs, emit = _ref.emit;
    var configProvider = inject$14("configProvider", defaultConfigProvider);
    var domRef = ref$C();
    var state = reactive$c({
      visible: false,
      scrollEvent: null
    });
    var getDefaultTarget2 = function getDefaultTarget3() {
      return domRef.value && domRef.value.ownerDocument ? domRef.value.ownerDocument : window;
    };
    var scrollToTop = function scrollToTop2(e2) {
      var _props$target = props2.target, target = _props$target === void 0 ? getDefaultTarget2 : _props$target, duration2 = props2.duration;
      scrollTo$1(0, {
        getContainer: target,
        duration: duration2
      });
      emit("click", e2);
    };
    var handleScroll4 = throttleByAnimationFrame(function(e2) {
      var visibilityHeight = props2.visibilityHeight;
      var scrollTop2 = getScroll$4(e2.target);
      state.visible = scrollTop2 > visibilityHeight;
    });
    var bindScrollEvent = function bindScrollEvent2() {
      var target = props2.target;
      var getTarget = target || getDefaultTarget2;
      var container = getTarget();
      state.scrollEvent = addEventListenerWrap(container, "scroll", function(e2) {
        handleScroll4(e2);
      });
      handleScroll4({
        target: container
      });
    };
    var scrollRemove = function scrollRemove2() {
      if (state.scrollEvent) {
        state.scrollEvent.remove();
      }
      handleScroll4.cancel();
    };
    watch$n(function() {
      return props2.target;
    }, function() {
      scrollRemove();
      nextTick$o(function() {
        bindScrollEvent();
      });
    });
    onMounted$h(function() {
      nextTick$o(function() {
        bindScrollEvent();
      });
    });
    onActivated(function() {
      nextTick$o(function() {
        bindScrollEvent();
      });
    });
    onDeactivated(function() {
      scrollRemove();
    });
    onBeforeUnmount$b(function() {
      scrollRemove();
    });
    var prefixCls2 = computed$L(function() {
      return configProvider.getPrefixCls("back-top", props2.prefixCls);
    });
    return function() {
      var _class;
      var _a;
      var defaultElement = _createVNode$4e("div", {
        "class": "".concat(prefixCls2.value, "-content")
      }, [_createVNode$4e("div", {
        "class": "".concat(prefixCls2.value, "-icon")
      }, [_createVNode$4e(VerticalAlignTopOutlined, null, null)])]);
      var divProps = _extends$1(_extends$1({}, attrs), {
        onClick: scrollToTop,
        class: (_class = {}, _defineProperty$U(_class, "".concat(prefixCls2.value), true), _defineProperty$U(_class, "".concat(attrs.class), attrs.class), _defineProperty$U(_class, "".concat(prefixCls2.value, "-rtl"), configProvider.direction === "rtl"), _class)
      });
      var backTopBtn = state.visible ? _createVNode$4e("div", _objectSpread2$2(_objectSpread2$2({}, divProps), {}, {
        "ref": domRef
      }), [((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)) || defaultElement]) : null;
      var transitionProps = getTransitionProps("fade");
      return _createVNode$4e(Transition, transitionProps, {
        default: function _default8() {
          return [backTopBtn];
        }
      });
    };
  }
});
const index$h = withInstall(BackTop);
const { createVNode: _createVNode$4d } = await importShared("vue");
const { computed: computed$K, defineComponent: defineComponent$2o, onUnmounted: onUnmounted$2, reactive: reactive$b, ref: ref$B, watch: watch$m } = await importShared("vue");
function UnitNumber(_ref) {
  var prefixCls2 = _ref.prefixCls, value26 = _ref.value, current2 = _ref.current, _ref$offset = _ref.offset, offset4 = _ref$offset === void 0 ? 0 : _ref$offset;
  var style3;
  if (offset4) {
    style3 = {
      position: "absolute",
      top: "".concat(offset4, "00%"),
      left: 0
    };
  }
  return _createVNode$4d("p", {
    "style": style3,
    "class": classNames("".concat(prefixCls2, "-only-unit"), {
      current: current2
    })
  }, [value26]);
}
function getOffset$2(start, end, unit) {
  var index2 = start;
  var offset4 = 0;
  while ((index2 + 10) % 10 !== end) {
    index2 += unit;
    offset4 += unit;
  }
  return offset4;
}
const SingleNumber = defineComponent$2o({
  name: "SingleNumber",
  props: {
    prefixCls: String,
    value: String,
    count: Number
  },
  setup: function setup39(props2) {
    var originValue = computed$K(function() {
      return Number(props2.value);
    });
    var originCount = computed$K(function() {
      return Math.abs(props2.count);
    });
    var state = reactive$b({
      prevValue: originValue.value,
      prevCount: originCount.value
    });
    var onTransitionEnd2 = function onTransitionEnd3() {
      state.prevValue = originValue.value;
      state.prevCount = originCount.value;
    };
    var timeout = ref$B();
    watch$m(originValue, function() {
      clearTimeout(timeout.value);
      timeout.value = setTimeout(function() {
        onTransitionEnd2();
      }, 1e3);
    }, {
      flush: "post"
    });
    onUnmounted$2(function() {
      clearTimeout(timeout.value);
    });
    return function() {
      var unitNodes;
      var offsetStyle = {};
      var value26 = originValue.value;
      if (state.prevValue === value26 || Number.isNaN(value26) || Number.isNaN(state.prevValue)) {
        unitNodes = [UnitNumber(_extends$1(_extends$1({}, props2), {
          current: true
        }))];
        offsetStyle = {
          transition: "none"
        };
      } else {
        unitNodes = [];
        var end = value26 + 10;
        var unitNumberList = [];
        for (var index2 = value26; index2 <= end; index2 += 1) {
          unitNumberList.push(index2);
        }
        var prevIndex = unitNumberList.findIndex(function(n2) {
          return n2 % 10 === state.prevValue;
        });
        unitNodes = unitNumberList.map(function(n2, index3) {
          var singleUnit = n2 % 10;
          return UnitNumber(_extends$1(_extends$1({}, props2), {
            value: singleUnit,
            offset: index3 - prevIndex,
            current: index3 === prevIndex
          }));
        });
        var unit = state.prevCount < originCount.value ? 1 : -1;
        offsetStyle = {
          transform: "translateY(".concat(-getOffset$2(state.prevValue, value26, unit), "00%)")
        };
      }
      return _createVNode$4d("span", {
        "class": "".concat(props2.prefixCls, "-only"),
        "style": offsetStyle,
        "onTransitionend": function onTransitionend() {
          return onTransitionEnd2();
        }
      }, [unitNodes]);
    };
  }
});
const { createVNode: _createVNode$4c } = await importShared("vue");
var __rest$L = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2n } = await importShared("vue");
var scrollNumberProps = {
  prefixCls: PropTypes.string,
  count: PropTypes.any,
  component: PropTypes.string,
  title: PropTypes.oneOfType([PropTypes.number, PropTypes.string, null]),
  show: Boolean
};
const ScrollNumber = defineComponent$2n({
  name: "ScrollNumber",
  inheritAttrs: false,
  props: scrollNumberProps,
  setup: function setup40(props2, _ref) {
    var attrs = _ref.attrs, slots = _ref.slots;
    var _useConfigInject = useConfigInject("scroll-number", props2), prefixCls2 = _useConfigInject.prefixCls;
    return function() {
      var _a;
      var _b = _extends$1(_extends$1({}, props2), attrs);
      _b.prefixCls;
      var count = _b.count, title = _b.title;
      _b.show;
      var _b$component = _b.component, Tag2 = _b$component === void 0 ? "sup" : _b$component, className = _b.class, style3 = _b.style, restProps = __rest$L(_b, ["prefixCls", "count", "title", "show", "component", "class", "style"]);
      var newProps = _extends$1(_extends$1({}, restProps), {
        style: style3,
        "data-show": props2.show,
        class: classNames(prefixCls2.value, className),
        title
      });
      var numberNodes = count;
      if (count && Number(count) % 1 === 0) {
        var numberList = String(count).split("");
        numberNodes = numberList.map(function(num, i2) {
          return _createVNode$4c(SingleNumber, {
            "prefixCls": prefixCls2.value,
            "count": Number(count),
            "value": num,
            "key": numberList.length - i2
          }, null);
        });
      }
      if (style3 && style3.borderColor) {
        newProps.style = _extends$1(_extends$1({}, style3), {
          boxShadow: "0 0 0 1px ".concat(style3.borderColor, " inset")
        });
      }
      var children = filterEmpty((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
      if (children && children.length) {
        return cloneElement(children, {
          class: classNames("".concat(prefixCls2.value, "-custom-component"))
        }, false);
      }
      return _createVNode$4c(Tag2, newProps, {
        default: function _default8() {
          return [numberNodes];
        }
      });
    };
  }
});
function isPresetColor(color) {
  return PresetColorTypes.indexOf(color) !== -1;
}
const { createVNode: _createVNode$4b } = await importShared("vue");
var __rest$K = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2m, computed: computed$J } = await importShared("vue");
var ribbonProps = {
  prefix: PropTypes.string,
  color: {
    type: String
  },
  text: PropTypes.any,
  placement: PropTypes.oneOf(tuple("start", "end")).def("end")
};
const Ribbon = defineComponent$2m({
  name: "ABadgeRibbon",
  inheritAttrs: false,
  props: ribbonProps,
  slots: ["text"],
  setup: function setup41(props2, _ref) {
    var attrs = _ref.attrs, slots = _ref.slots;
    var _useConfigInject = useConfigInject("ribbon", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var colorInPreset = computed$J(function() {
      return isPresetColor(props2.color);
    });
    var ribbonCls = computed$J(function() {
      var _ref2;
      return [prefixCls2.value, "".concat(prefixCls2.value, "-placement-").concat(props2.placement), (_ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-color-").concat(props2.color), colorInPreset.value), _ref2)];
    });
    return function() {
      var _a, _b;
      var className = attrs.class, style3 = attrs.style, restAttrs = __rest$K(attrs, ["class", "style"]);
      var colorStyle = {};
      var cornerColorStyle = {};
      if (props2.color && !colorInPreset.value) {
        colorStyle.background = props2.color;
        cornerColorStyle.color = props2.color;
      }
      return _createVNode$4b("div", _objectSpread2$2({
        "class": "".concat(prefixCls2.value, "-wrapper")
      }, restAttrs), [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots), _createVNode$4b("div", {
        "class": [ribbonCls.value, className],
        "style": _extends$1(_extends$1({}, colorStyle), style3)
      }, [_createVNode$4b("span", {
        "class": "".concat(prefixCls2.value, "-text")
      }, [props2.text || ((_b = slots.text) === null || _b === void 0 ? void 0 : _b.call(slots))]), _createVNode$4b("div", {
        "class": "".concat(prefixCls2.value, "-corner"),
        "style": cornerColorStyle
      }, null)])]);
    };
  }
});
var isNumeric$1 = function isNumeric(value26) {
  return !isNaN(parseFloat(value26)) && isFinite(value26);
};
const { withDirectives: _withDirectives$4, vShow: _vShow$4, createVNode: _createVNode$4a } = await importShared("vue");
const { defineComponent: defineComponent$2l, computed: computed$I, ref: ref$A, watch: watch$l } = await importShared("vue");
var badgeProps = {
  /** Number to show in badge */
  count: PropTypes.any,
  showZero: PropTypes.looseBool,
  /** Max count to show */
  overflowCount: PropTypes.number.def(99),
  /** whether to show red dot without number */
  dot: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  scrollNumberPrefixCls: PropTypes.string,
  status: PropTypes.oneOf(tuple("success", "processing", "default", "error", "warning")),
  // sync antd@4.6.0
  size: PropTypes.oneOf(tuple("default", "small")).def("default"),
  color: PropTypes.string,
  text: PropTypes.VNodeChild,
  offset: PropTypes.arrayOf(PropTypes.oneOfType([String, Number])),
  numberStyle: PropTypes.style,
  title: PropTypes.string
};
const Badge = defineComponent$2l({
  name: "ABadge",
  Ribbon,
  inheritAttrs: false,
  props: badgeProps,
  slots: ["text", "count"],
  setup: function setup42(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _useConfigInject = useConfigInject("badge", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var numberedDisplayCount = computed$I(function() {
      return props2.count > props2.overflowCount ? "".concat(props2.overflowCount, "+") : props2.count;
    });
    var hasStatus = computed$I(function() {
      return props2.status !== null && props2.status !== void 0 || props2.color !== null && props2.color !== void 0;
    });
    var isZero = computed$I(function() {
      return numberedDisplayCount.value === "0" || numberedDisplayCount.value === 0;
    });
    var showAsDot = computed$I(function() {
      return props2.dot && !isZero.value || hasStatus.value;
    });
    var mergedCount = computed$I(function() {
      return showAsDot.value ? "" : numberedDisplayCount.value;
    });
    var isHidden3 = computed$I(function() {
      var isEmpty = mergedCount.value === null || mergedCount.value === void 0 || mergedCount.value === "";
      return (isEmpty || isZero.value && !props2.showZero) && !showAsDot.value;
    });
    var livingCount = ref$A(props2.count);
    var displayCount = ref$A(mergedCount.value);
    var isDotRef = ref$A(showAsDot.value);
    watch$l([function() {
      return props2.count;
    }, mergedCount, showAsDot], function() {
      if (!isHidden3.value) {
        livingCount.value = props2.count;
        displayCount.value = mergedCount.value;
        isDotRef.value = showAsDot.value;
      }
    }, {
      immediate: true
    });
    var statusCls = computed$I(function() {
      var _ref2;
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-status-dot"), hasStatus.value), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-status-").concat(props2.status), !!props2.status), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-status-").concat(props2.color), isPresetColor(props2.color)), _ref2;
    });
    var statusStyle = computed$I(function() {
      if (props2.color && !isPresetColor(props2.color)) {
        return {
          background: props2.color
        };
      } else {
        return {};
      }
    });
    var scrollNumberCls = computed$I(function() {
      var _ref3;
      return _ref3 = {}, _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-dot"), isDotRef.value), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-count"), !isDotRef.value), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-count-sm"), props2.size === "small"), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-multiple-words"), !isDotRef.value && displayCount.value && displayCount.value.toString().length > 1), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-status-").concat(props2.status), !!props2.status), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-status-").concat(props2.color), isPresetColor(props2.color)), _ref3;
    });
    return function() {
      var _classNames;
      var _a, _b;
      var offset4 = props2.offset, title = props2.title, color = props2.color;
      var style3 = attrs.style;
      var text = getPropsSlot(slots, props2, "text");
      var pre = prefixCls2.value;
      var count = livingCount.value;
      var children = flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
      children = children.length ? children : null;
      var visible9 = !!(!isHidden3.value || slots.count);
      var mergedStyle = function() {
        if (!offset4) {
          return _extends$1({}, style3);
        }
        var offsetStyle = {
          marginTop: isNumeric$1(offset4[1]) ? "".concat(offset4[1], "px") : offset4[1]
        };
        if (direction.value === "rtl") {
          offsetStyle.left = "".concat(parseInt(offset4[0], 10), "px");
        } else {
          offsetStyle.right = "".concat(-parseInt(offset4[0], 10), "px");
        }
        return _extends$1(_extends$1({}, offsetStyle), style3);
      }();
      var titleNode = title !== null && title !== void 0 ? title : typeof count === "string" || typeof count === "number" ? count : void 0;
      var statusTextNode = visible9 || !text ? null : _createVNode$4a("span", {
        "class": "".concat(pre, "-status-text")
      }, [text]);
      var displayNode = _typeof$3(count) === "object" || count === void 0 && slots.count ? cloneElement(count !== null && count !== void 0 ? count : (_b = slots.count) === null || _b === void 0 ? void 0 : _b.call(slots), {
        style: mergedStyle
      }, false) : null;
      var badgeClassName = classNames(pre, (_classNames = {}, _defineProperty$U(_classNames, "".concat(pre, "-status"), hasStatus.value), _defineProperty$U(_classNames, "".concat(pre, "-not-a-wrapper"), !children), _defineProperty$U(_classNames, "".concat(pre, "-rtl"), direction.value === "rtl"), _classNames), attrs.class);
      if (!children && hasStatus.value) {
        var statusTextColor = mergedStyle.color;
        return _createVNode$4a("span", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
          "class": badgeClassName,
          "style": mergedStyle
        }), [_createVNode$4a("span", {
          "class": statusCls.value,
          "style": statusStyle.value
        }, null), _createVNode$4a("span", {
          "style": {
            color: statusTextColor
          },
          "class": "".concat(pre, "-status-text")
        }, [text])]);
      }
      var transitionProps = getTransitionProps(children ? "".concat(pre, "-zoom") : "", {
        appear: false
      });
      var scrollNumberStyle = _extends$1(_extends$1({}, mergedStyle), props2.numberStyle);
      if (color && !isPresetColor(color)) {
        scrollNumberStyle = scrollNumberStyle || {};
        scrollNumberStyle.background = color;
      }
      return _createVNode$4a("span", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "class": badgeClassName
      }), [children, _createVNode$4a(Transition, transitionProps, {
        default: function _default8() {
          return [_withDirectives$4(_createVNode$4a(ScrollNumber, {
            "prefixCls": props2.scrollNumberPrefixCls,
            "show": visible9,
            "class": scrollNumberCls.value,
            "count": displayCount.value,
            "title": titleNode,
            "style": scrollNumberStyle,
            "key": "scrollNumber"
          }, {
            default: function _default9() {
              return [displayNode];
            }
          }), [[_vShow$4, visible9]])];
        }
      }), statusTextNode]);
    };
  }
});
Badge.install = function(app) {
  app.component(Badge.name, Badge);
  app.component(Ribbon.name, Ribbon);
  return app;
};
var autoAdjustOverflow$3 = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset$2 = [0, 0];
var placements$3 = {
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$3,
    offset: [0, -4],
    targetOffset: targetOffset$2
  },
  topCenter: {
    points: ["bc", "tc"],
    overflow: autoAdjustOverflow$3,
    offset: [0, -4],
    targetOffset: targetOffset$2
  },
  topRight: {
    points: ["br", "tr"],
    overflow: autoAdjustOverflow$3,
    offset: [0, -4],
    targetOffset: targetOffset$2
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$3,
    offset: [0, 4],
    targetOffset: targetOffset$2
  },
  bottomCenter: {
    points: ["tc", "bc"],
    overflow: autoAdjustOverflow$3,
    offset: [0, 4],
    targetOffset: targetOffset$2
  },
  bottomRight: {
    points: ["tr", "br"],
    overflow: autoAdjustOverflow$3,
    offset: [0, 4],
    targetOffset: targetOffset$2
  }
};
const { createVNode: _createVNode$49 } = await importShared("vue");
var __rest$J = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2k, Text: Text$1 } = await importShared("vue");
const Dropdown$1 = defineComponent$2k({
  mixins: [BaseMixin],
  props: {
    minOverlayWidthMatchTrigger: PropTypes.looseBool,
    prefixCls: PropTypes.string.def("rc-dropdown"),
    transitionName: PropTypes.string,
    overlayClassName: PropTypes.string.def(""),
    openClassName: PropTypes.string,
    animation: PropTypes.any,
    align: PropTypes.object,
    overlayStyle: PropTypes.object.def(function() {
      return {};
    }),
    placement: PropTypes.string.def("bottomLeft"),
    overlay: PropTypes.any,
    trigger: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).def("hover"),
    alignPoint: PropTypes.looseBool,
    showAction: PropTypes.array,
    hideAction: PropTypes.array,
    getPopupContainer: PropTypes.func,
    visible: PropTypes.looseBool,
    defaultVisible: PropTypes.looseBool.def(false),
    mouseEnterDelay: PropTypes.number.def(0.15),
    mouseLeaveDelay: PropTypes.number.def(0.1)
  },
  data: function data9() {
    var sVisible = this.defaultVisible;
    if (hasProp(this, "visible")) {
      sVisible = this.visible;
    }
    return {
      sVisible
    };
  },
  watch: {
    visible: function visible2(val) {
      if (val !== void 0) {
        this.setState({
          sVisible: val
        });
      }
    }
  },
  methods: {
    onClick: function onClick3(e2) {
      var overlayProps = this.getOverlayElement().props;
      if (!hasProp(this, "visible")) {
        this.setState({
          sVisible: false
        });
      }
      this.__emit("overlayClick", e2);
      if (overlayProps.onClick) {
        overlayProps.onClick(e2);
      }
    },
    onVisibleChange: function onVisibleChange2(visible9) {
      if (!hasProp(this, "visible")) {
        this.setState({
          sVisible: visible9
        });
      }
      this.__emit("update:visible", visible9);
      this.__emit("visibleChange", visible9);
    },
    getMinOverlayWidthMatchTrigger: function getMinOverlayWidthMatchTrigger() {
      var props2 = getOptionProps(this);
      var minOverlayWidthMatchTrigger = props2.minOverlayWidthMatchTrigger, alignPoint2 = props2.alignPoint;
      if ("minOverlayWidthMatchTrigger" in props2) {
        return minOverlayWidthMatchTrigger;
      }
      return !alignPoint2;
    },
    getOverlayElement: function getOverlayElement() {
      var overlay = getComponent(this, "overlay");
      return Array.isArray(overlay) ? overlay[0] : overlay;
    },
    getMenuElement: function getMenuElement() {
      var _this = this;
      var onClick7 = this.onClick, prefixCls2 = this.prefixCls;
      var overlayElement = this.getOverlayElement();
      var extraOverlayProps = {
        prefixCls: "".concat(prefixCls2, "-menu"),
        getPopupContainer: function getPopupContainer() {
          return _this.getPopupDomNode();
        },
        onClick: onClick7
      };
      if (overlayElement && overlayElement.type === Text$1) {
        delete extraOverlayProps.prefixCls;
      }
      return cloneElement(overlayElement, extraOverlayProps);
    },
    getMenuElementOrLambda: function getMenuElementOrLambda() {
      var overlay = this.overlay || this.$slots.overlay;
      if (typeof overlay === "function") {
        return this.getMenuElement;
      }
      return this.getMenuElement();
    },
    getPopupDomNode: function getPopupDomNode6() {
      return this.triggerRef.getPopupDomNode();
    },
    getOpenClassName: function getOpenClassName() {
      var _this$$props = this.$props, openClassName = _this$$props.openClassName, prefixCls2 = _this$$props.prefixCls;
      if (openClassName !== void 0) {
        return openClassName;
      }
      return "".concat(prefixCls2, "-open");
    },
    afterVisibleChange: function afterVisibleChange(visible9) {
      if (visible9 && this.getMinOverlayWidthMatchTrigger()) {
        var overlayNode = this.getPopupDomNode();
        var rootNode = findDOMNode(this);
        if (rootNode && overlayNode && rootNode.offsetWidth > overlayNode.offsetWidth) {
          overlayNode.style.minWidth = "".concat(rootNode.offsetWidth, "px");
          if (this.triggerRef && this.triggerRef._component && this.triggerRef._component.alignInstance) {
            this.triggerRef._component.alignInstance.forceAlign();
          }
        }
      }
    },
    renderChildren: function renderChildren2() {
      var children = getSlot(this);
      var sVisible = this.sVisible;
      return sVisible && children ? cloneElement(children[0], {
        class: this.getOpenClassName()
      }, false) : children;
    },
    saveTrigger: function saveTrigger(node) {
      this.triggerRef = node;
    }
  },
  render: function render25() {
    var _this2 = this;
    var _a = this.$props, prefixCls2 = _a.prefixCls, transitionName2 = _a.transitionName, animation2 = _a.animation, align = _a.align, placement2 = _a.placement, getPopupContainer = _a.getPopupContainer, showAction = _a.showAction, hideAction = _a.hideAction, overlayClassName = _a.overlayClassName, overlayStyle = _a.overlayStyle, trigger2 = _a.trigger, otherProps = __rest$J(_a, ["prefixCls", "transitionName", "animation", "align", "placement", "getPopupContainer", "showAction", "hideAction", "overlayClassName", "overlayStyle", "trigger"]);
    var triggerHideAction = hideAction;
    if (!triggerHideAction && trigger2.indexOf("contextmenu") !== -1) {
      triggerHideAction = ["click"];
    }
    var triggerProps = _extends$1(_extends$1({}, otherProps), {
      prefixCls: prefixCls2,
      popupClassName: overlayClassName,
      popupStyle: overlayStyle,
      builtinPlacements: placements$3,
      action: trigger2,
      showAction,
      hideAction: triggerHideAction || [],
      popupPlacement: placement2,
      popupAlign: align,
      popupTransitionName: transitionName2,
      popupAnimation: animation2,
      popupVisible: this.sVisible,
      afterPopupVisibleChange: this.afterVisibleChange,
      getPopupContainer,
      onPopupVisibleChange: this.onVisibleChange,
      popup: this.getMenuElementOrLambda(),
      ref: this.saveTrigger
    });
    return _createVNode$49(Trigger, triggerProps, {
      default: function _default8() {
        return [_this2.renderChildren()];
      }
    });
  }
});
const getDropdownProps = function() {
  return {
    trigger: {
      type: [Array, String],
      default: "hover"
    },
    overlay: PropTypes.any,
    visible: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    align: PropTypes.object,
    getPopupContainer: PropTypes.func,
    prefixCls: PropTypes.string,
    transitionName: PropTypes.string,
    placement: PropTypes.oneOf(tuple("topLeft", "topCenter", "topRight", "bottomLeft", "bottomCenter", "bottomRight")),
    overlayClassName: PropTypes.string,
    overlayStyle: PropTypes.style,
    forceRender: PropTypes.looseBool,
    mouseEnterDelay: PropTypes.number,
    mouseLeaveDelay: PropTypes.number,
    openClassName: PropTypes.string,
    minOverlayWidthMatchTrigger: PropTypes.looseBool
  };
};
var EllipsisOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M176 511a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0zm280 0a56 56 0 10112 0 56 56 0 10-112 0z" } }] }, "name": "ellipsis", "theme": "outlined" };
const { createVNode: _createVNode$48 } = await importShared("vue");
function _objectSpread$y(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$z(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$z(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var EllipsisOutlined = function EllipsisOutlined2(props2, context2) {
  var p = _objectSpread$y({}, props2, context2.attrs);
  return _createVNode$48(Icon, _objectSpread$y({}, p, {
    "icon": EllipsisOutlined$1
  }), null);
};
EllipsisOutlined.displayName = "EllipsisOutlined";
EllipsisOutlined.inheritAttrs = false;
const { createVNode: _createVNode$47 } = await importShared("vue");
var __rest$I = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { provide: provide$l, inject: inject$13, defineComponent: defineComponent$2j } = await importShared("vue");
var ButtonTypesProps = buttonProps();
var DropdownProps = getDropdownProps();
var ButtonGroup = Button$1.Group;
var dropdownButtonProps = _extends$1(_extends$1({}, DropdownProps), {
  type: PropTypes.oneOf(tuple("primary", "ghost", "dashed", "danger", "default")).def("default"),
  size: PropTypes.oneOf(tuple("small", "large", "default")).def("default"),
  htmlType: ButtonTypesProps.htmlType,
  href: PropTypes.string,
  disabled: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  placement: DropdownProps.placement.def("bottomRight"),
  icon: PropTypes.any,
  title: PropTypes.string,
  onClick: PropTypes.func,
  onVisibleChange: PropTypes.func,
  "onUpdate:visible": PropTypes.func
});
const DropdownButton = defineComponent$2j({
  name: "ADropdownButton",
  inheritAttrs: false,
  props: dropdownButtonProps,
  emits: ["click", "visibleChange", "update:visible"],
  setup: function setup43() {
    return {
      configProvider: inject$13("configProvider", defaultConfigProvider),
      popupRef: null
    };
  },
  created: function created5() {
    provide$l("savePopupRef", this.savePopupRef);
  },
  methods: {
    savePopupRef: function savePopupRef2(ref2) {
      this.popupRef = ref2;
    },
    handleClick: function handleClick(e2) {
      this.$emit("click", e2);
    },
    handleVisibleChange: function handleVisibleChange2(val) {
      this.$emit("update:visible", val);
      this.$emit("visibleChange", val);
    }
  },
  render: function render26() {
    var _this = this;
    var _a = _extends$1(_extends$1({}, this.$props), this.$attrs), type3 = _a.type, disabled = _a.disabled;
    _a.onClick;
    var htmlType = _a.htmlType, className = _a.class, customizePrefixCls = _a.prefixCls;
    _a.overlay;
    var trigger2 = _a.trigger, align = _a.align, visible9 = _a.visible;
    _a.onVisibleChange;
    var placement2 = _a.placement, getPopupContainer = _a.getPopupContainer, href = _a.href, title = _a.title, restProps = __rest$I(_a, ["type", "disabled", "onClick", "htmlType", "class", "prefixCls", "overlay", "trigger", "align", "visible", "onVisibleChange", "placement", "getPopupContainer", "href", "title"]);
    var icon = getComponent(this, "icon") || _createVNode$47(EllipsisOutlined, null, null);
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("dropdown-button", customizePrefixCls);
    var dropdownProps2 = {
      align,
      disabled,
      trigger: disabled ? [] : trigger2,
      placement: placement2,
      getPopupContainer: getPopupContainer || getContextPopupContainer,
      onVisibleChange: this.handleVisibleChange
    };
    if (hasProp(this, "visible")) {
      dropdownProps2.visible = visible9;
    }
    var buttonGroupProps2 = _extends$1(_extends$1({}, restProps), {
      class: classNames(prefixCls2, className)
    });
    return _createVNode$47(ButtonGroup, buttonGroupProps2, {
      default: function _default8() {
        return [_createVNode$47(Button$1, {
          "type": type3,
          "disabled": disabled,
          "onClick": _this.handleClick,
          "htmlType": htmlType,
          "href": href,
          "title": title
        }, {
          default: function _default9() {
            return [getSlot(_this)];
          }
        }), _createVNode$47(Dropdown, _objectSpread2$2(_objectSpread2$2({}, dropdownProps2), {}, {
          "overlay": getComponent(_this, "overlay")
        }), {
          default: function _default9() {
            return [_createVNode$47(Button$1, {
              "type": type3
            }, {
              default: function _default10() {
                return [icon];
              }
            })];
          }
        })];
      }
    });
  }
});
var RightOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z" } }] }, "name": "right", "theme": "outlined" };
const { createVNode: _createVNode$46 } = await importShared("vue");
function _objectSpread$x(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$y(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$y(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var RightOutlined = function RightOutlined2(props2, context2) {
  var p = _objectSpread$x({}, props2, context2.attrs);
  return _createVNode$46(Icon, _objectSpread$x({}, p, {
    "icon": RightOutlined$1
  }), null);
};
RightOutlined.displayName = "RightOutlined";
RightOutlined.inheritAttrs = false;
const { createVNode: _createVNode$45 } = await importShared("vue");
const { provide: provide$k, inject: inject$12, cloneVNode: cloneVNode$4, defineComponent: defineComponent$2i } = await importShared("vue");
var dropdownProps = getDropdownProps();
var Dropdown = defineComponent$2i({
  name: "ADropdown",
  inheritAttrs: false,
  props: _extends$1(_extends$1({}, dropdownProps), {
    prefixCls: PropTypes.string,
    mouseEnterDelay: PropTypes.number.def(0.15),
    mouseLeaveDelay: PropTypes.number.def(0.1),
    placement: dropdownProps.placement.def("bottomLeft"),
    onVisibleChange: PropTypes.func,
    "onUpdate:visible": PropTypes.func
  }),
  emits: ["visibleChange", "update:visible"],
  setup: function setup44() {
    return {
      configProvider: inject$12("configProvider", defaultConfigProvider),
      popupRef: null
    };
  },
  created: function created6() {
    provide$k("savePopupRef", this.savePopupRef);
  },
  methods: {
    savePopupRef: function savePopupRef3(ref2) {
      this.popupRef = ref2;
    },
    getTransitionName: function getTransitionName3() {
      var _this$$props = this.$props, _this$$props$placemen = _this$$props.placement, placement2 = _this$$props$placemen === void 0 ? "" : _this$$props$placemen, transitionName2 = _this$$props.transitionName;
      if (transitionName2 !== void 0) {
        return transitionName2;
      }
      if (placement2.indexOf("top") >= 0) {
        return "slide-down";
      }
      return "slide-up";
    },
    renderOverlay: function renderOverlay(prefixCls2) {
      var overlay = getComponent(this, "overlay");
      var overlayNode = Array.isArray(overlay) ? overlay[0] : overlay;
      var overlayProps = overlayNode && getPropsData(overlayNode);
      var _ref = overlayProps || {}, _ref$selectable = _ref.selectable, selectable = _ref$selectable === void 0 ? false : _ref$selectable, _ref$focusable = _ref.focusable, focusable = _ref$focusable === void 0 ? true : _ref$focusable;
      var expandIcon = function expandIcon2() {
        return _createVNode$45("span", {
          "class": "".concat(prefixCls2, "-menu-submenu-arrow")
        }, [_createVNode$45(RightOutlined, {
          "class": "".concat(prefixCls2, "-menu-submenu-arrow-icon")
        }, null)]);
      };
      var fixedModeOverlay = isValidElement(overlayNode) ? cloneVNode$4(overlayNode, {
        mode: "vertical",
        selectable,
        focusable,
        expandIcon
      }) : overlay;
      return fixedModeOverlay;
    },
    handleVisibleChange: function handleVisibleChange3(val) {
      this.$emit("update:visible", val);
      this.$emit("visibleChange", val);
    }
  },
  render: function render27() {
    var _a;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, trigger2 = props2.trigger, disabled = props2.disabled, getPopupContainer = props2.getPopupContainer;
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("dropdown", customizePrefixCls);
    var child = getSlot(this)[0];
    var dropdownTrigger = cloneElement(child, {
      class: classNames((_a = child === null || child === void 0 ? void 0 : child.props) === null || _a === void 0 ? void 0 : _a.class, "".concat(prefixCls2, "-trigger")),
      disabled
    });
    var triggerActions = disabled ? [] : typeof trigger2 === "string" ? [trigger2] : trigger2;
    var alignPoint2;
    if (triggerActions && triggerActions.indexOf("contextmenu") !== -1) {
      alignPoint2 = true;
    }
    var dropdownProps2 = _extends$1(_extends$1(_extends$1({
      alignPoint: alignPoint2
    }, props2), this.$attrs), {
      prefixCls: prefixCls2,
      getPopupContainer: getPopupContainer || getContextPopupContainer,
      transitionName: this.getTransitionName(),
      trigger: triggerActions,
      overlay: this.renderOverlay(prefixCls2),
      onVisibleChange: this.handleVisibleChange
    });
    return _createVNode$45(Dropdown$1, dropdownProps2, {
      default: function _default8() {
        return [dropdownTrigger];
      }
    });
  }
});
Dropdown.Button = DropdownButton;
const { createVNode: _createVNode$44 } = await importShared("vue");
const { defineComponent: defineComponent$2h } = await importShared("vue");
var breadcrumbItemProps = {
  prefixCls: PropTypes.string,
  href: PropTypes.string,
  separator: PropTypes.any,
  overlay: PropTypes.any
};
const BreadcrumbItem = defineComponent$2h({
  name: "ABreadcrumbItem",
  __ANT_BREADCRUMB_ITEM: true,
  props: breadcrumbItemProps,
  slots: ["separator", "overlay"],
  setup: function setup45(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("breadcrumb", props2), prefixCls2 = _useConfigInject.prefixCls;
    var renderBreadcrumbNode = function renderBreadcrumbNode2(breadcrumbItem, prefixCls3) {
      var overlay = getPropsSlot(slots, props2, "overlay");
      if (overlay) {
        return _createVNode$44(Dropdown, {
          "overlay": overlay,
          "placement": "bottomCenter"
        }, {
          default: function _default8() {
            return [_createVNode$44("span", {
              "class": "".concat(prefixCls3, "-overlay-link")
            }, [breadcrumbItem, _createVNode$44(DownOutlined, null, null)])];
          }
        });
      }
      return breadcrumbItem;
    };
    return function() {
      var _a;
      var separator = (_a = getPropsSlot(slots, props2, "separator")) !== null && _a !== void 0 ? _a : "/";
      var children = getPropsSlot(slots, props2);
      var link;
      if (props2.href !== void 0) {
        link = _createVNode$44("a", {
          "class": "".concat(prefixCls2.value, "-link")
        }, [children]);
      } else {
        link = _createVNode$44("span", {
          "class": "".concat(prefixCls2.value, "-link")
        }, [children]);
      }
      link = renderBreadcrumbNode(link, prefixCls2.value);
      if (children) {
        return _createVNode$44("span", null, [link, separator && _createVNode$44("span", {
          "class": "".concat(prefixCls2.value, "-separator")
        }, [separator])]);
      }
      return null;
    };
  }
});
const { toRaw: toRaw$2 } = await importShared("vue");
function shallowEqual(objA, objB, compare2, compareContext) {
  var ret = compare2 ? compare2.call(compareContext, objA, objB) : void 0;
  if (ret !== void 0) {
    return !!ret;
  }
  if (objA === objB) {
    return true;
  }
  if (_typeof$3(objA) !== "object" || !objA || _typeof$3(objB) !== "object" || !objB) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
  for (var idx = 0; idx < keysA.length; idx++) {
    var key2 = keysA[idx];
    if (!bHasOwnProperty(key2)) {
      return false;
    }
    var valueA = objA[key2];
    var valueB = objB[key2];
    ret = compare2 ? compare2.call(compareContext, valueA, valueB, key2) : void 0;
    if (ret === false || ret === void 0 && valueA !== valueB) {
      return false;
    }
  }
  return true;
}
function shallowEqual$1(value26, other, customizer, thisArg) {
  return shallowEqual(toRaw$2(value26), toRaw$2(other), customizer, thisArg);
}
const { defineComponent: defineComponent$2g, inject: inject$11, provide: provide$j, toRef: toRef$3 } = await importShared("vue");
var MenuContextKey = Symbol("menuContextKey");
var useProvideMenu = function useProvideMenu2(props2) {
  provide$j(MenuContextKey, props2);
};
var useInjectMenu = function useInjectMenu2() {
  return inject$11(MenuContextKey);
};
var MenuFirstLevelContextKey = Symbol("menuFirstLevelContextKey");
var useProvideFirstLevel = function useProvideFirstLevel2(firstLevel) {
  provide$j(MenuFirstLevelContextKey, firstLevel);
};
var useInjectFirstLevel = function useInjectFirstLevel2() {
  return inject$11(MenuFirstLevelContextKey, true);
};
var MenuContextProvider = defineComponent$2g({
  name: "MenuContextProvider",
  inheritAttrs: false,
  props: {
    mode: {
      type: String,
      default: void 0
    },
    overflowDisabled: {
      type: Boolean,
      default: void 0
    },
    isRootMenu: {
      type: Boolean,
      default: void 0
    }
  },
  setup: function setup46(props2, _ref) {
    var slots = _ref.slots;
    var menuContext = useInjectMenu();
    var newContext = _extends$1({}, menuContext);
    if (props2.mode !== void 0) {
      newContext.mode = toRef$3(props2, "mode");
    }
    if (props2.isRootMenu !== void 0) {
      newContext.isRootMenu = toRef$3(props2, "isRootMenu");
    }
    if (props2.overflowDisabled !== void 0) {
      newContext.overflowDisabled = toRef$3(props2, "overflowDisabled");
    }
    useProvideMenu(newContext);
    return function() {
      var _a;
      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
  }
});
var HASH_UNDEFINED = "__lodash_hash_undefined__";
function setCacheAdd(value26) {
  this.__data__.set(value26, HASH_UNDEFINED);
  return this;
}
function setCacheHas(value26) {
  return this.__data__.has(value26);
}
function SetCache(values) {
  var index2 = -1, length = values == null ? 0 : values.length;
  this.__data__ = new MapCache();
  while (++index2 < length) {
    this.add(values[index2]);
  }
}
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;
function baseFindIndex(array3, predicate, fromIndex, fromRight) {
  var length = array3.length, index2 = fromIndex + -1;
  while (++index2 < length) {
    if (predicate(array3[index2], index2, array3)) {
      return index2;
    }
  }
  return -1;
}
function baseIsNaN(value26) {
  return value26 !== value26;
}
function strictIndexOf(array3, value26, fromIndex) {
  var index2 = fromIndex - 1, length = array3.length;
  while (++index2 < length) {
    if (array3[index2] === value26) {
      return index2;
    }
  }
  return -1;
}
function baseIndexOf(array3, value26, fromIndex) {
  return value26 === value26 ? strictIndexOf(array3, value26, fromIndex) : baseFindIndex(array3, baseIsNaN, fromIndex);
}
function arrayIncludes(array3, value26) {
  var length = array3 == null ? 0 : array3.length;
  return !!length && baseIndexOf(array3, value26, 0) > -1;
}
function cacheHas(cache, key2) {
  return cache.has(key2);
}
function noop$E() {
}
function setToArray(set2) {
  var index2 = -1, result = Array(set2.size);
  set2.forEach(function(value26) {
    result[++index2] = value26;
  });
  return result;
}
var INFINITY$1 = 1 / 0;
var createSet = !(Set$1 && 1 / setToArray(new Set$1([, -0]))[1] == INFINITY$1) ? noop$E : function(values) {
  return new Set$1(values);
};
var LARGE_ARRAY_SIZE = 200;
function baseUniq(array3, iteratee, comparator) {
  var index2 = -1, includes = arrayIncludes, length = array3.length, isCommon = true, result = [], seen = result;
  if (length >= LARGE_ARRAY_SIZE) {
    var set2 = iteratee ? null : createSet(array3);
    if (set2) {
      return setToArray(set2);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache();
  } else {
    seen = iteratee ? [] : result;
  }
  outer:
    while (++index2 < length) {
      var value26 = array3[index2], computed2 = iteratee ? iteratee(value26) : value26;
      value26 = value26 !== 0 ? value26 : 0;
      if (isCommon && computed2 === computed2) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed2) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed2);
        }
        result.push(value26);
      } else if (!includes(seen, computed2, comparator)) {
        if (seen !== result) {
          seen.push(computed2);
        }
        result.push(value26);
      }
    }
  return result;
}
function uniq(array3) {
  return array3 && array3.length ? baseUniq(array3) : [];
}
var SiderCollapsedKey = Symbol("siderCollapsed");
var SiderHookProviderKey = Symbol("siderHookProvider");
const { computed: computed$H, inject: inject$10, provide: provide$i } = await importShared("vue");
var KeyPathContext = Symbol("KeyPathContext");
var useInjectKeyPath = function useInjectKeyPath2() {
  return inject$10(KeyPathContext, {
    parentEventKeys: computed$H(function() {
      return [];
    }),
    parentKeys: computed$H(function() {
      return [];
    }),
    parentInfo: {}
  });
};
var useProvideKeyPath = function useProvideKeyPath2(eventKey, key2, menuInfo) {
  var _useInjectKeyPath = useInjectKeyPath(), parentEventKeys = _useInjectKeyPath.parentEventKeys, parentKeys = _useInjectKeyPath.parentKeys;
  var eventKeys = computed$H(function() {
    return [].concat(_toConsumableArray(parentEventKeys.value), [eventKey]);
  });
  var keys2 = computed$H(function() {
    return [].concat(_toConsumableArray(parentKeys.value), [key2]);
  });
  provide$i(KeyPathContext, {
    parentEventKeys: eventKeys,
    parentKeys: keys2,
    parentInfo: menuInfo
  });
  return keys2;
};
const { computed: computed$G } = await importShared("vue");
function useDirectionStyle(level2) {
  var _useInjectMenu = useInjectMenu(), mode4 = _useInjectMenu.mode, rtl = _useInjectMenu.rtl, inlineIndent = _useInjectMenu.inlineIndent;
  return computed$G(function() {
    return mode4.value !== "inline" ? null : rtl.value ? {
      paddingRight: "".concat(level2.value * inlineIndent.value, "px")
    } : {
      paddingLeft: "".concat(level2.value * inlineIndent.value, "px")
    };
  });
}
const { createVNode: _createVNode$43 } = await importShared("vue");
const { computed: computed$F, defineComponent: defineComponent$2f, getCurrentInstance: getCurrentInstance$1, onBeforeUnmount: onBeforeUnmount$a, ref: ref$z, watch: watch$k } = await importShared("vue");
var indexGuid$2 = 0;
var menuItemProps = {
  role: String,
  disabled: Boolean,
  danger: Boolean,
  title: {
    type: [String, Boolean],
    default: void 0
  },
  icon: PropTypes.VNodeChild
};
const MenuItem = defineComponent$2f({
  name: "AMenuItem",
  inheritAttrs: false,
  props: menuItemProps,
  emits: ["mouseenter", "mouseleave", "click", "keydown", "focus"],
  slots: ["icon", "title"],
  setup: function setup47(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit, attrs = _ref.attrs;
    var instance = getCurrentInstance$1();
    var key2 = _typeof$3(instance.vnode.key) === "symbol" ? String(instance.vnode.key) : instance.vnode.key;
    devWarning(_typeof$3(instance.vnode.key) !== "symbol", "MenuItem", 'MenuItem `:key="'.concat(String(key2), '"` not support Symbol type'));
    var eventKey = "menu_item_".concat(++indexGuid$2, "_$$_").concat(key2);
    var _useInjectKeyPath = useInjectKeyPath(), parentEventKeys = _useInjectKeyPath.parentEventKeys, parentKeys = _useInjectKeyPath.parentKeys;
    var _useInjectMenu = useInjectMenu(), prefixCls2 = _useInjectMenu.prefixCls, activeKeys = _useInjectMenu.activeKeys, disabled = _useInjectMenu.disabled, changeActiveKeys = _useInjectMenu.changeActiveKeys, rtl = _useInjectMenu.rtl, inlineCollapsed = _useInjectMenu.inlineCollapsed, siderCollapsed = _useInjectMenu.siderCollapsed, onItemClick2 = _useInjectMenu.onItemClick, selectedKeys3 = _useInjectMenu.selectedKeys, registerMenuInfo = _useInjectMenu.registerMenuInfo, unRegisterMenuInfo = _useInjectMenu.unRegisterMenuInfo;
    var firstLevel = useInjectFirstLevel();
    var isActive = ref$z(false);
    var keysPath = computed$F(function() {
      return [].concat(_toConsumableArray(parentKeys.value), [key2]);
    });
    var menuInfo = {
      eventKey,
      key: key2,
      parentEventKeys,
      parentKeys,
      isLeaf: true
    };
    registerMenuInfo(eventKey, menuInfo);
    onBeforeUnmount$a(function() {
      unRegisterMenuInfo(eventKey);
    });
    watch$k(activeKeys, function() {
      isActive.value = !!activeKeys.value.find(function(val) {
        return val === key2;
      });
    }, {
      immediate: true
    });
    var mergedDisabled = computed$F(function() {
      return disabled.value || props2.disabled;
    });
    var selected = computed$F(function() {
      return selectedKeys3.value.includes(key2);
    });
    var classNames2 = computed$F(function() {
      var _ref2;
      var itemCls = "".concat(prefixCls2.value, "-item");
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(itemCls), true), _defineProperty$U(_ref2, "".concat(itemCls, "-danger"), props2.danger), _defineProperty$U(_ref2, "".concat(itemCls, "-active"), isActive.value), _defineProperty$U(_ref2, "".concat(itemCls, "-selected"), selected.value), _defineProperty$U(_ref2, "".concat(itemCls, "-disabled"), mergedDisabled.value), _ref2;
    });
    var getEventInfo = function getEventInfo2(e2) {
      return {
        key: key2,
        eventKey,
        keyPath: keysPath.value,
        eventKeyPath: [].concat(_toConsumableArray(parentEventKeys.value), [eventKey]),
        domEvent: e2,
        item: _extends$1(_extends$1({}, props2), attrs)
      };
    };
    var onInternalClick = function onInternalClick2(e2) {
      if (mergedDisabled.value) {
        return;
      }
      var info3 = getEventInfo(e2);
      emit("click", e2);
      onItemClick2(info3);
    };
    var onMouseEnter4 = function onMouseEnter5(event) {
      if (!mergedDisabled.value) {
        changeActiveKeys(keysPath.value);
        emit("mouseenter", event);
      }
    };
    var onMouseLeave5 = function onMouseLeave6(event) {
      if (!mergedDisabled.value) {
        changeActiveKeys([]);
        emit("mouseleave", event);
      }
    };
    var onInternalKeyDown = function onInternalKeyDown2(e2) {
      emit("keydown", e2);
      if (e2.which === KeyCode$1.ENTER) {
        var info3 = getEventInfo(e2);
        emit("click", e2);
        onItemClick2(info3);
      }
    };
    var onInternalFocus = function onInternalFocus2(e2) {
      changeActiveKeys(keysPath.value);
      emit("focus", e2);
    };
    var renderItemChildren = function renderItemChildren2(icon, children) {
      var wrapNode = _createVNode$43("span", {
        "class": "".concat(prefixCls2.value, "-title-content")
      }, [children]);
      if (!icon || isValidElement(children) && children.type === "span") {
        if (children && inlineCollapsed.value && firstLevel && typeof children === "string") {
          return _createVNode$43("div", {
            "class": "".concat(prefixCls2.value, "-inline-collapsed-noicon")
          }, [children.charAt(0)]);
        }
      }
      return wrapNode;
    };
    var directionStyle = useDirectionStyle(computed$F(function() {
      return keysPath.value.length;
    }));
    return function() {
      var _ref3;
      var _a, _b, _c;
      var title = (_a = props2.title) !== null && _a !== void 0 ? _a : (_b = slots.title) === null || _b === void 0 ? void 0 : _b.call(slots);
      var children = flattenChildren((_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots));
      var childrenLength = children.length;
      var tooltipTitle = title;
      if (typeof title === "undefined") {
        tooltipTitle = firstLevel && childrenLength ? children : "";
      } else if (title === false) {
        tooltipTitle = "";
      }
      var tooltipProps2 = {
        title: tooltipTitle
      };
      if (!siderCollapsed.value && !inlineCollapsed.value) {
        tooltipProps2.title = null;
        tooltipProps2.visible = false;
      }
      var optionRoleProps = {};
      if (props2.role === "option") {
        optionRoleProps["aria-selected"] = selected.value;
      }
      var icon = getPropsSlot(slots, props2, "icon");
      return _createVNode$43(Tooltip, _objectSpread2$2(_objectSpread2$2({}, tooltipProps2), {}, {
        "placement": rtl.value ? "left" : "right",
        "overlayClassName": "".concat(prefixCls2.value, "-inline-collapsed-tooltip")
      }), {
        default: function _default8() {
          return [_createVNode$43(Overflow.Item, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
            "component": "li"
          }, attrs), {}, {
            "style": _extends$1(_extends$1({}, attrs.style || {}), directionStyle.value),
            "class": [classNames2.value, (_ref3 = {}, _defineProperty$U(_ref3, "".concat(attrs.class), !!attrs.class), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-only-child"), (icon ? childrenLength + 1 : childrenLength) === 1), _ref3)],
            "role": props2.role || "menuitem",
            "tabindex": props2.disabled ? null : -1,
            "data-menu-id": key2,
            "aria-disabled": props2.disabled
          }, optionRoleProps), {}, {
            "onMouseenter": onMouseEnter4,
            "onMouseleave": onMouseLeave5,
            "onClick": onInternalClick,
            "onKeydown": onInternalKeyDown,
            "onFocus": onInternalFocus,
            "title": typeof title === "string" ? title : void 0
          }), {
            default: function _default9() {
              return [cloneElement(icon, {
                class: "".concat(prefixCls2.value, "-item-icon")
              }), renderItemChildren(icon, children)];
            }
          })];
        }
      });
    };
  }
});
var autoAdjustOverflow$2 = {
  adjustX: 1,
  adjustY: 1
};
var placements$2 = {
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$2,
    offset: [0, -7]
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$2,
    offset: [0, 7]
  },
  leftTop: {
    points: ["tr", "tl"],
    overflow: autoAdjustOverflow$2,
    offset: [-4, 0]
  },
  rightTop: {
    points: ["tl", "tr"],
    overflow: autoAdjustOverflow$2,
    offset: [4, 0]
  }
};
var placementsRtl = {
  topLeft: {
    points: ["bl", "tl"],
    overflow: autoAdjustOverflow$2,
    offset: [0, -7]
  },
  bottomLeft: {
    points: ["tl", "bl"],
    overflow: autoAdjustOverflow$2,
    offset: [0, 7]
  },
  rightTop: {
    points: ["tr", "tl"],
    overflow: autoAdjustOverflow$2,
    offset: [-4, 0]
  },
  leftTop: {
    points: ["tl", "tr"],
    overflow: autoAdjustOverflow$2,
    offset: [4, 0]
  }
};
const { createVNode: _createVNode$42, resolveDirective: _resolveDirective$i } = await importShared("vue");
const { computed: computed$E, defineComponent: defineComponent$2e, onBeforeUnmount: onBeforeUnmount$9, ref: ref$y, watch: watch$j } = await importShared("vue");
var popupPlacementMap = {
  horizontal: "bottomLeft",
  vertical: "rightTop",
  "vertical-left": "rightTop",
  "vertical-right": "leftTop"
};
const PopupTrigger = defineComponent$2e({
  name: "PopupTrigger",
  inheritAttrs: false,
  props: {
    prefixCls: String,
    mode: String,
    visible: Boolean,
    // popup: React.ReactNode;
    popupClassName: String,
    popupOffset: Array,
    disabled: Boolean,
    onVisibleChange: Function
  },
  slots: ["popup"],
  emits: ["visibleChange"],
  setup: function setup48(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit;
    var innerVisible = ref$y(false);
    var _useInjectMenu = useInjectMenu(), getPopupContainer = _useInjectMenu.getPopupContainer, rtl = _useInjectMenu.rtl, subMenuOpenDelay = _useInjectMenu.subMenuOpenDelay, subMenuCloseDelay = _useInjectMenu.subMenuCloseDelay, builtinPlacements = _useInjectMenu.builtinPlacements, triggerSubMenuAction = _useInjectMenu.triggerSubMenuAction, isRootMenu = _useInjectMenu.isRootMenu;
    var placement2 = computed$E(function() {
      return rtl.value ? _extends$1(_extends$1({}, placementsRtl), builtinPlacements.value) : _extends$1(_extends$1({}, placements$2), builtinPlacements.value);
    });
    var popupPlacement = computed$E(function() {
      return popupPlacementMap[props2.mode];
    });
    var visibleRef = ref$y();
    watch$j(function() {
      return props2.visible;
    }, function(visible9) {
      wrapperRaf.cancel(visibleRef.value);
      visibleRef.value = wrapperRaf(function() {
        innerVisible.value = visible9;
      });
    }, {
      immediate: true
    });
    onBeforeUnmount$9(function() {
      wrapperRaf.cancel(visibleRef.value);
    });
    var onVisibleChange6 = function onVisibleChange7(visible9) {
      emit("visibleChange", visible9);
    };
    return function() {
      var prefixCls2 = props2.prefixCls, popupClassName = props2.popupClassName, mode4 = props2.mode, popupOffset = props2.popupOffset, disabled = props2.disabled;
      return _createVNode$42(Trigger, {
        "prefixCls": prefixCls2,
        "popupClassName": classNames("".concat(prefixCls2, "-popup"), _defineProperty$U({}, "".concat(prefixCls2, "-rtl"), rtl.value), popupClassName),
        "stretch": mode4 === "horizontal" ? "minWidth" : null,
        "getPopupContainer": isRootMenu.value ? getPopupContainer.value : function(triggerNode) {
          return triggerNode.parentNode;
        },
        "builtinPlacements": placement2.value,
        "popupPlacement": popupPlacement.value,
        "popupVisible": innerVisible.value,
        "popupAlign": popupOffset && {
          offset: popupOffset
        },
        "action": disabled ? [] : [triggerSubMenuAction.value],
        "mouseEnterDelay": subMenuOpenDelay.value,
        "mouseLeaveDelay": subMenuCloseDelay.value,
        "onPopupVisibleChange": onVisibleChange6,
        "forceRender": true
      }, {
        popup: function popup() {
          var _a;
          return (_a = slots.popup) === null || _a === void 0 ? void 0 : _a.call(slots, {
            visible: innerVisible.value
          });
        },
        default: slots.default
      });
    };
  }
});
const { createVNode: _createVNode$41 } = await importShared("vue");
var InternalSubMenuList = function InternalSubMenuList2(_props, _ref) {
  var slots = _ref.slots, attrs = _ref.attrs;
  var _a;
  var _useInjectMenu = useInjectMenu(), prefixCls2 = _useInjectMenu.prefixCls, mode4 = _useInjectMenu.mode;
  return _createVNode$41("ul", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
    "class": classNames(prefixCls2.value, "".concat(prefixCls2.value, "-sub"), "".concat(prefixCls2.value, "-").concat(mode4.value === "inline" ? "inline" : "vertical")),
    "data-menu-list": true
  }), [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
};
InternalSubMenuList.displayName = "SubMenuList";
const { withDirectives: _withDirectives$3, createVNode: _createVNode$40, vShow: _vShow$3 } = await importShared("vue");
const { computed: computed$D, defineComponent: defineComponent$2d, ref: ref$x, watch: watch$i } = await importShared("vue");
const InlineSubMenuList = defineComponent$2d({
  name: "InlineSubMenuList",
  inheritAttrs: false,
  props: {
    id: String,
    open: Boolean,
    keyPath: Array
  },
  setup: function setup49(props2, _ref) {
    var slots = _ref.slots;
    var fixedMode = computed$D(function() {
      return "inline";
    });
    var _useInjectMenu = useInjectMenu(), motion = _useInjectMenu.motion, mode4 = _useInjectMenu.mode, defaultMotions = _useInjectMenu.defaultMotions;
    var sameModeRef = computed$D(function() {
      return mode4.value === fixedMode.value;
    });
    var destroy3 = ref$x(!sameModeRef.value);
    var mergedOpen = computed$D(function() {
      return sameModeRef.value ? props2.open : false;
    });
    watch$i(mode4, function() {
      if (sameModeRef.value) {
        destroy3.value = false;
      }
    }, {
      flush: "post"
    });
    var style3 = ref$x({});
    var className = ref$x("");
    var mergedMotion = computed$D(function() {
      var _a, _b;
      var m2 = motion.value || ((_a = defaultMotions.value) === null || _a === void 0 ? void 0 : _a[fixedMode.value]) || ((_b = defaultMotions.value) === null || _b === void 0 ? void 0 : _b.other);
      var res = typeof m2 === "function" ? m2(style3, className) : m2;
      return _extends$1(_extends$1({}, res), {
        appear: props2.keyPath.length <= 1
      });
    });
    return function() {
      var _a;
      if (destroy3.value) {
        return null;
      }
      return _createVNode$40(MenuContextProvider, {
        "mode": fixedMode.value
      }, {
        default: function _default8() {
          return [_createVNode$40(Transition, mergedMotion.value, {
            default: function _default9() {
              return [_withDirectives$3(_createVNode$40(InternalSubMenuList, {
                "id": props2.id,
                "style": style3.value,
                "class": className.value
              }, {
                default: function _default10() {
                  return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
                }
              }), [[_vShow$3, mergedOpen.value]])];
            }
          })];
        }
      });
    };
  }
});
const { resolveDirective: _resolveDirective$h, withDirectives: _withDirectives$2, vShow: _vShow$2, Fragment: _Fragment$b, createVNode: _createVNode$3$ } = await importShared("vue");
const { computed: computed$C, defineComponent: defineComponent$2c, getCurrentInstance, ref: ref$w, watch: watch$h, onBeforeUnmount: onBeforeUnmount$8 } = await importShared("vue");
var indexGuid$1 = 0;
var subMenuProps = {
  icon: PropTypes.VNodeChild,
  title: PropTypes.VNodeChild,
  disabled: Boolean,
  level: Number,
  popupClassName: String,
  popupOffset: Array,
  internalPopupClose: Boolean,
  eventKey: String,
  expandIcon: Function
};
const SubMenu = defineComponent$2c({
  name: "ASubMenu",
  inheritAttrs: false,
  props: subMenuProps,
  slots: ["icon", "title", "expandIcon"],
  emits: ["titleClick", "mouseenter", "mouseleave"],
  setup: function setup50(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs, emit = _ref.emit;
    var _a, _b;
    useProvideFirstLevel(false);
    var instance = getCurrentInstance();
    var vnodeKey = _typeof$3(instance.vnode.key) === "symbol" ? String(instance.vnode.key) : instance.vnode.key;
    devWarning(_typeof$3(instance.vnode.key) !== "symbol", "SubMenu", 'SubMenu `:key="'.concat(String(vnodeKey), '"` not support Symbol type'));
    var key2 = isValid$3(vnodeKey) ? vnodeKey : "sub_menu_".concat(++indexGuid$1, "_$$_not_set_key");
    var eventKey = (_a = props2.eventKey) !== null && _a !== void 0 ? _a : isValid$3(vnodeKey) ? "sub_menu_".concat(++indexGuid$1, "_$$_").concat(vnodeKey) : key2;
    var _useInjectKeyPath = useInjectKeyPath(), parentEventKeys = _useInjectKeyPath.parentEventKeys, parentInfo = _useInjectKeyPath.parentInfo, parentKeys = _useInjectKeyPath.parentKeys;
    var keysPath = computed$C(function() {
      return [].concat(_toConsumableArray(parentKeys.value), [key2]);
    });
    var eventKeysPath = computed$C(function() {
      return [].concat(_toConsumableArray(parentEventKeys.value), [eventKey]);
    });
    var childrenEventKeys = ref$w([]);
    var menuInfo = {
      eventKey,
      key: key2,
      parentEventKeys,
      childrenEventKeys,
      parentKeys
    };
    (_b = parentInfo.childrenEventKeys) === null || _b === void 0 ? void 0 : _b.value.push(eventKey);
    onBeforeUnmount$8(function() {
      var _a2;
      if (parentInfo.childrenEventKeys) {
        parentInfo.childrenEventKeys.value = (_a2 = parentInfo.childrenEventKeys) === null || _a2 === void 0 ? void 0 : _a2.value.filter(function(k2) {
          return k2 != eventKey;
        });
      }
    });
    useProvideKeyPath(eventKey, key2, menuInfo);
    var _useInjectMenu = useInjectMenu(), prefixCls2 = _useInjectMenu.prefixCls, activeKeys = _useInjectMenu.activeKeys, contextDisabled = _useInjectMenu.disabled, changeActiveKeys = _useInjectMenu.changeActiveKeys, mode4 = _useInjectMenu.mode, inlineCollapsed = _useInjectMenu.inlineCollapsed, antdMenuTheme = _useInjectMenu.antdMenuTheme, openKeys = _useInjectMenu.openKeys, overflowDisabled = _useInjectMenu.overflowDisabled, onOpenChange = _useInjectMenu.onOpenChange, registerMenuInfo = _useInjectMenu.registerMenuInfo, unRegisterMenuInfo = _useInjectMenu.unRegisterMenuInfo, selectedSubMenuEventKeys = _useInjectMenu.selectedSubMenuEventKeys, motion = _useInjectMenu.motion, defaultMotions = _useInjectMenu.defaultMotions, menuExpandIcon = _useInjectMenu.expandIcon;
    registerMenuInfo(eventKey, menuInfo);
    onBeforeUnmount$8(function() {
      unRegisterMenuInfo(eventKey);
    });
    var subMenuPrefixCls = computed$C(function() {
      return "".concat(prefixCls2.value, "-submenu");
    });
    var mergedDisabled = computed$C(function() {
      return contextDisabled.value || props2.disabled;
    });
    var elementRef = ref$w();
    var popupRef = ref$w();
    var originOpen = computed$C(function() {
      return openKeys.value.includes(key2);
    });
    var open6 = computed$C(function() {
      return !overflowDisabled.value && originOpen.value;
    });
    var childrenSelected = computed$C(function() {
      return selectedSubMenuEventKeys.value.includes(eventKey);
    });
    var isActive = ref$w(false);
    watch$h(activeKeys, function() {
      isActive.value = !!activeKeys.value.find(function(val) {
        return val === key2;
      });
    }, {
      immediate: true
    });
    var onInternalTitleClick = function onInternalTitleClick2(e2) {
      if (mergedDisabled.value) {
        return;
      }
      emit("titleClick", e2, key2);
      if (mode4.value === "inline") {
        onOpenChange(eventKey, !originOpen.value);
      }
    };
    var onMouseEnter4 = function onMouseEnter5(event) {
      if (!mergedDisabled.value) {
        changeActiveKeys(keysPath.value);
        emit("mouseenter", event);
      }
    };
    var onMouseLeave5 = function onMouseLeave6(event) {
      if (!mergedDisabled.value) {
        changeActiveKeys([]);
        emit("mouseleave", event);
      }
    };
    var directionStyle = useDirectionStyle(computed$C(function() {
      return eventKeysPath.value.length;
    }));
    var onPopupVisibleChange = function onPopupVisibleChange2(newVisible) {
      if (mode4.value !== "inline") {
        onOpenChange(eventKey, newVisible);
      }
    };
    var onInternalFocus = function onInternalFocus2() {
      changeActiveKeys(keysPath.value);
    };
    var popupId = eventKey && "".concat(eventKey, "-popup");
    var popupClassName = computed$C(function() {
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-").concat(antdMenuTheme.value), props2.popupClassName);
    });
    var renderTitle2 = function renderTitle3(title, icon) {
      if (!icon) {
        return inlineCollapsed.value && !parentEventKeys.value.length && title && typeof title === "string" ? _createVNode$3$("div", {
          "class": "".concat(prefixCls2.value, "-inline-collapsed-noicon")
        }, [title.charAt(0)]) : _createVNode$3$("span", {
          "class": "".concat(prefixCls2.value, "-title-content")
        }, [title]);
      }
      var titleIsSpan = isValidElement(title) && title.type === "span";
      return _createVNode$3$(_Fragment$b, null, [cloneElement(icon, {
        class: "".concat(prefixCls2.value, "-item-icon")
      }, false), titleIsSpan ? title : _createVNode$3$("span", {
        "class": "".concat(prefixCls2.value, "-title-content")
      }, [title])]);
    };
    var triggerModeRef = computed$C(function() {
      return mode4.value !== "inline" && eventKeysPath.value.length > 1 ? "vertical" : mode4.value;
    });
    var renderMode = computed$C(function() {
      return mode4.value === "horizontal" ? "vertical" : mode4.value;
    });
    var style3 = ref$w({});
    var className = ref$w("");
    var mergedMotion = computed$C(function() {
      var _a2, _b2;
      var m2 = motion.value || ((_a2 = defaultMotions.value) === null || _a2 === void 0 ? void 0 : _a2[mode4.value]) || ((_b2 = defaultMotions.value) === null || _b2 === void 0 ? void 0 : _b2.other);
      var res = typeof m2 === "function" ? m2(style3, className) : m2;
      return res ? getTransitionProps(res.name) : void 0;
    });
    var subMenuTriggerModeRef = computed$C(function() {
      return triggerModeRef.value === "horizontal" ? "vertical" : triggerModeRef.value;
    });
    return function() {
      var _classNames;
      var _a2;
      var icon = getPropsSlot(slots, props2, "icon");
      var title = renderTitle2(getPropsSlot(slots, props2, "title"), icon);
      var subMenuPrefixClsValue = subMenuPrefixCls.value;
      var expandIcon = props2.expandIcon || slots.expandIcon || menuExpandIcon;
      var titleNode = _createVNode$3$("div", {
        "style": directionStyle.value,
        "class": "".concat(subMenuPrefixClsValue, "-title"),
        "tabindex": mergedDisabled.value ? null : -1,
        "ref": elementRef,
        "title": typeof title === "string" ? title : null,
        "data-menu-id": key2,
        "aria-expanded": open6.value,
        "aria-haspopup": true,
        "aria-controls": popupId,
        "aria-disabled": mergedDisabled.value,
        "onClick": onInternalTitleClick,
        "onFocus": onInternalFocus
      }, [title, mode4.value !== "horizontal" && expandIcon ? expandIcon(_extends$1(_extends$1({}, props2), {
        isOpen: open6.value
      })) : _createVNode$3$("i", {
        "class": "".concat(subMenuPrefixClsValue, "-arrow")
      }, null)]);
      if (!overflowDisabled.value && mode4.value !== "inline") {
        var triggerMode = triggerModeRef.value;
        var _titleNode = /* @__PURE__ */ function() {
          return titleNode;
        }();
        titleNode = _createVNode$3$(PopupTrigger, {
          "mode": triggerMode,
          "prefixCls": subMenuPrefixClsValue,
          "visible": !props2.internalPopupClose && open6.value,
          "popupClassName": popupClassName.value,
          "popupOffset": props2.popupOffset,
          "disabled": mergedDisabled.value,
          "onVisibleChange": onPopupVisibleChange
        }, {
          default: function _default8() {
            return [_titleNode];
          },
          popup: function popup(_ref2) {
            var visible9 = _ref2.visible;
            var _a3;
            return _createVNode$3$(MenuContextProvider, {
              "mode": subMenuTriggerModeRef.value,
              "isRootMenu": false
            }, {
              default: function _default8() {
                return [_createVNode$3$(Transition, mergedMotion.value, {
                  default: function _default9() {
                    return [_withDirectives$2(_createVNode$3$(InternalSubMenuList, {
                      "id": popupId,
                      "ref": popupRef
                    }, {
                      default: function _default10() {
                        return [(_a3 = slots.default) === null || _a3 === void 0 ? void 0 : _a3.call(slots)];
                      }
                    }), [[_vShow$2, visible9]])];
                  }
                })];
              }
            });
          }
        });
      } else {
        var _titleNode2 = /* @__PURE__ */ function() {
          return titleNode;
        }();
        titleNode = _createVNode$3$(PopupTrigger, null, {
          default: function _default8() {
            return [_titleNode2];
          }
        });
      }
      return _createVNode$3$(MenuContextProvider, {
        "mode": renderMode.value
      }, {
        default: function _default8() {
          return [_createVNode$3$(Overflow.Item, _objectSpread2$2(_objectSpread2$2({
            "component": "li"
          }, attrs), {}, {
            "role": "none",
            "class": classNames(subMenuPrefixClsValue, "".concat(subMenuPrefixClsValue, "-").concat(mode4.value), attrs.class, (_classNames = {}, _defineProperty$U(_classNames, "".concat(subMenuPrefixClsValue, "-open"), open6.value), _defineProperty$U(_classNames, "".concat(subMenuPrefixClsValue, "-active"), isActive.value), _defineProperty$U(_classNames, "".concat(subMenuPrefixClsValue, "-selected"), childrenSelected.value), _defineProperty$U(_classNames, "".concat(subMenuPrefixClsValue, "-disabled"), mergedDisabled.value), _classNames)),
            "onMouseenter": onMouseEnter4,
            "onMouseleave": onMouseLeave5,
            "data-submenu-id": key2
          }), {
            default: function _default9() {
              return [titleNode, !overflowDisabled.value && _createVNode$3$(InlineSubMenuList, {
                "id": popupId,
                "open": open6.value,
                "keyPath": keysPath.value
              }, {
                default: function _default10() {
                  return [(_a2 = slots.default) === null || _a2 === void 0 ? void 0 : _a2.call(slots)];
                }
              })];
            }
          })];
        }
      });
    };
  }
});
const { createVNode: _createVNode$3_ } = await importShared("vue");
const { computed: computed$B, defineComponent: defineComponent$2b, ref: ref$v, inject: inject$$, watchEffect: watchEffect$5, watch: watch$g, onMounted: onMounted$g, unref: unref$1 } = await importShared("vue");
var menuProps = {
  prefixCls: String,
  disabled: Boolean,
  inlineCollapsed: Boolean,
  disabledOverflow: Boolean,
  openKeys: Array,
  selectedKeys: Array,
  activeKey: String,
  selectable: {
    type: Boolean,
    default: true
  },
  multiple: {
    type: Boolean,
    default: false
  },
  motion: Object,
  theme: {
    type: String,
    default: "light"
  },
  mode: {
    type: String,
    default: "vertical"
  },
  inlineIndent: {
    type: Number,
    default: 24
  },
  subMenuOpenDelay: {
    type: Number,
    default: 0.1
  },
  subMenuCloseDelay: {
    type: Number,
    default: 0.1
  },
  builtinPlacements: {
    type: Object
  },
  triggerSubMenuAction: {
    type: String,
    default: "hover"
  },
  getPopupContainer: Function,
  expandIcon: Function
};
var EMPTY_LIST = [];
const Menu = defineComponent$2b({
  name: "AMenu",
  props: menuProps,
  emits: ["update:openKeys", "openChange", "select", "deselect", "update:selectedKeys", "click", "update:activeKey"],
  slots: ["expandIcon", "overflowedIndicator"],
  setup: function setup51(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit;
    var _useConfigInject = useConfigInject("menu", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var store = ref$v({});
    var siderCollapsed = inject$$(SiderCollapsedKey, ref$v(void 0));
    var inlineCollapsed = computed$B(function() {
      if (siderCollapsed.value !== void 0) {
        return siderCollapsed.value;
      }
      return props2.inlineCollapsed;
    });
    var isMounted = ref$v(false);
    onMounted$g(function() {
      isMounted.value = true;
    });
    watchEffect$5(function() {
      devWarning(!(props2.inlineCollapsed === true && props2.mode !== "inline"), "Menu", "`inlineCollapsed` should only be used when `mode` is inline.");
      devWarning(!(siderCollapsed.value !== void 0 && props2.inlineCollapsed === true), "Menu", "`inlineCollapsed` not control Menu under Sider. Should set `collapsed` on Sider instead.");
    });
    var activeKeys = ref$v([]);
    var mergedSelectedKeys = ref$v([]);
    var keyMapStore = ref$v({});
    watch$g(store, function() {
      var newKeyMapStore = {};
      for (var _i = 0, _Object$values = Object.values(store.value); _i < _Object$values.length; _i++) {
        var menuInfo = _Object$values[_i];
        newKeyMapStore[menuInfo.key] = menuInfo;
      }
      keyMapStore.value = newKeyMapStore;
    }, {
      flush: "post"
    });
    watchEffect$5(function() {
      if (props2.activeKey !== void 0) {
        var keys2 = [];
        var menuInfo = props2.activeKey ? keyMapStore.value[props2.activeKey] : void 0;
        if (menuInfo && props2.activeKey !== void 0) {
          keys2 = [].concat(_toConsumableArray(menuInfo.parentKeys), [props2.activeKey]);
        } else {
          keys2 = [];
        }
        if (!shallowEqual$1(activeKeys.value, keys2)) {
          activeKeys.value = keys2;
        }
      }
    });
    watch$g(function() {
      return props2.selectedKeys;
    }, function(selectedKeys3) {
      mergedSelectedKeys.value = selectedKeys3 || mergedSelectedKeys.value;
    }, {
      immediate: true
    });
    var selectedSubMenuEventKeys = ref$v([]);
    watch$g([keyMapStore, mergedSelectedKeys], function() {
      var subMenuParentEventKeys = [];
      mergedSelectedKeys.value.forEach(function(key2) {
        var menuInfo = keyMapStore.value[key2];
        if (menuInfo) {
          var _subMenuParentEventKe;
          (_subMenuParentEventKe = subMenuParentEventKeys).push.apply(_subMenuParentEventKe, _toConsumableArray(unref$1(menuInfo.parentEventKeys)));
        }
      });
      subMenuParentEventKeys = uniq(subMenuParentEventKeys);
      if (!shallowEqual$1(selectedSubMenuEventKeys.value, subMenuParentEventKeys)) {
        selectedSubMenuEventKeys.value = subMenuParentEventKeys;
      }
    }, {
      immediate: true
    });
    var triggerSelection = function triggerSelection2(info3) {
      if (!props2.selectable) {
        return;
      }
      var targetKey = info3.key;
      var exist = mergedSelectedKeys.value.includes(targetKey);
      var newSelectedKeys;
      if (props2.multiple) {
        if (exist) {
          newSelectedKeys = mergedSelectedKeys.value.filter(function(key2) {
            return key2 !== targetKey;
          });
        } else {
          newSelectedKeys = [].concat(_toConsumableArray(mergedSelectedKeys.value), [targetKey]);
        }
      } else {
        newSelectedKeys = [targetKey];
      }
      var selectInfo = _extends$1(_extends$1({}, info3), {
        selectedKeys: newSelectedKeys
      });
      if (!shallowEqual$1(newSelectedKeys, mergedSelectedKeys.value)) {
        if (props2.selectedKeys === void 0) {
          mergedSelectedKeys.value = newSelectedKeys;
        }
        emit("update:selectedKeys", newSelectedKeys);
        if (exist && props2.multiple) {
          emit("deselect", selectInfo);
        } else {
          emit("select", selectInfo);
        }
      }
      if (mergedMode.value !== "inline" && !props2.multiple && mergedOpenKeys.value.length) {
        triggerOpenKeys(EMPTY_LIST);
      }
    };
    var mergedOpenKeys = ref$v([]);
    watch$g(function() {
      return props2.openKeys;
    }, function() {
      var openKeys = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : mergedOpenKeys.value;
      if (!shallowEqual$1(mergedOpenKeys.value, openKeys)) {
        mergedOpenKeys.value = openKeys;
      }
    }, {
      immediate: true
    });
    var timeout;
    var changeActiveKeys = function changeActiveKeys2(keys2) {
      window.clearTimeout(timeout);
      timeout = window.setTimeout(function() {
        if (props2.activeKey === void 0) {
          activeKeys.value = keys2;
        }
        emit("update:activeKey", keys2[keys2.length - 1]);
      });
    };
    var disabled = computed$B(function() {
      return !!props2.disabled;
    });
    var isRtl = computed$B(function() {
      return direction.value === "rtl";
    });
    var mergedMode = ref$v("vertical");
    var mergedInlineCollapsed = ref$v(false);
    watchEffect$5(function() {
      if ((props2.mode === "inline" || props2.mode === "vertical") && inlineCollapsed.value) {
        mergedMode.value = "vertical";
        mergedInlineCollapsed.value = inlineCollapsed.value;
      } else {
        mergedMode.value = props2.mode;
        mergedInlineCollapsed.value = false;
      }
    });
    var isInlineMode = computed$B(function() {
      return mergedMode.value === "inline";
    });
    var triggerOpenKeys = function triggerOpenKeys2(keys2) {
      mergedOpenKeys.value = keys2;
      emit("update:openKeys", keys2);
      emit("openChange", keys2);
    };
    var inlineCacheOpenKeys = ref$v(mergedOpenKeys.value);
    var mountRef = ref$v(false);
    watch$g(mergedOpenKeys, function() {
      if (isInlineMode.value) {
        inlineCacheOpenKeys.value = mergedOpenKeys.value;
      }
    }, {
      immediate: true
    });
    watch$g(isInlineMode, function() {
      if (!mountRef.value) {
        mountRef.value = true;
        return;
      }
      if (isInlineMode.value) {
        mergedOpenKeys.value = inlineCacheOpenKeys.value;
      } else {
        triggerOpenKeys(EMPTY_LIST);
      }
    }, {
      immediate: true
    });
    var className = computed$B(function() {
      var _ref2;
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2.value), true), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-root"), true), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-").concat(mergedMode.value), true), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-inline-collapsed"), mergedInlineCollapsed.value), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-rtl"), isRtl.value), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-").concat(props2.theme), true), _ref2;
    });
    var defaultMotions = {
      horizontal: {
        name: "ant-slide-up"
      },
      inline: collapseMotion,
      other: {
        name: "ant-zoom-big"
      }
    };
    useProvideFirstLevel(true);
    var getChildrenKeys = function getChildrenKeys2() {
      var eventKeys = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var keys2 = [];
      var storeValue = store.value;
      eventKeys.forEach(function(eventKey) {
        var _storeValue$eventKey = storeValue[eventKey], key2 = _storeValue$eventKey.key, childrenEventKeys = _storeValue$eventKey.childrenEventKeys;
        keys2.push.apply(keys2, [key2].concat(_toConsumableArray(getChildrenKeys2(childrenEventKeys))));
      });
      return keys2;
    };
    var onInternalClick = function onInternalClick2(info3) {
      emit("click", info3);
      triggerSelection(info3);
    };
    var onInternalOpenChange = function onInternalOpenChange2(eventKey, open6) {
      var _store$value$eventKey = store.value[eventKey], key2 = _store$value$eventKey.key, childrenEventKeys = _store$value$eventKey.childrenEventKeys;
      var newOpenKeys = mergedOpenKeys.value.filter(function(k2) {
        return k2 !== key2;
      });
      if (open6) {
        newOpenKeys.push(key2);
      } else if (mergedMode.value !== "inline") {
        var subPathKeys = getChildrenKeys(childrenEventKeys);
        newOpenKeys = newOpenKeys.filter(function(k2) {
          return !subPathKeys.includes(k2);
        });
      }
      if (!shallowEqual$1(mergedOpenKeys, newOpenKeys)) {
        triggerOpenKeys(newOpenKeys);
      }
    };
    var registerMenuInfo = function registerMenuInfo2(key2, info3) {
      store.value = _extends$1(_extends$1({}, store.value), _defineProperty$U({}, key2, info3));
    };
    var unRegisterMenuInfo = function unRegisterMenuInfo2(key2) {
      delete store.value[key2];
      store.value = _extends$1({}, store.value);
    };
    var lastVisibleIndex = ref$v(0);
    useProvideMenu({
      store,
      prefixCls: prefixCls2,
      activeKeys,
      openKeys: mergedOpenKeys,
      selectedKeys: mergedSelectedKeys,
      changeActiveKeys,
      disabled,
      rtl: isRtl,
      mode: mergedMode,
      inlineIndent: computed$B(function() {
        return props2.inlineIndent;
      }),
      subMenuCloseDelay: computed$B(function() {
        return props2.subMenuCloseDelay;
      }),
      subMenuOpenDelay: computed$B(function() {
        return props2.subMenuOpenDelay;
      }),
      builtinPlacements: computed$B(function() {
        return props2.builtinPlacements;
      }),
      triggerSubMenuAction: computed$B(function() {
        return props2.triggerSubMenuAction;
      }),
      getPopupContainer: computed$B(function() {
        return props2.getPopupContainer;
      }),
      inlineCollapsed: mergedInlineCollapsed,
      antdMenuTheme: computed$B(function() {
        return props2.theme;
      }),
      siderCollapsed,
      defaultMotions: computed$B(function() {
        return isMounted.value ? defaultMotions : null;
      }),
      motion: computed$B(function() {
        return isMounted.value ? props2.motion : null;
      }),
      overflowDisabled: ref$v(void 0),
      onOpenChange: onInternalOpenChange,
      onItemClick: onInternalClick,
      registerMenuInfo,
      unRegisterMenuInfo,
      selectedSubMenuEventKeys,
      isRootMenu: ref$v(true),
      expandIcon: props2.expandIcon || slots.expandIcon
    });
    return function() {
      var _a, _b;
      var childList = flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
      var allVisible = lastVisibleIndex.value >= childList.length - 1 || mergedMode.value !== "horizontal" || props2.disabledOverflow;
      var wrappedChildList = mergedMode.value !== "horizontal" || props2.disabledOverflow ? childList : (
        // Need wrap for overflow dropdown that do not response for open
        childList.map(function(child, index2) {
          return (
            // Always wrap provider to avoid sub node re-mount
            _createVNode$3_(MenuContextProvider, {
              "key": child.key,
              "overflowDisabled": index2 > lastVisibleIndex.value
            }, {
              default: function _default8() {
                return [child];
              }
            })
          );
        })
      );
      var overflowedIndicator = ((_b = slots.overflowedIndicator) === null || _b === void 0 ? void 0 : _b.call(slots)) || _createVNode$3_(EllipsisOutlined, null, null);
      return _createVNode$3_(Overflow, {
        "prefixCls": "".concat(prefixCls2.value, "-overflow"),
        "component": "ul",
        "itemComponent": MenuItem,
        "class": className.value,
        "role": "menu",
        "data": wrappedChildList,
        "renderRawItem": function renderRawItem(node) {
          return node;
        },
        "renderRawRest": function renderRawRest(omitItems) {
          var len = omitItems.length;
          var originOmitItems = len ? childList.slice(-len) : null;
          return _createVNode$3_(SubMenu, {
            "eventKey": Overflow.OVERFLOW_KEY,
            "title": overflowedIndicator,
            "disabled": allVisible,
            "internalPopupClose": len === 0
          }, {
            default: function _default8() {
              return [originOmitItems];
            }
          });
        },
        "maxCount": mergedMode.value !== "horizontal" || props2.disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,
        "ssr": "full",
        "data-menu-list": true,
        "onVisibleChange": function onVisibleChange6(newLastIndex) {
          lastVisibleIndex.value = newLastIndex;
        }
      }, null);
    };
  }
});
const { createVNode: _createVNode$3Z } = await importShared("vue");
const { computed: computed$A, defineComponent: defineComponent$2a } = await importShared("vue");
var menuItemGroupProps = {
  title: PropTypes.VNodeChild
};
const ItemGroup = defineComponent$2a({
  name: "AMenuItemGroup",
  inheritAttrs: false,
  props: menuItemGroupProps,
  slots: ["title"],
  setup: function setup52(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _useInjectMenu = useInjectMenu(), prefixCls2 = _useInjectMenu.prefixCls;
    var groupPrefixCls = computed$A(function() {
      return "".concat(prefixCls2.value, "-item-group");
    });
    return function() {
      var _a;
      return _createVNode$3Z("li", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "onClick": function onClick7(e2) {
          return e2.stopPropagation();
        },
        "class": groupPrefixCls.value
      }), [_createVNode$3Z("div", {
        "title": typeof props2.title === "string" ? props2.title : void 0,
        "class": "".concat(groupPrefixCls.value, "-title")
      }, [getPropsSlot(slots, props2, "title")]), _createVNode$3Z("ul", {
        "class": "".concat(groupPrefixCls.value, "-list")
      }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)])]);
    };
  }
});
const { createVNode: _createVNode$3Y } = await importShared("vue");
const { defineComponent: defineComponent$29 } = await importShared("vue");
const Divider$1 = defineComponent$29({
  name: "AMenuDivider",
  setup: function setup53() {
    var _useInjectMenu = useInjectMenu(), prefixCls2 = _useInjectMenu.prefixCls;
    return function() {
      return _createVNode$3Y("li", {
        "class": "".concat(prefixCls2.value, "-item-divider")
      }, null);
    };
  }
});
Menu.install = function(app) {
  app.component(Menu.name, Menu);
  app.component(MenuItem.name, MenuItem);
  app.component(SubMenu.name, SubMenu);
  app.component(Divider$1.name, Divider$1);
  app.component(ItemGroup.name, ItemGroup);
  return app;
};
Menu.Item = MenuItem;
Menu.Divider = Divider$1;
Menu.SubMenu = SubMenu;
Menu.ItemGroup = ItemGroup;
const { createVNode: _createVNode$3X } = await importShared("vue");
const { cloneVNode: cloneVNode$3, defineComponent: defineComponent$28 } = await importShared("vue");
var breadcrumbProps = {
  prefixCls: PropTypes.string,
  routes: {
    type: Array
  },
  params: PropTypes.any,
  separator: PropTypes.any,
  itemRender: {
    type: Function
  }
};
function getBreadcrumbName(route, params) {
  if (!route.breadcrumbName) {
    return null;
  }
  var paramsKeys = Object.keys(params).join("|");
  var name = route.breadcrumbName.replace(new RegExp(":(".concat(paramsKeys, ")"), "g"), function(replacement, key2) {
    return params[key2] || replacement;
  });
  return name;
}
function defaultItemRender$1(opt) {
  var route = opt.route, params = opt.params, routes = opt.routes, paths = opt.paths;
  var isLastItem = routes.indexOf(route) === routes.length - 1;
  var name = getBreadcrumbName(route, params);
  return isLastItem ? _createVNode$3X("span", null, [name]) : _createVNode$3X("a", {
    "href": "#/".concat(paths.join("/"))
  }, [name]);
}
const Breadcrumb = defineComponent$28({
  name: "ABreadcrumb",
  props: breadcrumbProps,
  slots: ["separator", "itemRender"],
  setup: function setup54(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("breadcrumb", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var getPath = function getPath2(path2, params) {
      path2 = (path2 || "").replace(/^\//, "");
      Object.keys(params).forEach(function(key2) {
        path2 = path2.replace(":".concat(key2), params[key2]);
      });
      return path2;
    };
    var addChildPath = function addChildPath2(paths) {
      var childPath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
      var params = arguments.length > 2 ? arguments[2] : void 0;
      var originalPaths = _toConsumableArray(paths);
      var path2 = getPath(childPath, params);
      if (path2) {
        originalPaths.push(path2);
      }
      return originalPaths;
    };
    var genForRoutes = function genForRoutes2(_ref2) {
      var _ref2$routes = _ref2.routes, routes = _ref2$routes === void 0 ? [] : _ref2$routes, _ref2$params = _ref2.params, params = _ref2$params === void 0 ? {} : _ref2$params, separator = _ref2.separator, _ref2$itemRender = _ref2.itemRender, itemRender = _ref2$itemRender === void 0 ? defaultItemRender$1 : _ref2$itemRender;
      var paths = [];
      return routes.map(function(route) {
        var path2 = getPath(route.path, params);
        if (path2) {
          paths.push(path2);
        }
        var tempPaths = [].concat(paths);
        var overlay = null;
        if (route.children && route.children.length) {
          overlay = _createVNode$3X(Menu, null, {
            default: function _default8() {
              return [route.children.map(function(child) {
                return _createVNode$3X(Menu.Item, {
                  "key": child.path || child.breadcrumbName
                }, {
                  default: function _default9() {
                    return [itemRender({
                      route: child,
                      params,
                      routes,
                      paths: addChildPath(tempPaths, child.path, params)
                    })];
                  }
                });
              })];
            }
          });
        }
        return _createVNode$3X(BreadcrumbItem, {
          "overlay": overlay,
          "separator": separator,
          "key": path2 || route.breadcrumbName
        }, {
          default: function _default8() {
            return [itemRender({
              route,
              params,
              routes,
              paths: tempPaths
            })];
          }
        });
      });
    };
    return function() {
      var _breadcrumbClassName;
      var _a;
      var crumbs;
      var routes = props2.routes, _props$params = props2.params, params = _props$params === void 0 ? {} : _props$params;
      var children = flattenChildren(getPropsSlot(slots, props2));
      var separator = (_a = getPropsSlot(slots, props2, "separator")) !== null && _a !== void 0 ? _a : "/";
      var itemRender = props2.itemRender || slots.itemRender || defaultItemRender$1;
      if (routes && routes.length > 0) {
        crumbs = genForRoutes({
          routes,
          params,
          separator,
          itemRender
        });
      } else if (children.length) {
        crumbs = children.map(function(element, index2) {
          warning$5(_typeof$3(element.type) === "object" && (element.type.__ANT_BREADCRUMB_ITEM || element.type.__ANT_BREADCRUMB_SEPARATOR), "Breadcrumb", "Only accepts Breadcrumb.Item and Breadcrumb.Separator as it's children");
          return cloneVNode$3(element, {
            separator,
            key: index2
          });
        });
      }
      var breadcrumbClassName = (_breadcrumbClassName = {}, _defineProperty$U(_breadcrumbClassName, prefixCls2.value, true), _defineProperty$U(_breadcrumbClassName, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _breadcrumbClassName);
      return _createVNode$3X("div", {
        "class": breadcrumbClassName
      }, [crumbs]);
    };
  }
});
const { createVNode: _createVNode$3W } = await importShared("vue");
var __rest$H = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$27 } = await importShared("vue");
var breadcrumbSeparatorProps = {
  prefixCls: PropTypes.string
};
const BreadcrumbSeparator = defineComponent$27({
  name: "ABreadcrumbSeparator",
  __ANT_BREADCRUMB_SEPARATOR: true,
  inheritAttrs: false,
  props: breadcrumbSeparatorProps,
  setup: function setup55(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _useConfigInject = useConfigInject("breadcrumb", props2), prefixCls2 = _useConfigInject.prefixCls;
    return function() {
      var _a;
      attrs.separator;
      var className = attrs.class, restAttrs = __rest$H(attrs, ["separator", "class"]);
      var children = flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
      return _createVNode$3W("span", _objectSpread2$2({
        "class": ["".concat(prefixCls2.value, "-separator"), className]
      }, restAttrs), [children.length > 0 ? children : "/"]);
    };
  }
});
Breadcrumb.Item = BreadcrumbItem;
Breadcrumb.Separator = BreadcrumbSeparator;
Breadcrumb.install = function(app) {
  app.component(Breadcrumb.name, Breadcrumb);
  app.component(BreadcrumbItem.name, BreadcrumbItem);
  app.component(BreadcrumbSeparator.name, BreadcrumbSeparator);
  return app;
};
const DateConstants = {
  DATE_ROW_COUNT: 6,
  DATE_COL_COUNT: 7
};
const { createVNode: _createVNode$3V, createTextVNode: _createTextVNode$8 } = await importShared("vue");
var DateTHead = function DateTHead2(_2, _ref) {
  var attrs = _ref.attrs;
  var value26 = attrs.value;
  var localeData2 = value26.localeData();
  var prefixCls2 = attrs.prefixCls;
  var veryShortWeekdays = [];
  var weekDays = [];
  var firstDayOfWeek = localeData2.firstDayOfWeek();
  var showWeekNumberEl;
  var now2 = hooks();
  for (var dateColIndex = 0; dateColIndex < DateConstants.DATE_COL_COUNT; dateColIndex++) {
    var index2 = (firstDayOfWeek + dateColIndex) % DateConstants.DATE_COL_COUNT;
    now2.day(index2);
    veryShortWeekdays[dateColIndex] = localeData2.weekdaysMin(now2);
    weekDays[dateColIndex] = localeData2.weekdaysShort(now2);
  }
  if (attrs.showWeekNumber) {
    showWeekNumberEl = _createVNode$3V("th", {
      "role": "columnheader",
      "class": "".concat(prefixCls2, "-column-header ").concat(prefixCls2, "-week-number-header")
    }, [_createVNode$3V("span", {
      "class": "".concat(prefixCls2, "-column-header-inner")
    }, [_createTextVNode$8("x")])]);
  }
  var weekDaysEls = weekDays.map(function(day, xindex) {
    return _createVNode$3V("th", {
      "key": xindex,
      "role": "columnheader",
      "title": day,
      "class": "".concat(prefixCls2, "-column-header")
    }, [_createVNode$3V("span", {
      "class": "".concat(prefixCls2, "-column-header-inner")
    }, [veryShortWeekdays[xindex]])]);
  });
  return _createVNode$3V("thead", null, [_createVNode$3V("tr", {
    "role": "row"
  }, [showWeekNumberEl, weekDaysEls])]);
};
DateTHead.inheritAttrs = false;
var defaultDisabledTime = {
  disabledHours: function disabledHours() {
    return [];
  },
  disabledMinutes: function disabledMinutes() {
    return [];
  },
  disabledSeconds: function disabledSeconds() {
    return [];
  }
};
function getTodayTime(value26) {
  var today = hooks();
  today.locale(value26.locale()).utcOffset(value26.utcOffset());
  return today;
}
function getTitleString(value26) {
  return value26.format("LL");
}
function getTodayTimeStr(value26) {
  var today = getTodayTime(value26);
  return getTitleString(today);
}
function getMonthName(month) {
  var locale2 = month.locale();
  var localeData2 = month.localeData();
  return localeData2[locale2 === "zh-cn" ? "months" : "monthsShort"](month);
}
function syncTime(from2, to2) {
  if (!hooks.isMoment(from2) || !hooks.isMoment(to2)) return;
  to2.hour(from2.hour());
  to2.minute(from2.minute());
  to2.second(from2.second());
  to2.millisecond(from2.millisecond());
}
function getTimeConfig(value26, disabledTime) {
  var disabledTimeConfig = disabledTime ? disabledTime(value26) : {};
  disabledTimeConfig = _extends$1(_extends$1({}, defaultDisabledTime), disabledTimeConfig);
  return disabledTimeConfig;
}
function isTimeValidByConfig(value26, disabledTimeConfig) {
  var invalidTime = false;
  if (value26) {
    var hour = value26.hour();
    var minutes2 = value26.minute();
    var seconds2 = value26.second();
    var disabledHours3 = disabledTimeConfig.disabledHours();
    if (disabledHours3.indexOf(hour) === -1) {
      var disabledMinutes2 = disabledTimeConfig.disabledMinutes(hour);
      if (disabledMinutes2.indexOf(minutes2) === -1) {
        var disabledSeconds2 = disabledTimeConfig.disabledSeconds(hour, minutes2);
        invalidTime = disabledSeconds2.indexOf(seconds2) !== -1;
      } else {
        invalidTime = true;
      }
    } else {
      invalidTime = true;
    }
  }
  return !invalidTime;
}
function isTimeValid(value26, disabledTime) {
  var disabledTimeConfig = getTimeConfig(value26, disabledTime);
  return isTimeValidByConfig(value26, disabledTimeConfig);
}
function isAllowedDate(value26, disabledDate, disabledTime) {
  if (disabledDate) {
    if (disabledDate(value26)) {
      return false;
    }
  }
  if (disabledTime) {
    if (!isTimeValid(value26, disabledTime)) {
      return false;
    }
  }
  return true;
}
function formatDate$1(value26, format3) {
  if (!value26) {
    return "";
  }
  if (Array.isArray(format3)) {
    format3 = format3[0];
  }
  if (typeof format3 === "function") {
    var result = format3(value26);
    if (typeof result === "string") {
      return result;
    } else {
      throw new Error("The function of format does not return a string");
    }
  }
  return value26.format(format3);
}
const { createVNode: _createVNode$3U } = await importShared("vue");
function noop$D() {
}
function isSameDay(one, two) {
  return one && two && one.isSame(two, "day");
}
function beforeCurrentMonthYear(current2, today) {
  if (current2.year() < today.year()) {
    return 1;
  }
  return current2.year() === today.year() && current2.month() < today.month();
}
function afterCurrentMonthYear(current2, today) {
  if (current2.year() > today.year()) {
    return 1;
  }
  return current2.year() === today.year() && current2.month() > today.month();
}
function getIdFromDate(date3) {
  return "rc-calendar-".concat(date3.year(), "-").concat(date3.month(), "-").concat(date3.date());
}
var DateTBody = {
  name: "DateTBody",
  inheritAttrs: false,
  props: {
    contentRender: PropTypes.func,
    dateRender: PropTypes.func,
    disabledDate: PropTypes.func,
    prefixCls: PropTypes.string,
    selectedValue: PropTypes.any,
    value: PropTypes.object,
    hoverValue: PropTypes.any.def([]),
    showWeekNumber: PropTypes.looseBool
  },
  render: function render28() {
    var props2 = getOptionProps(this);
    var contentRender = props2.contentRender, prefixCls2 = props2.prefixCls, selectedValue6 = props2.selectedValue, value26 = props2.value, showWeekNumber = props2.showWeekNumber, dateRender = props2.dateRender, disabledDate = props2.disabledDate, hoverValue2 = props2.hoverValue;
    var _this$$attrs = this.$attrs, _this$$attrs$onSelect = _this$$attrs.onSelect, onSelect6 = _this$$attrs$onSelect === void 0 ? noop$D : _this$$attrs$onSelect, _this$$attrs$onDayHov = _this$$attrs.onDayHover, onDayHover2 = _this$$attrs$onDayHov === void 0 ? noop$D : _this$$attrs$onDayHov;
    var iIndex;
    var jIndex;
    var current2;
    var dateTable = [];
    var today = getTodayTime(value26);
    var cellClass = "".concat(prefixCls2, "-cell");
    var weekNumberCellClass = "".concat(prefixCls2, "-week-number-cell");
    var dateClass = "".concat(prefixCls2, "-date");
    var todayClass = "".concat(prefixCls2, "-today");
    var selectedClass = "".concat(prefixCls2, "-selected-day");
    var selectedDateClass = "".concat(prefixCls2, "-selected-date");
    var selectedStartDateClass = "".concat(prefixCls2, "-selected-start-date");
    var selectedEndDateClass = "".concat(prefixCls2, "-selected-end-date");
    var inRangeClass = "".concat(prefixCls2, "-in-range-cell");
    var lastMonthDayClass = "".concat(prefixCls2, "-last-month-cell");
    var nextMonthDayClass = "".concat(prefixCls2, "-next-month-btn-day");
    var disabledClass = "".concat(prefixCls2, "-disabled-cell");
    var firstDisableClass = "".concat(prefixCls2, "-disabled-cell-first-of-row");
    var lastDisableClass = "".concat(prefixCls2, "-disabled-cell-last-of-row");
    var lastDayOfMonthClass = "".concat(prefixCls2, "-last-day-of-month");
    var month1 = value26.clone();
    month1.date(1);
    var day = month1.day();
    var lastMonthDiffDay = (day + 7 - value26.localeData().firstDayOfWeek()) % 7;
    var lastMonth1 = month1.clone();
    lastMonth1.add(0 - lastMonthDiffDay, "days");
    var passed = 0;
    for (iIndex = 0; iIndex < DateConstants.DATE_ROW_COUNT; iIndex++) {
      for (jIndex = 0; jIndex < DateConstants.DATE_COL_COUNT; jIndex++) {
        current2 = lastMonth1;
        if (passed) {
          current2 = current2.clone();
          current2.add(passed, "days");
        }
        dateTable.push(current2);
        passed++;
      }
    }
    var tableHtml = [];
    passed = 0;
    for (iIndex = 0; iIndex < DateConstants.DATE_ROW_COUNT; iIndex++) {
      var _cx;
      var isCurrentWeek = void 0;
      var weekNumberCell = void 0;
      var isActiveWeek = false;
      var dateCells = [];
      if (showWeekNumber) {
        weekNumberCell = _createVNode$3U("td", {
          "key": "week-".concat(dateTable[passed].week()),
          "role": "gridcell",
          "class": weekNumberCellClass
        }, [dateTable[passed].week()]);
      }
      for (jIndex = 0; jIndex < DateConstants.DATE_COL_COUNT; jIndex++) {
        var next3 = null;
        var last2 = null;
        current2 = dateTable[passed];
        if (jIndex < DateConstants.DATE_COL_COUNT - 1) {
          next3 = dateTable[passed + 1];
        }
        if (jIndex > 0) {
          last2 = dateTable[passed - 1];
        }
        var cls = cellClass;
        var disabled = false;
        var selected = false;
        if (isSameDay(current2, today)) {
          cls += " ".concat(todayClass);
          isCurrentWeek = true;
        }
        var isBeforeCurrentMonthYear = beforeCurrentMonthYear(current2, value26);
        var isAfterCurrentMonthYear = afterCurrentMonthYear(current2, value26);
        if (selectedValue6 && Array.isArray(selectedValue6)) {
          var rangeValue = hoverValue2.length ? hoverValue2 : selectedValue6;
          if (!isBeforeCurrentMonthYear && !isAfterCurrentMonthYear) {
            var startValue = rangeValue[0];
            var endValue = rangeValue[1];
            if (startValue) {
              if (isSameDay(current2, startValue)) {
                selected = true;
                isActiveWeek = true;
                cls += " ".concat(selectedStartDateClass);
              }
            }
            if (startValue || endValue) {
              if (isSameDay(current2, endValue)) {
                selected = true;
                isActiveWeek = true;
                cls += " ".concat(selectedEndDateClass);
              } else if ((startValue === null || startValue === void 0) && current2.isBefore(endValue, "day")) {
                cls += " ".concat(inRangeClass);
              } else if ((endValue === null || endValue === void 0) && current2.isAfter(startValue, "day")) {
                cls += " ".concat(inRangeClass);
              } else if (current2.isAfter(startValue, "day") && current2.isBefore(endValue, "day")) {
                cls += " ".concat(inRangeClass);
              }
            }
          }
        } else if (isSameDay(current2, value26)) {
          selected = true;
          isActiveWeek = true;
        }
        if (isSameDay(current2, selectedValue6)) {
          cls += " ".concat(selectedDateClass);
        }
        if (isBeforeCurrentMonthYear) {
          cls += " ".concat(lastMonthDayClass);
        }
        if (isAfterCurrentMonthYear) {
          cls += " ".concat(nextMonthDayClass);
        }
        if (current2.clone().endOf("month").date() === current2.date()) {
          cls += " ".concat(lastDayOfMonthClass);
        }
        if (disabledDate) {
          if (disabledDate(current2, value26)) {
            disabled = true;
            if (!last2 || !disabledDate(last2, value26)) {
              cls += " ".concat(firstDisableClass);
            }
            if (!next3 || !disabledDate(next3, value26)) {
              cls += " ".concat(lastDisableClass);
            }
          }
        }
        if (selected) {
          cls += " ".concat(selectedClass);
        }
        if (disabled) {
          cls += " ".concat(disabledClass);
        }
        var dateHtml = void 0;
        if (dateRender) {
          dateHtml = dateRender({
            current: current2,
            today: value26
          });
        } else {
          var content = contentRender ? contentRender({
            current: current2,
            today: value26
          }) : current2.date();
          dateHtml = _createVNode$3U("div", {
            "key": getIdFromDate(current2),
            "class": dateClass,
            "aria-selected": selected,
            "aria-disabled": disabled
          }, [content]);
        }
        dateCells.push(_createVNode$3U("td", {
          "key": passed,
          "onClick": disabled ? noop$D : onSelect6.bind(null, current2),
          "onMouseenter": disabled ? noop$D : onDayHover2.bind(null, current2),
          "role": "gridcell",
          "title": getTitleString(current2),
          "class": cls
        }, [dateHtml]));
        passed++;
      }
      tableHtml.push(_createVNode$3U("tr", {
        "key": iIndex,
        "role": "row",
        "class": classNames((_cx = {}, _defineProperty$U(_cx, "".concat(prefixCls2, "-current-week"), isCurrentWeek), _defineProperty$U(_cx, "".concat(prefixCls2, "-active-week"), isActiveWeek), _cx))
      }, [weekNumberCell, dateCells]));
    }
    return _createVNode$3U("tbody", {
      "class": "".concat(prefixCls2, "-tbody")
    }, [tableHtml]);
  }
};
const { createVNode: _createVNode$3T } = await importShared("vue");
var DateTable = function DateTable2(_2, _ref) {
  var attrs = _ref.attrs;
  var prefixCls2 = attrs.prefixCls;
  return _createVNode$3T("table", {
    "class": "".concat(prefixCls2, "-table"),
    "cellspacing": "0",
    "role": "grid"
  }, [_createVNode$3T(DateTHead, attrs, null), _createVNode$3T(DateTBody, attrs, null)]);
};
DateTable.inheritAttrs = false;
const { createVNode: _createVNode$3S } = await importShared("vue");
var ROW$2 = 4;
var COL$2 = 3;
function noop$C() {
}
var MonthTable = {
  name: "MonthTable",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    cellRender: PropTypes.func,
    prefixCls: PropTypes.string,
    value: PropTypes.object,
    locale: PropTypes.any,
    contentRender: PropTypes.any,
    disabledDate: PropTypes.func
  },
  data: function data10() {
    return {
      sValue: this.value
    };
  },
  watch: {
    value: function value4(val) {
      this.setState({
        sValue: val
      });
    }
  },
  methods: {
    setAndSelectValue: function setAndSelectValue(value26) {
      this.setState({
        sValue: value26
      });
      this.__emit("select", value26);
    },
    chooseMonth: function chooseMonth(month) {
      var next3 = this.sValue.clone();
      next3.month(month);
      this.setAndSelectValue(next3);
    },
    months: function months2() {
      var value26 = this.sValue;
      var current2 = value26.clone();
      var months3 = [];
      var index2 = 0;
      for (var rowIndex = 0; rowIndex < ROW$2; rowIndex++) {
        months3[rowIndex] = [];
        for (var colIndex = 0; colIndex < COL$2; colIndex++) {
          current2.month(index2);
          var content = getMonthName(current2);
          months3[rowIndex][colIndex] = {
            value: index2,
            content,
            title: content
          };
          index2++;
        }
      }
      return months3;
    }
  },
  render: function render29() {
    var _this = this;
    var props2 = this.$props;
    var value26 = this.sValue;
    var today = getTodayTime(value26);
    var months3 = this.months();
    var currentMonth = value26.month();
    var prefixCls2 = props2.prefixCls, locale2 = props2.locale, contentRender = props2.contentRender, cellRender = props2.cellRender, disabledDate = props2.disabledDate;
    var monthsEls = months3.map(function(month, index2) {
      var tds = month.map(function(monthData) {
        var _classNameMap;
        var disabled = false;
        if (disabledDate) {
          var testValue = value26.clone();
          testValue.month(monthData.value);
          disabled = disabledDate(testValue);
        }
        var classNameMap = (_classNameMap = {}, _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-cell"), 1), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-cell-disabled"), disabled), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-selected-cell"), monthData.value === currentMonth), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-current-cell"), today.year() === value26.year() && monthData.value === today.month()), _classNameMap);
        var cellEl;
        if (cellRender) {
          var currentValue = value26.clone();
          currentValue.month(monthData.value);
          cellEl = cellRender({
            current: currentValue,
            locale: locale2
          });
        } else {
          var content;
          if (contentRender) {
            var _currentValue = value26.clone();
            _currentValue.month(monthData.value);
            content = contentRender({
              current: _currentValue,
              locale: locale2
            });
          } else {
            content = monthData.content;
          }
          cellEl = _createVNode$3S("a", {
            "class": "".concat(prefixCls2, "-month")
          }, [content]);
        }
        return _createVNode$3S("td", {
          "role": "gridcell",
          "key": monthData.value,
          "onClick": disabled ? noop$C : function() {
            return _this.chooseMonth(monthData.value);
          },
          "title": monthData.title,
          "class": classNameMap
        }, [cellEl]);
      });
      return _createVNode$3S("tr", {
        "key": index2,
        "role": "row"
      }, [tds]);
    });
    return _createVNode$3S("table", {
      "class": "".concat(prefixCls2, "-table"),
      "cellspacing": "0",
      "role": "grid"
    }, [_createVNode$3S("tbody", {
      "class": "".concat(prefixCls2, "-tbody")
    }, [monthsEls])]);
  }
};
const { createVNode: _createVNode$3R } = await importShared("vue");
function noop$B() {
}
function getNowByCurrentStateValue(value26) {
  var ret;
  if (value26) {
    ret = getTodayTime(value26);
  } else {
    ret = hooks();
  }
  return ret;
}
function isMoment(value26) {
  if (Array.isArray(value26)) {
    return value26.length === 0 || value26.findIndex(function(val) {
      return val === void 0 || hooks.isMoment(val);
    }) !== -1;
  } else {
    return value26 === void 0 || hooks.isMoment(value26);
  }
}
var MomentType = PropTypes.custom(isMoment);
var CalendarMixin = {
  mixins: [BaseMixin],
  inheritAttrs: false,
  name: "CalendarMixinWrapper",
  props: {
    value: MomentType,
    defaultValue: MomentType
  },
  data: function data11() {
    if (this.onKeyDown === void 0) {
      this.onKeyDown = noop$B;
    }
    if (this.onBlur === void 0) {
      this.onBlur = noop$B;
    }
    var props2 = this.$props;
    var sValue = props2.value || props2.defaultValue || getNowByCurrentStateValue();
    return {
      sValue,
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  watch: {
    value: function value5(val) {
      var sValue = val || this.defaultValue || getNowByCurrentStateValue(this.sValue);
      this.setState({
        sValue
      });
    },
    selectedValue: function selectedValue(val) {
      this.setState({
        sSelectedValue: val
      });
    }
  },
  methods: {
    onSelect: function onSelect(value26, cause) {
      if (value26) {
        this.setValue(value26);
      }
      this.setSelectedValue(value26, cause);
    },
    renderRoot: function renderRoot(newProps) {
      var _className;
      var props2 = _extends$1(_extends$1({}, this.$props), this.$attrs);
      var prefixCls2 = props2.prefixCls;
      var className = (_className = {}, _defineProperty$U(_className, prefixCls2, 1), _defineProperty$U(_className, "".concat(prefixCls2, "-hidden"), !props2.visible), _defineProperty$U(_className, props2.class, !!props2.class), _defineProperty$U(_className, newProps.class, !!newProps.class), _className);
      return _createVNode$3R("div", {
        "ref": this.saveRoot,
        "class": className,
        "tabindex": "0",
        "onKeydown": this.onKeyDown || noop$B,
        "onBlur": this.onBlur || noop$B
      }, [newProps.children]);
    },
    setSelectedValue: function setSelectedValue(selectedValue6, cause) {
      if (!hasProp(this, "selectedValue")) {
        this.setState({
          sSelectedValue: selectedValue6
        });
      }
      this.__emit("select", selectedValue6, cause);
    },
    setValue: function setValue3(value26) {
      var originalValue = this.sValue;
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      if (originalValue && value26 && !originalValue.isSame(value26) || !originalValue && value26 || originalValue && !value26) {
        this.__emit("change", value26);
      }
    },
    isAllowedDate: function isAllowedDate$1(value26) {
      var disabledDate = this.disabledDate;
      var disabledTime = this.disabledTime;
      return isAllowedDate(value26, disabledDate, disabledTime);
    }
  }
};
const CommonMixin = {
  methods: {
    getFormat: function getFormat() {
      var format3 = this.format;
      var locale2 = this.locale, timePicker = this.timePicker;
      if (!format3) {
        if (timePicker) {
          format3 = locale2.dateTimeFormat;
        } else {
          format3 = locale2.dateFormat;
        }
      }
      return format3;
    },
    focus: function focus6() {
      if (this.focusElement) {
        this.focusElement.focus();
      } else if (this.rootInstance) {
        this.rootInstance.focus();
      }
    },
    saveFocusElement: function saveFocusElement(focusElement) {
      this.focusElement = focusElement;
    },
    saveRoot: function saveRoot(root2) {
      this.rootInstance = root2;
    }
  }
};
const { createVNode: _createVNode$3Q } = await importShared("vue");
var CalendarHeader$1 = {
  name: "CalendarHeader",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    value: PropTypes.object,
    locale: PropTypes.object,
    yearSelectOffset: PropTypes.number.def(10),
    yearSelectTotal: PropTypes.number.def(20),
    // onValueChange: PropTypes.func,
    // onTypeChange: PropTypes.func,
    Select: PropTypes.object,
    prefixCls: PropTypes.string,
    type: PropTypes.string,
    showTypeSwitch: PropTypes.looseBool,
    headerComponents: PropTypes.array
  },
  methods: {
    onYearChange: function onYearChange(year) {
      var newValue = this.value.clone();
      newValue.year(parseInt(year, 10));
      this.__emit("valueChange", newValue);
    },
    onMonthChange: function onMonthChange(month) {
      var newValue = this.value.clone();
      newValue.month(parseInt(month, 10));
      this.__emit("valueChange", newValue);
    },
    yearSelectElement: function yearSelectElement(year) {
      var yearSelectOffset = this.yearSelectOffset, yearSelectTotal = this.yearSelectTotal, prefixCls2 = this.prefixCls, Select2 = this.Select;
      var start = year - yearSelectOffset;
      var end = start + yearSelectTotal;
      var options2 = [];
      var _loop = function _loop2(index3) {
        options2.push(_createVNode$3Q(Select2.Option, {
          "key": "".concat(index3)
        }, {
          default: function _default8() {
            return [/* @__PURE__ */ function() {
              return index3;
            }()];
          }
        }));
      };
      for (var index2 = start; index2 < end; index2++) {
        _loop(index2);
      }
      return _createVNode$3Q(Select2, {
        "class": "".concat(prefixCls2, "-header-year-select"),
        "onChange": this.onYearChange,
        "dropdownStyle": {
          zIndex: 2e3
        },
        "dropdownMenuStyle": {
          maxHeight: "250px",
          overflow: "auto",
          fontSize: "12px"
        },
        "optionLabelProp": "children",
        "value": String(year),
        "showSearch": false
      }, {
        default: function _default8() {
          return [options2];
        }
      });
    },
    monthSelectElement: function monthSelectElement(month) {
      var value26 = this.value, Select2 = this.Select, prefixCls2 = this.prefixCls;
      var t2 = value26.clone();
      var options2 = [];
      for (var index2 = 0; index2 < 12; index2++) {
        t2.month(index2);
        options2.push(_createVNode$3Q(Select2.Option, {
          "key": "".concat(index2)
        }, {
          default: function _default8() {
            return [function() {
              return getMonthName(t2);
            }()];
          }
        }));
      }
      return _createVNode$3Q(Select2, {
        "class": "".concat(prefixCls2, "-header-month-select"),
        "dropdownStyle": {
          zIndex: 2e3
        },
        "dropdownMenuStyle": {
          maxHeight: "250px",
          overflow: "auto",
          overflowX: "hidden",
          fontSize: "12px"
        },
        "optionLabelProp": "children",
        "value": String(month),
        "showSearch": false,
        "onChange": this.onMonthChange
      }, {
        default: function _default8() {
          return [options2];
        }
      });
    },
    changeTypeToDate: function changeTypeToDate() {
      this.__emit("typeChange", "date");
    },
    changeTypeToMonth: function changeTypeToMonth() {
      this.__emit("typeChange", "month");
    }
  },
  render: function render30() {
    var value26 = this.value, locale2 = this.locale, prefixCls2 = this.prefixCls, type3 = this.type, showTypeSwitch = this.showTypeSwitch, headerComponents = this.headerComponents;
    var year = value26.year();
    var month = value26.month();
    var yearSelect = this.yearSelectElement(year);
    var monthSelect = type3 === "month" ? null : this.monthSelectElement(month);
    var switchCls = "".concat(prefixCls2, "-header-switcher");
    var typeSwitcher = showTypeSwitch ? _createVNode$3Q("span", {
      "class": switchCls
    }, [type3 === "date" ? _createVNode$3Q("span", {
      "class": "".concat(switchCls, "-focus")
    }, [locale2.month]) : _createVNode$3Q("span", {
      "onClick": this.changeTypeToDate,
      "class": "".concat(switchCls, "-normal")
    }, [locale2.month]), type3 === "month" ? _createVNode$3Q("span", {
      "class": "".concat(switchCls, "-focus")
    }, [locale2.year]) : _createVNode$3Q("span", {
      "onClick": this.changeTypeToMonth,
      "class": "".concat(switchCls, "-normal")
    }, [locale2.year])]) : null;
    return _createVNode$3Q("div", {
      "class": "".concat(prefixCls2, "-header")
    }, [typeSwitcher, monthSelect, yearSelect, headerComponents]);
  }
};
const { createVNode: _createVNode$3P } = await importShared("vue");
const { defineComponent: defineComponent$26 } = await importShared("vue");
var FullCalendar = defineComponent$26({
  name: "FullCalendar",
  mixins: [BaseMixin, CommonMixin, CalendarMixin],
  inheritAttrs: false,
  props: {
    locale: PropTypes.object.def(enUs),
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.func]),
    visible: PropTypes.looseBool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    defaultType: PropTypes.string.def("date"),
    type: PropTypes.string,
    fullscreen: PropTypes.looseBool.def(false),
    monthCellRender: PropTypes.func,
    dateCellRender: PropTypes.func,
    showTypeSwitch: PropTypes.looseBool.def(true),
    Select: PropTypes.object.isRequired,
    headerComponents: PropTypes.array,
    headerComponent: PropTypes.object,
    headerRender: PropTypes.func,
    showHeader: PropTypes.looseBool.def(true),
    disabledDate: PropTypes.func,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    selectedValue: PropTypes.object,
    defaultSelectedValue: PropTypes.object,
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    })
  },
  data: function data12() {
    var type3;
    if (hasProp(this, "type")) {
      type3 = this.type;
    } else {
      type3 = this.defaultType;
    }
    var props2 = this.$props;
    return {
      sType: type3,
      sValue: props2.value || props2.defaultValue || hooks(),
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  watch: {
    type: function type(val) {
      this.setState({
        sType: val
      });
    },
    value: function value6(val) {
      var sValue = val || this.defaultValue || getNowByCurrentStateValue(this.sValue);
      this.setState({
        sValue
      });
    },
    selectedValue: function selectedValue2(val) {
      this.setState({
        sSelectedValue: val
      });
    }
  },
  methods: {
    onMonthSelect: function onMonthSelect(value26) {
      this.onSelect(value26, {
        target: "month"
      });
    },
    setType: function setType(type3) {
      if (!hasProp(this, "type")) {
        this.setState({
          sType: type3
        });
      }
      this.__emit("typeChange", type3);
    }
  },
  render: function render31() {
    var props2 = getOptionProps(this);
    var locale2 = props2.locale, prefixCls2 = props2.prefixCls, fullscreen = props2.fullscreen, showHeader = props2.showHeader, headerComponent = props2.headerComponent, headerRender = props2.headerRender, disabledDate = props2.disabledDate;
    var value26 = this.sValue, type3 = this.sType;
    var header = null;
    if (showHeader) {
      if (headerRender) {
        header = headerRender(value26, type3, locale2);
      } else {
        var TheHeader = headerComponent || CalendarHeader$1;
        var headerProps = _extends$1(_extends$1(_extends$1({}, props2), this.$attrs), {
          prefixCls: "".concat(prefixCls2, "-full"),
          type: type3,
          value: value26,
          onTypeChange: this.setType,
          onValueChange: this.setValue,
          key: "calendar-header"
        });
        header = _createVNode$3P(TheHeader, headerProps, null);
      }
    }
    var table = type3 === "date" ? _createVNode$3P(DateTable, {
      "dateRender": props2.dateCellRender,
      "contentRender": props2.dateCellContentRender,
      "locale": locale2,
      "prefixCls": prefixCls2,
      "onSelect": this.onSelect,
      "value": value26,
      "disabledDate": disabledDate
    }, null) : _createVNode$3P(MonthTable, {
      "cellRender": props2.monthCellRender,
      "contentRender": props2.monthCellContentRender,
      "locale": locale2,
      "onSelect": this.onMonthSelect,
      "prefixCls": "".concat(prefixCls2, "-month-panel"),
      "value": value26,
      "disabledDate": disabledDate
    }, null);
    var children = [header, _createVNode$3P("div", {
      "key": "calendar-body",
      "class": "".concat(prefixCls2, "-calendar-body")
    }, [table])];
    var className = ["".concat(prefixCls2, "-full")];
    if (fullscreen) {
      className.push("".concat(prefixCls2, "-fullscreen"));
    }
    return this.renderRoot({
      children,
      class: className.join(" ")
    });
  }
});
const { createVNode: _createVNode$3O } = await importShared("vue");
var __rest$G = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { nextTick: nextTick$n, defineComponent: defineComponent$25 } = await importShared("vue");
const Checkbox$1 = defineComponent$25({
  name: "Checkbox",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1({
    prefixCls: PropTypes.string,
    name: PropTypes.string,
    id: PropTypes.string,
    type: PropTypes.string,
    defaultChecked: withUndefined(PropTypes.oneOfType([PropTypes.number, PropTypes.looseBool])),
    checked: withUndefined(PropTypes.oneOfType([PropTypes.number, PropTypes.looseBool])),
    disabled: PropTypes.looseBool,
    // onFocus: PropTypes.func,
    // onBlur: PropTypes.func,
    // onChange: PropTypes.func,
    // onClick: PropTypes.func,
    tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    readonly: PropTypes.looseBool,
    autofocus: PropTypes.looseBool,
    value: PropTypes.any
  }, {
    prefixCls: "rc-checkbox",
    type: "checkbox",
    defaultChecked: false
  }),
  data: function data13() {
    var checked2 = hasProp(this, "checked") ? this.checked : this.defaultChecked;
    return {
      sChecked: checked2
    };
  },
  watch: {
    checked: function checked(val) {
      this.sChecked = val;
    }
  },
  mounted: function mounted9() {
    nextTick$n(function() {
    });
  },
  methods: {
    focus: function focus7() {
      this.$refs.input.focus();
    },
    blur: function blur6() {
      this.$refs.input.blur();
    },
    handleChange: function handleChange4(e2) {
      var props2 = getOptionProps(this);
      if (props2.disabled) {
        return;
      }
      if (!("checked" in props2)) {
        this.sChecked = e2.target.checked;
      }
      e2.shiftKey = this.eventShiftKey;
      var eventObj = {
        target: _extends$1(_extends$1({}, props2), {
          checked: e2.target.checked
        }),
        stopPropagation: function stopPropagation2() {
          e2.stopPropagation();
        },
        preventDefault: function preventDefault2() {
          e2.preventDefault();
        },
        nativeEvent: e2
      };
      if ("checked" in props2) {
        this.$refs.input.checked = props2.checked;
      }
      this.__emit("change", eventObj);
      this.eventShiftKey = false;
    },
    onClick: function onClick4(e2) {
      this.__emit("click", e2);
      this.eventShiftKey = e2.shiftKey;
    }
  },
  render: function render32() {
    var _classNames;
    var _a = getOptionProps(this), prefixCls2 = _a.prefixCls, name = _a.name, id2 = _a.id, type3 = _a.type, disabled = _a.disabled, readonly = _a.readonly, tabindex = _a.tabindex, autofocus = _a.autofocus, value26 = _a.value, others = __rest$G(_a, ["prefixCls", "name", "id", "type", "disabled", "readonly", "tabindex", "autofocus", "value"]);
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, onFocus6 = _this$$attrs.onFocus, onBlur7 = _this$$attrs.onBlur;
    var globalProps = Object.keys(_extends$1(_extends$1({}, others), this.$attrs)).reduce(function(prev3, key2) {
      if (key2.substr(0, 5) === "aria-" || key2.substr(0, 5) === "data-" || key2 === "role") {
        prev3[key2] = others[key2];
      }
      return prev3;
    }, {});
    var sChecked = this.sChecked;
    var classString = classNames(prefixCls2, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-checked"), sChecked), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _classNames));
    var inputProps2 = _extends$1(_extends$1({
      name,
      id: id2,
      type: type3,
      readonly,
      disabled,
      tabindex,
      class: "".concat(prefixCls2, "-input"),
      checked: !!sChecked,
      autofocus,
      value: value26
    }, globalProps), {
      onChange: this.handleChange,
      onClick: this.onClick,
      onFocus: onFocus6,
      onBlur: onBlur7
    });
    return _createVNode$3O("span", {
      "class": classString
    }, [_createVNode$3O("input", _objectSpread2$2({
      "ref": "input"
    }, inputProps2), null), _createVNode$3O("span", {
      "class": "".concat(prefixCls2, "-inner")
    }, null)]);
  }
});
const { createVNode: _createVNode$3N } = await importShared("vue");
var __rest$F = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$24, inject: inject$_ } = await importShared("vue");
var radioProps = {
  prefixCls: PropTypes.string,
  defaultChecked: PropTypes.looseBool,
  checked: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  isGroup: PropTypes.looseBool,
  value: PropTypes.any,
  name: PropTypes.string,
  id: PropTypes.string,
  autofocus: PropTypes.looseBool,
  type: PropTypes.string.def("radio"),
  onChange: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func
};
const Radio = defineComponent$24({
  name: "ARadio",
  props: radioProps,
  emits: ["update:checked", "update:value", "change", "blur", "focus"],
  setup: function setup56() {
    return {
      configProvider: inject$_("configProvider", defaultConfigProvider),
      radioGroupContext: inject$_("radioGroupContext", null)
    };
  },
  methods: {
    focus: function focus8() {
      this.$refs.vcCheckbox.focus();
    },
    blur: function blur7() {
      this.$refs.vcCheckbox.blur();
    },
    handleChange: function handleChange5(event) {
      var targetChecked = event.target.checked;
      this.$emit("update:checked", targetChecked);
      this.$emit("update:value", targetChecked);
      this.$emit("change", event);
    },
    onChange2: function onChange2(e2) {
      this.$emit("change", e2);
      if (this.radioGroupContext && this.radioGroupContext.onRadioChange) {
        this.radioGroupContext.onRadioChange(e2);
      }
    }
  },
  render: function render33() {
    var _classNames;
    var $slots = this.$slots, radioGroup = this.radioGroupContext;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, restProps = __rest$F(props2, ["prefixCls"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("radio", customizePrefixCls);
    var rProps = _extends$1({
      prefixCls: prefixCls2
    }, restProps);
    if (radioGroup) {
      rProps.name = radioGroup.name;
      rProps.onChange = this.onChange2;
      rProps.checked = props2.value === radioGroup.stateValue;
      rProps.disabled = props2.disabled || radioGroup.disabled;
    } else {
      rProps.onChange = this.handleChange;
    }
    var wrapperClassString = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-wrapper"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-wrapper-checked"), rProps.checked), _defineProperty$U(_classNames, "".concat(prefixCls2, "-wrapper-disabled"), rProps.disabled), _classNames));
    return _createVNode$3N("label", {
      "class": wrapperClassString
    }, [_createVNode$3N(Checkbox$1, _objectSpread2$2(_objectSpread2$2({}, rProps), {}, {
      "ref": "vcCheckbox"
    }), null), $slots.default && _createVNode$3N("span", null, [$slots.default()])]);
  }
});
const { createVNode: _createVNode$3M } = await importShared("vue");
const { provide: provide$h, inject: inject$Z, nextTick: nextTick$m, defineComponent: defineComponent$23 } = await importShared("vue");
const Group$1 = defineComponent$23({
  name: "ARadioGroup",
  props: {
    prefixCls: PropTypes.string,
    defaultValue: PropTypes.any,
    value: PropTypes.any,
    size: PropTypes.oneOf(tuple("large", "default", "small")).def("default"),
    options: PropTypes.array,
    disabled: PropTypes.looseBool,
    name: PropTypes.string,
    buttonStyle: PropTypes.string.def("outline"),
    onChange: PropTypes.func
  },
  emits: ["update:value", "change"],
  setup: function setup57() {
    return {
      updatingValue: false,
      configProvider: inject$Z("configProvider", defaultConfigProvider),
      radioGroupContext: null
    };
  },
  data: function data14() {
    var value26 = this.value, defaultValue = this.defaultValue;
    return {
      stateValue: value26 === void 0 ? defaultValue : value26
    };
  },
  watch: {
    value: function value7(val) {
      this.updatingValue = false;
      this.stateValue = val;
    }
  },
  // computed: {
  //   radioOptions() {
  //     const { disabled } = this;
  //     return this.options.map(option => {
  //       return typeof option === 'string'
  //         ? { label: option, value: option }
  //         : { ...option, disabled: option.disabled === undefined ? disabled : option.disabled };
  //     });
  //   },
  // },
  created: function created7() {
    this.radioGroupContext = provide$h("radioGroupContext", this);
  },
  methods: {
    onRadioChange: function onRadioChange(ev) {
      var _this = this;
      var lastValue = this.stateValue;
      var value26 = ev.target.value;
      if (!hasProp(this, "value")) {
        this.stateValue = value26;
      }
      if (!this.updatingValue && value26 !== lastValue) {
        this.updatingValue = true;
        this.$emit("update:value", value26);
        this.$emit("change", ev);
      }
      nextTick$m(function() {
        _this.updatingValue = false;
      });
    }
  },
  render: function render34() {
    var _this2 = this;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, options2 = props2.options, buttonStyle = props2.buttonStyle;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("radio", customizePrefixCls);
    var groupPrefixCls = "".concat(prefixCls2, "-group");
    var classString = classNames(groupPrefixCls, "".concat(groupPrefixCls, "-").concat(buttonStyle), _defineProperty$U({}, "".concat(groupPrefixCls, "-").concat(props2.size), props2.size));
    var children = filterEmpty(getSlot(this));
    if (options2 && options2.length > 0) {
      children = options2.map(function(option) {
        if (typeof option === "string") {
          return _createVNode$3M(Radio, {
            "key": option,
            "prefixCls": prefixCls2,
            "disabled": props2.disabled,
            "value": option,
            "checked": _this2.stateValue === option
          }, {
            default: function _default8() {
              return [option];
            }
          });
        }
        return _createVNode$3M(Radio, {
          "key": "radio-group-value-options-".concat(option.value),
          "prefixCls": prefixCls2,
          "disabled": option.disabled || props2.disabled,
          "value": option.value,
          "checked": _this2.stateValue === option.value
        }, {
          default: function _default8() {
            return [option.label];
          }
        });
      });
    }
    return _createVNode$3M("div", {
      "class": classString
    }, [children]);
  }
});
const { createVNode: _createVNode$3L } = await importShared("vue");
var __rest$E = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$22, inject: inject$Y } = await importShared("vue");
const Button = defineComponent$22({
  name: "ARadioButton",
  props: _extends$1({}, radioProps),
  setup: function setup58() {
    return {
      configProvider: inject$Y("configProvider", defaultConfigProvider),
      radioGroupContext: inject$Y("radioGroupContext", {})
    };
  },
  render: function render35() {
    var _this = this;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, otherProps = __rest$E(props2, ["prefixCls"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("radio-button", customizePrefixCls);
    var rProps = _extends$1({
      prefixCls: prefixCls2
    }, otherProps);
    if (this.radioGroupContext) {
      rProps.onChange = this.radioGroupContext.onRadioChange;
      rProps.checked = props2.value === this.radioGroupContext.stateValue;
      rProps.disabled = props2.disabled || this.radioGroupContext.disabled;
    }
    return _createVNode$3L(Radio, rProps, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
Radio.Group = Group$1;
Radio.Button = Button;
Radio.install = function(app) {
  app.component(Radio.name, Radio);
  app.component(Radio.Group.name, Radio.Group);
  app.component(Radio.Button.name, Radio.Button);
  return app;
};
const { createVNode: _createVNode$3K } = await importShared("vue");
const { defineComponent: defineComponent$21, inject: inject$X } = await importShared("vue");
function getMonthsLocale(value26) {
  var current2 = value26.clone();
  var localeData2 = value26.localeData();
  var months3 = [];
  for (var i2 = 0; i2 < 12; i2++) {
    current2.month(i2);
    months3.push(localeData2.monthsShort(current2));
  }
  return months3;
}
var HeaderProps = {
  prefixCls: PropTypes.string,
  locale: PropTypes.any,
  fullscreen: PropTypes.looseBool,
  yearSelectOffset: PropTypes.number,
  yearSelectTotal: PropTypes.number,
  type: PropTypes.string,
  value: {
    type: Object
  },
  validRange: {
    type: Array
  },
  headerRender: PropTypes.func,
  onValueChange: PropTypes.func,
  onTypeChange: PropTypes.func
};
const Header$2 = defineComponent$21({
  name: "CalendarHeader",
  inheritAttrs: false,
  props: _extends$1(_extends$1({}, HeaderProps), {
    yearSelectOffset: PropTypes.number.def(10),
    yearSelectTotal: PropTypes.number.def(20)
  }),
  setup: function setup59() {
    return {
      configProvider: inject$X("configProvider", defaultConfigProvider),
      calendarHeaderNode: void 0
    };
  },
  // private calendarHeaderNode: HTMLDivElement;
  methods: {
    getYearSelectElement: function getYearSelectElement(prefixCls2, year) {
      var _this = this;
      var yearSelectOffset = this.yearSelectOffset, yearSelectTotal = this.yearSelectTotal, _this$locale = this.locale, locale2 = _this$locale === void 0 ? {} : _this$locale, fullscreen = this.fullscreen, validRange = this.validRange;
      var start = year - yearSelectOffset;
      var end = start + yearSelectTotal;
      if (validRange) {
        start = validRange[0].get("year");
        end = validRange[1].get("year") + 1;
      }
      var suffix = locale2 && locale2.year === "年" ? "年" : "";
      var options2 = [];
      for (var index2 = start; index2 < end; index2++) {
        options2.push({
          label: "".concat(index2).concat(suffix),
          value: index2
        });
      }
      return _createVNode$3K(Select$2, {
        "size": fullscreen ? void 0 : "small",
        "class": "".concat(prefixCls2, "-year-select"),
        "onChange": this.onYearChange,
        "value": year,
        "options": options2,
        "getPopupContainer": function getPopupContainer() {
          return _this.calendarHeaderNode;
        }
      }, null);
    },
    getMonthSelectElement: function getMonthSelectElement(prefixCls2, month, months3) {
      var _this2 = this;
      var fullscreen = this.fullscreen, validRange = this.validRange, value26 = this.value;
      var start = 0;
      var end = 11;
      if (validRange) {
        var _validRange = _slicedToArray$2(validRange, 2), rangeStart = _validRange[0], rangeEnd = _validRange[1];
        var currentYear = value26.get("year");
        if (rangeEnd.get("year") === currentYear) {
          end = rangeEnd.get("month") + 1;
        }
        if (rangeStart.get("year") === currentYear) {
          start = rangeStart.get("month");
        }
      }
      var options2 = [];
      for (var index2 = start; index2 <= end; index2 += 1) {
        options2.push({
          label: months3[index2],
          value: index2
        });
      }
      return _createVNode$3K(Select$2, {
        "size": fullscreen ? void 0 : "small",
        "class": "".concat(prefixCls2, "-month-select"),
        "value": month,
        "options": options2,
        "onChange": this.onMonthChange,
        "getPopupContainer": function getPopupContainer() {
          return _this2.calendarHeaderNode;
        }
      }, null);
    },
    onYearChange: function onYearChange2(year) {
      var value26 = this.value, validRange = this.validRange;
      var newValue = value26.clone();
      newValue.year(parseInt(year, 10));
      if (validRange) {
        var _validRange2 = _slicedToArray$2(validRange, 2), start = _validRange2[0], end = _validRange2[1];
        var newYear = newValue.get("year");
        var newMonth = newValue.get("month");
        if (newYear === end.get("year") && newMonth > end.get("month")) {
          newValue.month(end.get("month"));
        }
        if (newYear === start.get("year") && newMonth < start.get("month")) {
          newValue.month(start.get("month"));
        }
      }
      this.$emit("valueChange", newValue);
    },
    onMonthChange: function onMonthChange2(month) {
      var newValue = this.value.clone();
      newValue.month(parseInt(month, 10));
      this.$emit("valueChange", newValue);
    },
    onInternalTypeChange: function onInternalTypeChange(e2) {
      this.triggerTypeChange(e2.target.value);
    },
    triggerTypeChange: function triggerTypeChange(val) {
      this.$emit("typeChange", val);
    },
    getMonthYearSelections: function getMonthYearSelections(getPrefixCls2) {
      var _this$$props = this.$props, customizePrefixCls = _this$$props.prefixCls, type3 = _this$$props.type, value26 = _this$$props.value;
      var prefixCls2 = getPrefixCls2("fullcalendar", customizePrefixCls);
      var yearReactNode = this.getYearSelectElement(prefixCls2, value26.year());
      var monthReactNode = type3 === "month" ? this.getMonthSelectElement(prefixCls2, value26.month(), getMonthsLocale(value26)) : null;
      return {
        yearReactNode,
        monthReactNode
      };
    },
    getTypeSwitch: function getTypeSwitch() {
      var _this$$props2 = this.$props, _this$$props2$locale = _this$$props2.locale, locale2 = _this$$props2$locale === void 0 ? {} : _this$$props2$locale, type3 = _this$$props2.type, fullscreen = _this$$props2.fullscreen;
      var size = fullscreen ? "default" : "small";
      return _createVNode$3K(Group$1, {
        "onChange": this.onInternalTypeChange,
        "value": type3,
        "size": size
      }, {
        default: function _default8() {
          return [_createVNode$3K(Button, {
            "value": "month"
          }, {
            default: function _default9() {
              return [locale2.month];
            }
          }), _createVNode$3K(Button, {
            "value": "year"
          }, {
            default: function _default9() {
              return [locale2.year];
            }
          })];
        }
      });
    },
    triggerValueChange: function triggerValueChange() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.$emit.apply(this, ["valueChange"].concat(args));
    },
    saveCalendarHeaderNode: function saveCalendarHeaderNode(node) {
      this.calendarHeaderNode = node;
    },
    headerRenderCustom: function headerRenderCustom(headerRender) {
      var _this$$props3 = this.$props, type3 = _this$$props3.type, value26 = _this$$props3.value;
      return headerRender({
        value: value26,
        type: type3 || "month",
        onChange: this.triggerValueChange,
        onTypeChange: this.triggerTypeChange
      });
    }
  },
  render: function render36() {
    var customizePrefixCls = this.prefixCls, headerRender = this.headerRender;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("fullcalendar", customizePrefixCls);
    var typeSwitch = this.getTypeSwitch();
    var _this$getMonthYearSel = this.getMonthYearSelections(getPrefixCls2), yearReactNode = _this$getMonthYearSel.yearReactNode, monthReactNode = _this$getMonthYearSel.monthReactNode;
    return headerRender ? this.headerRenderCustom(headerRender) : _createVNode$3K("div", {
      "class": "".concat(prefixCls2, "-header"),
      "ref": this.saveCalendarHeaderNode
    }, [yearReactNode, monthReactNode, typeSwitch]);
  }
});
function isNil(value26) {
  return value26 == null;
}
var TimeType$1 = {
  validator: function validator(value26) {
    return typeof value26 === "string" || isNil(value26) || hooks.isMoment(value26);
  }
};
var TimeOrTimesType = {
  validator: function validator2(value26) {
    if (Array.isArray(value26)) {
      return value26.length === 0 || value26.findIndex(function(val) {
        return typeof val !== "string";
      }) === -1 || value26.findIndex(function(val) {
        return !isNil(val) && !hooks.isMoment(val);
      }) === -1;
    } else {
      return typeof value26 === "string" || isNil(value26) || hooks.isMoment(value26);
    }
  }
};
function checkValidate(componentName, value26, propName, valueFormat) {
  var values = Array.isArray(value26) ? value26 : [value26];
  values.forEach(function(val) {
    if (!val) return;
    valueFormat && warning$5(interopDefault(hooks)(val, valueFormat).isValid(), componentName, "When set `valueFormat`, `".concat(propName, "` should provides invalidate string time. "));
    !valueFormat && warning$5(interopDefault(hooks).isMoment(val) && val.isValid(), componentName, "`".concat(propName, "` provides invalidate moment time. If you want to set empty value, use `null` instead."));
  });
}
var stringToMoment = function stringToMoment2(value26, valueFormat) {
  if (Array.isArray(value26)) {
    return value26.map(function(val) {
      return typeof val === "string" && val ? interopDefault(hooks)(val, valueFormat) : val || null;
    });
  } else {
    return typeof value26 === "string" && value26 ? interopDefault(hooks)(value26, valueFormat) : value26 || null;
  }
};
var momentToString = function momentToString2(value26, valueFormat) {
  if (Array.isArray(value26)) {
    return value26.map(function(val) {
      return interopDefault(hooks).isMoment(val) ? val.format(valueFormat) : val;
    });
  } else {
    return interopDefault(hooks).isMoment(value26) ? value26.format(valueFormat) : value26;
  }
};
const { createVNode: _createVNode$3J } = await importShared("vue");
const { defineComponent: defineComponent$20, inject: inject$W } = await importShared("vue");
function noop$A() {
  return null;
}
function zerofixed(v2) {
  if (v2 < 10) {
    return "0".concat(v2);
  }
  return "".concat(v2);
}
var CalendarModeTypes = tuple("month", "year");
var CalendarProps = {
  monthCellRender: PropTypes.func,
  dateCellRender: PropTypes.func,
  monthFullCellRender: PropTypes.func,
  dateFullCellRender: PropTypes.func,
  prefixCls: PropTypes.string,
  value: TimeType$1,
  defaultValue: TimeType$1,
  mode: PropTypes.oneOf(CalendarModeTypes),
  fullscreen: PropTypes.looseBool.def(true),
  locale: PropTypes.object.def({}),
  disabledDate: PropTypes.func,
  validRange: {
    type: Array
  },
  headerRender: PropTypes.func,
  valueFormat: PropTypes.string,
  onPanelChange: PropTypes.func,
  onSelect: PropTypes.func,
  onChange: PropTypes.func,
  "onUpdate:value": PropTypes.func
};
var Calendar$1 = defineComponent$20({
  name: "ACalendar",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: CalendarProps,
  setup: function setup60() {
    return {
      configProvider: inject$W("configProvider", defaultConfigProvider),
      sPrefixCls: void 0
    };
  },
  data: function data15() {
    var value26 = this.value, defaultValue = this.defaultValue, valueFormat = this.valueFormat;
    var sValue = value26 || defaultValue || interopDefault(hooks)();
    checkValidate("Calendar", defaultValue, "defaultValue", valueFormat);
    checkValidate("Calendar", value26, "value", valueFormat);
    return {
      sValue: stringToMoment(sValue, valueFormat),
      sMode: this.mode || "month"
    };
  },
  watch: {
    value: function value8(val) {
      checkValidate("Calendar", val, "value", this.valueFormat);
      this.setState({
        sValue: stringToMoment(val, this.valueFormat)
      });
    },
    mode: function mode(val) {
      this.setState({
        sMode: val
      });
    }
  },
  methods: {
    onHeaderValueChange: function onHeaderValueChange(value26) {
      this.setValue(value26, "changePanel");
    },
    onHeaderTypeChange: function onHeaderTypeChange(mode4) {
      this.sMode = mode4;
      this.triggerPanelChange(this.sValue, mode4);
    },
    triggerPanelChange: function triggerPanelChange(value26, mode4) {
      var val = this.valueFormat ? momentToString(value26, this.valueFormat) : value26;
      if (value26 !== this.sValue) {
        this.$emit("update:value", val);
        this.$emit("change", val);
      }
      this.$emit("panelChange", val, mode4);
    },
    triggerSelect: function triggerSelect(value26) {
      this.setValue(value26, "select");
    },
    setValue: function setValue4(value26, way) {
      var prevValue = this.value ? stringToMoment(this.value, this.valueFormat) : this.sValue;
      var mode4 = this.sMode, valueFormat = this.valueFormat;
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      if (way === "select") {
        var val = valueFormat ? momentToString(value26, valueFormat) : value26;
        if (prevValue && prevValue.month() !== value26.month()) {
          this.triggerPanelChange(value26, mode4);
        } else {
          this.$emit("update:value", val);
        }
        this.$emit("select", val);
      } else if (way === "changePanel") {
        this.triggerPanelChange(value26, mode4);
      }
    },
    getDateRange: function getDateRange(validRange, disabledDate) {
      return function(current2) {
        if (!current2) {
          return false;
        }
        var _validRange = _slicedToArray$2(validRange, 2), startDate = _validRange[0], endDate = _validRange[1];
        var inRange = !current2.isBetween(startDate, endDate, "days", "[]");
        if (disabledDate) {
          return disabledDate(current2) || inRange;
        }
        return inRange;
      };
    },
    getDefaultLocale: function getDefaultLocale() {
      var result = _extends$1(_extends$1({}, locale$1), this.$props.locale);
      result.lang = _extends$1(_extends$1({}, result.lang), (this.$props.locale || {}).lang);
      return result;
    },
    monthCellRender2: function monthCellRender2(_ref) {
      var value26 = _ref.current;
      var sPrefixCls = this.sPrefixCls, $slots = this.$slots;
      var monthCellRender = this.monthCellRender || $slots.monthCellRender || noop$A;
      return _createVNode$3J("div", {
        "class": "".concat(sPrefixCls, "-month")
      }, [_createVNode$3J("div", {
        "class": "".concat(sPrefixCls, "-value")
      }, [value26.localeData().monthsShort(value26)]), _createVNode$3J("div", {
        "class": "".concat(sPrefixCls, "-content")
      }, [monthCellRender({
        current: value26
      })])]);
    },
    dateCellRender2: function dateCellRender2(_ref2) {
      var value26 = _ref2.current;
      var sPrefixCls = this.sPrefixCls, $slots = this.$slots;
      var dateCellRender = this.dateCellRender || $slots.dateCellRender || noop$A;
      return _createVNode$3J("div", {
        "class": "".concat(sPrefixCls, "-date")
      }, [_createVNode$3J("div", {
        "class": "".concat(sPrefixCls, "-value")
      }, [zerofixed(value26.date())]), _createVNode$3J("div", {
        "class": "".concat(sPrefixCls, "-content")
      }, [dateCellRender({
        current: value26
      })])]);
    },
    renderCalendar: function renderCalendar(locale2, localeCode) {
      var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
      var value26 = this.sValue, mode4 = this.sMode, $slots = this.$slots;
      if (value26 && localeCode) {
        value26.locale(localeCode);
      }
      var customizePrefixCls = props2.prefixCls, fullscreen = props2.fullscreen, dateFullCellRender = props2.dateFullCellRender, monthFullCellRender = props2.monthFullCellRender, className = props2.class, style3 = props2.style;
      var headerRender = this.headerRender || $slots.headerRender;
      var getPrefixCls2 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("fullcalendar", customizePrefixCls);
      this.sPrefixCls = prefixCls2;
      var cls = className || "";
      if (fullscreen) {
        cls += " ".concat(prefixCls2, "-fullscreen");
      }
      var monthCellRender = monthFullCellRender || $slots.monthFullCellRender || this.monthCellRender2;
      var dateCellRender = dateFullCellRender || $slots.dateFullCellRender || this.dateCellRender2;
      var disabledDate = props2.disabledDate;
      if (props2.validRange) {
        disabledDate = this.getDateRange(props2.validRange, disabledDate);
      }
      var fullCalendarProps = _extends$1(_extends$1(_extends$1({}, props2), this.$attrs), {
        Select: {},
        locale: locale2.lang,
        type: mode4 === "year" ? "month" : "date",
        prefixCls: prefixCls2,
        showHeader: false,
        value: value26,
        monthCellRender,
        dateCellRender,
        disabledDate,
        onSelect: this.triggerSelect
      });
      return _createVNode$3J("div", {
        "class": cls,
        "style": style3
      }, [_createVNode$3J(Header$2, {
        "fullscreen": fullscreen,
        "type": mode4,
        "headerRender": headerRender,
        "value": value26,
        "locale": locale2.lang,
        "prefixCls": prefixCls2,
        "onTypeChange": this.onHeaderTypeChange,
        "onValueChange": this.onHeaderValueChange,
        "validRange": props2.validRange
      }, null), _createVNode$3J(FullCalendar, fullCalendarProps, null)]);
    }
  },
  render: function render37() {
    return _createVNode$3J(LocaleReceiver, {
      "componentName": "Calendar",
      "defaultLocale": this.getDefaultLocale,
      "children": this.renderCalendar
    }, null);
  }
});
const index$g = withInstall(Calendar$1);
var PlusOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z" } }, { "tag": "path", "attrs": { "d": "M192 474h672q8 0 8 8v60q0 8-8 8H160q-8 0-8-8v-60q0-8 8-8z" } }] }, "name": "plus", "theme": "outlined" };
const { createVNode: _createVNode$3I } = await importShared("vue");
function _objectSpread$w(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$x(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$x(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var PlusOutlined = function PlusOutlined2(props2, context2) {
  var p = _objectSpread$w({}, props2, context2.attrs);
  return _createVNode$3I(Icon, _objectSpread$w({}, p, {
    "icon": PlusOutlined$1
  }), null);
};
PlusOutlined.displayName = "PlusOutlined";
PlusOutlined.inheritAttrs = false;
const KeyCode = {
  /**
   * LEFT
   */
  LEFT: 37,
  /**
   * UP
   */
  UP: 38,
  /**
   * RIGHT
   */
  RIGHT: 39,
  /**
   * DOWN
   */
  DOWN: 40
  // also NUM_SOUTH
};
const { createVNode: _createVNode$3H } = await importShared("vue");
var sentinelStyle = {
  width: 0,
  height: 0,
  overflow: "hidden",
  position: "absolute"
};
const Sentinel = {
  name: "Sentinel",
  props: {
    setRef: PropTypes.func,
    prevElement: PropTypes.any,
    nextElement: PropTypes.any
  },
  methods: {
    onKeyDown: function onKeyDown(_ref) {
      var target = _ref.target, which = _ref.which, shiftKey = _ref.shiftKey;
      var _this$$props = this.$props, nextElement = _this$$props.nextElement, prevElement = _this$$props.prevElement;
      if (which !== KeyCode$1.TAB || document.activeElement !== target) return;
      if (!shiftKey && nextElement) {
        nextElement.focus();
      }
      if (shiftKey && prevElement) {
        prevElement.focus();
      }
    }
  },
  render: function render38() {
    var setRef = this.$props.setRef;
    return _createVNode$3H("div", {
      "tabindex": 0,
      "ref": setRef,
      "style": sentinelStyle,
      "onKeydown": this.onKeyDown,
      "role": "presentation"
    }, [getSlot(this)]);
  }
};
const { isVNode: isVNode$2 } = await importShared("vue");
function toArray$4(children) {
  var c2 = [];
  children.forEach(function(child) {
    if (isVNode$2(child)) {
      c2.push(child);
    }
  });
  return c2;
}
function getActiveIndex(children, activeKey2) {
  var c2 = toArray$4(children);
  for (var i2 = 0; i2 < c2.length; i2++) {
    if (c2[i2].key === activeKey2) {
      return i2;
    }
  }
  return -1;
}
function setTransform(style3, v2) {
  style3.transform = v2;
  style3.webkitTransform = v2;
  style3.mozTransform = v2;
}
function isTransform3dSupported(style3) {
  return ("transform" in style3 || "webkitTransform" in style3 || "MozTransform" in style3) && window.atob;
}
function getTransformPropValue(v2) {
  return {
    transform: v2,
    WebkitTransform: v2,
    MozTransform: v2
  };
}
function isVertical(tabBarPosition2) {
  return tabBarPosition2 === "left" || tabBarPosition2 === "right";
}
function getTransformByIndex(index2, tabBarPosition2) {
  var direction = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "ltr";
  var translate = isVertical(tabBarPosition2) ? "translateY" : "translateX";
  if (!isVertical(tabBarPosition2) && direction === "rtl") {
    return "".concat(translate, "(").concat(index2 * 100, "%) translateZ(0)");
  }
  return "".concat(translate, "(").concat(-index2 * 100, "%) translateZ(0)");
}
function getMarginStyle(index2, tabBarPosition2) {
  var marginDirection = isVertical(tabBarPosition2) ? "marginTop" : "marginLeft";
  return _defineProperty$U({}, marginDirection, "".concat(-index2 * 100, "%"));
}
function getStyle(el, property2) {
  return +window.getComputedStyle(el).getPropertyValue(property2).replace("px", "");
}
function getDataAttr(props2) {
  return Object.keys(props2).reduce(function(prev3, key2) {
    if (key2.substr(0, 5) === "aria-" || key2.substr(0, 5) === "data-" || key2 === "role") {
      prev3[key2] = props2[key2];
    }
    return prev3;
  }, {});
}
function toNum(style3, property2) {
  return +style3.getPropertyValue(property2).replace("px", "");
}
function getTypeValue(start, current2, end, tabNode, wrapperNode) {
  var total2 = getStyle(wrapperNode, "padding-".concat(start));
  if (!tabNode || !tabNode.parentNode) {
    return total2;
  }
  var childNodes = tabNode.parentNode.childNodes;
  Array.prototype.some.call(childNodes, function(node) {
    if (!node.tagName) {
      return false;
    }
    var style3 = window.getComputedStyle(node);
    if (node !== tabNode) {
      total2 += toNum(style3, "margin-".concat(start));
      total2 += node[current2];
      total2 += toNum(style3, "margin-".concat(end));
      if (style3.boxSizing === "content-box") {
        total2 += toNum(style3, "border-".concat(start, "-width")) + toNum(style3, "border-".concat(end, "-width"));
      }
      return false;
    }
    total2 += toNum(style3, "margin-".concat(start));
    return true;
  });
  return total2;
}
function getLeft(tabNode, wrapperNode) {
  return getTypeValue("left", "offsetWidth", "right", tabNode, wrapperNode);
}
function getTop2(tabNode, wrapperNode) {
  return getTypeValue("top", "offsetHeight", "bottom", tabNode, wrapperNode);
}
const { createVNode: _createVNode$3G } = await importShared("vue");
var __rest$D = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1$, provide: provide$g, reactive: reactive$a, watchEffect: watchEffect$4 } = await importShared("vue");
function getDefaultActiveKey(props2) {
  var activeKey2;
  var children = props2.children;
  children.forEach(function(child) {
    if (child && !isValid$3(activeKey2) && !child.disabled) {
      activeKey2 = child.key;
    }
  });
  return activeKey2;
}
function activeKeyIsValid(props2, key2) {
  var children = props2.children;
  var keys2 = children.map(function(child) {
    return child && child.key;
  });
  return keys2.indexOf(key2) >= 0;
}
const Tabs$1 = defineComponent$1$({
  name: "Tabs",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    destroyInactiveTabPane: PropTypes.looseBool,
    renderTabBar: PropTypes.func.isRequired,
    renderTabContent: PropTypes.func.isRequired,
    navWrapper: PropTypes.func.def(function(arg) {
      return arg;
    }),
    children: PropTypes.any.def([]),
    prefixCls: PropTypes.string.def("ant-tabs"),
    tabBarPosition: PropTypes.string.def("top"),
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    direction: PropTypes.string.def("ltr"),
    tabBarGutter: PropTypes.number
  },
  setup: function setup61(props2) {
    var activeKey2;
    if (props2.activeKey !== void 0) {
      activeKey2 = props2.activeKey;
    } else if (props2.defaultActiveKey !== void 0) {
      activeKey2 = props2.defaultActiveKey;
    } else {
      activeKey2 = getDefaultActiveKey(props2);
    }
    var state = reactive$a({
      _activeKey: activeKey2
    });
    watchEffect$4(function() {
      if (props2.activeKey !== void 0) {
        state._activeKey = props2.activeKey;
      } else if (!activeKeyIsValid(props2, state._activeKey)) {
        state._activeKey = getDefaultActiveKey(props2);
      }
    }, {
      flush: "sync"
    });
    return {
      state
    };
  },
  created: function created8() {
    this.panelSentinelStart = void 0;
    this.panelSentinelEnd = void 0;
    this.sentinelStart = void 0;
    this.sentinelEnd = void 0;
    provide$g("sentinelContext", this);
  },
  beforeUnmount: function beforeUnmount7() {
    this.destroy = true;
    cancelAnimationFrame(this.sentinelId);
  },
  methods: {
    onTabClick: function onTabClick(activeKey2, e2) {
      if (this.tabBar.props && this.tabBar.props.onTabClick) {
        this.tabBar.props.onTabClick(activeKey2, e2);
      }
      this.setActiveKey(activeKey2);
    },
    onNavKeyDown: function onNavKeyDown(e2) {
      var eventKeyCode = e2.keyCode;
      if (eventKeyCode === KeyCode.RIGHT || eventKeyCode === KeyCode.DOWN) {
        e2.preventDefault();
        var nextKey = this.getNextActiveKey(true);
        this.onTabClick(nextKey);
      } else if (eventKeyCode === KeyCode.LEFT || eventKeyCode === KeyCode.UP) {
        e2.preventDefault();
        var previousKey = this.getNextActiveKey(false);
        this.onTabClick(previousKey);
      }
    },
    onScroll: function onScroll(_ref) {
      var target = _ref.target, currentTarget = _ref.currentTarget;
      if (target === currentTarget && target.scrollLeft > 0) {
        target.scrollLeft = 0;
      }
    },
    // Sentinel for tab index
    setSentinelStart: function setSentinelStart(node) {
      this.sentinelStart = node;
    },
    setSentinelEnd: function setSentinelEnd(node) {
      this.sentinelEnd = node;
    },
    setPanelSentinelStart: function setPanelSentinelStart(node) {
      if (node !== this.panelSentinelStart) {
        this.updateSentinelContext();
      }
      this.panelSentinelStart = node;
    },
    setPanelSentinelEnd: function setPanelSentinelEnd(node) {
      if (node !== this.panelSentinelEnd) {
        this.updateSentinelContext();
      }
      this.panelSentinelEnd = node;
    },
    setActiveKey: function setActiveKey(activeKey2) {
      if (this.state._activeKey !== activeKey2) {
        var props2 = this.$props;
        if (props2.activeKey === void 0) {
          this.state._activeKey = activeKey2;
        }
        this.__emit("update:activeKey", activeKey2);
        this.__emit("change", activeKey2);
      }
    },
    getNextActiveKey: function getNextActiveKey(next3) {
      var activeKey2 = this.state._activeKey;
      var children = [];
      this.$props.children.forEach(function(c2) {
        var _a, _b;
        if (c2 && !((_a = c2.props) === null || _a === void 0 ? void 0 : _a.disabled) && ((_b = c2.props) === null || _b === void 0 ? void 0 : _b.disabled) !== "") {
          if (next3) {
            children.push(c2);
          } else {
            children.unshift(c2);
          }
        }
      });
      var length = children.length;
      var ret = length && children[0].key;
      children.forEach(function(child, i2) {
        if (child.key === activeKey2) {
          if (i2 === length - 1) {
            ret = children[0].key;
          } else {
            ret = children[i2 + 1].key;
          }
        }
      });
      return ret;
    },
    updateSentinelContext: function updateSentinelContext() {
      var _this = this;
      if (this.destroy) return;
      cancelAnimationFrame(this.sentinelId);
      this.sentinelId = requestAnimationFrame(function() {
        if (_this.destroy) return;
        _this.$forceUpdate();
      });
    }
  },
  render: function render39() {
    var _cls;
    var props2 = this.$props;
    var prefixCls2 = props2.prefixCls, navWrapper = props2.navWrapper, tabBarPosition2 = props2.tabBarPosition, renderTabContent = props2.renderTabContent, renderTabBar = props2.renderTabBar, destroyInactiveTabPane = props2.destroyInactiveTabPane, direction = props2.direction, tabBarGutter = props2.tabBarGutter;
    var _a = this.$attrs, className = _a.class;
    _a.onChange;
    var style3 = _a.style, restProps = __rest$D(_a, ["class", "onChange", "style"]);
    var cls = (_cls = {}, _defineProperty$U(_cls, className, className), _defineProperty$U(_cls, prefixCls2, 1), _defineProperty$U(_cls, "".concat(prefixCls2, "-").concat(tabBarPosition2), 1), _defineProperty$U(_cls, "".concat(prefixCls2, "-rtl"), direction === "rtl"), _cls);
    this.tabBar = renderTabBar();
    var tabBar = cloneElement(this.tabBar, {
      prefixCls: prefixCls2,
      navWrapper,
      tabBarPosition: tabBarPosition2,
      panels: props2.children,
      activeKey: this.state._activeKey,
      direction,
      tabBarGutter,
      onKeydown: this.onNavKeyDown,
      onTabClick: this.onTabClick,
      key: "tabBar"
    });
    var tabContent = cloneElement(renderTabContent(), {
      prefixCls: prefixCls2,
      tabBarPosition: tabBarPosition2,
      activeKey: this.state._activeKey,
      destroyInactiveTabPane,
      direction,
      onChange: this.setActiveKey,
      children: props2.children,
      key: "tabContent"
    });
    var sentinelStart = _createVNode$3G(Sentinel, {
      "key": "sentinelStart",
      "setRef": this.setSentinelStart,
      "nextElement": this.panelSentinelStart
    }, null);
    var sentinelEnd = _createVNode$3G(Sentinel, {
      "key": "sentinelEnd",
      "setRef": this.setSentinelEnd,
      "prevElement": this.panelSentinelEnd
    }, null);
    var contents = [];
    if (tabBarPosition2 === "bottom") {
      contents.push(sentinelStart, tabContent, sentinelEnd, tabBar);
    } else {
      contents.push(tabBar, sentinelStart, tabContent, sentinelEnd);
    }
    var p = _extends$1(_extends$1({}, getDataAttr(restProps)), {
      style: style3,
      onScroll: this.onScroll,
      class: cls
    });
    return _createVNode$3G("div", p, [contents]);
  }
});
const { createVNode: _createVNode$3F } = await importShared("vue");
const { defineComponent: defineComponent$1_, inject: inject$V } = await importShared("vue");
const TabPane$1 = defineComponent$1_({
  name: "TabPane",
  props: {
    active: PropTypes.looseBool,
    destroyInactiveTabPane: PropTypes.looseBool,
    forceRender: PropTypes.looseBool,
    placeholder: PropTypes.any,
    rootPrefixCls: PropTypes.string,
    tab: PropTypes.any,
    closable: PropTypes.looseBool,
    disabled: PropTypes.looseBool
  },
  setup: function setup62() {
    return {
      isActived: void 0,
      sentinelContext: inject$V("sentinelContext", {})
    };
  },
  render: function render40() {
    var _cls;
    var _this$$props = this.$props, destroyInactiveTabPane = _this$$props.destroyInactiveTabPane, active = _this$$props.active, forceRender = _this$$props.forceRender, rootPrefixCls = _this$$props.rootPrefixCls;
    var children = getSlot(this);
    var placeholder = getComponent(this, "placeholder");
    this.isActived = this.isActived || active;
    var prefixCls2 = "".concat(rootPrefixCls, "-tabpane");
    var cls = (_cls = {}, _defineProperty$U(_cls, prefixCls2, 1), _defineProperty$U(_cls, "".concat(prefixCls2, "-inactive"), !active), _defineProperty$U(_cls, "".concat(prefixCls2, "-active"), active), _cls);
    var isRender = destroyInactiveTabPane ? active : this.isActived;
    var shouldRender = isRender || forceRender;
    var _this$sentinelContext = this.sentinelContext, sentinelStart = _this$sentinelContext.sentinelStart, sentinelEnd = _this$sentinelContext.sentinelEnd, setPanelSentinelStart2 = _this$sentinelContext.setPanelSentinelStart, setPanelSentinelEnd2 = _this$sentinelContext.setPanelSentinelEnd;
    var panelSentinelStart;
    var panelSentinelEnd;
    if (active && shouldRender) {
      panelSentinelStart = _createVNode$3F(Sentinel, {
        "setRef": setPanelSentinelStart2,
        "prevElement": sentinelStart
      }, null);
      panelSentinelEnd = _createVNode$3F(Sentinel, {
        "setRef": setPanelSentinelEnd2,
        "nextElement": sentinelEnd
      }, null);
    }
    return _createVNode$3F("div", {
      "class": cls,
      "role": "tabpanel",
      "aria-hidden": active ? "false" : "true"
    }, [panelSentinelStart, shouldRender ? children : placeholder, panelSentinelEnd]);
  }
});
const { createVNode: _createVNode$3E } = await importShared("vue");
const { defineComponent: defineComponent$1Z } = await importShared("vue");
const TabContent = defineComponent$1Z({
  name: "TabContent",
  inheritAttrs: false,
  props: {
    animated: PropTypes.looseBool.def(true),
    animatedWithMargin: PropTypes.looseBool.def(true),
    prefixCls: PropTypes.string.def("ant-tabs"),
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    tabBarPosition: PropTypes.string,
    direction: PropTypes.string,
    destroyInactiveTabPane: PropTypes.looseBool,
    children: PropTypes.any
  },
  computed: {
    classes: function classes2() {
      var _ref;
      var animated = this.animated, prefixCls2 = this.prefixCls;
      var className = this.$attrs.class;
      return _ref = {}, _defineProperty$U(_ref, className, !!className), _defineProperty$U(_ref, "".concat(prefixCls2, "-content"), true), _defineProperty$U(_ref, animated ? "".concat(prefixCls2, "-content-animated") : "".concat(prefixCls2, "-content-no-animated"), true), _ref;
    }
  },
  methods: {
    getTabPanes: function getTabPanes(children) {
      var props2 = this.$props;
      var activeKey2 = props2.activeKey;
      var newChildren = [];
      children.forEach(function(child) {
        if (!child) {
          return;
        }
        var key2 = child.key;
        var active = activeKey2 === key2;
        newChildren.push(cloneElement(child, {
          active,
          destroyInactiveTabPane: props2.destroyInactiveTabPane,
          rootPrefixCls: props2.prefixCls
        }));
      });
      return newChildren;
    }
  },
  render: function render41() {
    var activeKey2 = this.activeKey, tabBarPosition2 = this.tabBarPosition, animated = this.animated, animatedWithMargin = this.animatedWithMargin, direction = this.direction, classes4 = this.classes, children = this.children;
    var style3 = {};
    if (animated && children) {
      var activeIndex = getActiveIndex(children, activeKey2);
      if (activeIndex !== -1) {
        var animatedStyle = animatedWithMargin ? getMarginStyle(activeIndex, tabBarPosition2) : getTransformPropValue(getTransformByIndex(activeIndex, tabBarPosition2, direction));
        style3 = _extends$1(_extends$1({}, this.$attrs.style), animatedStyle);
      } else {
        style3 = _extends$1(_extends$1({}, this.$attrs.style), {
          display: "none"
        });
      }
    }
    return _createVNode$3E("div", {
      "class": classes4,
      "style": style3
    }, [this.getTabPanes(children || [])]);
  }
});
var UpOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z" } }] }, "name": "up", "theme": "outlined" };
const { createVNode: _createVNode$3D } = await importShared("vue");
function _objectSpread$v(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$w(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$w(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var UpOutlined = function UpOutlined2(props2, context2) {
  var p = _objectSpread$v({}, props2, context2.attrs);
  return _createVNode$3D(Icon, _objectSpread$v({}, p, {
    "icon": UpOutlined$1
  }), null);
};
UpOutlined.displayName = "UpOutlined";
UpOutlined.inheritAttrs = false;
var LeftOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z" } }] }, "name": "left", "theme": "outlined" };
const { createVNode: _createVNode$3C } = await importShared("vue");
function _objectSpread$u(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$v(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$v(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var LeftOutlined = function LeftOutlined2(props2, context2) {
  var p = _objectSpread$u({}, props2, context2.attrs);
  return _createVNode$3C(Icon, _objectSpread$u({}, p, {
    "icon": LeftOutlined$1
  }), null);
};
LeftOutlined.displayName = "LeftOutlined";
LeftOutlined.inheritAttrs = false;
const { createVNode: _createVNode$3B } = await importShared("vue");
function componentDidUpdate(component, init) {
  var _component$$props = component.$props, _component$$props$sty = _component$$props.styles, styles = _component$$props$sty === void 0 ? {} : _component$$props$sty, panels = _component$$props.panels, activeKey2 = _component$$props.activeKey, direction = _component$$props.direction;
  var rootNode = component.getRef("root");
  var wrapNode = component.getRef("nav") || rootNode;
  var inkBarNode = component.getRef("inkBar");
  var activeTab = component.getRef("activeTab");
  var inkBarNodeStyle = inkBarNode.style;
  var tabBarPosition2 = component.$props.tabBarPosition;
  var activeIndex = getActiveIndex(panels, activeKey2);
  if (init) {
    inkBarNodeStyle.display = "none";
  }
  if (activeTab) {
    var tabNode = activeTab;
    var transformSupported = isTransform3dSupported(inkBarNodeStyle);
    setTransform(inkBarNodeStyle, "");
    inkBarNodeStyle.width = "";
    inkBarNodeStyle.height = "";
    inkBarNodeStyle.left = "";
    inkBarNodeStyle.top = "";
    inkBarNodeStyle.bottom = "";
    inkBarNodeStyle.right = "";
    if (tabBarPosition2 === "top" || tabBarPosition2 === "bottom") {
      var left = getLeft(tabNode, wrapNode);
      var width = tabNode.offsetWidth;
      if (width === rootNode.offsetWidth) {
        width = 0;
      } else if (styles.inkBar && styles.inkBar.width !== void 0) {
        width = parseFloat(styles.inkBar.width, 10);
        if (width) {
          left += (tabNode.offsetWidth - width) / 2;
        }
      }
      if (direction === "rtl") {
        left = getStyle(tabNode, "margin-left") - left;
      }
      if (transformSupported) {
        setTransform(inkBarNodeStyle, "translate3d(".concat(left, "px,0,0)"));
      } else {
        inkBarNodeStyle.left = "".concat(left, "px");
      }
      inkBarNodeStyle.width = "".concat(width, "px");
    } else {
      var top = getTop2(tabNode, wrapNode);
      var height = tabNode.offsetHeight;
      if (styles.inkBar && styles.inkBar.height !== void 0) {
        height = parseFloat(styles.inkBar.height, 10);
        if (height) {
          top += (tabNode.offsetHeight - height) / 2;
        }
      }
      if (transformSupported) {
        setTransform(inkBarNodeStyle, "translate3d(0,".concat(top, "px,0)"));
        inkBarNodeStyle.top = "0";
      } else {
        inkBarNodeStyle.top = "".concat(top, "px");
      }
      inkBarNodeStyle.height = "".concat(height, "px");
    }
  }
  inkBarNodeStyle.display = activeIndex !== -1 ? "block" : "none";
}
const InkTabBarNode = {
  name: "InkTabBarNode",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    inkBarAnimated: {
      type: Boolean,
      default: true
    },
    direction: PropTypes.string,
    prefixCls: String,
    styles: Object,
    tabBarPosition: String,
    saveRef: PropTypes.func.def(function() {
    }),
    getRef: PropTypes.func.def(function() {
    }),
    panels: PropTypes.array,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
  },
  updated: function updated5() {
    var _this = this;
    this.$nextTick(function() {
      componentDidUpdate(_this);
    });
  },
  mounted: function mounted10() {
    var _this2 = this;
    this.$nextTick(function() {
      componentDidUpdate(_this2, true);
    });
  },
  render: function render42() {
    var _classes;
    var prefixCls2 = this.prefixCls, _this$styles = this.styles, styles = _this$styles === void 0 ? {} : _this$styles, inkBarAnimated = this.inkBarAnimated;
    var className = "".concat(prefixCls2, "-ink-bar");
    var classes4 = (_classes = {}, _defineProperty$U(_classes, className, true), _defineProperty$U(_classes, inkBarAnimated ? "".concat(className, "-animated") : "".concat(className, "-no-animated"), true), _classes);
    return _createVNode$3B("div", {
      "style": styles.inkBar,
      "class": classes4,
      "key": "inkBar",
      "ref": this.saveRef("inkBar")
    }, null);
  }
};
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var warning$2 = function() {
};
var warning_1 = warning$2;
const warning$3 = /* @__PURE__ */ getDefaultExportFromCjs(warning_1);
const { createVNode: _createVNode$3A } = await importShared("vue");
function noop$z() {
}
const TabBarTabsNode = {
  name: "TabBarTabsNode",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    panels: PropTypes.any.def([]),
    prefixCls: PropTypes.string.def(""),
    tabBarGutter: PropTypes.any.def(null),
    onTabClick: PropTypes.func,
    saveRef: PropTypes.func.def(noop$z),
    getRef: PropTypes.func.def(noop$z),
    renderTabBarNode: PropTypes.func,
    tabBarPosition: PropTypes.string,
    direction: PropTypes.string
  },
  render: function render43() {
    var _this = this;
    var _this$$props = this.$props, children = _this$$props.panels, activeKey2 = _this$$props.activeKey, prefixCls2 = _this$$props.prefixCls, tabBarGutter = _this$$props.tabBarGutter, saveRef4 = _this$$props.saveRef, tabBarPosition2 = _this$$props.tabBarPosition, direction = _this$$props.direction;
    var rst = [];
    var renderTabBarNode = this.renderTabBarNode || this.$slots.renderTabBarNode;
    children.forEach(function(child, index2) {
      if (!child) {
        return;
      }
      var props2 = getPropsData(child);
      var key2 = child.key;
      var cls = activeKey2 === key2 ? "".concat(prefixCls2, "-tab-active") : "";
      cls += " ".concat(prefixCls2, "-tab");
      var events = {};
      var disabled = props2.disabled;
      if (disabled) {
        cls += " ".concat(prefixCls2, "-tab-disabled");
      } else {
        events.onClick = function() {
          _this.__emit("tabClick", key2);
        };
      }
      var tab = getComponent(child, "tab");
      var gutter = tabBarGutter && index2 === children.length - 1 ? 0 : tabBarGutter;
      gutter = typeof gutter === "number" ? "".concat(gutter, "px") : gutter;
      var marginProperty = direction === "rtl" ? "marginLeft" : "marginRight";
      var style3 = _defineProperty$U({}, isVertical(tabBarPosition2) ? "marginBottom" : marginProperty, gutter);
      warning$3(tab !== void 0, "There must be `tab` property or slot on children of Tabs.");
      var node = _createVNode$3A("div", _objectSpread2$2(_objectSpread2$2({
        "role": "tab",
        "aria-disabled": disabled ? "true" : "false",
        "aria-selected": activeKey2 === key2 ? "true" : "false"
      }, events), {}, {
        "class": cls.trim(),
        "key": key2,
        "style": style3,
        "ref": activeKey2 === key2 ? saveRef4("activeTab") : noop$z
      }), [tab]);
      if (renderTabBarNode) {
        node = renderTabBarNode(node);
      }
      rst.push(node);
    });
    return _createVNode$3A("div", {
      "ref": this.saveRef("navTabsContainer")
    }, [rst]);
  }
};
const { createVNode: _createVNode$3z } = await importShared("vue");
var __rest$C = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
function noop$y() {
}
const TabBarRootNode = {
  name: "TabBarRootNode",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    saveRef: PropTypes.func.def(noop$y),
    getRef: PropTypes.func.def(noop$y),
    prefixCls: PropTypes.string.def(""),
    tabBarPosition: PropTypes.string.def("top"),
    extraContent: PropTypes.any
  },
  methods: {
    onKeyDown: function onKeyDown2(e2) {
      this.__emit("keydown", e2);
    }
  },
  render: function render44() {
    var _cls;
    var prefixCls2 = this.prefixCls, onKeyDown14 = this.onKeyDown, tabBarPosition2 = this.tabBarPosition, extraContent = this.extraContent;
    var _a = this.$attrs, className = _a.class, style3 = _a.style;
    _a.onKeydown;
    var restProps = __rest$C(_a, ["class", "style", "onKeydown"]);
    var cls = (_cls = {}, _defineProperty$U(_cls, "".concat(prefixCls2, "-bar"), true), _defineProperty$U(_cls, className, !!className), _cls);
    var topOrBottom = tabBarPosition2 === "top" || tabBarPosition2 === "bottom";
    var tabBarExtraContentStyle = topOrBottom ? {
      float: "right"
    } : {};
    var children = getSlot(this);
    var newChildren = children;
    if (extraContent) {
      newChildren = [cloneElement(extraContent, {
        key: "extra",
        style: _extends$1({}, tabBarExtraContentStyle)
      }), cloneElement(children, {
        key: "content"
      })];
      newChildren = topOrBottom ? newChildren : newChildren.reverse();
    }
    return _createVNode$3z("div", _objectSpread2$2({
      "role": "tablist",
      "class": cls,
      "tabindex": "0",
      "onKeydown": onKeyDown14,
      "style": style3,
      "ref": this.saveRef("root")
    }, getDataAttr(restProps)), [newChildren]);
  }
};
var now$2 = function() {
  return root.Date.now();
};
var reWhitespace = /\s/;
function trimmedEndIndex(string2) {
  var index2 = string2.length;
  while (index2-- && reWhitespace.test(string2.charAt(index2))) {
  }
  return index2;
}
var reTrimStart = /^\s+/;
function baseTrim(string2) {
  return string2 ? string2.slice(0, trimmedEndIndex(string2) + 1).replace(reTrimStart, "") : string2;
}
var NAN = 0 / 0;
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
var reIsBinary = /^0b[01]+$/i;
var reIsOctal = /^0o[0-7]+$/i;
var freeParseInt = parseInt;
function toNumber(value26) {
  if (typeof value26 == "number") {
    return value26;
  }
  if (isSymbol(value26)) {
    return NAN;
  }
  if (isObject$1(value26)) {
    var other = typeof value26.valueOf == "function" ? value26.valueOf() : value26;
    value26 = isObject$1(other) ? other + "" : other;
  }
  if (typeof value26 != "string") {
    return value26 === 0 ? value26 : +value26;
  }
  value26 = baseTrim(value26);
  var isBinary = reIsBinary.test(value26);
  return isBinary || reIsOctal.test(value26) ? freeParseInt(value26.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value26) ? NAN : +value26;
}
var FUNC_ERROR_TEXT$1 = "Expected a function";
var nativeMax$1 = Math.max, nativeMin$1 = Math.min;
function debounce$1(func, wait, options2) {
  var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT$1);
  }
  wait = toNumber(wait) || 0;
  if (isObject$1(options2)) {
    leading = !!options2.leading;
    maxing = "maxWait" in options2;
    maxWait = maxing ? nativeMax$1(toNumber(options2.maxWait) || 0, wait) : maxWait;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  function invokeFunc(time) {
    var args = lastArgs, thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = setTimeout(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
    return maxing ? nativeMin$1(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time = now$2();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = setTimeout(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel2() {
    if (timerId !== void 0) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(now$2());
  }
  function debounced() {
    var time = now$2(), isInvoking = shouldInvoke(time);
    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel2;
  debounced.flush = flush;
  return debounced;
}
const { createVNode: _createVNode$3y } = await importShared("vue");
const ScrollableTabBarNode = {
  name: "ScrollableTabBarNode",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    activeKey: PropTypes.any,
    getRef: PropTypes.func.def(function() {
    }),
    saveRef: PropTypes.func.def(function() {
    }),
    tabBarPosition: PropTypes.oneOf(["left", "right", "top", "bottom"]).def("left"),
    prefixCls: PropTypes.string.def(""),
    scrollAnimated: PropTypes.looseBool.def(true),
    navWrapper: PropTypes.func.def(function(arg) {
      return arg;
    }),
    prevIcon: PropTypes.any,
    nextIcon: PropTypes.any,
    direction: PropTypes.string
  },
  data: function data16() {
    this.offset = 0;
    this.prevProps = _extends$1({}, this.$props);
    return {
      next: false,
      prev: false
    };
  },
  watch: {
    tabBarPosition: function tabBarPosition() {
      var _this = this;
      this.tabBarPositionChange = true;
      this.$nextTick(function() {
        _this.setOffset(0);
      });
    }
  },
  mounted: function mounted11() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.updatedCal();
      _this2.debouncedResize = debounce$1(function() {
        _this2.setNextPrev();
        _this2.scrollToActiveTab();
      }, 200);
      _this2.resizeObserver = new index$k(_this2.debouncedResize);
      _this2.resizeObserver.observe(_this2.$props.getRef("container"));
    });
  },
  updated: function updated6() {
    var _this3 = this;
    this.$nextTick(function() {
      _this3.updatedCal(_this3.prevProps);
      _this3.prevProps = _extends$1({}, _this3.$props);
    });
  },
  beforeUnmount: function beforeUnmount8() {
    if (this.resizeObserver) {
      this.resizeObserver.disconnect();
    }
    if (this.debouncedResize && this.debouncedResize.cancel) {
      this.debouncedResize.cancel();
    }
  },
  methods: {
    updatedCal: function updatedCal2(prevProps) {
      var _this4 = this;
      var props2 = this.$props;
      if (prevProps && prevProps.tabBarPosition !== props2.tabBarPosition) {
        this.setOffset(0);
        return;
      }
      if (this.isNextPrevShown(this.$data) !== this.isNextPrevShown(this.setNextPrev())) {
        this.$forceUpdate();
        this.$nextTick(function() {
          _this4.scrollToActiveTab();
        });
      } else if (!prevProps || props2.activeKey !== prevProps.activeKey) {
        this.scrollToActiveTab();
      }
    },
    setNextPrev: function setNextPrev() {
      var navNode = this.$props.getRef("nav");
      var navTabsContainer = this.$props.getRef("navTabsContainer");
      var navNodeWH = this.getScrollWH(navTabsContainer || navNode);
      var containerWH = this.getOffsetWH(this.$props.getRef("container")) + 1;
      var navWrapNodeWH = this.getOffsetWH(this.$props.getRef("navWrap"));
      var offset4 = this.offset;
      var minOffset = containerWH - navNodeWH;
      var next3 = this.next, prev3 = this.prev;
      if (minOffset >= 0) {
        next3 = false;
        this.setOffset(0, false);
        offset4 = 0;
      } else if (minOffset < offset4) {
        next3 = true;
      } else {
        next3 = false;
        var realOffset = navWrapNodeWH - navNodeWH;
        this.setOffset(realOffset, false);
        offset4 = realOffset;
      }
      if (offset4 < 0) {
        prev3 = true;
      } else {
        prev3 = false;
      }
      this.setNext(next3);
      this.setPrev(prev3);
      return {
        next: next3,
        prev: prev3
      };
    },
    getOffsetWH: function getOffsetWH(node) {
      var tabBarPosition2 = this.$props.tabBarPosition;
      var prop = "offsetWidth";
      if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
        prop = "offsetHeight";
      }
      return node[prop];
    },
    getScrollWH: function getScrollWH(node) {
      var tabBarPosition2 = this.tabBarPosition;
      var prop = "scrollWidth";
      if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
        prop = "scrollHeight";
      }
      return node[prop];
    },
    getOffsetLT: function getOffsetLT(node) {
      var tabBarPosition2 = this.$props.tabBarPosition;
      var prop = "left";
      if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
        prop = "top";
      }
      return node.getBoundingClientRect()[prop];
    },
    setOffset: function setOffset(offset4) {
      var checkNextPrev = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      var target = Math.min(0, offset4);
      if (this.offset !== target) {
        this.offset = target;
        var navOffset = {};
        var tabBarPosition2 = this.$props.tabBarPosition;
        var navStyle = this.$props.getRef("nav").style;
        var transformSupported = isTransform3dSupported(navStyle);
        if (tabBarPosition2 === "left" || tabBarPosition2 === "right") {
          if (transformSupported) {
            navOffset = {
              value: "translate3d(0,".concat(target, "px,0)")
            };
          } else {
            navOffset = {
              name: "top",
              value: "".concat(target, "px")
            };
          }
        } else if (transformSupported) {
          if (this.$props.direction === "rtl") {
            target = -target;
          }
          navOffset = {
            value: "translate3d(".concat(target, "px,0,0)")
          };
        } else {
          navOffset = {
            name: "left",
            value: "".concat(target, "px")
          };
        }
        if (transformSupported) {
          setTransform(navStyle, navOffset.value);
        } else {
          navStyle[navOffset.name] = navOffset.value;
        }
        if (checkNextPrev) {
          this.setNextPrev();
        }
      }
    },
    setPrev: function setPrev(v2) {
      if (this.prev !== v2) {
        this.prev = v2;
      }
    },
    setNext: function setNext(v2) {
      if (this.next !== v2) {
        this.next = v2;
      }
    },
    isNextPrevShown: function isNextPrevShown(state) {
      if (state) {
        return state.next || state.prev;
      }
      return this.next || this.prev;
    },
    prevTransitionEnd: function prevTransitionEnd(e2) {
      if (e2.propertyName !== "opacity") {
        return;
      }
      var container = this.$props.getRef("container");
      this.scrollToActiveTab({
        target: container,
        currentTarget: container
      });
    },
    scrollToActiveTab: function scrollToActiveTab(e2) {
      var activeTab = this.$props.getRef("activeTab");
      var navWrap = this.$props.getRef("navWrap");
      if (e2 && e2.target !== e2.currentTarget || !activeTab) {
        return;
      }
      var needToSroll = this.isNextPrevShown() && this.lastNextPrevShown;
      this.lastNextPrevShown = this.isNextPrevShown();
      if (!needToSroll) {
        return;
      }
      var activeTabWH = this.getScrollWH(activeTab);
      var navWrapNodeWH = this.getOffsetWH(navWrap);
      var offset4 = this.offset;
      var wrapOffset = this.getOffsetLT(navWrap);
      var activeTabOffset = this.getOffsetLT(activeTab);
      if (wrapOffset > activeTabOffset) {
        offset4 += wrapOffset - activeTabOffset;
        this.setOffset(offset4);
      } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {
        offset4 -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);
        this.setOffset(offset4);
      }
    },
    prevClick: function prevClick(e2) {
      this.__emit("prevClick", e2);
      var navWrapNode = this.$props.getRef("navWrap");
      var navWrapNodeWH = this.getOffsetWH(navWrapNode);
      var offset4 = this.offset;
      this.setOffset(offset4 + navWrapNodeWH);
    },
    nextClick: function nextClick(e2) {
      this.__emit("nextClick", e2);
      var navWrapNode = this.$props.getRef("navWrap");
      var navWrapNodeWH = this.getOffsetWH(navWrapNode);
      var offset4 = this.offset;
      this.setOffset(offset4 - navWrapNodeWH);
    }
  },
  render: function render45() {
    var _ref, _ref2, _navClasses, _ref3;
    var next3 = this.next, prev3 = this.prev;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, scrollAnimated = _this$$props.scrollAnimated, navWrapper = _this$$props.navWrapper;
    var prevIcon = getComponent(this, "prevIcon");
    var nextIcon = getComponent(this, "nextIcon");
    var showNextPrev = prev3 || next3;
    var prevButton = _createVNode$3y("span", {
      "onClick": prev3 && this.prevClick,
      "unselectable": "unselectable",
      "class": (_ref = {}, _defineProperty$U(_ref, "".concat(prefixCls2, "-tab-prev"), 1), _defineProperty$U(_ref, "".concat(prefixCls2, "-tab-btn-disabled"), !prev3), _defineProperty$U(_ref, "".concat(prefixCls2, "-tab-arrow-show"), showNextPrev), _ref),
      "onTransitionend": this.prevTransitionEnd
    }, [prevIcon || _createVNode$3y("span", {
      "class": "".concat(prefixCls2, "-tab-prev-icon")
    }, null)]);
    var nextButton = _createVNode$3y("span", {
      "onClick": next3 && this.nextClick,
      "unselectable": "unselectable",
      "class": (_ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2, "-tab-next"), 1), _defineProperty$U(_ref2, "".concat(prefixCls2, "-tab-btn-disabled"), !next3), _defineProperty$U(_ref2, "".concat(prefixCls2, "-tab-arrow-show"), showNextPrev), _ref2)
    }, [nextIcon || _createVNode$3y("span", {
      "class": "".concat(prefixCls2, "-tab-next-icon")
    }, null)]);
    var navClassName = "".concat(prefixCls2, "-nav");
    var navClasses = (_navClasses = {}, _defineProperty$U(_navClasses, navClassName, true), _defineProperty$U(_navClasses, scrollAnimated ? "".concat(navClassName, "-animated") : "".concat(navClassName, "-no-animated"), true), _navClasses);
    return _createVNode$3y("div", {
      "class": (_ref3 = {}, _defineProperty$U(_ref3, "".concat(prefixCls2, "-nav-container"), 1), _defineProperty$U(_ref3, "".concat(prefixCls2, "-nav-container-scrolling"), showNextPrev), _ref3),
      "key": "container",
      "ref": this.saveRef("container")
    }, [prevButton, nextButton, _createVNode$3y("div", {
      "class": "".concat(prefixCls2, "-nav-wrap"),
      "ref": this.saveRef("navWrap")
    }, [_createVNode$3y("div", {
      "class": "".concat(prefixCls2, "-nav-scroll")
    }, [_createVNode$3y("div", {
      "class": navClasses,
      "ref": this.saveRef("nav")
    }, [navWrapper(getSlot(this))])])])]);
  }
};
const SaveRef = {
  props: {
    children: PropTypes.func.def(function() {
      return null;
    })
  },
  methods: {
    getRef: function getRef(name) {
      return this[name];
    },
    saveRef: function saveRef2(name) {
      var _this = this;
      return function(node) {
        if (node) {
          _this[name] = node;
        }
      };
    }
  },
  render: function render46() {
    var _this2 = this;
    var saveRef4 = function saveRef5(name) {
      return _this2.saveRef(name);
    };
    var getRef2 = function getRef3(name) {
      return _this2.getRef(name);
    };
    return this.children(saveRef4, getRef2);
  }
};
const { createVNode: _createVNode$3x } = await importShared("vue");
const { defineComponent: defineComponent$1Y } = await importShared("vue");
const ScrollableInkTabBar = defineComponent$1Y({
  name: "ScrollableInkTabBar",
  inheritAttrs: false,
  render: function render47() {
    var _this = this;
    var renderTabBarNode = this.$attrs.children;
    return _createVNode$3x(SaveRef, {
      "children": function children(saveRef4, getRef2) {
        return _createVNode$3x(TabBarRootNode, _objectSpread2$2({
          "saveRef": saveRef4
        }, _this.$attrs), {
          default: function _default8() {
            return [_createVNode$3x(ScrollableTabBarNode, _objectSpread2$2({
              "saveRef": saveRef4,
              "getRef": getRef2
            }, _this.$attrs), {
              default: function _default9() {
                return [_createVNode$3x(TabBarTabsNode, _objectSpread2$2({
                  "saveRef": saveRef4
                }, _extends$1(_extends$1({}, _this.$attrs), {
                  renderTabBarNode
                })), null), _createVNode$3x(InkTabBarNode, _objectSpread2$2({
                  "saveRef": saveRef4,
                  "getRef": getRef2
                }, _this.$attrs), null)];
              }
            })];
          }
        });
      }
    }, null);
  }
});
const { createVNode: _createVNode$3w } = await importShared("vue");
const { defineComponent: defineComponent$1X } = await importShared("vue");
var TabBar = defineComponent$1X({
  name: "TabBar",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    centered: PropTypes.looseBool.def(false),
    tabBarStyle: PropTypes.style,
    tabBarExtraContent: PropTypes.VNodeChild,
    type: PropTypes.oneOf(tuple("line", "card", "editable-card")),
    tabPosition: PropTypes.oneOf(tuple("top", "right", "bottom", "left")).def("top"),
    tabBarPosition: PropTypes.oneOf(tuple("top", "right", "bottom", "left")),
    size: PropTypes.oneOf(tuple("default", "small", "large")),
    animated: {
      type: [Boolean, Object],
      default: void 0
    },
    renderTabBar: PropTypes.func,
    panels: PropTypes.array.def([]),
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    tabBarGutter: PropTypes.number
  },
  render: function render48() {
    var _cls;
    var _this$$props = this.$props, centered = _this$$props.centered, tabBarStyle = _this$$props.tabBarStyle, _this$$props$animated = _this$$props.animated, animated = _this$$props$animated === void 0 ? true : _this$$props$animated, renderTabBar = _this$$props.renderTabBar, tabBarExtraContent = _this$$props.tabBarExtraContent, tabPosition = _this$$props.tabPosition, prefixCls2 = _this$$props.prefixCls, _this$$props$type = _this$$props.type, type3 = _this$$props$type === void 0 ? "line" : _this$$props$type, size = _this$$props.size;
    var inkBarAnimated = _typeof$3(animated) === "object" ? animated.inkBar : animated;
    var isVertical2 = tabPosition === "left" || tabPosition === "right";
    var prevIcon = _createVNode$3w("span", {
      "class": "".concat(prefixCls2, "-tab-prev-icon")
    }, [isVertical2 ? _createVNode$3w(UpOutlined, {
      "class": "".concat(prefixCls2, "-tab-prev-icon-target")
    }, null) : _createVNode$3w(LeftOutlined, {
      "class": "".concat(prefixCls2, "-tab-prev-icon-target")
    }, null)]);
    var nextIcon = _createVNode$3w("span", {
      "class": "".concat(prefixCls2, "-tab-next-icon")
    }, [isVertical2 ? _createVNode$3w(DownOutlined, {
      "class": "".concat(prefixCls2, "-tab-next-icon-target")
    }, null) : _createVNode$3w(RightOutlined, {
      "class": "".concat(prefixCls2, "-tab-next-icon-target")
    }, null)]);
    var cls = (_cls = {}, _defineProperty$U(_cls, this.$attrs.class, this.$attrs.class), _defineProperty$U(_cls, "".concat(prefixCls2, "-centered-bar"), centered), _defineProperty$U(_cls, "".concat(prefixCls2, "-").concat(tabPosition, "-bar"), true), _defineProperty$U(_cls, "".concat(prefixCls2, "-").concat(size, "-bar"), !!size), _defineProperty$U(_cls, "".concat(prefixCls2, "-card-bar"), type3 && type3.indexOf("card") >= 0), _cls);
    var renderProps = _extends$1(_extends$1(_extends$1({}, this.$props), this.$attrs), {
      children: null,
      inkBarAnimated,
      extraContent: tabBarExtraContent,
      prevIcon,
      nextIcon,
      style: tabBarStyle,
      class: cls
    });
    if (renderTabBar) {
      return renderTabBar(_extends$1(_extends$1({}, renderProps), {
        DefaultTabBar: ScrollableInkTabBar
      }));
    } else {
      return _createVNode$3w(ScrollableInkTabBar, renderProps, null);
    }
  }
});
const { createVNode: _createVNode$3v } = await importShared("vue");
var __rest$B = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1W, inject: inject$U } = await importShared("vue");
const Tabs = defineComponent$1W({
  TabPane: TabPane$1,
  name: "ATabs",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    hideAdd: PropTypes.looseBool.def(false),
    centered: PropTypes.looseBool.def(false),
    tabBarStyle: PropTypes.object,
    tabBarExtraContent: PropTypes.any,
    destroyInactiveTabPane: PropTypes.looseBool.def(false),
    type: PropTypes.oneOf(tuple("line", "card", "editable-card")),
    tabPosition: PropTypes.oneOf(["top", "right", "bottom", "left"]).def("top"),
    size: PropTypes.oneOf(["default", "small", "large"]),
    animated: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
    tabBarGutter: PropTypes.number,
    renderTabBar: PropTypes.func,
    onChange: {
      type: Function
    },
    onTabClick: PropTypes.func,
    onPrevClick: {
      type: Function
    },
    onNextClick: {
      type: Function
    },
    onEdit: {
      type: Function
    }
  },
  emits: ["update:activeKey", "edit", "change"],
  setup: function setup63() {
    return {
      configProvider: inject$U("configProvider", defaultConfigProvider)
    };
  },
  methods: {
    removeTab: function removeTab(targetKey, e2) {
      e2.stopPropagation();
      if (isValid$3(targetKey)) {
        this.$emit("edit", targetKey, "remove");
      }
    },
    handleChange: function handleChange6(activeKey2) {
      this.$emit("update:activeKey", activeKey2);
      this.$emit("change", activeKey2);
    },
    createNewTab: function createNewTab(targetKey) {
      this.$emit("edit", targetKey, "add");
    }
  },
  render: function render49() {
    var _cls, _this = this, _contentCls;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, size = props2.size, _props$type = props2.type, type3 = _props$type === void 0 ? "line" : _props$type, tabPosition = props2.tabPosition, _props$animated = props2.animated, animated = _props$animated === void 0 ? true : _props$animated, hideAdd = props2.hideAdd, renderTabBar = props2.renderTabBar;
    var _a = this.$attrs, className = _a.class, restProps = __rest$B(_a, ["class"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("tabs", customizePrefixCls);
    var children = filterEmpty(getSlot(this));
    var tabBarExtraContent = getComponent(this, "tabBarExtraContent");
    var tabPaneAnimated = _typeof$3(animated) === "object" ? animated.tabPane : animated;
    if (type3 !== "line") {
      tabPaneAnimated = "animated" in props2 ? tabPaneAnimated : false;
    }
    var cls = (_cls = {}, _defineProperty$U(_cls, className, className), _defineProperty$U(_cls, "".concat(prefixCls2, "-vertical"), tabPosition === "left" || tabPosition === "right"), _defineProperty$U(_cls, "".concat(prefixCls2, "-").concat(size), !!size), _defineProperty$U(_cls, "".concat(prefixCls2, "-card"), type3.indexOf("card") >= 0), _defineProperty$U(_cls, "".concat(prefixCls2, "-").concat(type3), true), _defineProperty$U(_cls, "".concat(prefixCls2, "-no-animation"), !tabPaneAnimated), _cls);
    var childrenWithClose = [];
    if (type3 === "editable-card") {
      childrenWithClose = [];
      children.forEach(function(child, index2) {
        var props3 = getPropsData(child);
        var closable = props3.closable;
        closable = typeof closable === "undefined" ? true : closable;
        var closeIcon = closable ? _createVNode$3v(CloseOutlined, {
          "class": "".concat(prefixCls2, "-close-x"),
          "onClick": function onClick7(e2) {
            return _this.removeTab(child.key, e2);
          }
        }, null) : null;
        childrenWithClose.push(cloneElement(child, {
          tab: _createVNode$3v("div", {
            "class": closable ? void 0 : "".concat(prefixCls2, "-tab-unclosable")
          }, [getComponent(child, "tab"), closeIcon]),
          key: child.key || index2
        }));
      });
      if (!hideAdd) {
        tabBarExtraContent = _createVNode$3v("span", null, [_createVNode$3v(PlusOutlined, {
          "class": "".concat(prefixCls2, "-new-tab"),
          "onClick": this.createNewTab
        }, null), tabBarExtraContent]);
      }
    }
    tabBarExtraContent = tabBarExtraContent ? _createVNode$3v("div", {
      "class": "".concat(prefixCls2, "-extra-content")
    }, [tabBarExtraContent]) : null;
    var renderTabBarSlot = renderTabBar || this.$slots.renderTabBar;
    var tabBarProps = _extends$1(_extends$1(_extends$1(_extends$1({}, props2), {
      prefixCls: prefixCls2,
      tabBarExtraContent,
      renderTabBar: renderTabBarSlot
    }), restProps), {
      children
    });
    var contentCls = (_contentCls = {}, _defineProperty$U(_contentCls, "".concat(prefixCls2, "-").concat(tabPosition, "-content"), true), _defineProperty$U(_contentCls, "".concat(prefixCls2, "-card-content"), type3.indexOf("card") >= 0), _contentCls);
    var tabsProps = _extends$1(_extends$1(_extends$1(_extends$1({}, props2), {
      prefixCls: prefixCls2,
      tabBarPosition: tabPosition,
      // https://github.com/vueComponent/ant-design-vue/issues/2030
      // 如仅传递 tabBarProps 会导致，第二次执行 renderTabBar 时，丢失 on 属性，
      // 添加key之后，会在babel jsx 插件中做一次merge，最终TabBar接收的是一个新的对象，而不是 tabBarProps
      renderTabBar: function renderTabBar2() {
        return _createVNode$3v(TabBar, _objectSpread2$2({
          "key": "tabBar"
        }, tabBarProps), null);
      },
      renderTabContent: function renderTabContent() {
        return _createVNode$3v(TabContent, {
          "class": contentCls,
          "animated": tabPaneAnimated,
          "animatedWithMargin": true
        }, null);
      },
      children: childrenWithClose.length > 0 ? childrenWithClose : children
    }), restProps), {
      onChange: this.handleChange,
      class: cls
    });
    return _createVNode$3v(Tabs$1, tabsProps, null);
  }
});
Tabs.TabPane = _extends$1(_extends$1({}, TabPane$1), {
  name: "ATabPane",
  __ANT_TAB_PANE: true
});
Tabs.TabContent = _extends$1(_extends$1({}, TabContent), {
  name: "ATabContent"
});
Tabs.install = function(app) {
  app.component(Tabs.name, Tabs);
  app.component(Tabs.TabPane.name, Tabs.TabPane);
  app.component(Tabs.TabContent.name, Tabs.TabContent);
  return app;
};
function canUseDom() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}
var canUseDocElement = function canUseDocElement2() {
  return canUseDom() && window.document.documentElement;
};
var isStyleSupport = function isStyleSupport2(styleName) {
  if (canUseDocElement()) {
    var styleNameList = Array.isArray(styleName) ? styleName : [styleName];
    var documentElement = window.document.documentElement;
    return styleNameList.some(function(name) {
      return name in documentElement.style;
    });
  }
  return false;
};
var flexGapSupported;
var detectFlexGapSupported = function detectFlexGapSupported2() {
  if (!canUseDocElement()) {
    return false;
  }
  if (flexGapSupported !== void 0) {
    return flexGapSupported;
  }
  var flex = document.createElement("div");
  flex.style.display = "flex";
  flex.style.flexDirection = "column";
  flex.style.rowGap = "1px";
  flex.appendChild(document.createElement("div"));
  flex.appendChild(document.createElement("div"));
  document.body.appendChild(flex);
  flexGapSupported = flex.scrollHeight === 1;
  document.body.removeChild(flex);
  return flexGapSupported;
};
const { onMounted: onMounted$f, ref: ref$u } = await importShared("vue");
const useFlexGapSupport = function() {
  var flexible = ref$u(false);
  onMounted$f(function() {
    flexible.value = detectFlexGapSupported();
  });
  return flexible;
};
const { computed: computed$z } = await importShared("vue");
const { inject: inject$T, provide: provide$f } = await importShared("vue");
var RowContextKey = Symbol("rowContextKey");
var useProvideRow = function useProvideRow2(state) {
  provide$f(RowContextKey, state);
};
var useInjectRow = function useInjectRow2() {
  return inject$T(RowContextKey, {
    gutter: computed$z(function() {
      return void 0;
    }),
    wrap: computed$z(function() {
      return void 0;
    }),
    supportFlexGap: computed$z(function() {
      return void 0;
    })
  });
};
const { createVNode: _createVNode$3u } = await importShared("vue");
const { defineComponent: defineComponent$1V, ref: ref$t, onMounted: onMounted$e, onBeforeUnmount: onBeforeUnmount$7, computed: computed$y } = await importShared("vue");
var RowAligns = tuple("top", "middle", "bottom", "stretch");
var RowJustify = tuple("start", "end", "center", "space-around", "space-between");
var rowProps = {
  type: PropTypes.oneOf(["flex"]),
  align: PropTypes.oneOf(RowAligns),
  justify: PropTypes.oneOf(RowJustify),
  prefixCls: PropTypes.string,
  gutter: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]).def(0),
  wrap: PropTypes.looseBool
};
var ARow = defineComponent$1V({
  name: "ARow",
  props: rowProps,
  setup: function setup64(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("row", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var token2;
    var screens2 = ref$t({
      xs: true,
      sm: true,
      md: true,
      lg: true,
      xl: true,
      xxl: true
    });
    var supportFlexGap = useFlexGapSupport();
    onMounted$e(function() {
      token2 = responsiveObserve.subscribe(function(screen) {
        var currentGutter = props2.gutter || 0;
        if (!Array.isArray(currentGutter) && _typeof$3(currentGutter) === "object" || Array.isArray(currentGutter) && (_typeof$3(currentGutter[0]) === "object" || _typeof$3(currentGutter[1]) === "object")) {
          screens2.value = screen;
        }
      });
    });
    onBeforeUnmount$7(function() {
      responsiveObserve.unsubscribe(token2);
    });
    var gutter = computed$y(function() {
      var results = [0, 0];
      var _props$gutter = props2.gutter, gutter2 = _props$gutter === void 0 ? 0 : _props$gutter;
      var normalizedGutter = Array.isArray(gutter2) ? gutter2 : [gutter2, 0];
      normalizedGutter.forEach(function(g2, index2) {
        if (_typeof$3(g2) === "object") {
          for (var i2 = 0; i2 < responsiveArray.length; i2++) {
            var breakpoint = responsiveArray[i2];
            if (screens2.value[breakpoint] && g2[breakpoint] !== void 0) {
              results[index2] = g2[breakpoint];
              break;
            }
          }
        } else {
          results[index2] = g2 || 0;
        }
      });
      return results;
    });
    useProvideRow({
      gutter,
      supportFlexGap,
      wrap: computed$y(function() {
        return props2.wrap;
      })
    });
    var classes4 = computed$y(function() {
      var _classNames;
      return classNames(prefixCls2.value, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-no-wrap"), props2.wrap === false), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-").concat(props2.justify), props2.justify), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-").concat(props2.align), props2.align), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _classNames));
    });
    var rowStyle = computed$y(function() {
      var gt = gutter.value;
      var style3 = {};
      var horizontalGutter = gt[0] > 0 ? "".concat(gt[0] / -2, "px") : void 0;
      var verticalGutter = gt[1] > 0 ? "".concat(gt[1] / -2, "px") : void 0;
      if (horizontalGutter) {
        style3.marginLeft = horizontalGutter;
        style3.marginRight = horizontalGutter;
      }
      if (supportFlexGap.value) {
        style3.rowGap = "".concat(gt[1], "px");
      } else if (verticalGutter) {
        style3.marginTop = verticalGutter;
        style3.marginBottom = verticalGutter;
      }
      return style3;
    });
    return function() {
      var _a;
      return _createVNode$3u("div", {
        "class": classes4.value,
        "style": rowStyle.value
      }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
    };
  }
});
const { createVNode: _createVNode$3t } = await importShared("vue");
const { defineComponent: defineComponent$1U, computed: computed$x } = await importShared("vue");
function parseFlex(flex) {
  if (typeof flex === "number") {
    return "".concat(flex, " ").concat(flex, " auto");
  }
  if (/^\d+(\.\d+)?(px|em|rem|%)$/.test(flex)) {
    return "0 0 ".concat(flex);
  }
  return flex;
}
var stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);
var colSize = PropTypes.shape({
  span: stringOrNumber,
  order: stringOrNumber,
  offset: stringOrNumber,
  push: stringOrNumber,
  pull: stringOrNumber
}).loose;
var objectOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number, colSize]);
var colProps = {
  span: stringOrNumber,
  order: stringOrNumber,
  offset: stringOrNumber,
  push: stringOrNumber,
  pull: stringOrNumber,
  xs: objectOrNumber,
  sm: objectOrNumber,
  md: objectOrNumber,
  lg: objectOrNumber,
  xl: objectOrNumber,
  xxl: objectOrNumber,
  prefixCls: PropTypes.string,
  flex: stringOrNumber
};
const Col$1 = defineComponent$1U({
  name: "ACol",
  props: colProps,
  setup: function setup65(props2, _ref) {
    var slots = _ref.slots;
    var _useInjectRow = useInjectRow(), gutter = _useInjectRow.gutter, supportFlexGap = _useInjectRow.supportFlexGap, wrap = _useInjectRow.wrap;
    var _useConfigInject = useConfigInject("col", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var classes4 = computed$x(function() {
      var _classNames;
      var span = props2.span, order = props2.order, offset4 = props2.offset, push2 = props2.push, pull2 = props2.pull;
      var pre = prefixCls2.value;
      var sizeClassObj = {};
      ["xs", "sm", "md", "lg", "xl", "xxl"].forEach(function(size) {
        var _extends2;
        var sizeProps = {};
        var propSize = props2[size];
        if (typeof propSize === "number") {
          sizeProps.span = propSize;
        } else if (_typeof$3(propSize) === "object") {
          sizeProps = propSize || {};
        }
        sizeClassObj = _extends$1(_extends$1({}, sizeClassObj), (_extends2 = {}, _defineProperty$U(_extends2, "".concat(pre, "-").concat(size, "-").concat(sizeProps.span), sizeProps.span !== void 0), _defineProperty$U(_extends2, "".concat(pre, "-").concat(size, "-order-").concat(sizeProps.order), sizeProps.order || sizeProps.order === 0), _defineProperty$U(_extends2, "".concat(pre, "-").concat(size, "-offset-").concat(sizeProps.offset), sizeProps.offset || sizeProps.offset === 0), _defineProperty$U(_extends2, "".concat(pre, "-").concat(size, "-push-").concat(sizeProps.push), sizeProps.push || sizeProps.push === 0), _defineProperty$U(_extends2, "".concat(pre, "-").concat(size, "-pull-").concat(sizeProps.pull), sizeProps.pull || sizeProps.pull === 0), _defineProperty$U(_extends2, "".concat(pre, "-rtl"), direction.value === "rtl"), _extends2));
      });
      return classNames(pre, (_classNames = {}, _defineProperty$U(_classNames, "".concat(pre, "-").concat(span), span !== void 0), _defineProperty$U(_classNames, "".concat(pre, "-order-").concat(order), order), _defineProperty$U(_classNames, "".concat(pre, "-offset-").concat(offset4), offset4), _defineProperty$U(_classNames, "".concat(pre, "-push-").concat(push2), push2), _defineProperty$U(_classNames, "".concat(pre, "-pull-").concat(pull2), pull2), _classNames), sizeClassObj);
    });
    var mergedStyle = computed$x(function() {
      var flex = props2.flex;
      var gutterVal = gutter.value;
      var style3 = {};
      if (gutterVal && gutterVal[0] > 0) {
        var horizontalGutter = "".concat(gutterVal[0] / 2, "px");
        style3.paddingLeft = horizontalGutter;
        style3.paddingRight = horizontalGutter;
      }
      if (gutterVal && gutterVal[1] > 0 && !supportFlexGap.value) {
        var verticalGutter = "".concat(gutterVal[1] / 2, "px");
        style3.paddingTop = verticalGutter;
        style3.paddingBottom = verticalGutter;
      }
      if (flex) {
        style3.flex = parseFlex(flex);
        if (flex === "auto" && wrap.value === false && !style3.minWidth) {
          style3.minWidth = 0;
        }
      }
      return style3;
    });
    return function() {
      var _a;
      return _createVNode$3t("div", {
        "class": classes4.value,
        "style": mergedStyle.value
      }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
    };
  }
});
const index$f = {
  useBreakpoint
};
const Row$1 = withInstall(ARow);
const Col = withInstall(Col$1);
const { createVNode: _createVNode$3s } = await importShared("vue");
const { inject: inject$S, isVNode: isVNode$1, defineComponent: defineComponent$1T } = await importShared("vue");
var TabPane = Tabs.TabPane;
var cardProps = {
  prefixCls: PropTypes.string,
  title: PropTypes.VNodeChild,
  extra: PropTypes.VNodeChild,
  bordered: PropTypes.looseBool.def(true),
  bodyStyle: PropTypes.style,
  headStyle: PropTypes.style,
  loading: PropTypes.looseBool.def(false),
  hoverable: PropTypes.looseBool.def(false),
  type: PropTypes.string,
  size: PropTypes.oneOf(tuple("default", "small")),
  actions: PropTypes.VNodeChild,
  tabList: {
    type: Array
  },
  tabBarExtraContent: PropTypes.VNodeChild,
  activeTabKey: PropTypes.string,
  defaultActiveTabKey: PropTypes.string,
  cover: PropTypes.VNodeChild,
  onTabChange: {
    type: Function
  }
};
var Card = defineComponent$1T({
  name: "ACard",
  mixins: [BaseMixin],
  props: cardProps,
  setup: function setup66() {
    return {
      configProvider: inject$S("configProvider", defaultConfigProvider)
    };
  },
  data: function data17() {
    return {
      widerPadding: false
    };
  },
  methods: {
    getAction: function getAction(actions) {
      var actionList = actions.map(function(action, index2) {
        return isVNode$1(action) && !isEmptyElement(action) || !isVNode$1(action) ? _createVNode$3s("li", {
          "style": {
            width: "".concat(100 / actions.length, "%")
          },
          "key": "action-".concat(index2)
        }, [_createVNode$3s("span", null, [action])]) : null;
      });
      return actionList;
    },
    triggerTabChange: function triggerTabChange(key2) {
      this.$emit("tabChange", key2);
    },
    isContainGrid: function isContainGrid() {
      var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var containGrid;
      obj.forEach(function(element) {
        if (element && isPlainObject(element.type) && element.type.__ANT_CARD_GRID) {
          containGrid = true;
        }
      });
      return containGrid;
    }
  },
  render: function render50() {
    var _classString, _tabsProps;
    var _this$$props = this.$props, customizePrefixCls = _this$$props.prefixCls, _this$$props$headStyl = _this$$props.headStyle, headStyle = _this$$props$headStyl === void 0 ? {} : _this$$props$headStyl, _this$$props$bodyStyl = _this$$props.bodyStyle, bodyStyle = _this$$props$bodyStyl === void 0 ? {} : _this$$props$bodyStyl, loading = _this$$props.loading, _this$$props$bordered = _this$$props.bordered, bordered = _this$$props$bordered === void 0 ? true : _this$$props$bordered, _this$$props$size = _this$$props.size, size = _this$$props$size === void 0 ? "default" : _this$$props$size, type3 = _this$$props.type, tabList = _this$$props.tabList, hoverable = _this$$props.hoverable, activeTabKey = _this$$props.activeTabKey, defaultActiveTabKey = _this$$props.defaultActiveTabKey;
    var $slots = this.$slots;
    var children = getSlot(this);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("card", customizePrefixCls);
    var tabBarExtraContent = getComponent(this, "tabBarExtraContent");
    var classString = (_classString = {}, _defineProperty$U(_classString, "".concat(prefixCls2), true), _defineProperty$U(_classString, "".concat(prefixCls2, "-loading"), loading), _defineProperty$U(_classString, "".concat(prefixCls2, "-bordered"), bordered), _defineProperty$U(_classString, "".concat(prefixCls2, "-hoverable"), !!hoverable), _defineProperty$U(_classString, "".concat(prefixCls2, "-contain-grid"), this.isContainGrid(children)), _defineProperty$U(_classString, "".concat(prefixCls2, "-contain-tabs"), tabList && tabList.length), _defineProperty$U(_classString, "".concat(prefixCls2, "-").concat(size), size !== "default"), _defineProperty$U(_classString, "".concat(prefixCls2, "-type-").concat(type3), !!type3), _classString);
    var loadingBlockStyle = bodyStyle.padding === 0 || bodyStyle.padding === "0px" ? {
      padding: 24
    } : void 0;
    var loadingBlock = _createVNode$3s("div", {
      "class": "".concat(prefixCls2, "-loading-content"),
      "style": loadingBlockStyle
    }, [_createVNode$3s(Row$1, {
      "gutter": 8
    }, {
      default: function _default8() {
        return [_createVNode$3s(Col, {
          "span": 22
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        })];
      }
    }), _createVNode$3s(Row$1, {
      "gutter": 8
    }, {
      default: function _default8() {
        return [_createVNode$3s(Col, {
          "span": 8
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        }), _createVNode$3s(Col, {
          "span": 15
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        })];
      }
    }), _createVNode$3s(Row$1, {
      "gutter": 8
    }, {
      default: function _default8() {
        return [_createVNode$3s(Col, {
          "span": 6
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        }), _createVNode$3s(Col, {
          "span": 18
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        })];
      }
    }), _createVNode$3s(Row$1, {
      "gutter": 8
    }, {
      default: function _default8() {
        return [_createVNode$3s(Col, {
          "span": 13
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        }), _createVNode$3s(Col, {
          "span": 9
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        })];
      }
    }), _createVNode$3s(Row$1, {
      "gutter": 8
    }, {
      default: function _default8() {
        return [_createVNode$3s(Col, {
          "span": 4
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        }), _createVNode$3s(Col, {
          "span": 3
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        }), _createVNode$3s(Col, {
          "span": 16
        }, {
          default: function _default9() {
            return [_createVNode$3s("div", {
              "class": "".concat(prefixCls2, "-loading-block")
            }, null)];
          }
        })];
      }
    })]);
    var hasActiveTabKey = activeTabKey !== void 0;
    var tabsProps = (_tabsProps = {
      size: "large"
    }, _defineProperty$U(_tabsProps, hasActiveTabKey ? "activeKey" : "defaultActiveKey", hasActiveTabKey ? activeTabKey : defaultActiveTabKey), _defineProperty$U(_tabsProps, "tabBarExtraContent", tabBarExtraContent), _defineProperty$U(_tabsProps, "onChange", this.triggerTabChange), _defineProperty$U(_tabsProps, "class", "".concat(prefixCls2, "-head-tabs")), _tabsProps);
    var head;
    var tabs = tabList && tabList.length ? _createVNode$3s(Tabs, tabsProps, {
      default: function _default8() {
        return [tabList.map(function(item) {
          var temp = item.tab, slots = item.slots;
          var name = slots === null || slots === void 0 ? void 0 : slots.tab;
          var tab = temp !== void 0 ? temp : $slots[name] ? $slots[name](item) : null;
          return _createVNode$3s(TabPane, {
            "tab": tab,
            "key": item.key,
            "disabled": item.disabled
          }, null);
        })];
      }
    }) : null;
    var titleDom = getComponent(this, "title");
    var extraDom = getComponent(this, "extra");
    if (titleDom || extraDom || tabs) {
      head = _createVNode$3s("div", {
        "class": "".concat(prefixCls2, "-head"),
        "style": headStyle
      }, [_createVNode$3s("div", {
        "class": "".concat(prefixCls2, "-head-wrapper")
      }, [titleDom && _createVNode$3s("div", {
        "class": "".concat(prefixCls2, "-head-title")
      }, [titleDom]), extraDom && _createVNode$3s("div", {
        "class": "".concat(prefixCls2, "-extra")
      }, [extraDom])]), tabs]);
    }
    var cover = getComponent(this, "cover");
    var coverDom = cover ? _createVNode$3s("div", {
      "class": "".concat(prefixCls2, "-cover")
    }, [cover]) : null;
    var body = _createVNode$3s("div", {
      "class": "".concat(prefixCls2, "-body"),
      "style": bodyStyle
    }, [loading ? loadingBlock : children]);
    var actions = getComponent(this, "actions");
    var actionDom = actions && actions.length ? _createVNode$3s("ul", {
      "class": "".concat(prefixCls2, "-actions")
    }, [this.getAction(actions)]) : null;
    return _createVNode$3s("div", {
      "class": classString,
      "ref": "cardContainerRef"
    }, [head, coverDom, children ? body : null, actionDom]);
  }
});
const { createVNode: _createVNode$3r } = await importShared("vue");
const { defineComponent: defineComponent$1S, inject: inject$R } = await importShared("vue");
const Meta = defineComponent$1S({
  name: "ACardMeta",
  props: {
    prefixCls: PropTypes.string,
    title: PropTypes.VNodeChild,
    description: PropTypes.VNodeChild,
    avatar: PropTypes.VNodeChild
  },
  setup: function setup67() {
    return {
      configProvider: inject$R("configProvider", defaultConfigProvider)
    };
  },
  render: function render51() {
    var customizePrefixCls = this.$props.prefixCls;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("card", customizePrefixCls);
    var classString = _defineProperty$U({}, "".concat(prefixCls2, "-meta"), true);
    var avatar = getComponent(this, "avatar");
    var title = getComponent(this, "title");
    var description = getComponent(this, "description");
    var avatarDom = avatar ? _createVNode$3r("div", {
      "class": "".concat(prefixCls2, "-meta-avatar")
    }, [avatar]) : null;
    var titleDom = title ? _createVNode$3r("div", {
      "class": "".concat(prefixCls2, "-meta-title")
    }, [title]) : null;
    var descriptionDom = description ? _createVNode$3r("div", {
      "class": "".concat(prefixCls2, "-meta-description")
    }, [description]) : null;
    var MetaDetail = titleDom || descriptionDom ? _createVNode$3r("div", {
      "class": "".concat(prefixCls2, "-meta-detail")
    }, [titleDom, descriptionDom]) : null;
    return _createVNode$3r("div", {
      "class": classString
    }, [avatarDom, MetaDetail]);
  }
});
const { createVNode: _createVNode$3q } = await importShared("vue");
const { defineComponent: defineComponent$1R, inject: inject$Q } = await importShared("vue");
const Grid = defineComponent$1R({
  name: "ACardGrid",
  __ANT_CARD_GRID: true,
  props: {
    prefixCls: PropTypes.string,
    hoverable: PropTypes.looseBool
  },
  setup: function setup68() {
    return {
      configProvider: inject$Q("configProvider", defaultConfigProvider)
    };
  },
  render: function render52() {
    var _classString;
    var _this$$props = this.$props, customizePrefixCls = _this$$props.prefixCls, _this$$props$hoverabl = _this$$props.hoverable, hoverable = _this$$props$hoverabl === void 0 ? true : _this$$props$hoverabl;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("card", customizePrefixCls);
    var classString = (_classString = {}, _defineProperty$U(_classString, "".concat(prefixCls2, "-grid"), true), _defineProperty$U(_classString, "".concat(prefixCls2, "-grid-hoverable"), hoverable), _classString);
    return _createVNode$3q("div", {
      "class": classString
    }, [getSlot(this)]);
  }
});
Card.Meta = Meta;
Card.Grid = Grid;
Card.install = function(app) {
  app.component(Card.name, Card);
  app.component(Meta.name, Meta);
  app.component(Grid.name, Grid);
  return app;
};
function _classCallCheck(a2, n2) {
  if (!(a2 instanceof n2)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e2, r2) {
  for (var t2 = 0; t2 < r2.length; t2++) {
    var o2 = r2[t2];
    o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, toPropertyKey(o2.key), o2);
  }
}
function _createClass(e2, r2, t2) {
  return r2 && _defineProperties(e2.prototype, r2), Object.defineProperty(e2, "prototype", {
    writable: false
  }), e2;
}
var INFINITY = 1 / 0, MAX_INTEGER = 17976931348623157e292;
function toFinite(value26) {
  if (!value26) {
    return value26 === 0 ? value26 : 0;
  }
  value26 = toNumber(value26);
  if (value26 === INFINITY || value26 === -INFINITY) {
    var sign2 = value26 < 0 ? -1 : 1;
    return sign2 * MAX_INTEGER;
  }
  return value26 === value26 ? value26 : 0;
}
function toInteger(value26) {
  var result = toFinite(value26), remainder = result % 1;
  return result === result ? remainder ? result - remainder : result : 0;
}
function indexOf(array3, value26, fromIndex) {
  var length = array3 == null ? 0 : array3.length;
  if (!length) {
    return -1;
  }
  var index2 = 0;
  return baseIndexOf(array3, value26, index2);
}
var re = /\s+/;
var ClassList = /* @__PURE__ */ function() {
  function ClassList2(el) {
    _classCallCheck(this, ClassList2);
    if (!el || !el.nodeType) {
      throw new Error("A DOM element reference is required");
    }
    this.el = el;
    this.list = el.classList;
  }
  _createClass(ClassList2, [{
    key: "array",
    value: function array3() {
      var className = this.el.getAttribute("class") || "";
      var str = className.replace(/^\s+|\s+$/g, "");
      var arr = str.split(re);
      if ("" === arr[0]) arr.shift();
      return arr;
    }
    /**
     * Add class `name` if not already present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */
  }, {
    key: "add",
    value: function add3(name) {
      if (this.list) {
        this.list.add(name);
        return this;
      }
      var arr = this.array();
      var i2 = indexOf(arr, name);
      if (!~i2) arr.push(name);
      this.el.className = arr.join(" ");
      return this;
    }
    /**
     * Remove class `name` when present, or
     * pass a regular expression to remove
     * any which match.
     *
     * @param {String|RegExp} name
     * @return {ClassList}
     * @api public
     */
  }, {
    key: "remove",
    value: function remove3(name) {
      if ("[object RegExp]" === toString.call(name)) {
        return this._removeMatching(name);
      }
      if (this.list) {
        this.list.remove(name);
        return this;
      }
      var arr = this.array();
      var i2 = indexOf(arr, name);
      if (~i2) arr.splice(i2, 1);
      this.el.className = arr.join(" ");
      return this;
    }
    /**
     * Remove all classes matching `re`.
     *
     * @param {RegExp} re
     * @return {ClassList}
     * @api private
     */
  }, {
    key: "_removeMatching",
    value: function _removeMatching(re2) {
      var arr = this.array();
      for (var i2 = 0; i2 < arr.length; i2++) {
        if (re2.test(arr[i2])) {
          this.remove(arr[i2]);
        }
      }
      return this;
    }
    /**
     * Toggle class `name`, can force state via `force`.
     *
     * For browsers that support classList, but do not support `force` yet,
     * the mistake will be detected and corrected.
     *
     * @param {String} name
     * @param {Boolean} force
     * @return {ClassList}
     * @api public
     */
  }, {
    key: "toggle",
    value: function toggle(name, force) {
      if (this.list) {
        if ("undefined" !== typeof force) {
          if (force !== this.list.toggle(name, force)) {
            this.list.toggle(name);
          }
        } else {
          this.list.toggle(name);
        }
        return this;
      }
      if ("undefined" !== typeof force) {
        if (!force) {
          this.remove(name);
        } else {
          this.add(name);
        }
      } else {
        if (this.has(name)) {
          this.remove(name);
        } else {
          this.add(name);
        }
      }
      return this;
    }
    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @api public
     */
  }, {
    key: "has",
    value: function has(name) {
      return this.list ? this.list.contains(name) : !!~indexOf(this.array(), name);
    }
    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @api public
     */
  }, {
    key: "contains",
    value: function contains2(name) {
      return this.has(name);
    }
  }]);
  return ClassList2;
}();
function classes3(el) {
  return new ClassList(el);
}
var isCssAnimationSupported = TransitionEvents.endEvents.length !== 0;
var capitalPrefixes = [
  "Webkit",
  "Moz",
  "O",
  // ms is special .... !
  "ms"
];
var prefixes = ["-webkit-", "-moz-", "-o-", "ms-", ""];
function getStyleProperty(node, name) {
  var style3 = window.getComputedStyle(node, null);
  var ret = "";
  for (var i2 = 0; i2 < prefixes.length; i2++) {
    ret = style3.getPropertyValue(prefixes[i2] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}
function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, "transition-delay")) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, "transition-duration")) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, "animation-delay")) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, "animation-duration")) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
    node.rcEndAnimTimeout = setTimeout(function() {
      node.rcEndAnimTimeout = null;
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1e3 + 200);
  }
}
function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}
var cssAnimation = function cssAnimation2(node, transitionName2, endCallback) {
  var nameIsObj = _typeof$3(transitionName2) === "object";
  var className = nameIsObj ? transitionName2.name : transitionName2;
  var activeClassName = nameIsObj ? transitionName2.active : "".concat(transitionName2, "-active");
  var end = endCallback;
  var start;
  var active;
  var nodeClasses = classes3(node);
  if (endCallback && Object.prototype.toString.call(endCallback) === "[object Object]") {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }
  if (node.rcEndListener) {
    node.rcEndListener();
  }
  node.rcEndListener = function(e2) {
    if (e2 && e2.target !== node) {
      return;
    }
    if (node.rcAnimTimeout) {
      cancelAnimationTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }
    clearBrowserBugTimeout(node);
    nodeClasses.remove(className);
    nodeClasses.remove(activeClassName);
    TransitionEvents.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;
    if (end) {
      end();
    }
  };
  TransitionEvents.addEndEventListener(node, node.rcEndListener);
  if (start) {
    start();
  }
  nodeClasses.add(className);
  node.rcAnimTimeout = requestAnimationTimeout(function() {
    node.rcAnimTimeout = null;
    nodeClasses.add(className);
    nodeClasses.add(activeClassName);
    if (active) {
      requestAnimationTimeout(active, 0);
    }
    fixBrowserByTimeout(node);
  }, 30);
  return {
    stop: function stop2() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};
cssAnimation.style = function(node, style3, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }
  node.rcEndListener = function(e2) {
    if (e2 && e2.target !== node) {
      return;
    }
    if (node.rcAnimTimeout) {
      cancelAnimationTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }
    clearBrowserBugTimeout(node);
    TransitionEvents.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;
    if (callback) {
      callback();
    }
  };
  TransitionEvents.addEndEventListener(node, node.rcEndListener);
  node.rcAnimTimeout = requestAnimationTimeout(function() {
    for (var s2 in style3) {
      if (style3.hasOwnProperty(s2)) {
        node.style[s2] = style3[s2];
      }
    }
    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};
cssAnimation.setTransition = function(node, p, value26) {
  var property2 = p;
  var v2 = value26;
  if (value26 === void 0) {
    v2 = property2;
    property2 = "";
  }
  property2 = property2 || "";
  capitalPrefixes.forEach(function(prefix) {
    node.style["".concat(prefix, "Transition").concat(property2)] = v2;
  });
};
cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
const { nextTick: nextTick$l } = await importShared("vue");
function animate$1(node, show, done) {
  var height;
  var requestAnimationFrameId;
  var appearRequestAnimationFrameId;
  return cssAnimation(node, "ant-motion-collapse-legacy", {
    start: function start() {
      if (appearRequestAnimationFrameId) {
        cancelAnimationFrame(appearRequestAnimationFrameId);
      }
      if (!show) {
        node.style.height = "".concat(node.offsetHeight, "px");
        node.style.opacity = "1";
      } else {
        height = node.offsetHeight;
        if (height === 0) {
          appearRequestAnimationFrameId = requestAnimationFrame(function() {
            height = node.offsetHeight;
            node.style.height = "0px";
            node.style.opacity = "0";
          });
        } else {
          node.style.height = "0px";
          node.style.opacity = "0";
        }
      }
    },
    active: function active() {
      if (requestAnimationFrameId) {
        cancelAnimationFrame(requestAnimationFrameId);
      }
      requestAnimationFrameId = requestAnimationFrame(function() {
        node.style.height = "".concat(show ? height : 0, "px");
        node.style.opacity = show ? "1" : "0";
      });
    },
    end: function end() {
      if (appearRequestAnimationFrameId) {
        cancelAnimationFrame(appearRequestAnimationFrameId);
      }
      if (requestAnimationFrameId) {
        cancelAnimationFrame(requestAnimationFrameId);
      }
      node.style.height = "";
      node.style.opacity = "";
      done && done();
    }
  });
}
var animation$1 = {
  onEnter: function onEnter(node, done) {
    nextTick$l(function() {
      animate$1(node, true, done);
    });
  },
  onLeave: function onLeave(node, done) {
    return animate$1(node, false, done);
  }
};
const { createVNode: _createVNode$3p } = await importShared("vue");
const { defineComponent: defineComponent$1Q } = await importShared("vue");
const PanelContent = defineComponent$1Q({
  name: "PanelContent",
  props: {
    prefixCls: PropTypes.string,
    isActive: PropTypes.looseBool,
    destroyInactivePanel: PropTypes.looseBool,
    forceRender: PropTypes.looseBool,
    role: PropTypes.any
  },
  data: function data18() {
    return {
      _isActive: void 0
    };
  },
  render: function render53() {
    var _contentCls;
    this._isActive = this.forceRender || this._isActive || this.isActive;
    if (!this._isActive) {
      return null;
    }
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, isActive = _this$$props.isActive, destroyInactivePanel = _this$$props.destroyInactivePanel, forceRender = _this$$props.forceRender, role = _this$$props.role;
    var contentCls = (_contentCls = {}, _defineProperty$U(_contentCls, "".concat(prefixCls2, "-content"), true), _defineProperty$U(_contentCls, "".concat(prefixCls2, "-content-active"), isActive), _contentCls);
    var child = !forceRender && !isActive && destroyInactivePanel ? null : _createVNode$3p("div", {
      "class": "".concat(prefixCls2, "-content-box")
    }, [getSlot(this)]);
    return _createVNode$3p("div", {
      "class": contentCls,
      "role": role
    }, [child]);
  }
});
var collapseProps$1 = function collapseProps() {
  return {
    prefixCls: PropTypes.string,
    activeKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),
    defaultActiveKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),
    accordion: PropTypes.looseBool,
    destroyInactivePanel: PropTypes.looseBool,
    bordered: PropTypes.looseBool,
    expandIcon: PropTypes.func,
    openAnimation: PropTypes.object,
    expandIconPosition: PropTypes.oneOf(["left", "right"]),
    onChange: PropTypes.func
  };
};
var panelProps = function panelProps2() {
  return {
    openAnimation: PropTypes.object,
    prefixCls: PropTypes.string,
    header: PropTypes.any,
    headerClass: PropTypes.string,
    showArrow: PropTypes.looseBool,
    isActive: PropTypes.looseBool,
    destroyInactivePanel: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    accordion: PropTypes.looseBool,
    forceRender: PropTypes.looseBool,
    expandIcon: PropTypes.func,
    extra: PropTypes.any,
    panelKey: PropTypes.any
  };
};
const { withDirectives: _withDirectives$1, vShow: _vShow$1, createVNode: _createVNode$3o } = await importShared("vue");
const { defineComponent: defineComponent$1P } = await importShared("vue");
const CollapsePanel$1 = defineComponent$1P({
  name: "Panel",
  mixins: [BaseMixin],
  props: initDefaultProps$1(panelProps(), {
    showArrow: true,
    isActive: false,
    destroyInactivePanel: false,
    headerClass: "",
    forceRender: false
  }),
  methods: {
    handleItemClick: function handleItemClick() {
      this.__emit("itemClick", this.panelKey);
    },
    handleKeyPress: function handleKeyPress(e2) {
      if (e2.key === "Enter" || e2.keyCode === 13 || e2.which === 13) {
        this.handleItemClick();
      }
    }
  },
  render: function render54() {
    var _headerCls, _itemCls, _this = this;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, headerClass = _this$$props.headerClass, isActive = _this$$props.isActive, showArrow = _this$$props.showArrow, destroyInactivePanel = _this$$props.destroyInactivePanel, disabled = _this$$props.disabled, openAnimation2 = _this$$props.openAnimation, accordion = _this$$props.accordion, forceRender = _this$$props.forceRender, expandIcon = _this$$props.expandIcon, extra = _this$$props.extra;
    var transitionProps = _extends$1({
      appear: true,
      css: false
    }, openAnimation2);
    var headerCls = (_headerCls = {}, _defineProperty$U(_headerCls, "".concat(prefixCls2, "-header"), true), _defineProperty$U(_headerCls, headerClass, headerClass), _headerCls);
    var header = getComponent(this, "header");
    var itemCls = (_itemCls = {}, _defineProperty$U(_itemCls, "".concat(prefixCls2, "-item"), true), _defineProperty$U(_itemCls, "".concat(prefixCls2, "-item-active"), isActive), _defineProperty$U(_itemCls, "".concat(prefixCls2, "-item-disabled"), disabled), _itemCls);
    var icon = _createVNode$3o("i", {
      "class": "arrow"
    }, null);
    if (showArrow && typeof expandIcon === "function") {
      icon = expandIcon(this.$props);
    }
    var panelContent = _withDirectives$1(_createVNode$3o(PanelContent, {
      "prefixCls": prefixCls2,
      "isActive": isActive,
      "destroyInactivePanel": destroyInactivePanel,
      "forceRender": forceRender,
      "role": accordion ? "tabpanel" : null
    }, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    }), [[_vShow$1, isActive]]);
    return _createVNode$3o("div", {
      "class": itemCls,
      "role": "tablist"
    }, [_createVNode$3o("div", {
      "class": headerCls,
      "onClick": this.handleItemClick,
      "onKeypress": this.handleKeyPress,
      "role": accordion ? "tab" : "button",
      "tabindex": disabled ? -1 : 0,
      "aria-expanded": isActive
    }, [showArrow && icon, header, extra && _createVNode$3o("div", {
      "class": "".concat(prefixCls2, "-extra")
    }, [extra])]), _createVNode$3o(Transition, transitionProps, {
      default: function _default8() {
        return [panelContent];
      }
    })]);
  }
});
function animate(node, show, transitionName2, done) {
  var height;
  return cssAnimation(node, transitionName2, {
    start: function start() {
      if (!show) {
        node.style.height = "".concat(node.offsetHeight, "px");
      } else {
        height = node.offsetHeight;
        node.style.height = 0;
      }
    },
    active: function active() {
      node.style.height = "".concat(show ? height : 0, "px");
    },
    end: function end() {
      node.style.height = "";
      done();
    }
  });
}
function animation(prefixCls2) {
  return {
    onEnter: function onEnter2(node, done) {
      return animate(node, true, "".concat(prefixCls2, "-anim"), done);
    },
    onLeave: function onLeave2(node, done) {
      return animate(node, false, "".concat(prefixCls2, "-anim"), done);
    }
  };
}
const { createVNode: _createVNode$3n } = await importShared("vue");
const { defineComponent: defineComponent$1O } = await importShared("vue");
function _toArray(activeKey2) {
  var currentActiveKey = activeKey2;
  if (!Array.isArray(currentActiveKey)) {
    var activeKeyType = _typeof$3(currentActiveKey);
    currentActiveKey = activeKeyType === "number" || activeKeyType === "string" ? [currentActiveKey] : [];
  }
  return currentActiveKey.map(function(key2) {
    return String(key2);
  });
}
const Collapse$1 = defineComponent$1O({
  name: "Collapse",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(collapseProps$1(), {
    prefixCls: "rc-collapse",
    accordion: false,
    destroyInactivePanel: false
  }),
  data: function data19() {
    var _this$$props = this.$props, activeKey2 = _this$$props.activeKey, defaultActiveKey = _this$$props.defaultActiveKey, openAnimation2 = _this$$props.openAnimation, prefixCls2 = _this$$props.prefixCls;
    var currentActiveKey = defaultActiveKey;
    if (hasProp(this, "activeKey")) {
      currentActiveKey = activeKey2;
    }
    var currentOpenAnimations = openAnimation2 || animation(prefixCls2);
    return {
      currentOpenAnimations,
      stateActiveKey: _toArray(currentActiveKey)
    };
  },
  watch: {
    activeKey: function activeKey(val) {
      this.setState({
        stateActiveKey: _toArray(val)
      });
    },
    openAnimation: function openAnimation(val) {
      this.setState({
        currentOpenAnimations: val
      });
    }
  },
  methods: {
    onClickItem: function onClickItem(key2) {
      var activeKey2 = this.stateActiveKey;
      if (this.accordion) {
        activeKey2 = activeKey2[0] === key2 ? [] : [key2];
      } else {
        activeKey2 = _toConsumableArray(activeKey2);
        var index2 = activeKey2.indexOf(key2);
        var isActive = index2 > -1;
        if (isActive) {
          activeKey2.splice(index2, 1);
        } else {
          activeKey2.push(key2);
        }
      }
      this.setActiveKey(activeKey2);
    },
    getNewChild: function getNewChild(child, index2) {
      var _a;
      if (isEmptyElement(child)) return;
      var activeKey2 = this.stateActiveKey;
      var _this$$props2 = this.$props, prefixCls2 = _this$$props2.prefixCls, accordion = _this$$props2.accordion, destroyInactivePanel = _this$$props2.destroyInactivePanel, expandIcon = _this$$props2.expandIcon;
      var key2 = String((_a = child.key) !== null && _a !== void 0 ? _a : index2);
      var _getPropsData = getPropsData(child), header = _getPropsData.header, headerClass = _getPropsData.headerClass, disabled = _getPropsData.disabled;
      var isActive = false;
      if (accordion) {
        isActive = activeKey2[0] === key2;
      } else {
        isActive = activeKey2.indexOf(key2) > -1;
      }
      var panelEvents = {};
      if (!disabled && disabled !== "") {
        panelEvents = {
          onItemClick: this.onClickItem
        };
      }
      var props2 = _extends$1({
        key: key2,
        panelKey: key2,
        header,
        headerClass,
        isActive,
        prefixCls: prefixCls2,
        destroyInactivePanel,
        openAnimation: this.currentOpenAnimations,
        accordion,
        expandIcon
      }, panelEvents);
      return cloneElement(child, props2);
    },
    getItems: function getItems() {
      var _this = this;
      var newChildren = [];
      var children = getSlot(this);
      children && children.forEach(function(child, index2) {
        newChildren.push(_this.getNewChild(child, index2));
      });
      return newChildren;
    },
    setActiveKey: function setActiveKey2(activeKey2) {
      if (!hasProp(this, "activeKey")) {
        this.setState({
          stateActiveKey: activeKey2
        });
      }
      this.__emit("change", this.accordion ? activeKey2[0] : activeKey2);
    }
  },
  render: function render55() {
    var _collapseClassName;
    var _this$$props3 = this.$props, prefixCls2 = _this$$props3.prefixCls, accordion = _this$$props3.accordion;
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    var collapseClassName = (_collapseClassName = {}, _defineProperty$U(_collapseClassName, prefixCls2, true), _defineProperty$U(_collapseClassName, className, className), _collapseClassName);
    return _createVNode$3n("div", _objectSpread2$2(_objectSpread2$2({
      "class": collapseClassName
    }, getDataAndAriaProps$1(this.$attrs)), {}, {
      "style": style3,
      "role": accordion ? "tablist" : null
    }), [this.getItems()]);
  }
});
Collapse$1.Panel = CollapsePanel$1;
const { createVNode: _createVNode$3m } = await importShared("vue");
var __rest$A = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1N, inject: inject$P } = await importShared("vue");
var collapseProps2 = {
  prefixCls: PropTypes.string,
  activeKey: {
    type: [Array, Number, String]
  },
  defaultActiveKey: {
    type: [Array, Number, String]
  },
  accordion: PropTypes.looseBool,
  destroyInactivePanel: PropTypes.looseBool,
  bordered: PropTypes.looseBool.def(true),
  expandIcon: PropTypes.func,
  openAnimation: PropTypes.object.def(animation$1),
  expandIconPosition: PropTypes.oneOf(tuple("left", "right")).def("left"),
  "onUpdate:activeKey": PropTypes.func,
  onChange: PropTypes.func
};
const Collapse = defineComponent$1N({
  name: "ACollapse",
  inheritAttrs: false,
  props: collapseProps2,
  setup: function setup69() {
    return {
      configProvider: inject$P("configProvider", defaultConfigProvider)
    };
  },
  methods: {
    renderExpandIcon: function renderExpandIcon() {
      var panelProps3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var prefixCls2 = arguments.length > 1 ? arguments[1] : void 0;
      var expandIcon = getComponent(this, "expandIcon", panelProps3);
      var icon = expandIcon || _createVNode$3m(RightOutlined, {
        "rotate": panelProps3.isActive ? 90 : void 0
      }, null);
      return isValidElement(Array.isArray(expandIcon) ? icon[0] : icon) ? cloneElement(icon, {
        class: "".concat(prefixCls2, "-arrow")
      }) : icon;
    },
    handleChange: function handleChange7(activeKey2) {
      this.$emit("update:activeKey", activeKey2);
      this.$emit("change", activeKey2);
    }
  },
  render: function render56() {
    var _collapseClassName, _this = this;
    var customizePrefixCls = this.prefixCls, bordered = this.bordered, expandIconPosition = this.expandIconPosition;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("collapse", customizePrefixCls);
    var _a = this.$attrs, className = _a.class, restAttrs = __rest$A(_a, ["class"]);
    var collapseClassName = (_collapseClassName = {}, _defineProperty$U(_collapseClassName, className, className), _defineProperty$U(_collapseClassName, "".concat(prefixCls2, "-borderless"), !bordered), _defineProperty$U(_collapseClassName, "".concat(prefixCls2, "-icon-position-").concat(expandIconPosition), true), _collapseClassName);
    var rcCollapeProps = _extends$1(_extends$1(_extends$1(_extends$1({}, getOptionProps(this)), {
      prefixCls: prefixCls2,
      expandIcon: function expandIcon(panelProps3) {
        return _this.renderExpandIcon(panelProps3, prefixCls2);
      },
      class: collapseClassName
    }), restAttrs), {
      onChange: this.handleChange
    });
    return _createVNode$3m(Collapse$1, rcCollapeProps, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
const { createVNode: _createVNode$3l } = await importShared("vue");
var __rest$z = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1M, inject: inject$O } = await importShared("vue");
var collapsePanelProps = {
  openAnimation: PropTypes.object,
  prefixCls: PropTypes.string,
  header: PropTypes.VNodeChild,
  headerClass: PropTypes.string,
  showArrow: PropTypes.looseBool,
  isActive: PropTypes.looseBool,
  destroyInactivePanel: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  accordion: PropTypes.looseBool,
  forceRender: PropTypes.looseBool,
  expandIcon: PropTypes.func,
  extra: PropTypes.VNodeChild,
  panelKey: PropTypes.VNodeChild
};
const CollapsePanel = defineComponent$1M({
  name: "ACollapsePanel",
  inheritAttrs: false,
  props: collapsePanelProps,
  setup: function setup70() {
    return {
      configProvider: inject$O("configProvider", defaultConfigProvider)
    };
  },
  render: function render57() {
    var _collapsePanelClassNa, _this = this;
    var customizePrefixCls = this.prefixCls, _this$showArrow = this.showArrow, showArrow = _this$showArrow === void 0 ? true : _this$showArrow;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("collapse", customizePrefixCls);
    var _a = this.$attrs, className = _a.class, restAttrs = __rest$z(_a, ["class"]);
    var collapsePanelClassName = (_collapsePanelClassNa = {}, _defineProperty$U(_collapsePanelClassNa, className, className), _defineProperty$U(_collapsePanelClassNa, "".concat(prefixCls2, "-no-arrow"), !showArrow), _collapsePanelClassNa);
    var rcCollapePanelProps = _extends$1(_extends$1(_extends$1({}, getOptionProps(this)), {
      header: getComponent(this, "header"),
      prefixCls: prefixCls2,
      extra: getComponent(this, "extra"),
      class: collapsePanelClassName
    }), restAttrs);
    return _createVNode$3l(Collapse$1.Panel, rcCollapePanelProps, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
Collapse.Panel = CollapsePanel;
Collapse.install = function(app) {
  app.component(Collapse.name, Collapse);
  app.component(CollapsePanel.name, CollapsePanel);
  return app;
};
var camel2hyphen = function camel2hyphen2(str) {
  return str.replace(/[A-Z]/g, function(match5) {
    return "-" + match5.toLowerCase();
  }).toLowerCase();
};
var isDimension = function isDimension2(feature) {
  var re2 = /[height|width]$/;
  return re2.test(feature);
};
var obj2mq = function obj2mq2(obj) {
  var mq = "";
  var features = Object.keys(obj);
  features.forEach(function(feature, index2) {
    var value26 = obj[feature];
    feature = camel2hyphen(feature);
    if (isDimension(feature) && typeof value26 === "number") {
      value26 = value26 + "px";
    }
    if (value26 === true) {
      mq += feature;
    } else if (value26 === false) {
      mq += "not " + feature;
    } else {
      mq += "(" + feature + ": " + value26 + ")";
    }
    if (index2 < features.length - 1) {
      mq += " and ";
    }
  });
  return mq;
};
function json2mq(query) {
  var mq = "";
  if (typeof query === "string") {
    return query;
  }
  if (query instanceof Array) {
    query.forEach(function(q2, index2) {
      mq += obj2mq(q2);
      if (index2 < query.length - 1) {
        mq += ", ";
      }
    });
    return mq;
  }
  return obj2mq(query);
}
var defaultProps$2 = {
  accessibility: PropTypes.looseBool.def(true),
  // 自定义高度
  adaptiveHeight: PropTypes.looseBool.def(false),
  afterChange: PropTypes.any.def(null),
  arrows: PropTypes.looseBool.def(true),
  autoplay: PropTypes.looseBool.def(false),
  autoplaySpeed: PropTypes.number.def(3e3),
  beforeChange: PropTypes.any.def(null),
  centerMode: PropTypes.looseBool.def(false),
  centerPadding: PropTypes.string.def("50px"),
  cssEase: PropTypes.string.def("ease"),
  dots: PropTypes.looseBool.def(false),
  dotsClass: PropTypes.string.def("slick-dots"),
  draggable: PropTypes.looseBool.def(true),
  unslick: PropTypes.looseBool.def(false),
  easing: PropTypes.string.def("linear"),
  edgeFriction: PropTypes.number.def(0.35),
  fade: PropTypes.looseBool.def(false),
  focusOnSelect: PropTypes.looseBool.def(false),
  infinite: PropTypes.looseBool.def(true),
  initialSlide: PropTypes.number.def(0),
  lazyLoad: PropTypes.any.def(null),
  verticalSwiping: PropTypes.looseBool.def(false),
  asNavFor: PropTypes.any.def(null),
  // 圆点hover是否暂停
  pauseOnDotsHover: PropTypes.looseBool.def(false),
  // focus是否暂停
  pauseOnFocus: PropTypes.looseBool.def(false),
  // hover是否暂停
  pauseOnHover: PropTypes.looseBool.def(true),
  responsive: PropTypes.array,
  rows: PropTypes.number.def(1),
  rtl: PropTypes.looseBool.def(false),
  slide: PropTypes.string.def("div"),
  slidesPerRow: PropTypes.number.def(1),
  slidesToScroll: PropTypes.number.def(1),
  slidesToShow: PropTypes.number.def(1),
  speed: PropTypes.number.def(500),
  swipe: PropTypes.looseBool.def(true),
  swipeEvent: PropTypes.any.def(null),
  swipeToSlide: PropTypes.looseBool.def(false),
  touchMove: PropTypes.looseBool.def(true),
  touchThreshold: PropTypes.number.def(5),
  useCSS: PropTypes.looseBool.def(true),
  useTransform: PropTypes.looseBool.def(true),
  variableWidth: PropTypes.looseBool.def(false),
  vertical: PropTypes.looseBool.def(false),
  waitForAnimate: PropTypes.looseBool.def(true),
  children: PropTypes.array,
  __propsSymbol__: PropTypes.any
};
var initialState = {
  animating: false,
  autoplaying: null,
  currentDirection: 0,
  currentLeft: null,
  currentSlide: 0,
  direction: 1,
  dragging: false,
  edgeDragged: false,
  initialized: false,
  lazyLoadedList: [],
  listHeight: null,
  listWidth: null,
  scrolling: false,
  slideCount: null,
  slideHeight: null,
  slideWidth: null,
  swipeLeft: null,
  swiped: false,
  swiping: false,
  touchObject: {
    startX: 0,
    startY: 0,
    curX: 0,
    curY: 0
  },
  trackStyle: {},
  trackWidth: 0
};
var getOnDemandLazySlides = function getOnDemandLazySlides2(spec) {
  var onDemandSlides = [];
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);
  for (var slideIndex = startIndex; slideIndex < endIndex; slideIndex++) {
    if (spec.lazyLoadedList.indexOf(slideIndex) < 0) {
      onDemandSlides.push(slideIndex);
    }
  }
  return onDemandSlides;
};
var lazyStartIndex = function lazyStartIndex2(spec) {
  return spec.currentSlide - lazySlidesOnLeft(spec);
};
var lazyEndIndex = function lazyEndIndex2(spec) {
  return spec.currentSlide + lazySlidesOnRight(spec);
};
var lazySlidesOnLeft = function lazySlidesOnLeft2(spec) {
  return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;
};
var lazySlidesOnRight = function lazySlidesOnRight2(spec) {
  return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;
};
var getWidth = function getWidth2(elem) {
  return elem && elem.offsetWidth || 0;
};
var getHeight = function getHeight2(elem) {
  return elem && elem.offsetHeight || 0;
};
var getSwipeDirection = function getSwipeDirection2(touchObject) {
  var verticalSwiping = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var swipeAngle;
  var xDist = touchObject.startX - touchObject.curX;
  var yDist = touchObject.startY - touchObject.curY;
  var r2 = Math.atan2(yDist, xDist);
  swipeAngle = Math.round(r2 * 180 / Math.PI);
  if (swipeAngle < 0) {
    swipeAngle = 360 - Math.abs(swipeAngle);
  }
  if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
    return "left";
  }
  if (swipeAngle >= 135 && swipeAngle <= 225) {
    return "right";
  }
  if (verticalSwiping === true) {
    if (swipeAngle >= 35 && swipeAngle <= 135) {
      return "up";
    } else {
      return "down";
    }
  }
  return "vertical";
};
var canGoNext = function canGoNext2(spec) {
  var canGo = true;
  if (!spec.infinite) {
    if (spec.centerMode && spec.currentSlide >= spec.slideCount - 1) {
      canGo = false;
    } else if (spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) {
      canGo = false;
    }
  }
  return canGo;
};
var extractObject = function extractObject2(spec, keys2) {
  var newObject = {};
  keys2.forEach(function(key2) {
    return newObject[key2] = spec[key2];
  });
  return newObject;
};
var initializedState = function initializedState2(spec) {
  var slideCount = spec.children.length;
  var listWidth = Math.ceil(getWidth(spec.listRef));
  var trackWidth = Math.ceil(getWidth(spec.trackRef));
  var slideWidth;
  if (!spec.vertical) {
    var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;
    if (typeof spec.centerPadding === "string" && spec.centerPadding.slice(-1) === "%") {
      centerPaddingAdj *= listWidth / 100;
    }
    slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);
  } else {
    slideWidth = listWidth;
  }
  var slideHeight = spec.listRef && getHeight(spec.listRef.querySelector('[data-index="0"]'));
  var listHeight = slideHeight * spec.slidesToShow;
  var currentSlide = spec.currentSlide === void 0 ? spec.initialSlide : spec.currentSlide;
  if (spec.rtl && spec.currentSlide === void 0) {
    currentSlide = slideCount - 1 - spec.initialSlide;
  }
  var lazyLoadedList = spec.lazyLoadedList || [];
  var slidesToLoad = getOnDemandLazySlides({
    currentSlide,
    lazyLoadedList
  });
  lazyLoadedList.concat(slidesToLoad);
  var state = {
    slideCount,
    slideWidth,
    listWidth,
    trackWidth,
    currentSlide,
    slideHeight,
    listHeight,
    lazyLoadedList
  };
  if (spec.autoplaying === null && spec.autoplay) {
    state["autoplaying"] = "playing";
  }
  return state;
};
var slideHandler = function slideHandler2(spec) {
  var waitForAnimate = spec.waitForAnimate, animating = spec.animating, fade = spec.fade, infinite = spec.infinite, index2 = spec.index, slideCount = spec.slideCount, lazyLoadedList = spec.lazyLoadedList, lazyLoad = spec.lazyLoad, currentSlide = spec.currentSlide, centerMode = spec.centerMode, slidesToScroll = spec.slidesToScroll, slidesToShow = spec.slidesToShow, useCSS = spec.useCSS;
  if (waitForAnimate && animating) return {};
  var animationSlide = index2;
  var finalSlide;
  var animationLeft;
  var finalLeft;
  var state = {};
  var nextState = {};
  if (fade) {
    if (!infinite && (index2 < 0 || index2 >= slideCount)) return {};
    if (index2 < 0) {
      animationSlide = index2 + slideCount;
    } else if (index2 >= slideCount) {
      animationSlide = index2 - slideCount;
    }
    if (lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0) {
      lazyLoadedList.push(animationSlide);
    }
    state = {
      animating: true,
      currentSlide: animationSlide,
      lazyLoadedList
    };
    nextState = {
      animating: false
    };
  } else {
    finalSlide = animationSlide;
    if (animationSlide < 0) {
      finalSlide = animationSlide + slideCount;
      if (!infinite) finalSlide = 0;
      else if (slideCount % slidesToScroll !== 0) {
        finalSlide = slideCount - slideCount % slidesToScroll;
      }
    } else if (!canGoNext(spec) && animationSlide > currentSlide) {
      animationSlide = finalSlide = currentSlide;
    } else if (centerMode && animationSlide >= slideCount) {
      animationSlide = infinite ? slideCount : slideCount - 1;
      finalSlide = infinite ? 0 : slideCount - 1;
    } else if (animationSlide >= slideCount) {
      finalSlide = animationSlide - slideCount;
      if (!infinite) finalSlide = slideCount - slidesToShow;
      else if (slideCount % slidesToScroll !== 0) finalSlide = 0;
    }
    animationLeft = getTrackLeft(_extends$1(_extends$1({}, spec), {
      slideIndex: animationSlide
    }));
    finalLeft = getTrackLeft(_extends$1(_extends$1({}, spec), {
      slideIndex: finalSlide
    }));
    if (!infinite) {
      if (animationLeft === finalLeft) animationSlide = finalSlide;
      animationLeft = finalLeft;
    }
    lazyLoad && lazyLoadedList.concat(getOnDemandLazySlides(_extends$1(_extends$1({}, spec), {
      currentSlide: animationSlide
    })));
    if (!useCSS) {
      state = {
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_extends$1(_extends$1({}, spec), {
          left: finalLeft
        })),
        lazyLoadedList
      };
    } else {
      state = {
        animating: true,
        currentSlide: finalSlide,
        trackStyle: getTrackAnimateCSS(_extends$1(_extends$1({}, spec), {
          left: animationLeft
        })),
        lazyLoadedList
      };
      nextState = {
        animating: false,
        currentSlide: finalSlide,
        trackStyle: getTrackCSS(_extends$1(_extends$1({}, spec), {
          left: finalLeft
        })),
        swipeLeft: null
      };
    }
  }
  return {
    state,
    nextState
  };
};
var changeSlide = function changeSlide2(spec, options2) {
  var previousInt, slideOffset, targetSlide;
  var slidesToScroll = spec.slidesToScroll, slidesToShow = spec.slidesToShow, slideCount = spec.slideCount, currentSlide = spec.currentSlide, lazyLoad = spec.lazyLoad, infinite = spec.infinite;
  var unevenOffset = slideCount % slidesToScroll !== 0;
  var indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll;
  if (options2.message === "previous") {
    slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset;
    targetSlide = currentSlide - slideOffset;
    if (lazyLoad && !infinite) {
      previousInt = currentSlide - slideOffset;
      targetSlide = previousInt === -1 ? slideCount - 1 : previousInt;
    }
  } else if (options2.message === "next") {
    slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset;
    targetSlide = currentSlide + slideOffset;
    if (lazyLoad && !infinite) {
      targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset;
    }
  } else if (options2.message === "dots") {
    targetSlide = options2.index * options2.slidesToScroll;
    if (targetSlide === options2.currentSlide) {
      return null;
    }
  } else if (options2.message === "children") {
    targetSlide = options2.index;
    if (targetSlide === options2.currentSlide) {
      return null;
    }
    if (infinite) {
      var direction = siblingDirection(_extends$1(_extends$1({}, spec), {
        targetSlide
      }));
      if (targetSlide > options2.currentSlide && direction === "left") {
        targetSlide = targetSlide - slideCount;
      } else if (targetSlide < options2.currentSlide && direction === "right") {
        targetSlide = targetSlide + slideCount;
      }
    }
  } else if (options2.message === "index") {
    targetSlide = Number(options2.index);
    if (targetSlide === options2.currentSlide) {
      return null;
    }
  }
  return targetSlide;
};
var keyHandler = function keyHandler2(e2, accessibility, rtl) {
  if (e2.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility) {
    return "";
  }
  if (e2.keyCode === 37) return rtl ? "next" : "previous";
  if (e2.keyCode === 39) return rtl ? "previous" : "next";
  return "";
};
var swipeStart = function swipeStart2(e2, swipe, draggable) {
  e2.target.tagName === "IMG" && e2.preventDefault();
  if (!swipe || !draggable && e2.type.indexOf("mouse") !== -1) return "";
  return {
    dragging: true,
    touchObject: {
      startX: e2.touches ? e2.touches[0].pageX : e2.clientX,
      startY: e2.touches ? e2.touches[0].pageY : e2.clientY,
      curX: e2.touches ? e2.touches[0].pageX : e2.clientX,
      curY: e2.touches ? e2.touches[0].pageY : e2.clientY
    }
  };
};
var swipeMove = function swipeMove2(e2, spec) {
  var scrolling = spec.scrolling, animating = spec.animating, vertical = spec.vertical, swipeToSlide = spec.swipeToSlide, verticalSwiping = spec.verticalSwiping, rtl = spec.rtl, currentSlide = spec.currentSlide, edgeFriction = spec.edgeFriction, edgeDragged = spec.edgeDragged, onEdge = spec.onEdge, swiped = spec.swiped, swiping = spec.swiping, slideCount = spec.slideCount, slidesToScroll = spec.slidesToScroll, infinite = spec.infinite, touchObject = spec.touchObject, swipeEvent = spec.swipeEvent, listHeight = spec.listHeight, listWidth = spec.listWidth;
  if (scrolling) return;
  if (animating) return e2.preventDefault();
  if (vertical && swipeToSlide && verticalSwiping) e2.preventDefault();
  var swipeLeft;
  var state = {};
  var curLeft = getTrackLeft(spec);
  touchObject.curX = e2.touches ? e2.touches[0].pageX : e2.clientX;
  touchObject.curY = e2.touches ? e2.touches[0].pageY : e2.clientY;
  touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
  var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
  if (!verticalSwiping && !swiping && verticalSwipeLength > 10) {
    return {
      scrolling: true
    };
  }
  if (verticalSwiping) touchObject.swipeLength = verticalSwipeLength;
  var positionOffset = (!rtl ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);
  if (verticalSwiping) {
    positionOffset = touchObject.curY > touchObject.startY ? 1 : -1;
  }
  var dotCount = Math.ceil(slideCount / slidesToScroll);
  var swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping);
  var touchSwipeLength = touchObject.swipeLength;
  if (!infinite) {
    if (currentSlide === 0 && swipeDirection === "right" || currentSlide + 1 >= dotCount && swipeDirection === "left" || !canGoNext(spec) && swipeDirection === "left") {
      touchSwipeLength = touchObject.swipeLength * edgeFriction;
      if (edgeDragged === false && onEdge) {
        onEdge(swipeDirection);
        state["edgeDragged"] = true;
      }
    }
  }
  if (!swiped && swipeEvent) {
    swipeEvent(swipeDirection);
    state["swiped"] = true;
  }
  if (!vertical) {
    if (!rtl) {
      swipeLeft = curLeft + touchSwipeLength * positionOffset;
    } else {
      swipeLeft = curLeft - touchSwipeLength * positionOffset;
    }
  } else {
    swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset;
  }
  if (verticalSwiping) {
    swipeLeft = curLeft + touchSwipeLength * positionOffset;
  }
  state = _extends$1(_extends$1({}, state), {
    touchObject,
    swipeLeft,
    trackStyle: getTrackCSS(_extends$1(_extends$1({}, spec), {
      left: swipeLeft
    }))
  });
  if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
    return state;
  }
  if (touchObject.swipeLength > 10) {
    state["swiping"] = true;
    e2.preventDefault();
  }
  return state;
};
var swipeEnd = function swipeEnd2(e2, spec) {
  var dragging = spec.dragging, swipe = spec.swipe, touchObject = spec.touchObject, listWidth = spec.listWidth, touchThreshold = spec.touchThreshold, verticalSwiping = spec.verticalSwiping, listHeight = spec.listHeight, currentSlide = spec.currentSlide, swipeToSlide = spec.swipeToSlide, scrolling = spec.scrolling, onSwipe = spec.onSwipe;
  if (!dragging) {
    if (swipe) e2.preventDefault();
    return {};
  }
  var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold;
  var swipeDirection = getSwipeDirection(touchObject, verticalSwiping);
  var state = {
    dragging: false,
    edgeDragged: false,
    scrolling: false,
    swiping: false,
    swiped: false,
    swipeLeft: null,
    touchObject: {}
  };
  if (scrolling) {
    return state;
  }
  if (!touchObject.swipeLength) {
    return state;
  }
  if (touchObject.swipeLength > minSwipe) {
    e2.preventDefault();
    if (onSwipe) {
      onSwipe(swipeDirection);
    }
    var slideCount, newSlide;
    switch (swipeDirection) {
      case "left":
      case "up":
        newSlide = currentSlide + getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 0;
        break;
      case "right":
      case "down":
        newSlide = currentSlide - getSlideCount(spec);
        slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide;
        state["currentDirection"] = 1;
        break;
      default:
        slideCount = currentSlide;
    }
    state["triggerSlideHandler"] = slideCount;
  } else {
    var currentLeft = getTrackLeft(spec);
    state["trackStyle"] = getTrackAnimateCSS(_extends$1(_extends$1({}, spec), {
      left: currentLeft
    }));
  }
  return state;
};
var getNavigableIndexes = function getNavigableIndexes2(spec) {
  var max4 = spec.infinite ? spec.slideCount * 2 : spec.slideCount;
  var breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0;
  var counter = spec.infinite ? spec.slidesToShow * -1 : 0;
  var indexes = [];
  while (breakpoint < max4) {
    indexes.push(breakpoint);
    breakpoint = counter + spec.slidesToScroll;
    counter += Math.min(spec.slidesToScroll, spec.slidesToShow);
  }
  return indexes;
};
var checkNavigable = function checkNavigable2(spec, index2) {
  var navigables = getNavigableIndexes(spec);
  var prevNavigable = 0;
  if (index2 > navigables[navigables.length - 1]) {
    index2 = navigables[navigables.length - 1];
  } else {
    for (var n2 in navigables) {
      if (index2 < navigables[n2]) {
        index2 = prevNavigable;
        break;
      }
      prevNavigable = navigables[n2];
    }
  }
  return index2;
};
var getSlideCount = function getSlideCount2(spec) {
  var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;
  if (spec.swipeToSlide) {
    var swipedSlide;
    var slickList = spec.listRef;
    var slides = slickList.querySelectorAll(".slick-slide");
    Array.from(slides).every(function(slide) {
      if (!spec.vertical) {
        if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      } else {
        if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1) {
          swipedSlide = slide;
          return false;
        }
      }
      return true;
    });
    if (!swipedSlide) {
      return 0;
    }
    var currentIndex = spec.rtl === true ? spec.slideCount - spec.currentSlide : spec.currentSlide;
    var slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;
    return slidesTraversed;
  } else {
    return spec.slidesToScroll;
  }
};
var checkSpecKeys = function checkSpecKeys2(spec, keysArray) {
  return keysArray.reduce(function(value26, key2) {
    return value26 && spec.hasOwnProperty(key2);
  }, true) ? null : console.error("Keys Missing:", spec);
};
var getTrackCSS = function getTrackCSS2(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
  var trackWidth, trackHeight;
  var trackChildren = spec.slideCount + 2 * spec.slidesToShow;
  if (!spec.vertical) {
    trackWidth = getTotalSlides(spec) * spec.slideWidth;
  } else {
    trackHeight = trackChildren * spec.slideHeight;
  }
  var style3 = {
    opacity: 1,
    transition: "",
    WebkitTransition: ""
  };
  if (spec.useTransform) {
    var WebkitTransform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var transform = !spec.vertical ? "translate3d(" + spec.left + "px, 0px, 0px)" : "translate3d(0px, " + spec.left + "px, 0px)";
    var msTransform = !spec.vertical ? "translateX(" + spec.left + "px)" : "translateY(" + spec.left + "px)";
    style3 = _extends$1(_extends$1({}, style3), {
      WebkitTransform,
      transform,
      msTransform
    });
  } else {
    if (spec.vertical) {
      style3["top"] = spec.left;
    } else {
      style3["left"] = spec.left;
    }
  }
  if (spec.fade) style3 = {
    opacity: 1
  };
  if (trackWidth) style3.width = trackWidth + "px";
  if (trackHeight) style3.height = trackHeight + "px";
  if (window && !window.addEventListener && window.attachEvent) {
    if (!spec.vertical) {
      style3.marginLeft = spec.left + "px";
    } else {
      style3.marginTop = spec.left + "px";
    }
  }
  return style3;
};
var getTrackAnimateCSS = function getTrackAnimateCSS2(spec) {
  checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);
  var style3 = getTrackCSS(spec);
  if (spec.useTransform) {
    style3.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase;
    style3.transition = "transform " + spec.speed + "ms " + spec.cssEase;
  } else {
    if (spec.vertical) {
      style3.transition = "top " + spec.speed + "ms " + spec.cssEase;
    } else {
      style3.transition = "left " + spec.speed + "ms " + spec.cssEase;
    }
  }
  return style3;
};
var getTrackLeft = function getTrackLeft2(spec) {
  if (spec.unslick) {
    return 0;
  }
  checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);
  var slideIndex = spec.slideIndex, trackRef = spec.trackRef, infinite = spec.infinite, centerMode = spec.centerMode, slideCount = spec.slideCount, slidesToShow = spec.slidesToShow, slidesToScroll = spec.slidesToScroll, slideWidth = spec.slideWidth, listWidth = spec.listWidth, variableWidth = spec.variableWidth, slideHeight = spec.slideHeight, fade = spec.fade, vertical = spec.vertical;
  var slideOffset = 0;
  var targetLeft;
  var targetSlide;
  var verticalOffset = 0;
  if (fade || spec.slideCount === 1) {
    return 0;
  }
  var slidesToOffset = 0;
  if (infinite) {
    slidesToOffset = -getPreClones(spec);
    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll);
    }
    if (centerMode) {
      slidesToOffset += parseInt(slidesToShow / 2);
    }
  } else {
    if (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount) {
      slidesToOffset = slidesToShow - slideCount % slidesToScroll;
    }
    if (centerMode) {
      slidesToOffset = parseInt(slidesToShow / 2);
    }
  }
  slideOffset = slidesToOffset * slideWidth;
  verticalOffset = slidesToOffset * slideHeight;
  if (!vertical) {
    targetLeft = slideIndex * slideWidth * -1 + slideOffset;
  } else {
    targetLeft = slideIndex * slideHeight * -1 + verticalOffset;
  }
  if (variableWidth === true) {
    var targetSlideIndex;
    var trackElem = trackRef;
    targetSlideIndex = slideIndex + getPreClones(spec);
    targetSlide = trackElem && trackElem.childNodes[targetSlideIndex];
    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
    if (centerMode === true) {
      targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex;
      targetSlide = trackElem && trackElem.children[targetSlideIndex];
      targetLeft = 0;
      for (var slide = 0; slide < targetSlideIndex; slide++) {
        targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;
      }
      targetLeft -= parseInt(spec.centerPadding);
      targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;
    }
  }
  return targetLeft;
};
var getPreClones = function getPreClones2(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }
  if (spec.variableWidth) {
    return spec.slideCount;
  }
  return spec.slidesToShow + (spec.centerMode ? 1 : 0);
};
var getPostClones = function getPostClones2(spec) {
  if (spec.unslick || !spec.infinite) {
    return 0;
  }
  return spec.slideCount;
};
var getTotalSlides = function getTotalSlides2(spec) {
  return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);
};
var siblingDirection = function siblingDirection2(spec) {
  if (spec.targetSlide > spec.currentSlide) {
    if (spec.targetSlide > spec.currentSlide + slidesOnRight(spec)) {
      return "left";
    }
    return "right";
  } else {
    if (spec.targetSlide < spec.currentSlide - slidesOnLeft(spec)) {
      return "right";
    }
    return "left";
  }
};
var slidesOnRight = function slidesOnRight2(_ref) {
  var slidesToShow = _ref.slidesToShow, centerMode = _ref.centerMode, rtl = _ref.rtl, centerPadding = _ref.centerPadding;
  if (centerMode) {
    var right = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) right += 1;
    if (rtl && slidesToShow % 2 === 0) right += 1;
    return right;
  }
  if (rtl) {
    return 0;
  }
  return slidesToShow - 1;
};
var slidesOnLeft = function slidesOnLeft2(_ref2) {
  var slidesToShow = _ref2.slidesToShow, centerMode = _ref2.centerMode, rtl = _ref2.rtl, centerPadding = _ref2.centerPadding;
  if (centerMode) {
    var left = (slidesToShow - 1) / 2 + 1;
    if (parseInt(centerPadding) > 0) left += 1;
    if (!rtl && slidesToShow % 2 === 0) left += 1;
    return left;
  }
  if (rtl) {
    return slidesToShow - 1;
  }
  return 0;
};
var canUseDOM = function canUseDOM2() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
};
const { createVNode: _createVNode$3k } = await importShared("vue");
const { createVNode: createVNode$2 } = await importShared("vue");
var getSlideClasses = function getSlideClasses2(spec) {
  var slickActive, slickCenter;
  var centerOffset, index2;
  if (spec.rtl) {
    index2 = spec.slideCount - 1 - spec.index;
  } else {
    index2 = spec.index;
  }
  var slickCloned = index2 < 0 || index2 >= spec.slideCount;
  if (spec.centerMode) {
    centerOffset = Math.floor(spec.slidesToShow / 2);
    slickCenter = (index2 - spec.currentSlide) % spec.slideCount === 0;
    if (index2 > spec.currentSlide - centerOffset - 1 && index2 <= spec.currentSlide + centerOffset) {
      slickActive = true;
    }
  } else {
    slickActive = spec.currentSlide <= index2 && index2 < spec.currentSlide + spec.slidesToShow;
  }
  var slickCurrent = index2 === spec.currentSlide;
  return {
    "slick-slide": true,
    "slick-active": slickActive,
    "slick-center": slickCenter,
    "slick-cloned": slickCloned,
    "slick-current": slickCurrent
    // dubious in case of RTL
  };
};
var getSlideStyle = function getSlideStyle2(spec) {
  var style3 = {};
  if (spec.variableWidth === void 0 || spec.variableWidth === false) {
    style3.width = spec.slideWidth + (typeof spec.slideWidth === "number" ? "px" : "");
  }
  if (spec.fade) {
    style3.position = "relative";
    if (spec.vertical) {
      style3.top = -spec.index * parseInt(spec.slideHeight) + "px";
    } else {
      style3.left = -spec.index * parseInt(spec.slideWidth) + "px";
    }
    style3.opacity = spec.currentSlide === spec.index ? 1 : 0;
    style3.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", visibility " + spec.speed + "ms " + spec.cssEase;
    style3.WebkitTransition = "opacity " + spec.speed + "ms " + spec.cssEase + ", visibility " + spec.speed + "ms " + spec.cssEase;
  }
  return style3;
};
var getKey2 = function getKey3(child, fallbackKey) {
  return child.key || child.key === 0 && "0" || fallbackKey;
};
var renderSlides = function renderSlides2(spec, children) {
  var key2;
  var slides = [];
  var preCloneSlides = [];
  var postCloneSlides = [];
  var childrenCount = children.length;
  var startIndex = lazyStartIndex(spec);
  var endIndex = lazyEndIndex(spec);
  children.forEach(function(elem, index2) {
    var child;
    var childOnClickOptions = {
      message: "children",
      index: index2,
      slidesToScroll: spec.slidesToScroll,
      currentSlide: spec.currentSlide
    };
    if (!spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index2) >= 0) {
      child = elem;
    } else {
      child = createVNode$2("div");
    }
    var childStyle = getSlideStyle(_extends$1(_extends$1({}, spec), {
      index: index2
    }));
    var slideClass = child.props.class || "";
    var slideClasses = getSlideClasses(_extends$1(_extends$1({}, spec), {
      index: index2
    }));
    slides.push(cloneElement(child, {
      key: "original" + getKey2(child, index2),
      tabindex: "-1",
      "data-index": index2,
      "aria-hidden": !slideClasses["slick-active"],
      class: classNames(slideClasses, slideClass),
      style: _extends$1(_extends$1({
        outline: "none"
      }, child.props.style || {}), childStyle),
      onClick: function onClick7() {
        if (spec.focusOnSelect) {
          spec.focusOnSelect(childOnClickOptions);
        }
      }
    }));
    if (spec.infinite && spec.fade === false) {
      var preCloneNo = childrenCount - index2;
      if (preCloneNo <= getPreClones(spec) && childrenCount !== spec.slidesToShow) {
        key2 = -preCloneNo;
        if (key2 >= startIndex) {
          child = elem;
        }
        slideClasses = getSlideClasses(_extends$1(_extends$1({}, spec), {
          index: key2
        }));
        preCloneSlides.push(cloneElement(child, {
          key: "precloned" + getKey2(child, key2),
          class: classNames(slideClasses, slideClass),
          tabindex: "-1",
          "data-index": key2,
          "aria-hidden": !slideClasses["slick-active"],
          style: _extends$1(_extends$1({}, child.props.style || {}), childStyle),
          onClick: function onClick7() {
            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }
      if (childrenCount !== spec.slidesToShow) {
        key2 = childrenCount + index2;
        if (key2 < endIndex) {
          child = elem;
        }
        slideClasses = getSlideClasses(_extends$1(_extends$1({}, spec), {
          index: key2
        }));
        postCloneSlides.push(cloneElement(child, {
          key: "postcloned" + getKey2(child, key2),
          tabindex: "-1",
          "data-index": key2,
          "aria-hidden": !slideClasses["slick-active"],
          class: classNames(slideClasses, slideClass),
          style: _extends$1(_extends$1({}, child.props.style || {}), childStyle),
          onClick: function onClick7() {
            if (spec.focusOnSelect) {
              spec.focusOnSelect(childOnClickOptions);
            }
          }
        }));
      }
    }
  });
  if (spec.rtl) {
    return preCloneSlides.concat(slides, postCloneSlides).reverse();
  } else {
    return preCloneSlides.concat(slides, postCloneSlides);
  }
};
var Track$1 = function Track(_2, _ref) {
  var attrs = _ref.attrs, slots = _ref.slots;
  var slides = renderSlides(attrs, flattenChildren(slots === null || slots === void 0 ? void 0 : slots.default()));
  var onMouseenter2 = attrs.onMouseenter, onMouseover = attrs.onMouseover, onMouseleave2 = attrs.onMouseleave;
  var mouseEvents = {
    onMouseenter: onMouseenter2,
    onMouseover,
    onMouseleave: onMouseleave2
  };
  var trackProps = _extends$1({
    class: "slick-track",
    style: attrs.trackStyle
  }, mouseEvents);
  return _createVNode$3k("div", trackProps, [slides]);
};
Track$1.inheritAttrs = false;
const { createVNode: _createVNode$3j } = await importShared("vue");
var getDotCount = function getDotCount2(spec) {
  var dots;
  if (spec.infinite) {
    dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
  } else {
    dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1;
  }
  return dots;
};
var Dots = function Dots2(_2, _ref) {
  var attrs = _ref.attrs;
  var slideCount = attrs.slideCount, slidesToScroll = attrs.slidesToScroll, slidesToShow = attrs.slidesToShow, infinite = attrs.infinite, currentSlide = attrs.currentSlide, appendDots2 = attrs.appendDots, customPaging2 = attrs.customPaging, clickHandler2 = attrs.clickHandler, dotsClass = attrs.dotsClass, onMouseenter2 = attrs.onMouseenter, onMouseover = attrs.onMouseover, onMouseleave2 = attrs.onMouseleave;
  var dotCount = getDotCount({
    slideCount,
    slidesToScroll,
    slidesToShow,
    infinite
  });
  var mouseEvents = {
    onMouseenter: onMouseenter2,
    onMouseover,
    onMouseleave: onMouseleave2
  };
  var dots = Array.apply(null, Array(dotCount + 1).join("0").split("")).map(function(x2, i2) {
    var leftBound = i2 * slidesToScroll;
    var rightBound = i2 * slidesToScroll + (slidesToScroll - 1);
    var className = classNames({
      "slick-active": currentSlide >= leftBound && currentSlide <= rightBound
    });
    var dotOptions = {
      message: "dots",
      index: i2,
      slidesToScroll,
      currentSlide
    };
    function onClick7(e2) {
      if (e2) {
        e2.preventDefault();
      }
      clickHandler2(dotOptions);
    }
    return _createVNode$3j("li", {
      "key": i2,
      "class": className
    }, [cloneElement(customPaging2({
      i: i2
    }), {
      onClick: onClick7
    })]);
  });
  return cloneElement(appendDots2({
    dots
  }), _extends$1({
    class: dotsClass
  }, mouseEvents));
};
Dots.inheritAttrs = false;
const { createVNode: _createVNode$3i, createTextVNode: _createTextVNode$7 } = await importShared("vue");
function noop$x() {
}
function handler2(options2, handle, e2) {
  if (e2) {
    e2.preventDefault();
  }
  handle(options2, e2);
}
var PrevArrow = function PrevArrow2(_2, _ref) {
  var attrs = _ref.attrs;
  var clickHandler2 = attrs.clickHandler, infinite = attrs.infinite, currentSlide = attrs.currentSlide, slideCount = attrs.slideCount, slidesToShow = attrs.slidesToShow;
  var prevClasses = {
    "slick-arrow": true,
    "slick-prev": true
  };
  var prevHandler = function prevHandler2(e2) {
    handler2({
      message: "previous"
    }, clickHandler2, e2);
  };
  if (!infinite && (currentSlide === 0 || slideCount <= slidesToShow)) {
    prevClasses["slick-disabled"] = true;
    prevHandler = noop$x;
  }
  var prevArrowProps = {
    key: "0",
    "data-role": "none",
    class: prevClasses,
    style: {
      display: "block"
    },
    onClick: prevHandler
  };
  var customProps = {
    currentSlide,
    slideCount
  };
  var prevArrow;
  if (attrs.prevArrow) {
    prevArrow = cloneElement(attrs.prevArrow(_extends$1(_extends$1({}, prevArrowProps), customProps)), {
      key: "0",
      class: prevClasses,
      style: {
        display: "block"
      },
      onClick: prevHandler
    }, false);
  } else {
    prevArrow = _createVNode$3i("button", _objectSpread2$2({
      "key": "0",
      "type": "button"
    }, prevArrowProps), [" ", _createTextVNode$7("Previous")]);
  }
  return prevArrow;
};
PrevArrow.inheritAttrs = false;
var NextArrow = function NextArrow2(_2, _ref2) {
  var attrs = _ref2.attrs;
  var clickHandler2 = attrs.clickHandler, currentSlide = attrs.currentSlide, slideCount = attrs.slideCount;
  var nextClasses = {
    "slick-arrow": true,
    "slick-next": true
  };
  var nextHandler = function nextHandler2(e2) {
    handler2({
      message: "next"
    }, clickHandler2, e2);
  };
  if (!canGoNext(attrs)) {
    nextClasses["slick-disabled"] = true;
    nextHandler = noop$x;
  }
  var nextArrowProps = {
    key: "1",
    "data-role": "none",
    class: classNames(nextClasses),
    style: {
      display: "block"
    },
    onClick: nextHandler
  };
  var customProps = {
    currentSlide,
    slideCount
  };
  var nextArrow;
  if (attrs.nextArrow) {
    nextArrow = cloneElement(attrs.nextArrow(_extends$1(_extends$1({}, nextArrowProps), customProps)), {
      key: "1",
      class: classNames(nextClasses),
      style: {
        display: "block"
      },
      onClick: nextHandler
    }, false);
  } else {
    nextArrow = _createVNode$3i("button", _objectSpread2$2({
      "key": "1",
      "type": "button"
    }, nextArrowProps), [" ", _createTextVNode$7("Next")]);
  }
  return nextArrow;
};
NextArrow.inheritAttrs = false;
const { createVNode: _createVNode$3h } = await importShared("vue");
var __rest$y = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
function noop$w() {
}
const InnerSlider = {
  name: "InnerSlider",
  inheritAttrs: false,
  props: _extends$1({}, defaultProps$2),
  mixins: [BaseMixin],
  data: function data20() {
    this.preProps = _extends$1({}, this.$props);
    this.list = null;
    this.track = null;
    this.callbackTimers = [];
    this.clickable = true;
    this.debouncedResize = null;
    return _extends$1(_extends$1({}, initialState), {
      currentSlide: this.initialSlide,
      slideCount: this.children.length
    });
  },
  methods: {
    listRefHandler: function listRefHandler(ref2) {
      this.list = ref2;
    },
    trackRefHandler: function trackRefHandler(ref2) {
      this.track = ref2;
    },
    adaptHeight: function adaptHeight() {
      if (this.adaptiveHeight && this.list) {
        var elem = this.list.querySelector('[data-index="'.concat(this.currentSlide, '"]'));
        this.list.style.height = getHeight(elem) + "px";
      }
    },
    onWindowResized: function onWindowResized(setTrackStyle) {
      var _this = this;
      if (this.debouncedResize) this.debouncedResize.cancel();
      this.debouncedResize = debounce$1(function() {
        return _this.resizeWindow(setTrackStyle);
      }, 50);
      this.debouncedResize();
    },
    resizeWindow: function resizeWindow() {
      var _this2 = this;
      var setTrackStyle = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      if (!this.track) return;
      var spec = _extends$1(_extends$1({
        listRef: this.list,
        trackRef: this.track,
        children: this.children
      }, this.$props), this.$data);
      this.updateState(spec, setTrackStyle, function() {
        if (_this2.autoplay) {
          _this2.handleAutoPlay("update");
        } else {
          _this2.pause("paused");
        }
      });
      this.setState({
        animating: false
      });
      clearTimeout(this.animationEndCallback);
      delete this.animationEndCallback;
    },
    updateState: function updateState(spec, setTrackStyle, callback) {
      var updatedState = initializedState(spec);
      spec = _extends$1(_extends$1(_extends$1({}, spec), updatedState), {
        slideIndex: updatedState.currentSlide
      });
      var targetLeft = getTrackLeft(spec);
      spec = _extends$1(_extends$1({}, spec), {
        left: targetLeft
      });
      var trackStyle = getTrackCSS(spec);
      if (setTrackStyle || this.children.length !== spec.children.length) {
        updatedState["trackStyle"] = trackStyle;
      }
      this.setState(updatedState, callback);
    },
    ssrInit: function ssrInit() {
      var children = this.children;
      if (this.variableWidth) {
        var _trackWidth = 0;
        var _trackLeft = 0;
        var childrenWidths = [];
        var preClones = getPreClones(_extends$1(_extends$1(_extends$1({}, this.$props), this.$data), {
          slideCount: children.length
        }));
        var postClones = getPostClones(_extends$1(_extends$1(_extends$1({}, this.$props), this.$data), {
          slideCount: children.length
        }));
        children.forEach(function(child) {
          var _a, _b;
          var childWidth = ((_b = (_a = child.props.style) === null || _a === void 0 ? void 0 : _a.width) === null || _b === void 0 ? void 0 : _b.split("px")[0]) || 0;
          childrenWidths.push(childWidth);
          _trackWidth += childWidth;
        });
        for (var i2 = 0; i2 < preClones; i2++) {
          _trackLeft += childrenWidths[childrenWidths.length - 1 - i2];
          _trackWidth += childrenWidths[childrenWidths.length - 1 - i2];
        }
        for (var _i = 0; _i < postClones; _i++) {
          _trackWidth += childrenWidths[_i];
        }
        for (var _i2 = 0; _i2 < this.currentSlide; _i2++) {
          _trackLeft += childrenWidths[_i2];
        }
        var _trackStyle = {
          width: _trackWidth + "px",
          left: -_trackLeft + "px"
        };
        if (this.centerMode) {
          var currentWidth = "".concat(childrenWidths[this.currentSlide], "px");
          _trackStyle.left = "calc(".concat(_trackStyle.left, " + (100% - ").concat(currentWidth, ") / 2 ) ");
        }
        this.setState({
          trackStyle: _trackStyle
        });
        return;
      }
      var childrenCount = children.length;
      var spec = _extends$1(_extends$1(_extends$1({}, this.$props), this.$data), {
        slideCount: childrenCount
      });
      var slideCount = getPreClones(spec) + getPostClones(spec) + childrenCount;
      var trackWidth = 100 / this.slidesToShow * slideCount;
      var slideWidth = 100 / slideCount;
      var trackLeft = -slideWidth * (getPreClones(spec) + this.currentSlide) * trackWidth / 100;
      if (this.centerMode) {
        trackLeft += (100 - slideWidth * trackWidth / 100) / 2;
      }
      var trackStyle = {
        width: trackWidth + "%",
        left: trackLeft + "%"
      };
      this.setState({
        slideWidth: slideWidth + "%",
        trackStyle
      });
    },
    checkImagesLoad: function checkImagesLoad() {
      var _this3 = this;
      var images = document.querySelectorAll(".slick-slide img");
      var imagesCount = images.length;
      var loadedCount = 0;
      Array.prototype.forEach.call(images, function(image) {
        var handler8 = function handler9() {
          return ++loadedCount && loadedCount >= imagesCount && _this3.onWindowResized();
        };
        if (!image.onclick) {
          image.onclick = function() {
            return image.parentNode.focus();
          };
        } else {
          var prevClickHandler = image.onclick;
          image.onclick = function() {
            prevClickHandler();
            image.parentNode.focus();
          };
        }
        if (!image.onload) {
          if (_this3.$props.lazyLoad) {
            image.onload = function() {
              _this3.adaptHeight();
              _this3.callbackTimers.push(setTimeout(_this3.onWindowResized, _this3.speed));
            };
          } else {
            image.onload = handler8;
            image.onerror = function() {
              handler8();
              _this3.__emit("lazyLoadError");
            };
          }
        }
      });
    },
    progressiveLazyLoad: function progressiveLazyLoad() {
      var slidesToLoad = [];
      var spec = _extends$1(_extends$1({}, this.$props), this.$data);
      for (var index2 = this.currentSlide; index2 < this.slideCount + getPostClones(spec); index2++) {
        if (this.lazyLoadedList.indexOf(index2) < 0) {
          slidesToLoad.push(index2);
          break;
        }
      }
      for (var _index = this.currentSlide - 1; _index >= -getPreClones(spec); _index--) {
        if (this.lazyLoadedList.indexOf(_index) < 0) {
          slidesToLoad.push(_index);
          break;
        }
      }
      if (slidesToLoad.length > 0) {
        this.setState(function(state) {
          return {
            lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)
          };
        });
        this.__emit("lazyLoad", slidesToLoad);
      } else {
        if (this.lazyLoadTimer) {
          clearInterval(this.lazyLoadTimer);
          delete this.lazyLoadTimer;
        }
      }
    },
    slideHandler: function slideHandler$1(index2) {
      var _this4 = this;
      var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var _this$$props = this.$props, asNavFor = _this$$props.asNavFor, currentSlide = _this$$props.currentSlide, beforeChange = _this$$props.beforeChange, speed = _this$$props.speed, afterChange = _this$$props.afterChange;
      var _slideHandler2 = slideHandler(_extends$1(_extends$1(_extends$1({
        index: index2
      }, this.$props), this.$data), {
        trackRef: this.track,
        useCSS: this.useCSS && !dontAnimate
      })), state = _slideHandler2.state, nextState = _slideHandler2.nextState;
      if (!state) return;
      beforeChange && beforeChange(currentSlide, state.currentSlide);
      var slidesToLoad = state.lazyLoadedList.filter(function(value26) {
        return _this4.lazyLoadedList.indexOf(value26) < 0;
      });
      if (this.$attrs.onLazyLoad && slidesToLoad.length > 0) {
        this.__emit("lazyLoad", slidesToLoad);
      }
      this.setState(state, function() {
        asNavFor && asNavFor.innerSlider.currentSlide !== currentSlide && asNavFor.innerSlider.slideHandler(index2);
        if (!nextState) return;
        _this4.animationEndCallback = setTimeout(function() {
          var animating = nextState.animating, firstBatch = __rest$y(nextState, ["animating"]);
          _this4.setState(firstBatch, function() {
            _this4.callbackTimers.push(setTimeout(function() {
              return _this4.setState({
                animating
              });
            }, 10));
            afterChange && afterChange(state.currentSlide);
            delete _this4.animationEndCallback;
          });
        }, speed);
      });
    },
    changeSlide: function changeSlide$1(options2) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var spec = _extends$1(_extends$1({}, this.$props), this.$data);
      var targetSlide = changeSlide(spec, options2);
      if (targetSlide !== 0 && !targetSlide) return;
      if (dontAnimate === true) {
        this.slideHandler(targetSlide, dontAnimate);
      } else {
        this.slideHandler(targetSlide);
      }
    },
    clickHandler: function clickHandler(e2) {
      if (this.clickable === false) {
        e2.stopPropagation();
        e2.preventDefault();
      }
      this.clickable = true;
    },
    keyHandler: function keyHandler$1(e2) {
      var dir = keyHandler(e2, this.accessibility, this.rtl);
      dir !== "" && this.changeSlide({
        message: dir
      });
    },
    selectHandler: function selectHandler(options2) {
      this.changeSlide(options2);
    },
    disableBodyScroll: function disableBodyScroll() {
      var preventDefault2 = function preventDefault3(e2) {
        e2 = e2 || window.event;
        if (e2.preventDefault) e2.preventDefault();
        e2.returnValue = false;
      };
      window.ontouchmove = preventDefault2;
    },
    enableBodyScroll: function enableBodyScroll() {
      window.ontouchmove = null;
    },
    swipeStart: function swipeStart$1(e2) {
      if (this.verticalSwiping) {
        this.disableBodyScroll();
      }
      var state = swipeStart(e2, this.swipe, this.draggable);
      state !== "" && this.setState(state);
    },
    swipeMove: function swipeMove$1(e2) {
      var state = swipeMove(e2, _extends$1(_extends$1(_extends$1({}, this.$props), this.$data), {
        trackRef: this.track,
        listRef: this.list,
        slideIndex: this.currentSlide
      }));
      if (!state) return;
      if (state["swiping"]) {
        this.clickable = false;
      }
      this.setState(state);
    },
    swipeEnd: function swipeEnd$1(e2) {
      var state = swipeEnd(e2, _extends$1(_extends$1(_extends$1({}, this.$props), this.$data), {
        trackRef: this.track,
        listRef: this.list,
        slideIndex: this.currentSlide
      }));
      if (!state) return;
      var triggerSlideHandler = state["triggerSlideHandler"];
      delete state["triggerSlideHandler"];
      this.setState(state);
      if (triggerSlideHandler === void 0) return;
      this.slideHandler(triggerSlideHandler);
      if (this.$props.verticalSwiping) {
        this.enableBodyScroll();
      }
    },
    slickPrev: function slickPrev() {
      var _this5 = this;
      this.callbackTimers.push(setTimeout(function() {
        return _this5.changeSlide({
          message: "previous"
        });
      }, 0));
    },
    slickNext: function slickNext() {
      var _this6 = this;
      this.callbackTimers.push(setTimeout(function() {
        return _this6.changeSlide({
          message: "next"
        });
      }, 0));
    },
    slickGoTo: function slickGoTo(slide) {
      var _this7 = this;
      var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      slide = Number(slide);
      if (isNaN(slide)) return "";
      this.callbackTimers.push(setTimeout(function() {
        return _this7.changeSlide({
          message: "index",
          index: slide,
          currentSlide: _this7.currentSlide
        }, dontAnimate);
      }, 0));
    },
    play: function play() {
      var nextIndex;
      if (this.rtl) {
        nextIndex = this.currentSlide - this.slidesToScroll;
      } else {
        if (canGoNext(_extends$1(_extends$1({}, this.$props), this.$data))) {
          nextIndex = this.currentSlide + this.slidesToScroll;
        } else {
          return false;
        }
      }
      this.slideHandler(nextIndex);
    },
    handleAutoPlay: function handleAutoPlay(playType) {
      if (this.autoplayTimer) {
        clearInterval(this.autoplayTimer);
      }
      var autoplaying = this.autoplaying;
      if (playType === "update") {
        if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused") {
          return;
        }
      } else if (playType === "leave") {
        if (autoplaying === "paused" || autoplaying === "focused") {
          return;
        }
      } else if (playType === "blur") {
        if (autoplaying === "paused" || autoplaying === "hovered") {
          return;
        }
      }
      this.autoplayTimer = setInterval(this.play, this.autoplaySpeed + 50);
      this.setState({
        autoplaying: "playing"
      });
    },
    pause: function pause(pauseType) {
      if (this.autoplayTimer) {
        clearInterval(this.autoplayTimer);
        this.autoplayTimer = null;
      }
      var autoplaying = this.autoplaying;
      if (pauseType === "paused") {
        this.setState({
          autoplaying: "paused"
        });
      } else if (pauseType === "focused") {
        if (autoplaying === "hovered" || autoplaying === "playing") {
          this.setState({
            autoplaying: "focused"
          });
        }
      } else {
        if (autoplaying === "playing") {
          this.setState({
            autoplaying: "hovered"
          });
        }
      }
    },
    onDotsOver: function onDotsOver() {
      this.autoplay && this.pause("hovered");
    },
    onDotsLeave: function onDotsLeave() {
      this.autoplay && this.autoplaying === "hovered" && this.handleAutoPlay("leave");
    },
    onTrackOver: function onTrackOver() {
      this.autoplay && this.pause("hovered");
    },
    onTrackLeave: function onTrackLeave() {
      this.autoplay && this.autoplaying === "hovered" && this.handleAutoPlay("leave");
    },
    onSlideFocus: function onSlideFocus() {
      this.autoplay && this.pause("focused");
    },
    onSlideBlur: function onSlideBlur() {
      this.autoplay && this.autoplaying === "focused" && this.handleAutoPlay("blur");
    },
    customPaging: function customPaging(_ref) {
      var i2 = _ref.i;
      return _createVNode$3h("button", null, [i2 + 1]);
    },
    appendDots: function appendDots(_ref2) {
      var dots = _ref2.dots;
      return _createVNode$3h("ul", {
        "style": {
          display: "block"
        }
      }, [dots]);
    }
  },
  beforeMount: function beforeMount() {
    this.ssrInit();
    this.__emit("init");
    if (this.lazyLoad) {
      var slidesToLoad = getOnDemandLazySlides(_extends$1(_extends$1({}, this.$props), this.$data));
      if (slidesToLoad.length > 0) {
        this.setState(function(prevState) {
          return {
            lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
          };
        });
        this.__emit("lazyLoad", slidesToLoad);
      }
    }
  },
  mounted: function mounted12() {
    var _this8 = this;
    this.$nextTick(function() {
      var spec = _extends$1({
        listRef: _this8.list,
        trackRef: _this8.track,
        children: _this8.children
      }, _this8.$props);
      _this8.updateState(spec, true, function() {
        _this8.adaptHeight();
        _this8.autoplay && _this8.handleAutoPlay("update");
      });
      if (_this8.lazyLoad === "progressive") {
        _this8.lazyLoadTimer = setInterval(_this8.progressiveLazyLoad, 1e3);
      }
      _this8.ro = new index$k(function() {
        if (_this8.animating) {
          _this8.onWindowResized(false);
          _this8.callbackTimers.push(setTimeout(function() {
            return _this8.onWindowResized();
          }, _this8.speed));
        } else {
          _this8.onWindowResized();
        }
      });
      _this8.ro.observe(_this8.list);
      Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function(slide) {
        slide.onfocus = _this8.$props.pauseOnFocus ? _this8.onSlideFocus : null;
        slide.onblur = _this8.$props.pauseOnFocus ? _this8.onSlideBlur : null;
      });
      if (!window) {
        return;
      }
      if (window.addEventListener) {
        window.addEventListener("resize", _this8.onWindowResized);
      } else {
        window.attachEvent("onresize", _this8.onWindowResized);
      }
    });
  },
  beforeUnmount: function beforeUnmount9() {
    if (this.animationEndCallback) {
      clearTimeout(this.animationEndCallback);
    }
    if (this.lazyLoadTimer) {
      clearInterval(this.lazyLoadTimer);
    }
    if (this.callbackTimers.length) {
      this.callbackTimers.forEach(function(timer) {
        return clearTimeout(timer);
      });
      this.callbackTimers = [];
    }
    if (window.addEventListener) {
      window.removeEventListener("resize", this.onWindowResized);
    } else {
      window.detachEvent("onresize", this.onWindowResized);
    }
    if (this.autoplayTimer) {
      clearInterval(this.autoplayTimer);
    }
  },
  updated: function updated7() {
    this.checkImagesLoad();
    this.__emit("reInit");
    if (this.lazyLoad) {
      var slidesToLoad = getOnDemandLazySlides(_extends$1(_extends$1({}, this.$props), this.$data));
      if (slidesToLoad.length > 0) {
        this.setState(function(prevState) {
          return {
            lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
          };
        });
        this.__emit("lazyLoad");
      }
    }
    this.adaptHeight();
  },
  watch: {
    __propsSymbol__: function __propsSymbol__() {
      var _this9 = this;
      var nextProps = this.$props;
      var spec = _extends$1(_extends$1({
        listRef: this.list,
        trackRef: this.track
      }, nextProps), this.$data);
      var setTrackStyle = false;
      for (var _i3 = 0, _Object$keys = Object.keys(this.preProps); _i3 < _Object$keys.length; _i3++) {
        var key2 = _Object$keys[_i3];
        if (!nextProps.hasOwnProperty(key2)) {
          setTrackStyle = true;
          break;
        }
        if (_typeof$3(nextProps[key2]) === "object" || typeof nextProps[key2] === "function" || _typeof$3(nextProps[key2]) === "symbol") {
          continue;
        }
        if (nextProps[key2] !== this.preProps[key2]) {
          setTrackStyle = true;
          break;
        }
      }
      this.updateState(spec, setTrackStyle, function() {
        if (_this9.currentSlide >= nextProps.children.length) {
          _this9.changeSlide({
            message: "index",
            index: nextProps.children.length - nextProps.slidesToShow,
            currentSlide: _this9.currentSlide
          });
        }
        if (nextProps.autoplay) {
          _this9.handleAutoPlay("update");
        } else {
          _this9.pause("paused");
        }
      });
      this.preProps = _extends$1({}, nextProps);
    }
  },
  render: function render58() {
    var _listProps, _this10 = this;
    var className = classNames("slick-slider", this.$attrs.class, {
      "slick-vertical": this.vertical,
      "slick-initialized": true
    });
    var spec = _extends$1(_extends$1({}, this.$props), this.$data);
    var trackProps = extractObject(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding"]);
    var pauseOnHover = this.$props.pauseOnHover;
    trackProps = _extends$1(_extends$1({}, trackProps), {
      focusOnSelect: this.focusOnSelect ? this.selectHandler : null,
      ref: this.trackRefHandler,
      onMouseleave: pauseOnHover ? this.onTrackLeave : noop$w,
      onMouseover: pauseOnHover ? this.onTrackOver : noop$w
    });
    var dots;
    if (this.dots === true && this.slideCount >= this.slidesToShow) {
      var dotProps = extractObject(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "infinite", "appendDots"]);
      dotProps.customPaging = this.customPaging;
      dotProps.appendDots = this.appendDots;
      var _this$$slots = this.$slots, customPaging2 = _this$$slots.customPaging, appendDots2 = _this$$slots.appendDots;
      if (customPaging2) {
        dotProps.customPaging = customPaging2;
      }
      if (appendDots2) {
        dotProps.appendDots = appendDots2;
      }
      var pauseOnDotsHover = this.$props.pauseOnDotsHover;
      dotProps = _extends$1(_extends$1({}, dotProps), {
        clickHandler: this.changeSlide,
        onMouseover: pauseOnDotsHover ? this.onDotsOver : noop$w,
        onMouseleave: pauseOnDotsHover ? this.onDotsLeave : noop$w
      });
      dots = _createVNode$3h(Dots, dotProps, null);
    }
    var prevArrow, nextArrow;
    var arrowProps = extractObject(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow"]);
    arrowProps.clickHandler = this.changeSlide;
    var _this$$slots2 = this.$slots, prevArrowCustom = _this$$slots2.prevArrow, nextArrowCustom = _this$$slots2.nextArrow;
    if (prevArrowCustom) {
      arrowProps.prevArrow = prevArrowCustom;
    }
    if (nextArrowCustom) {
      arrowProps.nextArrow = nextArrowCustom;
    }
    if (this.arrows) {
      prevArrow = _createVNode$3h(PrevArrow, arrowProps, null);
      nextArrow = _createVNode$3h(NextArrow, arrowProps, null);
    }
    var verticalHeightStyle = null;
    if (this.vertical) {
      verticalHeightStyle = {
        height: typeof this.listHeight === "number" ? "".concat(this.listHeight, "px") : this.listHeight
      };
    }
    var centerPaddingStyle = null;
    if (this.vertical === false) {
      if (this.centerMode === true) {
        centerPaddingStyle = {
          padding: "0px " + this.centerPadding
        };
      }
    } else {
      if (this.centerMode === true) {
        centerPaddingStyle = {
          padding: this.centerPadding + " 0px"
        };
      }
    }
    var listStyle2 = _extends$1(_extends$1({}, verticalHeightStyle), centerPaddingStyle);
    var touchMove = this.touchMove;
    var listProps2 = (_listProps = {
      ref: this.listRefHandler,
      class: "slick-list",
      style: listStyle2,
      onClick: this.clickHandler,
      onMousedown: touchMove ? this.swipeStart : noop$w,
      onMousemove: this.dragging && touchMove ? this.swipeMove : noop$w,
      onMouseup: touchMove ? this.swipeEnd : noop$w,
      onMouseleave: this.dragging && touchMove ? this.swipeEnd : noop$w
    }, _defineProperty$U(_listProps, supportsPassive ? "onTouchstartPassive" : "onTouchstart", touchMove ? this.swipeStart : noop$w), _defineProperty$U(_listProps, supportsPassive ? "onTouchmovePassive" : "onTouchmove", this.dragging && touchMove ? this.swipeMove : noop$w), _defineProperty$U(_listProps, "onTouchend", touchMove ? this.swipeEnd : noop$w), _defineProperty$U(_listProps, "onTouchcancel", this.dragging && touchMove ? this.swipeEnd : noop$w), _defineProperty$U(_listProps, "onKeydown", this.accessibility ? this.keyHandler : noop$w), _listProps);
    var innerSliderProps = {
      class: className
      // dir: 'ltr',
    };
    if (this.unslick) {
      listProps2 = {
        class: "slick-list",
        ref: this.listRefHandler
      };
      innerSliderProps = {
        class: className
      };
    }
    return _createVNode$3h("div", innerSliderProps, [!this.unslick ? prevArrow : "", _createVNode$3h("div", listProps2, [_createVNode$3h(Track$1, trackProps, {
      default: function _default8() {
        return [_this10.children];
      }
    })]), !this.unslick ? nextArrow : "", !this.unslick ? dots : ""]);
  }
};
const { resolveDirective: _resolveDirective$g, createVNode: _createVNode$3g } = await importShared("vue");
const { defineComponent: defineComponent$1L } = await importShared("vue");
const Slider$2 = defineComponent$1L({
  name: "Slider",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: _extends$1({}, defaultProps$2),
  data: function data21() {
    this._responsiveMediaHandlers = [];
    return {
      breakpoint: null
    };
  },
  // handles responsive breakpoints
  beforeMount: function beforeMount2() {
    var _this = this;
    if (this.responsive) {
      var breakpoints = this.responsive.map(function(breakpt) {
        return breakpt.breakpoint;
      });
      breakpoints.sort(function(x2, y2) {
        return x2 - y2;
      });
      breakpoints.forEach(function(breakpoint, index2) {
        var bQuery;
        if (index2 === 0) {
          bQuery = json2mq({
            minWidth: 0,
            maxWidth: breakpoint
          });
        } else {
          bQuery = json2mq({
            minWidth: breakpoints[index2 - 1] + 1,
            maxWidth: breakpoint
          });
        }
        canUseDOM() && _this.media(bQuery, function() {
          _this.setState({
            breakpoint
          });
        });
      });
      var query = json2mq({
        minWidth: breakpoints.slice(-1)[0]
      });
      canUseDOM() && this.media(query, function() {
        _this.setState({
          breakpoint: null
        });
      });
    }
  },
  beforeUnmount: function beforeUnmount10() {
    this._responsiveMediaHandlers.forEach(function(obj) {
      obj.mql.removeListener(obj.listener);
    });
  },
  methods: {
    innerSliderRefHandler: function innerSliderRefHandler(ref2) {
      this.innerSlider = ref2;
    },
    media: function media(query, handler8) {
      var mql = window.matchMedia(query);
      var listener = function listener2(_ref) {
        var matches = _ref.matches;
        if (matches) {
          handler8();
        }
      };
      mql.addListener(listener);
      listener(mql);
      this._responsiveMediaHandlers.push({
        mql,
        query,
        listener
      });
    },
    slickPrev: function slickPrev2() {
      this.innerSlider.slickPrev();
    },
    slickNext: function slickNext2() {
      this.innerSlider.slickNext();
    },
    slickGoTo: function slickGoTo2(slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      this.innerSlider.slickGoTo(slide, dontAnimate);
    },
    slickPause: function slickPause() {
      this.innerSlider.pause("paused");
    },
    slickPlay: function slickPlay() {
      this.innerSlider.handleAutoPlay("play");
    }
  },
  render: function render59() {
    var _this2 = this;
    var _a;
    var settings;
    var newProps;
    if (this.breakpoint) {
      newProps = this.responsive.filter(function(resp) {
        return resp.breakpoint === _this2.breakpoint;
      });
      settings = newProps[0].settings === "unslick" ? "unslick" : _extends$1(_extends$1({}, this.$props), newProps[0].settings);
    } else {
      settings = _extends$1({}, this.$props);
    }
    if (settings.centerMode) {
      if (settings.slidesToScroll > 1 && false) ;
      settings.slidesToScroll = 1;
    }
    if (settings.fade) {
      if (settings.slidesToShow > 1 && false) ;
      if (settings.slidesToScroll > 1 && false) ;
      settings.slidesToShow = 1;
      settings.slidesToScroll = 1;
    }
    var children = getSlot(this) || [];
    children = children.filter(function(child) {
      if (typeof child === "string") {
        return !!child.trim();
      }
      return !!child;
    });
    if (settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1)) {
      console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");
      settings.variableWidth = false;
    }
    var newChildren = [];
    var currentWidth = null;
    for (var i2 = 0; i2 < children.length; i2 += settings.rows * settings.slidesPerRow) {
      var newSlide = [];
      for (var j2 = i2; j2 < i2 + settings.rows * settings.slidesPerRow; j2 += settings.slidesPerRow) {
        var row = [];
        for (var k2 = j2; k2 < j2 + settings.slidesPerRow; k2 += 1) {
          if (settings.variableWidth && ((_a = children[k2].props) === null || _a === void 0 ? void 0 : _a.style)) {
            currentWidth = children[k2].props.style.width;
          }
          if (k2 >= children.length) break;
          row.push(cloneElement(children[k2], {
            key: 100 * i2 + 10 * j2 + k2,
            tabindex: -1,
            style: {
              width: "".concat(100 / settings.slidesPerRow, "%"),
              display: "inline-block"
            }
          }));
        }
        newSlide.push(_createVNode$3g("div", {
          "key": 10 * i2 + j2
        }, [row]));
      }
      if (settings.variableWidth) {
        newChildren.push(_createVNode$3g("div", {
          "key": i2,
          "style": {
            width: currentWidth
          }
        }, [newSlide]));
      } else {
        newChildren.push(_createVNode$3g("div", {
          "key": i2
        }, [newSlide]));
      }
    }
    if (settings === "unslick") {
      var className = "regular slider " + (this.className || "");
      return _createVNode$3g("div", {
        "class": className
      }, [newChildren]);
    } else if (newChildren.length <= settings.slidesToShow) {
      settings.unslick = true;
    }
    var sliderProps = _extends$1(_extends$1(_extends$1({}, this.$attrs), settings), {
      children: newChildren,
      ref: this.innerSliderRefHandler
    });
    return _createVNode$3g(InnerSlider, _objectSpread2$2(_objectSpread2$2({}, sliderProps), {}, {
      "__propsSymbol__": []
    }), this.$slots);
  }
});
const { createVNode: _createVNode$3f, resolveDirective: _resolveDirective$f } = await importShared("vue");
var __rest$x = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1K, inject: inject$N } = await importShared("vue");
var CarouselProps = {
  effect: PropTypes.oneOf(tuple("scrollx", "fade")),
  dots: PropTypes.looseBool.def(true),
  vertical: PropTypes.looseBool,
  autoplay: PropTypes.looseBool,
  easing: PropTypes.string,
  beforeChange: PropTypes.func,
  afterChange: PropTypes.func,
  // style: PropTypes.React.CSSProperties,
  prefixCls: PropTypes.string,
  accessibility: PropTypes.looseBool,
  nextArrow: PropTypes.VNodeChild,
  prevArrow: PropTypes.VNodeChild,
  pauseOnHover: PropTypes.looseBool,
  // className: PropTypes.string,
  adaptiveHeight: PropTypes.looseBool,
  arrows: PropTypes.looseBool.def(false),
  autoplaySpeed: PropTypes.number,
  centerMode: PropTypes.looseBool,
  centerPadding: PropTypes.string,
  cssEase: PropTypes.string,
  dotsClass: PropTypes.string,
  draggable: PropTypes.looseBool.def(false),
  fade: PropTypes.looseBool,
  focusOnSelect: PropTypes.looseBool,
  infinite: PropTypes.looseBool,
  initialSlide: PropTypes.number,
  lazyLoad: PropTypes.looseBool,
  rtl: PropTypes.looseBool,
  slide: PropTypes.string,
  slidesToShow: PropTypes.number,
  slidesToScroll: PropTypes.number,
  speed: PropTypes.number,
  swipe: PropTypes.looseBool,
  swipeToSlide: PropTypes.looseBool,
  touchMove: PropTypes.looseBool,
  touchThreshold: PropTypes.number,
  variableWidth: PropTypes.looseBool,
  useCSS: PropTypes.looseBool,
  slickGoTo: PropTypes.number,
  responsive: PropTypes.array,
  dotPosition: PropTypes.oneOf(tuple("top", "bottom", "left", "right")),
  verticalSwiping: PropTypes.looseBool.def(false)
};
var Carousel = defineComponent$1K({
  name: "ACarousel",
  inheritAttrs: false,
  props: CarouselProps,
  setup: function setup71() {
    return {
      configProvider: inject$N("configProvider", defaultConfigProvider),
      slick: void 0,
      innerSlider: void 0
    };
  },
  beforeMount: function beforeMount3() {
    this.onWindowResized = debounce$1(this.onWindowResized, 500, {
      leading: false
    });
  },
  mounted: function mounted13() {
    if (hasProp(this, "vertical")) {
      warning$5(!this.vertical, "Carousel", "`vertical` is deprecated, please use `dotPosition` instead.");
    }
    var autoplay = this.autoplay;
    if (autoplay) {
      window.addEventListener("resize", this.onWindowResized);
    }
    this.innerSlider = this.slick && this.slick.innerSlider;
  },
  beforeUnmount: function beforeUnmount11() {
    var autoplay = this.autoplay;
    if (autoplay) {
      window.removeEventListener("resize", this.onWindowResized);
      this.onWindowResized.cancel();
    }
  },
  methods: {
    getDotPosition: function getDotPosition() {
      if (this.dotPosition) {
        return this.dotPosition;
      }
      if (hasProp(this, "vertical")) {
        return this.vertical ? "right" : "bottom";
      }
      return "bottom";
    },
    saveSlick: function saveSlick(node) {
      this.slick = node;
    },
    onWindowResized: function onWindowResized2() {
      var autoplay = this.autoplay;
      if (autoplay && this.slick && this.slick.innerSlider && this.slick.innerSlider.autoPlay) {
        this.slick.innerSlider.autoPlay();
      }
    },
    next: function next() {
      this.slick.slickNext();
    },
    prev: function prev() {
      this.slick.slickPrev();
    },
    goTo: function goTo(slide) {
      var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      this.slick.slickGoTo(slide, dontAnimate);
    }
  },
  render: function render60() {
    var _classNames2;
    var props2 = _extends$1({}, this.$props);
    var $slots = this.$slots;
    if (props2.effect === "fade") {
      props2.fade = true;
    }
    var _a = this.$attrs, cls = _a.class, style3 = _a.style, restAttrs = __rest$x(_a, ["class", "style"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var className = getPrefixCls2("carousel", props2.prefixCls);
    var dotsClass = "slick-dots";
    var dotPosition = this.getDotPosition();
    props2.vertical = dotPosition === "left" || dotPosition === "right";
    props2.dotsClass = classNames("".concat(dotsClass), "".concat(dotsClass, "-").concat(dotPosition || "bottom"), _defineProperty$U({}, "".concat(props2.dotsClass), !!props2.dotsClass));
    className = classNames((_classNames2 = {}, _defineProperty$U(_classNames2, cls, !!cls), _defineProperty$U(_classNames2, className, !!className), _defineProperty$U(_classNames2, "".concat(className, "-vertical"), props2.vertical), _classNames2));
    var SlickCarouselProps = _extends$1(_extends$1(_extends$1({}, props2), restAttrs), {
      nextArrow: getComponent(this, "nextArrow"),
      prevArrow: getComponent(this, "prevArrow")
    });
    return _createVNode$3f("div", {
      "class": className,
      "style": style3
    }, [_createVNode$3f(Slider$2, _objectSpread2$2({
      "ref": this.saveSlick
    }, SlickCarouselProps), $slots)]);
  }
});
const index$e = withInstall(Carousel);
var lib = { exports: {} };
(function(module2, exports2) {
  (function(global2, factory) {
    module2.exports = factory();
  })(commonjsGlobal, function() {
    function arrayTreeFilter2(data79, filterFn, options2) {
      options2 = options2 || {};
      options2.childrenKeyName = options2.childrenKeyName || "children";
      var children = data79 || [];
      var result = [];
      var level2 = 0;
      do {
        var foundItem = children.filter(function(item) {
          return filterFn(item, level2);
        })[0];
        if (!foundItem) {
          break;
        }
        result.push(foundItem);
        children = foundItem[options2.childrenKeyName] || [];
        level2 += 1;
      } while (children.length > 0);
      return result;
    }
    return arrayTreeFilter2;
  });
})(lib);
var libExports = lib.exports;
const arrayTreeFilter = /* @__PURE__ */ getDefaultExportFromCjs(libExports);
function arraySome(array3, predicate) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    if (predicate(array3[index2], index2, array3)) {
      return true;
    }
  }
  return false;
}
var COMPARE_PARTIAL_FLAG$5 = 1, COMPARE_UNORDERED_FLAG$3 = 2;
function equalArrays(array3, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$5, arrLength = array3.length, othLength = other.length;
  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  var arrStacked = stack.get(array3);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array3;
  }
  var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$3 ? new SetCache() : void 0;
  stack.set(array3, other);
  stack.set(other, array3);
  while (++index2 < arrLength) {
    var arrValue = array3[index2], othValue = other[index2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, arrValue, index2, other, array3, stack) : customizer(arrValue, othValue, index2, array3, other, stack);
    }
    if (compared !== void 0) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    if (seen) {
      if (!arraySome(other, function(othValue2, othIndex) {
        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
          return seen.push(othIndex);
        }
      })) {
        result = false;
        break;
      }
    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
      result = false;
      break;
    }
  }
  stack["delete"](array3);
  stack["delete"](other);
  return result;
}
function mapToArray(map2) {
  var index2 = -1, result = Array(map2.size);
  map2.forEach(function(value26, key2) {
    result[++index2] = [key2, value26];
  });
  return result;
}
var COMPARE_PARTIAL_FLAG$4 = 1, COMPARE_UNORDERED_FLAG$2 = 2;
var boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", mapTag = "[object Map]", numberTag$1 = "[object Number]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]";
var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]";
var symbolProto = Symbol$1 ? Symbol$1.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
function equalByTag(object3, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if (object3.byteLength != other.byteLength || object3.byteOffset != other.byteOffset) {
        return false;
      }
      object3 = object3.buffer;
      other = other.buffer;
    case arrayBufferTag:
      if (object3.byteLength != other.byteLength || !equalFunc(new Uint8Array(object3), new Uint8Array(other))) {
        return false;
      }
      return true;
    case boolTag:
    case dateTag:
    case numberTag$1:
      return eq(+object3, +other);
    case errorTag:
      return object3.name == other.name && object3.message == other.message;
    case regexpTag:
    case stringTag:
      return object3 == other + "";
    case mapTag:
      var convert = mapToArray;
    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$4;
      convert || (convert = setToArray);
      if (object3.size != other.size && !isPartial) {
        return false;
      }
      var stacked = stack.get(object3);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG$2;
      stack.set(object3, other);
      var result = equalArrays(convert(object3), convert(other), bitmask, customizer, equalFunc, stack);
      stack["delete"](object3);
      return result;
    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object3) == symbolValueOf.call(other);
      }
  }
  return false;
}
var COMPARE_PARTIAL_FLAG$3 = 1;
var objectProto$1 = Object.prototype;
var hasOwnProperty$1 = objectProto$1.hasOwnProperty;
function equalObjects(object3, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, objProps = getAllKeys(object3), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index2 = objLength;
  while (index2--) {
    var key2 = objProps[index2];
    if (!(isPartial ? key2 in other : hasOwnProperty$1.call(other, key2))) {
      return false;
    }
  }
  var objStacked = stack.get(object3);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object3;
  }
  var result = true;
  stack.set(object3, other);
  stack.set(other, object3);
  var skipCtor = isPartial;
  while (++index2 < objLength) {
    key2 = objProps[index2];
    var objValue = object3[key2], othValue = other[key2];
    if (customizer) {
      var compared = isPartial ? customizer(othValue, objValue, key2, other, object3, stack) : customizer(objValue, othValue, key2, object3, other, stack);
    }
    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key2 == "constructor");
  }
  if (result && !skipCtor) {
    var objCtor = object3.constructor, othCtor = other.constructor;
    if (objCtor != othCtor && ("constructor" in object3 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack["delete"](object3);
  stack["delete"](other);
  return result;
}
var COMPARE_PARTIAL_FLAG$2 = 1;
var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
var objectProto = Object.prototype;
var hasOwnProperty = objectProto.hasOwnProperty;
function baseIsEqualDeep(object3, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object3), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object3), othTag = othIsArr ? arrayTag : getTag(other);
  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;
  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
  if (isSameTag && isBuffer(object3)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack());
    return objIsArr || isTypedArray(object3) ? equalArrays(object3, other, bitmask, customizer, equalFunc, stack) : equalByTag(object3, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG$2)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object3, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object3.value() : object3, othUnwrapped = othIsWrapped ? other.value() : other;
      stack || (stack = new Stack());
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack());
  return equalObjects(object3, other, bitmask, customizer, equalFunc, stack);
}
function baseIsEqual(value26, other, bitmask, customizer, stack) {
  if (value26 === other) {
    return true;
  }
  if (value26 == null || other == null || !isObjectLike(value26) && !isObjectLike(other)) {
    return value26 !== value26 && other !== other;
  }
  return baseIsEqualDeep(value26, other, bitmask, customizer, baseIsEqual, stack);
}
function isEqual$1(value26, other) {
  return baseIsEqual(value26, other);
}
const { createVNode: _createVNode$3e } = await importShared("vue");
const Menus = {
  name: "CascaderMenus",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    value: PropTypes.array.def([]),
    activeValue: PropTypes.array.def([]),
    options: PropTypes.array,
    prefixCls: PropTypes.string.def("rc-cascader-menus"),
    expandTrigger: PropTypes.string.def("click"),
    // onSelect: PropTypes.func,
    visible: PropTypes.looseBool.def(false),
    dropdownMenuColumnStyle: PropTypes.object,
    defaultFieldNames: PropTypes.object,
    fieldNames: PropTypes.object,
    expandIcon: PropTypes.any,
    loadingIcon: PropTypes.any
  },
  data: function data22() {
    this.menuItems = {};
    return {};
  },
  watch: {
    visible: function visible3(val) {
      var _this = this;
      if (val) {
        this.$nextTick(function() {
          _this.scrollActiveItemToView();
        });
      }
    }
  },
  mounted: function mounted14() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.scrollActiveItemToView();
    });
  },
  methods: {
    getFieldName: function getFieldName(name) {
      var _this$$props = this.$props, fieldNames = _this$$props.fieldNames, defaultFieldNames = _this$$props.defaultFieldNames;
      return fieldNames[name] || defaultFieldNames[name];
    },
    getOption: function getOption(option, menuIndex) {
      var _this3 = this;
      var prefixCls2 = this.prefixCls, expandTrigger = this.expandTrigger;
      var loadingIcon = getComponent(this, "loadingIcon");
      var expandIcon = getComponent(this, "expandIcon");
      var onSelect6 = function onSelect7(e2) {
        _this3.__emit("select", option, menuIndex, e2);
      };
      var onItemDoubleClick = function onItemDoubleClick2(e2) {
        _this3.__emit("itemDoubleClick", option, menuIndex, e2);
      };
      var key2 = option[this.getFieldName("value")];
      var expandProps = {
        onClick: onSelect6,
        onDblclick: onItemDoubleClick
      };
      var menuItemCls = "".concat(prefixCls2, "-menu-item");
      var expandIconNode = null;
      var hasChildren = option[this.getFieldName("children")] && option[this.getFieldName("children")].length > 0;
      if (hasChildren || option.isLeaf === false) {
        menuItemCls += " ".concat(prefixCls2, "-menu-item-expand");
        if (!option.loading) {
          expandIconNode = _createVNode$3e("span", {
            "class": "".concat(prefixCls2, "-menu-item-expand-icon")
          }, [expandIcon]);
        }
      }
      if (expandTrigger === "hover" && (hasChildren || option.isLeaf === false)) {
        expandProps = {
          onMouseenter: this.delayOnSelect.bind(this, onSelect6),
          onMouseleave: this.delayOnSelect.bind(this),
          onClick: onSelect6
        };
      }
      if (this.isActiveOption(option, menuIndex)) {
        menuItemCls += " ".concat(prefixCls2, "-menu-item-active");
        expandProps.ref = this.saveMenuItem(menuIndex);
      }
      if (option.disabled) {
        menuItemCls += " ".concat(prefixCls2, "-menu-item-disabled");
      }
      var loadingIconNode = null;
      if (option.loading) {
        menuItemCls += " ".concat(prefixCls2, "-menu-item-loading");
        loadingIconNode = loadingIcon || null;
      }
      var title = "";
      if (option.title) {
        title = option.title;
      } else if (typeof option[this.getFieldName("label")] === "string") {
        title = option[this.getFieldName("label")];
      }
      return _createVNode$3e("li", _objectSpread2$2(_objectSpread2$2({
        "key": Array.isArray(key2) ? key2.join("__ant__") : key2,
        "class": menuItemCls,
        "title": title
      }, expandProps), {}, {
        "role": "menuitem",
        "onMousedown": function onMousedown2(e2) {
          return e2.preventDefault();
        }
      }), [option[this.getFieldName("label")], expandIconNode, loadingIconNode]);
    },
    getActiveOptions: function getActiveOptions(values) {
      var _this4 = this;
      var activeValue = values || this.activeValue;
      var options2 = this.options;
      return arrayTreeFilter(options2, function(o2, level2) {
        return isEqual$1(o2[_this4.getFieldName("value")], activeValue[level2]);
      }, {
        childrenKeyName: this.getFieldName("children")
      });
    },
    getShowOptions: function getShowOptions() {
      var _this5 = this;
      var options2 = this.options;
      var result = this.getActiveOptions().map(function(activeOption) {
        return activeOption[_this5.getFieldName("children")];
      }).filter(function(activeOption) {
        return !!activeOption;
      });
      result.unshift(options2);
      return result;
    },
    delayOnSelect: function delayOnSelect(onSelect6) {
      var _this6 = this;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      if (this.delayTimer) {
        clearTimeout(this.delayTimer);
        this.delayTimer = null;
      }
      if (typeof onSelect6 === "function") {
        this.delayTimer = setTimeout(function() {
          onSelect6(args);
          _this6.delayTimer = null;
        }, 150);
      }
    },
    scrollActiveItemToView: function scrollActiveItemToView() {
      var optionsLength = this.getShowOptions().length;
      for (var i2 = 0; i2 < optionsLength; i2++) {
        var itemComponent = this.menuItems[i2];
        if (itemComponent) {
          var target = findDOMNode(itemComponent);
          target.parentNode.scrollTop = target.offsetTop;
        }
      }
    },
    isActiveOption: function isActiveOption(option, menuIndex) {
      var _this$activeValue = this.activeValue, activeValue = _this$activeValue === void 0 ? [] : _this$activeValue;
      return isEqual$1(activeValue[menuIndex], option[this.getFieldName("value")]);
    },
    saveMenuItem: function saveMenuItem(index2) {
      var _this7 = this;
      return function(node) {
        _this7.menuItems[index2] = node;
      };
    }
  },
  render: function render61() {
    var _this8 = this;
    var prefixCls2 = this.prefixCls, dropdownMenuColumnStyle = this.dropdownMenuColumnStyle;
    return _createVNode$3e("div", null, [this.getShowOptions().map(function(options2, menuIndex) {
      return _createVNode$3e("ul", {
        "class": "".concat(prefixCls2, "-menu"),
        "key": menuIndex,
        "style": dropdownMenuColumnStyle
      }, [options2.map(function(option) {
        return _this8.getOption(option, menuIndex);
      })]);
    })]);
  }
};
function shallowEqualArrays(arrA, arrB) {
  if (arrA === arrB) {
    return true;
  }
  if (!arrA || !arrB) {
    return false;
  }
  var len = arrA.length;
  if (arrB.length !== len) {
    return false;
  }
  for (var i2 = 0; i2 < len; i2++) {
    if (arrA[i2] !== arrB[i2]) {
      return false;
    }
  }
  return true;
}
var arrays = shallowEqualArrays;
const shallowEqualArrays$1 = /* @__PURE__ */ getDefaultExportFromCjs(arrays);
const { createVNode: _createVNode$3d } = await importShared("vue");
var __rest$w = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1J } = await importShared("vue");
var BUILT_IN_PLACEMENTS$2 = {
  bottomLeft: {
    points: ["tl", "bl"],
    offset: [0, 4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  topLeft: {
    points: ["bl", "tl"],
    offset: [0, -4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  bottomRight: {
    points: ["tr", "br"],
    offset: [0, 4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  },
  topRight: {
    points: ["br", "tr"],
    offset: [0, -4],
    overflow: {
      adjustX: 1,
      adjustY: 1
    }
  }
};
const Cascader$1 = defineComponent$1J({
  name: "Cascader",
  mixins: [BaseMixin],
  inheritAttrs: false,
  // model: {
  //   prop: 'value',
  //   event: 'change',
  // },
  props: {
    value: PropTypes.array,
    defaultValue: PropTypes.array,
    options: PropTypes.array,
    // onChange: PropTypes.func,
    // onPopupVisibleChange: PropTypes.func,
    popupVisible: PropTypes.looseBool,
    disabled: PropTypes.looseBool.def(false),
    transitionName: PropTypes.string.def(""),
    popupClassName: PropTypes.string.def(""),
    popupStyle: PropTypes.object.def(function() {
      return {};
    }),
    popupPlacement: PropTypes.string.def("bottomLeft"),
    prefixCls: PropTypes.string.def("rc-cascader"),
    dropdownMenuColumnStyle: PropTypes.object,
    builtinPlacements: PropTypes.object.def(BUILT_IN_PLACEMENTS$2),
    loadData: PropTypes.func,
    changeOnSelect: PropTypes.looseBool,
    // onKeyDown: PropTypes.func,
    expandTrigger: PropTypes.string.def("click"),
    fieldNames: PropTypes.object.def(function() {
      return {
        label: "label",
        value: "value",
        children: "children"
      };
    }),
    expandIcon: PropTypes.any,
    loadingIcon: PropTypes.any,
    getPopupContainer: PropTypes.func
  },
  data: function data23() {
    var initialValue = [];
    var value26 = this.value, defaultValue = this.defaultValue, popupVisible4 = this.popupVisible;
    if (hasProp(this, "value")) {
      initialValue = value26 || [];
    } else if (hasProp(this, "defaultValue")) {
      initialValue = defaultValue || [];
    }
    this.children = void 0;
    this.defaultFieldNames = {
      label: "label",
      value: "value",
      children: "children"
    };
    return {
      sPopupVisible: popupVisible4,
      sActiveValue: initialValue,
      sValue: initialValue
    };
  },
  watch: {
    value: function value9(val, oldValue) {
      if (!shallowEqualArrays$1(val, oldValue)) {
        var newValues = {
          sValue: val || []
        };
        if (!hasProp(this, "loadData")) {
          newValues.sActiveValue = val || [];
        }
        this.setState(newValues);
      }
    },
    popupVisible: function popupVisible2(val) {
      this.setState({
        sPopupVisible: val
      });
    }
  },
  methods: {
    getPopupDOMNode: function getPopupDOMNode() {
      return this.trigger.getPopupDomNode();
    },
    getFieldName: function getFieldName2(name) {
      var defaultFieldNames = this.defaultFieldNames, fieldNames = this.fieldNames;
      return fieldNames[name] || defaultFieldNames[name];
    },
    getFieldNames: function getFieldNames() {
      return this.fieldNames;
    },
    getCurrentLevelOptions: function getCurrentLevelOptions() {
      var _this = this;
      var _this$options = this.options, options2 = _this$options === void 0 ? [] : _this$options, _this$sActiveValue = this.sActiveValue, sActiveValue = _this$sActiveValue === void 0 ? [] : _this$sActiveValue;
      var result = arrayTreeFilter(options2, function(o2, level2) {
        return isEqual$1(o2[_this.getFieldName("value")], sActiveValue[level2]);
      }, {
        childrenKeyName: this.getFieldName("children")
      });
      if (result[result.length - 2]) {
        return result[result.length - 2][this.getFieldName("children")];
      }
      return _toConsumableArray(options2).filter(function(o2) {
        return !o2.disabled;
      });
    },
    getActiveOptions: function getActiveOptions2(activeValue) {
      var _this2 = this;
      return arrayTreeFilter(this.options || [], function(o2, level2) {
        return isEqual$1(o2[_this2.getFieldName("value")], activeValue[level2]);
      }, {
        childrenKeyName: this.getFieldName("children")
      });
    },
    setPopupVisible: function setPopupVisible2(popupVisible4) {
      if (!hasProp(this, "popupVisible")) {
        this.setState({
          sPopupVisible: popupVisible4
        });
      }
      if (popupVisible4 && !this.sPopupVisible) {
        this.setState({
          sActiveValue: this.sValue
        });
      }
      this.__emit("popupVisibleChange", popupVisible4);
    },
    handleChange: function handleChange8(options2, setProps, e2) {
      var _this3 = this;
      if (e2.type !== "keydown" || e2.keyCode === KeyCode$1.ENTER) {
        var value26 = options2.map(function(o2) {
          return o2[_this3.getFieldName("value")];
        });
        this.__emit("change", value26, options2);
        this.setPopupVisible(setProps.visible);
      }
    },
    handlePopupVisibleChange: function handlePopupVisibleChange(popupVisible4) {
      this.setPopupVisible(popupVisible4);
    },
    handleMenuSelect: function handleMenuSelect(targetOption, menuIndex, e2) {
      var triggerNode = this.trigger.getRootDomNode();
      if (triggerNode && triggerNode.focus) {
        triggerNode.focus();
      }
      var changeOnSelect = this.changeOnSelect, loadData = this.loadData, expandTrigger = this.expandTrigger;
      if (!targetOption || targetOption.disabled) {
        return;
      }
      var sActiveValue = this.sActiveValue;
      sActiveValue = sActiveValue.slice(0, menuIndex + 1);
      sActiveValue[menuIndex] = targetOption[this.getFieldName("value")];
      var activeOptions = this.getActiveOptions(sActiveValue);
      if (targetOption.isLeaf === false && !targetOption[this.getFieldName("children")] && loadData) {
        if (changeOnSelect) {
          this.handleChange(activeOptions, {
            visible: true
          }, e2);
        }
        this.setState({
          sActiveValue
        });
        loadData(activeOptions);
        return;
      }
      var newState = {};
      if (!targetOption[this.getFieldName("children")] || !targetOption[this.getFieldName("children")].length) {
        this.handleChange(activeOptions, {
          visible: false
        }, e2);
        newState.sValue = sActiveValue;
      } else if (changeOnSelect && (e2.type === "click" || e2.type === "keydown")) {
        if (expandTrigger === "hover") {
          this.handleChange(activeOptions, {
            visible: false
          }, e2);
        } else {
          this.handleChange(activeOptions, {
            visible: true
          }, e2);
        }
        newState.sValue = sActiveValue;
      }
      newState.sActiveValue = sActiveValue;
      if (hasProp(this, "value") || e2.type === "keydown" && e2.keyCode !== KeyCode$1.ENTER) {
        delete newState.sValue;
      }
      this.setState(newState);
    },
    handleItemDoubleClick: function handleItemDoubleClick() {
      var changeOnSelect = this.$props.changeOnSelect;
      if (changeOnSelect) {
        this.setPopupVisible(false);
      }
    },
    handleKeyDown: function handleKeyDown3(e2) {
      var _this4 = this;
      var children = this.children;
      if (children) {
        var keydown = getEvents(children).onKeydown;
        if (keydown) {
          keydown(e2);
          return;
        }
      }
      var activeValue = _toConsumableArray(this.sActiveValue);
      var currentLevel = activeValue.length - 1 < 0 ? 0 : activeValue.length - 1;
      var currentOptions = this.getCurrentLevelOptions();
      var currentIndex = currentOptions.map(function(o2) {
        return o2[_this4.getFieldName("value")];
      }).findIndex(function(val) {
        return isEqual$1(activeValue[currentLevel], val);
      });
      if (e2.keyCode !== KeyCode$1.DOWN && e2.keyCode !== KeyCode$1.UP && e2.keyCode !== KeyCode$1.LEFT && e2.keyCode !== KeyCode$1.RIGHT && e2.keyCode !== KeyCode$1.ENTER && e2.keyCode !== KeyCode$1.SPACE && e2.keyCode !== KeyCode$1.BACKSPACE && e2.keyCode !== KeyCode$1.ESC && e2.keyCode !== KeyCode$1.TAB) {
        return;
      }
      if (!this.sPopupVisible && e2.keyCode !== KeyCode$1.BACKSPACE && e2.keyCode !== KeyCode$1.LEFT && e2.keyCode !== KeyCode$1.RIGHT && e2.keyCode !== KeyCode$1.ESC && e2.keyCode !== KeyCode$1.TAB) {
        this.setPopupVisible(true);
        return;
      }
      if (e2.keyCode === KeyCode$1.DOWN || e2.keyCode === KeyCode$1.UP) {
        e2.preventDefault();
        var nextIndex = currentIndex;
        if (nextIndex !== -1) {
          if (e2.keyCode === KeyCode$1.DOWN) {
            nextIndex += 1;
            nextIndex = nextIndex >= currentOptions.length ? 0 : nextIndex;
          } else {
            nextIndex -= 1;
            nextIndex = nextIndex < 0 ? currentOptions.length - 1 : nextIndex;
          }
        } else {
          nextIndex = 0;
        }
        activeValue[currentLevel] = currentOptions[nextIndex][this.getFieldName("value")];
      } else if (e2.keyCode === KeyCode$1.LEFT || e2.keyCode === KeyCode$1.BACKSPACE) {
        e2.preventDefault();
        activeValue.splice(activeValue.length - 1, 1);
      } else if (e2.keyCode === KeyCode$1.RIGHT) {
        e2.preventDefault();
        if (currentOptions[currentIndex] && currentOptions[currentIndex][this.getFieldName("children")]) {
          activeValue.push(currentOptions[currentIndex][this.getFieldName("children")][0][this.getFieldName("value")]);
        }
      } else if (e2.keyCode === KeyCode$1.ESC || e2.keyCode === KeyCode$1.TAB) {
        this.setPopupVisible(false);
        return;
      }
      if (!activeValue || activeValue.length === 0) {
        this.setPopupVisible(false);
      }
      var activeOptions = this.getActiveOptions(activeValue);
      var targetOption = activeOptions[activeOptions.length - 1];
      this.handleMenuSelect(targetOption, activeOptions.length - 1, e2);
      this.__emit("keydown", e2);
    },
    saveTrigger: function saveTrigger2(node) {
      this.trigger = node;
    }
  },
  render: function render62() {
    var $props = this.$props, sActiveValue = this.sActiveValue, handleMenuSelect2 = this.handleMenuSelect, sPopupVisible = this.sPopupVisible, handlePopupVisibleChange3 = this.handlePopupVisibleChange, handleKeyDown7 = this.handleKeyDown;
    var prefixCls2 = $props.prefixCls, transitionName2 = $props.transitionName, popupClassName = $props.popupClassName, _$props$options = $props.options, options2 = _$props$options === void 0 ? [] : _$props$options, disabled = $props.disabled, builtinPlacements = $props.builtinPlacements, popupPlacement = $props.popupPlacement, restProps = __rest$w($props, ["prefixCls", "transitionName", "popupClassName", "options", "disabled", "builtinPlacements", "popupPlacement"]);
    var menus = _createVNode$3d("div", null, null);
    var emptyMenuClassName = "";
    if (options2 && options2.length > 0) {
      var loadingIcon = getComponent(this, "loadingIcon");
      var expandIcon = getComponent(this, "expandIcon") || ">";
      var menusProps = _extends$1(_extends$1(_extends$1({}, $props), this.$attrs), {
        fieldNames: this.getFieldNames(),
        defaultFieldNames: this.defaultFieldNames,
        activeValue: sActiveValue,
        visible: sPopupVisible,
        loadingIcon,
        expandIcon,
        onSelect: handleMenuSelect2,
        onItemDoubleClick: this.handleItemDoubleClick
      });
      menus = _createVNode$3d(Menus, menusProps, null);
    } else {
      emptyMenuClassName = " ".concat(prefixCls2, "-menus-empty");
    }
    var triggerProps = _extends$1(_extends$1(_extends$1({}, restProps), this.$attrs), {
      disabled,
      popupPlacement,
      builtinPlacements,
      popupTransitionName: transitionName2,
      action: disabled ? [] : ["click"],
      popupVisible: disabled ? false : sPopupVisible,
      prefixCls: "".concat(prefixCls2, "-menus"),
      popupClassName: popupClassName + emptyMenuClassName,
      popup: menus,
      onPopupVisibleChange: handlePopupVisibleChange3,
      ref: this.saveTrigger
    });
    var children = getSlot(this);
    this.children = children;
    return _createVNode$3d(Trigger, triggerProps, {
      default: function _default8() {
        return [children && cloneElement(children[0], {
          onKeydown: handleKeyDown7,
          tabindex: disabled ? void 0 : 0
        })];
      }
    });
  }
});
var RedoOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z" } }] }, "name": "redo", "theme": "outlined" };
const { createVNode: _createVNode$3c } = await importShared("vue");
function _objectSpread$t(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$u(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$u(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var RedoOutlined = function RedoOutlined2(props2, context2) {
  var p = _objectSpread$t({}, props2, context2.attrs);
  return _createVNode$3c(Icon, _objectSpread$t({}, p, {
    "icon": RedoOutlined$1
  }), null);
};
RedoOutlined.displayName = "RedoOutlined";
RedoOutlined.inheritAttrs = false;
const { createVNode: _createVNode$3b } = await importShared("vue");
var __rest$v = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { inject: inject$M, provide: provide$e, defineComponent: defineComponent$1I } = await importShared("vue");
function noop$v() {
}
var cascaderProps = {
  /** 可选项数据源 */
  options: {
    type: Array,
    default: []
  },
  /** 默认的选中项 */
  defaultValue: PropTypes.array,
  /** 指定选中项 */
  value: PropTypes.array,
  /** 选择完成后的回调 */
  // onChange?: (value: string[], selectedOptions?: CascaderOptionType[]) => void;
  /** 选择后展示的渲染函数 */
  displayRender: PropTypes.func,
  transitionName: PropTypes.string.def("slide-up"),
  popupStyle: PropTypes.object.def(function() {
    return {};
  }),
  /** 自定义浮层类名 */
  popupClassName: PropTypes.string,
  /** 浮层预设位置：`bottomLeft` `bottomRight` `topLeft` `topRight` */
  popupPlacement: PropTypes.oneOf(tuple("bottomLeft", "bottomRight", "topLeft", "topRight")).def("bottomLeft"),
  /** 输入框占位文本*/
  placeholder: PropTypes.string.def("Please select"),
  /** 输入框大小，可选 `large` `default` `small` */
  size: PropTypes.oneOf(tuple("large", "default", "small")),
  /** 禁用*/
  disabled: PropTypes.looseBool.def(false),
  /** 是否支持清除*/
  allowClear: PropTypes.looseBool.def(true),
  showSearch: {
    type: [Boolean, Object],
    default: void 0
  },
  notFoundContent: PropTypes.VNodeChild,
  loadData: PropTypes.func,
  /** 次级菜单的展开方式，可选 'click' 和 'hover' */
  expandTrigger: PropTypes.oneOf(tuple("click", "hover")),
  /** 当此项为 true 时，点选每级菜单选项值都会发生变化 */
  changeOnSelect: PropTypes.looseBool,
  /** 浮层可见变化时回调 */
  // onPopupVisibleChange?: (popupVisible: boolean) => void;
  prefixCls: PropTypes.string,
  inputPrefixCls: PropTypes.string,
  getPopupContainer: PropTypes.func,
  popupVisible: PropTypes.looseBool,
  fieldNames: {
    type: Object
  },
  autofocus: PropTypes.looseBool,
  suffixIcon: PropTypes.VNodeChild,
  showSearchRender: PropTypes.any,
  onChange: PropTypes.func,
  onPopupVisibleChange: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  onSearch: PropTypes.func,
  "onUpdate:value": PropTypes.func
};
var defaultLimit = 50;
function defaultFilterOption(inputValue, path2, names2) {
  return path2.some(function(option) {
    return option[names2.label].indexOf(inputValue) > -1;
  });
}
function defaultSortFilteredOption(a2, b2, inputValue, names2) {
  function callback(elem) {
    return elem[names2.label].indexOf(inputValue) > -1;
  }
  return a2.findIndex(callback) - b2.findIndex(callback);
}
function getFilledFieldNames(props2) {
  var fieldNames = props2.fieldNames || {};
  var names2 = {
    children: fieldNames.children || "children",
    label: fieldNames.label || "label",
    value: fieldNames.value || "value"
  };
  return names2;
}
function flattenTree(options2, props2) {
  var ancestor = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
  var names2 = getFilledFieldNames(props2);
  var flattenOptions2 = [];
  var childrenName = names2.children;
  options2.forEach(function(option) {
    var path2 = ancestor.concat(option);
    if (props2.changeOnSelect || !option[childrenName] || !option[childrenName].length) {
      flattenOptions2.push(path2);
    }
    if (option[childrenName]) {
      flattenOptions2 = flattenOptions2.concat(flattenTree(option[childrenName], props2, path2));
    }
  });
  return flattenOptions2;
}
var defaultDisplayRender = function defaultDisplayRender2(_ref) {
  var labels = _ref.labels;
  return labels.join(" / ");
};
var Cascader = defineComponent$1I({
  name: "ACascader",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: cascaderProps,
  setup: function setup72() {
    return {
      configProvider: inject$M("configProvider", defaultConfigProvider),
      localeData: inject$M("localeData", {}),
      cachedOptions: [],
      popupRef: void 0,
      input: void 0
    };
  },
  data: function data24() {
    var _this$$props = this.$props, value26 = _this$$props.value, defaultValue = _this$$props.defaultValue, popupVisible4 = _this$$props.popupVisible, showSearch = _this$$props.showSearch, options2 = _this$$props.options;
    return {
      sValue: value26 || defaultValue || [],
      inputValue: "",
      inputFocused: false,
      sPopupVisible: popupVisible4,
      flattenOptions: showSearch ? flattenTree(options2, this.$props) : void 0
    };
  },
  watch: {
    value: function value10(val) {
      this.setState({
        sValue: val || []
      });
    },
    popupVisible: function popupVisible3(val) {
      this.setState({
        sPopupVisible: val
      });
    },
    options: function options(val) {
      if (this.showSearch) {
        this.setState({
          flattenOptions: flattenTree(val, this.$props)
        });
      }
    }
  },
  // model: {
  //   prop: 'value',
  //   event: 'change',
  // },
  created: function created9() {
    provide$e("savePopupRef", this.savePopupRef);
  },
  methods: {
    savePopupRef: function savePopupRef4(ref2) {
      this.popupRef = ref2;
    },
    highlightKeyword: function highlightKeyword(str, keyword, prefixCls2) {
      return str.split(keyword).map(function(node, index2) {
        return index2 === 0 ? node : [_createVNode$3b("span", {
          "class": "".concat(prefixCls2, "-menu-item-keyword")
        }, [keyword]), node];
      });
    },
    defaultRenderFilteredOption: function defaultRenderFilteredOption(opt) {
      var _this = this;
      var inputValue = opt.inputValue, path2 = opt.path, prefixCls2 = opt.prefixCls, names2 = opt.names;
      return path2.map(function(option, index2) {
        var label = option[names2.label];
        var node = label.indexOf(inputValue) > -1 ? _this.highlightKeyword(label, inputValue, prefixCls2) : label;
        return index2 === 0 ? node : [" / ", node];
      });
    },
    saveInput: function saveInput4(node) {
      this.input = node;
    },
    handleChange: function handleChange9(value26, selectedOptions) {
      this.setState({
        inputValue: ""
      });
      if (selectedOptions[0].__IS_FILTERED_OPTION) {
        var unwrappedValue = value26[0];
        var unwrappedSelectedOptions = selectedOptions[0].path;
        this.setValue(unwrappedValue, unwrappedSelectedOptions);
        return;
      }
      this.setValue(value26, selectedOptions);
    },
    handlePopupVisibleChange: function handlePopupVisibleChange2(popupVisible4) {
      if (!hasProp(this, "popupVisible")) {
        this.setState(function(state) {
          return {
            sPopupVisible: popupVisible4,
            inputFocused: popupVisible4,
            inputValue: popupVisible4 ? state.inputValue : ""
          };
        });
      }
      this.$emit("popupVisibleChange", popupVisible4);
    },
    handleInputFocus: function handleInputFocus2(e2) {
      this.$emit("focus", e2);
    },
    handleInputBlur: function handleInputBlur2(e2) {
      this.setState({
        inputFocused: false
      });
      this.$emit("blur", e2);
    },
    handleInputClick: function handleInputClick(e2) {
      var inputFocused = this.inputFocused, sPopupVisible = this.sPopupVisible;
      if (inputFocused || sPopupVisible) {
        e2.stopPropagation();
        if (e2.nativeEvent && e2.nativeEvent.stopImmediatePropagation) {
          e2.nativeEvent.stopImmediatePropagation();
        }
      }
    },
    handleKeyDown: function handleKeyDown4(e2) {
      if (e2.keyCode === KeyCode$1.BACKSPACE || e2.keyCode === KeyCode$1.SPACE) {
        e2.stopPropagation();
      }
    },
    handleInputChange: function handleInputChange(e2) {
      var inputValue = e2.target.value;
      this.setState({
        inputValue
      });
      this.$emit("search", inputValue);
    },
    setValue: function setValue5(value26) {
      var selectedOptions = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      this.$emit("update:value", value26);
      this.$emit("change", value26, selectedOptions);
    },
    getLabel: function getLabel() {
      var options2 = this.options;
      var names2 = getFilledFieldNames(this.$props);
      var displayRender = getComponent(this, "displayRender", {}, false) || defaultDisplayRender;
      var value26 = this.sValue;
      var unwrappedValue = Array.isArray(value26[0]) ? value26[0] : value26;
      var selectedOptions = arrayTreeFilter(options2, function(o2, level2) {
        return o2[names2.value] === unwrappedValue[level2];
      }, {
        childrenKeyName: names2.children
      });
      var labels = selectedOptions.map(function(o2) {
        return o2[names2.label];
      });
      return displayRender({
        labels,
        selectedOptions
      });
    },
    clearSelection: function clearSelection(e2) {
      e2.preventDefault();
      e2.stopPropagation();
      if (!this.inputValue) {
        this.setValue([]);
        this.handlePopupVisibleChange(false);
      } else {
        this.setState({
          inputValue: ""
        });
      }
    },
    generateFilteredOptions: function generateFilteredOptions(prefixCls2, renderEmpty2) {
      var _ref3;
      var showSearch = this.showSearch, notFoundContent = this.notFoundContent;
      var names2 = getFilledFieldNames(this.$props);
      var _showSearch$filter = showSearch.filter, filter = _showSearch$filter === void 0 ? defaultFilterOption : _showSearch$filter, _showSearch$sort = showSearch.sort, sort = _showSearch$sort === void 0 ? defaultSortFilteredOption : _showSearch$sort, _showSearch$limit = showSearch.limit, limit = _showSearch$limit === void 0 ? defaultLimit : _showSearch$limit;
      var render165 = showSearch.render || getComponent(this, "showSearchRender") || this.defaultRenderFilteredOption;
      var _this$$data = this.$data, _this$$data$flattenOp = _this$$data.flattenOptions, flattenOptions2 = _this$$data$flattenOp === void 0 ? [] : _this$$data$flattenOp, inputValue = _this$$data.inputValue;
      var filtered;
      if (limit > 0) {
        filtered = [];
        var matchCount = 0;
        flattenOptions2.some(function(path2) {
          var match5 = filter(inputValue, path2, names2);
          if (match5) {
            filtered.push(path2);
            matchCount += 1;
          }
          return matchCount >= limit;
        });
      } else {
        warning$5(typeof limit !== "number", "Cascader", "'limit' of showSearch in Cascader should be positive number or false.");
        filtered = flattenOptions2.filter(function(path2) {
          return filter(inputValue, path2, names2);
        });
      }
      filtered.sort(function(a2, b2) {
        return sort(a2, b2, inputValue, names2);
      });
      if (filtered.length > 0) {
        return filtered.map(function(path2) {
          var _ref2;
          return _ref2 = {
            __IS_FILTERED_OPTION: true,
            path: path2
          }, _defineProperty$U(_ref2, names2.label, render165({
            inputValue,
            path: path2,
            prefixCls: prefixCls2,
            names: names2
          })), _defineProperty$U(_ref2, names2.value, path2.map(function(o2) {
            return o2[names2.value];
          })), _defineProperty$U(_ref2, "disabled", path2.some(function(o2) {
            return !!o2.disabled;
          })), _ref2;
        });
      }
      return [(_ref3 = {}, _defineProperty$U(_ref3, names2.label, notFoundContent || renderEmpty2("Cascader")), _defineProperty$U(_ref3, names2.value, "ANT_CASCADER_NOT_FOUND"), _defineProperty$U(_ref3, "disabled", true), _ref3)];
    },
    focus: function focus9() {
      this.input && this.input.focus();
    },
    blur: function blur8() {
      this.input && this.input.blur();
    }
  },
  render: function render63() {
    var _classNames, _classNames2, _classNames3;
    var sPopupVisible = this.sPopupVisible, inputValue = this.inputValue, configProvider = this.configProvider, localeData2 = this.localeData;
    var _this$$data2 = this.$data, value26 = _this$$data2.sValue, inputFocused = _this$$data2.inputFocused;
    var props2 = getOptionProps(this);
    var suffixIcon = getComponent(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var getContextPopupContainer = configProvider.getPopupContainer;
    var _a = props2, customizePrefixCls = _a.prefixCls, customizeInputPrefixCls = _a.inputPrefixCls, _a$placeholder = _a.placeholder, placeholder = _a$placeholder === void 0 ? localeData2.placeholder : _a$placeholder, size = _a.size, disabled = _a.disabled, allowClear = _a.allowClear, _a$showSearch = _a.showSearch, showSearch = _a$showSearch === void 0 ? false : _a$showSearch, notFoundContent = _a.notFoundContent, otherProps = __rest$v(_a, ["prefixCls", "inputPrefixCls", "placeholder", "size", "disabled", "allowClear", "showSearch", "notFoundContent"]);
    var _splitAttrs = splitAttrs(this.$attrs), onEvents = _splitAttrs.onEvents, extraAttrs = _splitAttrs.extraAttrs;
    var className = extraAttrs.class, style3 = extraAttrs.style, restAttrs = __rest$v(extraAttrs, ["class", "style"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var renderEmpty2 = this.configProvider.renderEmpty;
    var prefixCls2 = getPrefixCls2("cascader", customizePrefixCls);
    var inputPrefixCls = getPrefixCls2("input", customizeInputPrefixCls);
    var sizeCls = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(inputPrefixCls, "-lg"), size === "large"), _defineProperty$U(_classNames, "".concat(inputPrefixCls, "-sm"), size === "small"), _classNames));
    var clearIcon = allowClear && !disabled && value26.length > 0 || inputValue ? _createVNode$3b(CloseCircleFilled, {
      "class": "".concat(prefixCls2, "-picker-clear"),
      "onClick": this.clearSelection,
      "key": "clear-icon"
    }, null) : null;
    var arrowCls = classNames((_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-picker-arrow"), true), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-picker-arrow-expand"), sPopupVisible), _classNames2));
    var pickerCls = classNames(className, "".concat(prefixCls2, "-picker"), (_classNames3 = {}, _defineProperty$U(_classNames3, "".concat(prefixCls2, "-picker-with-value"), inputValue), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-picker-disabled"), disabled), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-picker-").concat(size), !!size), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-picker-show-search"), !!showSearch), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-picker-focused"), inputFocused), _classNames3));
    var tempInputProps = omit$1(otherProps, ["popupStyle", "options", "popupPlacement", "transitionName", "displayRender", "changeOnSelect", "expandTrigger", "popupVisible", "getPopupContainer", "loadData", "popupClassName", "filterOption", "renderFilteredOption", "sortFilteredOption", "notFoundContent", "defaultValue", "fieldNames", "onChange", "onPopupVisibleChange", "onFocus", "onBlur", "onSearch", "onUpdate:value"]);
    var options2 = props2.options;
    var names2 = getFilledFieldNames(this.$props);
    if (options2 && options2.length > 0) {
      if (inputValue) {
        options2 = this.generateFilteredOptions(prefixCls2, renderEmpty2);
      }
    } else {
      var _ref4;
      options2 = [(_ref4 = {}, _defineProperty$U(_ref4, names2.label, notFoundContent || renderEmpty2("Cascader")), _defineProperty$U(_ref4, names2.value, "ANT_CASCADER_NOT_FOUND"), _defineProperty$U(_ref4, "disabled", true), _ref4)];
    }
    if (!sPopupVisible) {
      options2 = this.cachedOptions;
    } else {
      this.cachedOptions = options2;
    }
    var dropdownMenuColumnStyle = {};
    var isNotFound = (options2 || []).length === 1 && options2[0].value === "ANT_CASCADER_NOT_FOUND";
    if (isNotFound) {
      dropdownMenuColumnStyle.height = "auto";
    }
    var resultListMatchInputWidth = showSearch.matchInputWidth !== false;
    if (resultListMatchInputWidth && (inputValue || isNotFound) && this.input) {
      dropdownMenuColumnStyle.width = findDOMNode(this.input.input).offsetWidth + "px";
    }
    var inputProps2 = _extends$1(_extends$1(_extends$1({}, restAttrs), tempInputProps), {
      prefixCls: inputPrefixCls,
      placeholder: value26 && value26.length > 0 ? void 0 : placeholder,
      value: inputValue,
      disabled,
      readonly: !showSearch,
      autocomplete: "off",
      class: "".concat(prefixCls2, "-input ").concat(sizeCls),
      onFocus: this.handleInputFocus,
      onClick: showSearch ? this.handleInputClick : noop$v,
      onBlur: showSearch ? this.handleInputBlur : props2.onBlur,
      onKeydown: this.handleKeyDown,
      onChange: showSearch ? this.handleInputChange : noop$v
    });
    var children = getSlot(this);
    var inputIcon = suffixIcon && (isValidElement(suffixIcon) ? cloneElement(suffixIcon, {
      class: "".concat(prefixCls2, "-picker-arrow")
    }) : _createVNode$3b("span", {
      "class": "".concat(prefixCls2, "-picker-arrow")
    }, [suffixIcon])) || _createVNode$3b(DownOutlined, {
      "class": arrowCls
    }, null);
    var input = children.length ? children : _createVNode$3b("span", {
      "class": pickerCls,
      "style": style3
    }, [_createVNode$3b("span", {
      "class": "".concat(prefixCls2, "-picker-label")
    }, [this.getLabel()]), _createVNode$3b(Input, _objectSpread2$2(_objectSpread2$2({}, inputProps2), {}, {
      "ref": this.saveInput
    }), null), clearIcon, inputIcon]);
    var expandIcon = _createVNode$3b(RightOutlined, null, null);
    var loadingIcon = _createVNode$3b("span", {
      "class": "".concat(prefixCls2, "-menu-item-loading-icon")
    }, [_createVNode$3b(RedoOutlined, {
      "spin": true
    }, null)]);
    var getPopupContainer = props2.getPopupContainer || getContextPopupContainer;
    var cascaderProps2 = _extends$1(_extends$1(_extends$1(_extends$1({}, props2), {
      getPopupContainer,
      options: options2,
      prefixCls: prefixCls2,
      value: value26,
      popupVisible: sPopupVisible,
      dropdownMenuColumnStyle,
      expandIcon,
      loadingIcon
    }), onEvents), {
      onPopupVisibleChange: this.handlePopupVisibleChange,
      onChange: this.handleChange
    });
    return _createVNode$3b(Cascader$1, cascaderProps2, {
      default: function _default8() {
        return [input];
      }
    });
  }
});
const index$d = withInstall(Cascader);
const { createVNode: _createVNode$3a } = await importShared("vue");
var __rest$u = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$1H, inject: inject$L, nextTick: nextTick$k } = await importShared("vue");
function noop$u() {
}
const Checkbox = defineComponent$1H({
  name: "ACheckbox",
  inheritAttrs: false,
  __ANT_CHECKBOX: true,
  props: {
    prefixCls: PropTypes.string,
    defaultChecked: PropTypes.looseBool,
    checked: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    isGroup: PropTypes.looseBool,
    value: PropTypes.any,
    name: PropTypes.string,
    id: PropTypes.string,
    indeterminate: PropTypes.looseBool,
    type: PropTypes.string.def("checkbox"),
    autofocus: PropTypes.looseBool,
    onChange: PropTypes.func,
    "onUpdate:checked": PropTypes.func
  },
  emits: ["change", "update:checked"],
  setup: function setup73() {
    return {
      configProvider: inject$L("configProvider", defaultConfigProvider),
      checkboxGroupContext: inject$L("checkboxGroupContext", void 0)
    };
  },
  watch: {
    value: function value11(_value, prevValue) {
      var _this = this;
      nextTick$k(function() {
        var _this$checkboxGroupCo = _this.checkboxGroupContext, checkboxGroup = _this$checkboxGroupCo === void 0 ? {} : _this$checkboxGroupCo;
        if (checkboxGroup.registerValue && checkboxGroup.cancelValue) {
          checkboxGroup.cancelValue(prevValue);
          checkboxGroup.registerValue(_value);
        }
      });
    }
  },
  mounted: function mounted15() {
    var value26 = this.value, _this$checkboxGroupCo2 = this.checkboxGroupContext, checkboxGroup = _this$checkboxGroupCo2 === void 0 ? {} : _this$checkboxGroupCo2;
    if (checkboxGroup.registerValue) {
      checkboxGroup.registerValue(value26);
    }
    warning$5(hasProp(this, "checked") || this.checkboxGroupContext || !hasProp(this, "value"), "Checkbox", "`value` is not validate prop, do you mean `checked`?");
  },
  beforeUnmount: function beforeUnmount12() {
    var value26 = this.value, _this$checkboxGroupCo3 = this.checkboxGroupContext, checkboxGroup = _this$checkboxGroupCo3 === void 0 ? {} : _this$checkboxGroupCo3;
    if (checkboxGroup.cancelValue) {
      checkboxGroup.cancelValue(value26);
    }
  },
  methods: {
    handleChange: function handleChange10(event) {
      var targetChecked = event.target.checked;
      this.$emit("update:checked", targetChecked);
      this.$emit("change", event);
    },
    focus: function focus10() {
      this.$refs.vcCheckbox.focus();
    },
    blur: function blur9() {
      this.$refs.vcCheckbox.blur();
    }
  },
  render: function render64() {
    var _this2 = this, _classNames;
    var props2 = getOptionProps(this);
    var checkboxGroup = this.checkboxGroupContext, $attrs = this.$attrs;
    var children = getSlot(this);
    var indeterminate = props2.indeterminate, customizePrefixCls = props2.prefixCls, restProps = __rest$u(props2, ["indeterminate", "prefixCls"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("checkbox", customizePrefixCls);
    var _$attrs$onMouseenter = $attrs.onMouseenter, onMouseenter2 = _$attrs$onMouseenter === void 0 ? noop$u : _$attrs$onMouseenter, _$attrs$onMouseleave = $attrs.onMouseleave, onMouseleave2 = _$attrs$onMouseleave === void 0 ? noop$u : _$attrs$onMouseleave;
    $attrs.onInput;
    var className = $attrs.class, style3 = $attrs.style, restAttrs = __rest$u($attrs, ["onMouseenter", "onMouseleave", "onInput", "class", "style"]);
    var checkboxProps = _extends$1(_extends$1(_extends$1({}, restProps), {
      prefixCls: prefixCls2
    }), restAttrs);
    if (checkboxGroup) {
      checkboxProps.onChange = function() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this2.$emit.apply(_this2, ["change"].concat(args));
        checkboxGroup.toggleOption({
          label: children,
          value: props2.value
        });
      };
      checkboxProps.name = checkboxGroup.name;
      checkboxProps.checked = checkboxGroup.sValue.indexOf(props2.value) !== -1;
      checkboxProps.disabled = props2.disabled || checkboxGroup.disabled;
      checkboxProps.indeterminate = indeterminate;
    } else {
      checkboxProps.onChange = this.handleChange;
    }
    var classString = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-wrapper"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-wrapper-checked"), checkboxProps.checked), _defineProperty$U(_classNames, "".concat(prefixCls2, "-wrapper-disabled"), checkboxProps.disabled), _classNames), className);
    var checkboxClass = classNames(_defineProperty$U({}, "".concat(prefixCls2, "-indeterminate"), indeterminate));
    return _createVNode$3a("label", {
      "class": classString,
      "style": style3,
      "onMouseenter": onMouseenter2,
      "onMouseleave": onMouseleave2
    }, [_createVNode$3a(Checkbox$1, _objectSpread2$2(_objectSpread2$2({}, checkboxProps), {}, {
      "class": checkboxClass,
      "ref": "vcCheckbox"
    }), null), children.length ? _createVNode$3a("span", null, [children]) : null]);
  }
});
const { createVNode: _createVNode$39 } = await importShared("vue");
const { defineComponent: defineComponent$1G, inject: inject$K, provide: provide$d } = await importShared("vue");
function noop$t() {
}
const CheckboxGroup = defineComponent$1G({
  name: "ACheckboxGroup",
  props: {
    name: PropTypes.string,
    prefixCls: PropTypes.string,
    defaultValue: {
      type: Array
    },
    value: {
      type: Array
    },
    options: {
      type: Array
    },
    disabled: PropTypes.looseBool,
    onChange: PropTypes.func
  },
  emits: ["change", "update:value"],
  setup: function setup74() {
    return {
      configProvider: inject$K("configProvider", defaultConfigProvider)
    };
  },
  data: function data25() {
    var value26 = this.value, defaultValue = this.defaultValue;
    return {
      sValue: value26 || defaultValue || [],
      registeredValues: []
    };
  },
  watch: {
    value: function value12(val) {
      this.sValue = val || [];
    }
  },
  created: function created10() {
    provide$d("checkboxGroupContext", this);
  },
  methods: {
    getOptions: function getOptions() {
      var _this$options = this.options, options2 = _this$options === void 0 ? [] : _this$options, $slots = this.$slots;
      return options2.map(function(option) {
        if (typeof option === "string") {
          return {
            label: option,
            value: option
          };
        }
        var label = option.label;
        if (label === void 0 && $slots.label) {
          label = $slots.label(option);
        }
        return _extends$1(_extends$1({}, option), {
          label
        });
      });
    },
    cancelValue: function cancelValue(value26) {
      this.registeredValues = this.registeredValues.filter(function(val) {
        return val !== value26;
      });
    },
    registerValue: function registerValue(value26) {
      this.registeredValues = [].concat(_toConsumableArray(this.registeredValues), [value26]);
    },
    toggleOption: function toggleOption(option) {
      var registeredValues = this.registeredValues;
      var optionIndex = this.sValue.indexOf(option.value);
      var value26 = _toConsumableArray(this.sValue);
      if (optionIndex === -1) {
        value26.push(option.value);
      } else {
        value26.splice(optionIndex, 1);
      }
      if (!hasProp(this, "value")) {
        this.sValue = value26;
      }
      var options2 = this.getOptions();
      var val = value26.filter(function(val2) {
        return registeredValues.indexOf(val2) !== -1;
      }).sort(function(a2, b2) {
        var indexA = options2.findIndex(function(opt) {
          return opt.value === a2;
        });
        var indexB = options2.findIndex(function(opt) {
          return opt.value === b2;
        });
        return indexA - indexB;
      });
      this.$emit("update:value", val);
      this.$emit("change", val);
    }
  },
  render: function render65() {
    var props2 = this.$props, state = this.$data;
    var customizePrefixCls = props2.prefixCls, options2 = props2.options;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("checkbox", customizePrefixCls);
    var children = getSlot(this);
    var groupPrefixCls = "".concat(prefixCls2, "-group");
    if (options2 && options2.length > 0) {
      children = this.getOptions().map(function(option) {
        return _createVNode$39(Checkbox, {
          "prefixCls": prefixCls2,
          "key": option.value.toString(),
          "disabled": "disabled" in option ? option.disabled : props2.disabled,
          "indeterminate": option.indeterminate,
          "value": option.value,
          "checked": state.sValue.indexOf(option.value) !== -1,
          "onChange": option.onChange || noop$t,
          "class": "".concat(groupPrefixCls, "-item")
        }, {
          default: function _default8() {
            return [option.label];
          }
        });
      });
    }
    return _createVNode$39("div", {
      "class": groupPrefixCls
    }, [children]);
  }
});
Checkbox.Group = CheckboxGroup;
Checkbox.install = function(app) {
  app.component(Checkbox.name, Checkbox);
  app.component(CheckboxGroup.name, CheckboxGroup);
  return app;
};
const { createVNode: _createVNode$38 } = await importShared("vue");
const { defineComponent: defineComponent$1F } = await importShared("vue");
var commentProps = {
  actions: PropTypes.array,
  /** The element to display as the comment author. */
  author: PropTypes.VNodeChild,
  /** The element to display as the comment avatar - generally an antd Avatar */
  avatar: PropTypes.VNodeChild,
  /** The main content of the comment */
  content: PropTypes.VNodeChild,
  /** Comment prefix defaults to '.ant-comment' */
  prefixCls: PropTypes.string,
  /** A datetime element containing the time to be displayed */
  datetime: PropTypes.VNodeChild
};
var Comment = defineComponent$1F({
  name: "AComment",
  props: commentProps,
  slots: ["actions", "author", "avatar", "content", "datetime"],
  setup: function setup75(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("comment", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var renderNested = function renderNested2(prefixCls3, children) {
      return _createVNode$38("div", {
        "class": "".concat(prefixCls3, "-nested")
      }, [children]);
    };
    var getAction2 = function getAction3(actions) {
      if (!actions || !actions.length) {
        return null;
      }
      var actionList = actions.map(function(action, index2) {
        return _createVNode$38("li", {
          "key": "action-".concat(index2)
        }, [action]);
      });
      return actionList;
    };
    return function() {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
      var pre = prefixCls2.value;
      var actions = (_a = props2.actions) !== null && _a !== void 0 ? _a : (_b = slots.actions) === null || _b === void 0 ? void 0 : _b.call(slots);
      var author = (_c = props2.author) !== null && _c !== void 0 ? _c : (_d = slots.author) === null || _d === void 0 ? void 0 : _d.call(slots);
      var avatar = (_e = props2.avatar) !== null && _e !== void 0 ? _e : (_f = slots.avatar) === null || _f === void 0 ? void 0 : _f.call(slots);
      var content = (_g = props2.content) !== null && _g !== void 0 ? _g : (_h = slots.content) === null || _h === void 0 ? void 0 : _h.call(slots);
      var datetime = (_j = props2.datetime) !== null && _j !== void 0 ? _j : (_k = slots.datetime) === null || _k === void 0 ? void 0 : _k.call(slots);
      var avatarDom = _createVNode$38("div", {
        "class": "".concat(pre, "-avatar")
      }, [typeof avatar === "string" ? _createVNode$38("img", {
        "src": avatar,
        "alt": "comment-avatar"
      }, null) : avatar]);
      var actionDom = actions ? _createVNode$38("ul", {
        "class": "".concat(pre, "-actions")
      }, [getAction2(Array.isArray(actions) ? actions : [actions])]) : null;
      var authorContent = _createVNode$38("div", {
        "class": "".concat(pre, "-content-author")
      }, [author && _createVNode$38("span", {
        "class": "".concat(pre, "-content-author-name")
      }, [author]), datetime && _createVNode$38("span", {
        "class": "".concat(pre, "-content-author-time")
      }, [datetime])]);
      var contentDom = _createVNode$38("div", {
        "class": "".concat(pre, "-content")
      }, [authorContent, _createVNode$38("div", {
        "class": "".concat(pre, "-content-detail")
      }, [content]), actionDom]);
      var comment = _createVNode$38("div", {
        "class": "".concat(pre, "-inner")
      }, [avatarDom, contentDom]);
      var children = flattenChildren((_l = slots.default) === null || _l === void 0 ? void 0 : _l.call(slots));
      return _createVNode$38("div", {
        "class": [pre, _defineProperty$U({}, "".concat(pre, "-rtl"), direction.value === "rtl")]
      }, [comment, children && children.length ? renderNested(pre, children) : null]);
    };
  }
});
const index$c = withInstall(Comment);
const { createTextVNode: _createTextVNode$6, createVNode: _createVNode$37 } = await importShared("vue");
function goYear$3(direction) {
  this.changeYear(direction);
}
function noop$s() {
}
var MonthPanel = {
  name: "MonthPanel",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    cellRender: PropTypes.any,
    contentRender: PropTypes.any,
    locale: PropTypes.any,
    rootPrefixCls: PropTypes.string,
    // onChange: PropTypes.func,
    disabledDate: PropTypes.func,
    // onSelect: PropTypes.func,
    renderFooter: PropTypes.func,
    changeYear: PropTypes.func.def(noop$s)
  },
  data: function data26() {
    var value26 = this.value, defaultValue = this.defaultValue;
    this.nextYear = goYear$3.bind(this, 1);
    this.previousYear = goYear$3.bind(this, -1);
    return {
      sValue: value26 || defaultValue
    };
  },
  watch: {
    value: function value13(val) {
      this.setState({
        sValue: val
      });
    }
  },
  methods: {
    setAndSelectValue: function setAndSelectValue2(value26) {
      this.setValue(value26);
      this.__emit("select", value26);
    },
    setValue: function setValue6(value26) {
      if (hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
    }
  },
  render: function render66() {
    var sValue = this.sValue, cellRender = this.cellRender, contentRender = this.contentRender, locale2 = this.locale, rootPrefixCls = this.rootPrefixCls, disabledDate = this.disabledDate, renderFooter5 = this.renderFooter;
    var year = sValue.year();
    var prefixCls2 = "".concat(rootPrefixCls, "-month-panel");
    var footer = renderFooter5 && renderFooter5("month");
    return _createVNode$37("div", {
      "class": prefixCls2
    }, [_createVNode$37("div", null, [_createVNode$37("div", {
      "class": "".concat(prefixCls2, "-header")
    }, [_createVNode$37("a", {
      "class": "".concat(prefixCls2, "-prev-year-btn"),
      "role": "button",
      "onClick": this.previousYear,
      "title": locale2.previousYear
    }, null), _createVNode$37("a", {
      "class": "".concat(prefixCls2, "-year-select"),
      "role": "button",
      "onClick": this.$attrs.onYearPanelShow || noop$s,
      "title": locale2.yearSelect
    }, [_createVNode$37("span", {
      "class": "".concat(prefixCls2, "-year-select-content")
    }, [year]), _createVNode$37("span", {
      "class": "".concat(prefixCls2, "-year-select-arrow")
    }, [_createTextVNode$6("x")])]), _createVNode$37("a", {
      "class": "".concat(prefixCls2, "-next-year-btn"),
      "role": "button",
      "onClick": this.nextYear,
      "title": locale2.nextYear
    }, null)]), _createVNode$37("div", {
      "class": "".concat(prefixCls2, "-body")
    }, [_createVNode$37(MonthTable, {
      "disabledDate": disabledDate,
      "onSelect": this.setAndSelectValue,
      "locale": locale2,
      "value": sValue,
      "cellRender": cellRender,
      "contentRender": contentRender,
      "prefixCls": prefixCls2
    }, null)]), footer && _createVNode$37("div", {
      "class": "".concat(prefixCls2, "-footer")
    }, [footer])])]);
  }
};
const { createTextVNode: _createTextVNode$5, createVNode: _createVNode$36 } = await importShared("vue");
var ROW$1 = 4;
var COL$1 = 3;
function noop$r() {
}
function goYear$2(direction) {
  var value26 = this.sValue.clone();
  value26.add(direction, "year");
  this.setState({
    sValue: value26
  });
}
function chooseYear(year) {
  var value26 = this.sValue.clone();
  value26.year(year);
  value26.month(this.sValue.month());
  this.sValue = value26;
  this.__emit("select", value26);
}
const YearPanel = {
  name: "YearPanel",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    rootPrefixCls: PropTypes.string,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    locale: PropTypes.object,
    renderFooter: PropTypes.func
  },
  data: function data27() {
    this.nextDecade = goYear$2.bind(this, 10);
    this.previousDecade = goYear$2.bind(this, -10);
    return {
      sValue: this.value || this.defaultValue
    };
  },
  watch: {
    value: function value14(val) {
      this.sValue = val;
    }
  },
  methods: {
    years: function years2() {
      var value26 = this.sValue;
      var currentYear = value26.year();
      var startYear = parseInt(currentYear / 10, 10) * 10;
      var previousYear = startYear - 1;
      var years3 = [];
      var index2 = 0;
      for (var rowIndex = 0; rowIndex < ROW$1; rowIndex++) {
        years3[rowIndex] = [];
        for (var colIndex = 0; colIndex < COL$1; colIndex++) {
          var year = previousYear + index2;
          var content = String(year);
          years3[rowIndex][colIndex] = {
            content,
            year,
            title: content
          };
          index2++;
        }
      }
      return years3;
    }
  },
  render: function render67() {
    var _this = this;
    var value26 = this.sValue, locale2 = this.locale, renderFooter5 = this.renderFooter;
    var onDecadePanelShow = this.$attrs.onDecadePanelShow || noop$r;
    var years3 = this.years();
    var currentYear = value26.year();
    var startYear = parseInt(currentYear / 10, 10) * 10;
    var endYear = startYear + 9;
    var prefixCls2 = "".concat(this.rootPrefixCls, "-year-panel");
    var yeasEls = years3.map(function(row, index2) {
      var tds = row.map(function(yearData) {
        var _classNameMap;
        var classNameMap = (_classNameMap = {}, _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-cell"), 1), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-selected-cell"), yearData.year === currentYear), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-last-decade-cell"), yearData.year < startYear), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-next-decade-cell"), yearData.year > endYear), _classNameMap);
        var clickHandler2 = noop$r;
        if (yearData.year < startYear) {
          clickHandler2 = _this.previousDecade;
        } else if (yearData.year > endYear) {
          clickHandler2 = _this.nextDecade;
        } else {
          clickHandler2 = chooseYear.bind(_this, yearData.year);
        }
        return _createVNode$36("td", {
          "role": "gridcell",
          "title": yearData.title,
          "key": yearData.content,
          "onClick": clickHandler2,
          "class": classNameMap
        }, [_createVNode$36("a", {
          "class": "".concat(prefixCls2, "-year")
        }, [yearData.content])]);
      });
      return _createVNode$36("tr", {
        "key": index2,
        "role": "row"
      }, [tds]);
    });
    var footer = renderFooter5 && renderFooter5("year");
    return _createVNode$36("div", {
      "class": prefixCls2
    }, [_createVNode$36("div", null, [_createVNode$36("div", {
      "class": "".concat(prefixCls2, "-header")
    }, [_createVNode$36("a", {
      "class": "".concat(prefixCls2, "-prev-decade-btn"),
      "role": "button",
      "onClick": this.previousDecade,
      "title": locale2.previousDecade
    }, null), _createVNode$36("a", {
      "class": "".concat(prefixCls2, "-decade-select"),
      "role": "button",
      "onClick": onDecadePanelShow,
      "title": locale2.decadeSelect
    }, [_createVNode$36("span", {
      "class": "".concat(prefixCls2, "-decade-select-content")
    }, [startYear, _createTextVNode$5("-"), endYear]), _createVNode$36("span", {
      "class": "".concat(prefixCls2, "-decade-select-arrow")
    }, [_createTextVNode$5("x")])]), _createVNode$36("a", {
      "class": "".concat(prefixCls2, "-next-decade-btn"),
      "role": "button",
      "onClick": this.nextDecade,
      "title": locale2.nextDecade
    }, null)]), _createVNode$36("div", {
      "class": "".concat(prefixCls2, "-body")
    }, [_createVNode$36("table", {
      "class": "".concat(prefixCls2, "-table"),
      "cellspacing": "0",
      "role": "grid"
    }, [_createVNode$36("tbody", {
      "class": "".concat(prefixCls2, "-tbody")
    }, [yeasEls])])]), footer && _createVNode$36("div", {
      "class": "".concat(prefixCls2, "-footer")
    }, [footer])])]);
  }
};
const { createTextVNode: _createTextVNode$4, createVNode: _createVNode$35 } = await importShared("vue");
var ROW = 4;
var COL = 3;
function noop$q() {
}
function goYear$1(direction) {
  var next3 = this.sValue.clone();
  next3.add(direction, "years");
  this.setState({
    sValue: next3
  });
}
function chooseDecade(year, event) {
  var next3 = this.sValue.clone();
  next3.year(year);
  next3.month(this.sValue.month());
  this.__emit("select", next3);
  event.preventDefault();
}
const DecadePanel = {
  name: "DecadePanel",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    locale: PropTypes.object,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    rootPrefixCls: PropTypes.string,
    renderFooter: PropTypes.func
  },
  data: function data28() {
    this.nextCentury = goYear$1.bind(this, 100);
    this.previousCentury = goYear$1.bind(this, -100);
    return {
      sValue: this.value || this.defaultValue
    };
  },
  watch: {
    value: function value15(val) {
      this.sValue = val;
    }
  },
  render: function render68() {
    var _this = this;
    var value26 = this.sValue;
    var _this$$props = this.$props, locale2 = _this$$props.locale, renderFooter5 = _this$$props.renderFooter;
    var currentYear = value26.year();
    var startYear = parseInt(currentYear / 100, 10) * 100;
    var preYear = startYear - 10;
    var endYear = startYear + 99;
    var decades = [];
    var index2 = 0;
    var prefixCls2 = "".concat(this.rootPrefixCls, "-decade-panel");
    for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {
      decades[rowIndex] = [];
      for (var colIndex = 0; colIndex < COL; colIndex++) {
        var startDecade = preYear + index2 * 10;
        var endDecade = preYear + index2 * 10 + 9;
        decades[rowIndex][colIndex] = {
          startDecade,
          endDecade
        };
        index2++;
      }
    }
    var footer = renderFooter5 && renderFooter5("decade");
    var decadesEls = decades.map(function(row, decadeIndex) {
      var tds = row.map(function(decadeData) {
        var _classNameMap;
        var dStartDecade = decadeData.startDecade;
        var dEndDecade = decadeData.endDecade;
        var isLast = dStartDecade < startYear;
        var isNext = dEndDecade > endYear;
        var classNameMap = (_classNameMap = {}, _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-cell"), 1), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-selected-cell"), dStartDecade <= currentYear && currentYear <= dEndDecade), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-last-century-cell"), isLast), _defineProperty$U(_classNameMap, "".concat(prefixCls2, "-next-century-cell"), isNext), _classNameMap);
        var content = "".concat(dStartDecade, "-").concat(dEndDecade);
        var clickHandler2 = noop$q;
        if (isLast) {
          clickHandler2 = _this.previousCentury;
        } else if (isNext) {
          clickHandler2 = _this.nextCentury;
        } else {
          clickHandler2 = chooseDecade.bind(_this, dStartDecade);
        }
        return _createVNode$35("td", {
          "key": dStartDecade,
          "onClick": clickHandler2,
          "role": "gridcell",
          "class": classNameMap
        }, [_createVNode$35("a", {
          "class": "".concat(prefixCls2, "-decade")
        }, [content])]);
      });
      return _createVNode$35("tr", {
        "key": decadeIndex,
        "role": "row"
      }, [tds]);
    });
    return _createVNode$35("div", {
      "class": prefixCls2
    }, [_createVNode$35("div", {
      "class": "".concat(prefixCls2, "-header")
    }, [_createVNode$35("a", {
      "class": "".concat(prefixCls2, "-prev-century-btn"),
      "role": "button",
      "onClick": this.previousCentury,
      "title": locale2.previousCentury
    }, null), _createVNode$35("div", {
      "class": "".concat(prefixCls2, "-century")
    }, [startYear, _createTextVNode$4("-"), endYear]), _createVNode$35("a", {
      "class": "".concat(prefixCls2, "-next-century-btn"),
      "role": "button",
      "onClick": this.nextCentury,
      "title": locale2.nextCentury
    }, null)]), _createVNode$35("div", {
      "class": "".concat(prefixCls2, "-body")
    }, [_createVNode$35("table", {
      "class": "".concat(prefixCls2, "-table"),
      "cellspacing": "0",
      "role": "grid"
    }, [_createVNode$35("tbody", {
      "class": "".concat(prefixCls2, "-tbody")
    }, [decadesEls])])]), footer && _createVNode$35("div", {
      "class": "".concat(prefixCls2, "-footer")
    }, [footer])]);
  }
};
const { createVNode: _createVNode$34 } = await importShared("vue");
function noop$p() {
}
function goMonth(direction) {
  var next3 = this.value.clone();
  next3.add(direction, "months");
  this.__emit("valueChange", next3);
}
function goYear(direction) {
  var next3 = this.value.clone();
  next3.add(direction, "years");
  this.__emit("valueChange", next3);
}
function showIf(condition, el) {
  return condition ? el : null;
}
var CalendarHeader = {
  name: "CalendarHeader",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    value: PropTypes.object,
    // onValueChange: PropTypes.func,
    showTimePicker: PropTypes.looseBool,
    // onPanelChange: PropTypes.func,
    locale: PropTypes.object,
    enablePrev: PropTypes.any.def(1),
    enableNext: PropTypes.any.def(1),
    disabledMonth: PropTypes.func,
    mode: PropTypes.any,
    monthCellRender: PropTypes.func,
    monthCellContentRender: PropTypes.func,
    renderFooter: PropTypes.func
  },
  data: function data29() {
    this.nextMonth = goMonth.bind(this, 1);
    this.previousMonth = goMonth.bind(this, -1);
    this.nextYear = goYear.bind(this, 1);
    this.previousYear = goYear.bind(this, -1);
    return {
      yearPanelReferer: null
    };
  },
  methods: {
    onMonthSelect: function onMonthSelect2(value26) {
      this.__emit("panelChange", value26, "date");
      if (this.$attrs.onMonthSelect) {
        this.__emit("monthSelect", value26);
      } else {
        this.__emit("valueChange", value26);
      }
    },
    onYearSelect: function onYearSelect(value26) {
      var referer = this.yearPanelReferer;
      this.setState({
        yearPanelReferer: null
      });
      this.__emit("panelChange", value26, referer);
      this.__emit("valueChange", value26);
    },
    onDecadeSelect: function onDecadeSelect(value26) {
      this.__emit("panelChange", value26, "year");
      this.__emit("valueChange", value26);
    },
    changeYear: function changeYear(direction) {
      if (direction > 0) {
        this.nextYear();
      } else {
        this.previousYear();
      }
    },
    monthYearElement: function monthYearElement(showTimePicker) {
      var _this = this;
      var props2 = this.$props;
      var prefixCls2 = props2.prefixCls;
      var locale2 = props2.locale;
      var value26 = props2.value;
      var localeData2 = value26.localeData();
      var monthBeforeYear = locale2.monthBeforeYear;
      var selectClassName = "".concat(prefixCls2, "-").concat(monthBeforeYear ? "my-select" : "ym-select");
      var timeClassName = showTimePicker ? " ".concat(prefixCls2, "-time-status") : "";
      var year = _createVNode$34("a", {
        "class": "".concat(prefixCls2, "-year-select").concat(timeClassName),
        "role": "button",
        "onClick": showTimePicker ? noop$p : function() {
          return _this.showYearPanel("date");
        },
        "title": showTimePicker ? null : locale2.yearSelect
      }, [value26.format(locale2.yearFormat)]);
      var month = _createVNode$34("a", {
        "class": "".concat(prefixCls2, "-month-select").concat(timeClassName),
        "role": "button",
        "onClick": showTimePicker ? noop$p : this.showMonthPanel,
        "title": showTimePicker ? null : locale2.monthSelect
      }, [locale2.monthFormat ? value26.format(locale2.monthFormat) : localeData2.monthsShort(value26)]);
      var day;
      if (showTimePicker) {
        day = _createVNode$34("a", {
          "class": "".concat(prefixCls2, "-day-select").concat(timeClassName),
          "role": "button"
        }, [value26.format(locale2.dayFormat)]);
      }
      var my = [];
      if (monthBeforeYear) {
        my = [month, day, year];
      } else {
        my = [year, month, day];
      }
      return _createVNode$34("span", {
        "class": selectClassName
      }, [my]);
    },
    showMonthPanel: function showMonthPanel() {
      this.__emit("panelChange", null, "month");
    },
    showYearPanel: function showYearPanel(referer) {
      this.setState({
        yearPanelReferer: referer
      });
      this.__emit("panelChange", null, "year");
    },
    showDecadePanel: function showDecadePanel() {
      this.__emit("panelChange", null, "decade");
    }
  },
  render: function render69() {
    var _this2 = this;
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, locale2 = props2.locale, mode4 = props2.mode, value26 = props2.value, showTimePicker = props2.showTimePicker, enableNext = props2.enableNext, enablePrev = props2.enablePrev, disabledMonth = props2.disabledMonth, renderFooter5 = props2.renderFooter;
    var panel = null;
    if (mode4 === "month") {
      panel = _createVNode$34(MonthPanel, {
        "locale": locale2,
        "value": value26,
        "rootPrefixCls": prefixCls2,
        "onSelect": this.onMonthSelect,
        "onYearPanelShow": function onYearPanelShow() {
          return _this2.showYearPanel("month");
        },
        "disabledDate": disabledMonth,
        "cellRender": props2.monthCellRender,
        "contentRender": props2.monthCellContentRender,
        "renderFooter": renderFooter5,
        "changeYear": this.changeYear
      }, null);
    }
    if (mode4 === "year") {
      panel = _createVNode$34(YearPanel, {
        "locale": locale2,
        "value": value26,
        "rootPrefixCls": prefixCls2,
        "onSelect": this.onYearSelect,
        "onDecadePanelShow": this.showDecadePanel,
        "renderFooter": renderFooter5
      }, null);
    }
    if (mode4 === "decade") {
      panel = _createVNode$34(DecadePanel, {
        "locale": locale2,
        "value": value26,
        "rootPrefixCls": prefixCls2,
        "onSelect": this.onDecadeSelect,
        "renderFooter": renderFooter5
      }, null);
    }
    return _createVNode$34("div", {
      "class": "".concat(prefixCls2, "-header")
    }, [_createVNode$34("div", {
      "style": {
        position: "relative"
      }
    }, [showIf(enablePrev && !showTimePicker, _createVNode$34("a", {
      "class": "".concat(prefixCls2, "-prev-year-btn"),
      "role": "button",
      "onClick": this.previousYear,
      "title": locale2.previousYear
    }, null)), showIf(enablePrev && !showTimePicker, _createVNode$34("a", {
      "class": "".concat(prefixCls2, "-prev-month-btn"),
      "role": "button",
      "onClick": this.previousMonth,
      "title": locale2.previousMonth
    }, null)), this.monthYearElement(showTimePicker), showIf(enableNext && !showTimePicker, _createVNode$34("a", {
      "class": "".concat(prefixCls2, "-next-month-btn"),
      "onClick": this.nextMonth,
      "title": locale2.nextMonth
    }, null)), showIf(enableNext && !showTimePicker, _createVNode$34("a", {
      "class": "".concat(prefixCls2, "-next-year-btn"),
      "onClick": this.nextYear,
      "title": locale2.nextYear
    }, null))]), panel]);
  }
};
const { createVNode: _createVNode$33 } = await importShared("vue");
function noop$o() {
}
var TodayButton = function TodayButton2(_2, _ref) {
  var attrs = _ref.attrs;
  var prefixCls2 = attrs.prefixCls, locale2 = attrs.locale, value26 = attrs.value, timePicker = attrs.timePicker, disabled = attrs.disabled, disabledDate = attrs.disabledDate, onToday3 = attrs.onToday, text = attrs.text;
  var localeNow = (!text && timePicker ? locale2.now : text) || locale2.today;
  var disabledToday = disabledDate && !isAllowedDate(getTodayTime(value26), disabledDate);
  var isDisabled2 = disabledToday || disabled;
  var disabledTodayClass = isDisabled2 ? "".concat(prefixCls2, "-today-btn-disabled") : "";
  return _createVNode$33("a", {
    "class": "".concat(prefixCls2, "-today-btn ").concat(disabledTodayClass),
    "role": "button",
    "onClick": isDisabled2 ? noop$o : onToday3,
    "title": getTodayTimeStr(value26)
  }, [localeNow]);
};
TodayButton.inheritAttrs = false;
const { createVNode: _createVNode$32 } = await importShared("vue");
function noop$n() {
}
var OkButton = function OkButton2(_2, _ref) {
  var attrs = _ref.attrs;
  var prefixCls2 = attrs.prefixCls, locale2 = attrs.locale, okDisabled = attrs.okDisabled, onOk3 = attrs.onOk;
  var className = "".concat(prefixCls2, "-ok-btn");
  if (okDisabled) {
    className += " ".concat(prefixCls2, "-ok-btn-disabled");
  }
  return _createVNode$32("a", {
    "class": className,
    "role": "button",
    "onClick": okDisabled ? noop$n : onOk3
  }, [locale2.ok]);
};
OkButton.inheritAttrs = false;
const { createVNode: _createVNode$31 } = await importShared("vue");
function noop$m() {
}
var TimePickerButton = function TimePickerButton2(_2, _ref) {
  var _className;
  var attrs = _ref.attrs;
  var prefixCls2 = attrs.prefixCls, locale2 = attrs.locale, showTimePicker = attrs.showTimePicker, timePickerDisabled = attrs.timePickerDisabled, _attrs$onCloseTimePic = attrs.onCloseTimePicker, onCloseTimePicker2 = _attrs$onCloseTimePic === void 0 ? noop$m : _attrs$onCloseTimePic, _attrs$onOpenTimePick = attrs.onOpenTimePicker, onOpenTimePicker2 = _attrs$onOpenTimePick === void 0 ? noop$m : _attrs$onOpenTimePick;
  var className = (_className = {}, _defineProperty$U(_className, "".concat(prefixCls2, "-time-picker-btn"), true), _defineProperty$U(_className, "".concat(prefixCls2, "-time-picker-btn-disabled"), timePickerDisabled), _className);
  var onClick7 = noop$m;
  if (!timePickerDisabled) {
    onClick7 = showTimePicker ? onCloseTimePicker2 : onOpenTimePicker2;
  }
  return _createVNode$31("a", {
    "class": className,
    "role": "button",
    "onClick": onClick7
  }, [showTimePicker ? locale2.dateSelect : locale2.timeSelect]);
};
TimePickerButton.inheritAttrs = false;
const { createVNode: _createVNode$30 } = await importShared("vue");
var CalendarFooter = {
  name: "CalendarFooter",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    showDateInput: PropTypes.looseBool,
    disabledTime: PropTypes.any,
    timePicker: PropTypes.any,
    selectedValue: PropTypes.any,
    showOk: PropTypes.looseBool,
    // onSelect: PropTypes.func,
    value: PropTypes.object,
    renderFooter: PropTypes.func,
    defaultValue: PropTypes.object,
    locale: PropTypes.object,
    showToday: PropTypes.looseBool,
    disabledDate: PropTypes.func,
    showTimePicker: PropTypes.looseBool,
    okDisabled: PropTypes.looseBool,
    mode: PropTypes.string
  },
  methods: {
    onSelect: function onSelect2(value26) {
      this.__emit("select", value26);
    },
    getRootDOMNode: function getRootDOMNode() {
      return findDOMNode(this);
    }
  },
  render: function render70() {
    var props2 = getOptionProps(this);
    var value26 = props2.value, prefixCls2 = props2.prefixCls, showOk = props2.showOk, timePicker = props2.timePicker, renderFooter5 = props2.renderFooter, showToday = props2.showToday, mode4 = props2.mode;
    var footerEl = null;
    var extraFooter = renderFooter5 && renderFooter5(mode4);
    if (showToday || timePicker || extraFooter) {
      var _cls;
      var btnProps = _extends$1(_extends$1(_extends$1({}, props2), this.$attrs), {
        value: value26
      });
      var nowEl = null;
      if (showToday) {
        nowEl = _createVNode$30(TodayButton, _objectSpread2$2({
          "key": "todayButton"
        }, btnProps), null);
      }
      delete btnProps.value;
      var okBtn = null;
      if (showOk === true || showOk !== false && !!timePicker) {
        okBtn = _createVNode$30(OkButton, _objectSpread2$2({
          "key": "okButton"
        }, btnProps), null);
      }
      var timePickerBtn = null;
      if (timePicker) {
        timePickerBtn = _createVNode$30(TimePickerButton, _objectSpread2$2({
          "key": "timePickerButton"
        }, btnProps), null);
      }
      var footerBtn;
      if (nowEl || timePickerBtn || okBtn || extraFooter) {
        footerBtn = _createVNode$30("span", {
          "class": "".concat(prefixCls2, "-footer-btn")
        }, [extraFooter, nowEl, timePickerBtn, okBtn]);
      }
      var cls = (_cls = {}, _defineProperty$U(_cls, "".concat(prefixCls2, "-footer"), true), _defineProperty$U(_cls, "".concat(prefixCls2, "-footer-show-ok"), !!okBtn), _cls);
      footerEl = _createVNode$30("div", {
        "class": cls
      }, [footerBtn]);
    }
    return footerEl;
  }
};
const { createVNode: _createVNode$2$ } = await importShared("vue");
const { withDirectives: withDirectives$5 } = await importShared("vue");
var cachedSelectionStart;
var cachedSelectionEnd;
var dateInputInstance;
var DateInput = {
  name: "DateInput",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    timePicker: PropTypes.object,
    value: PropTypes.object,
    disabledTime: PropTypes.any,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.func]),
    locale: PropTypes.object,
    disabledDate: PropTypes.func,
    // onChange: PropTypes.func,
    // onClear: PropTypes.func,
    placeholder: PropTypes.string,
    // onSelect: PropTypes.func,
    selectedValue: PropTypes.object,
    clearIcon: PropTypes.any,
    inputMode: PropTypes.string,
    inputReadOnly: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    showClear: PropTypes.looseBool
  },
  data: function data30() {
    var selectedValue6 = this.selectedValue;
    return {
      str: formatDate$1(selectedValue6, this.format),
      invalid: false,
      hasFocus: false
    };
  },
  watch: {
    selectedValue: function selectedValue3() {
      this.setState();
    },
    format: function format() {
      this.setState();
    }
  },
  updated: function updated8() {
    var _this = this;
    this.$nextTick(function() {
      if (dateInputInstance && _this.$data.hasFocus && !_this.invalid && !(cachedSelectionStart === 0 && cachedSelectionEnd === 0)) {
        dateInputInstance.setSelectionRange(cachedSelectionStart, cachedSelectionEnd);
      }
    });
  },
  getInstance: function getInstance() {
    return dateInputInstance;
  },
  methods: {
    getDerivedStateFromProps: function getDerivedStateFromProps(nextProps, state) {
      var newState = {};
      if (dateInputInstance) {
        cachedSelectionStart = dateInputInstance.selectionStart;
        cachedSelectionEnd = dateInputInstance.selectionEnd;
      }
      var selectedValue6 = nextProps.selectedValue;
      if (!state.hasFocus) {
        newState = {
          str: formatDate$1(selectedValue6, this.format),
          invalid: false
        };
      }
      return newState;
    },
    onClear: function onClear() {
      this.setState({
        str: ""
      });
      this.__emit("clear", null);
    },
    onInputChange: function onInputChange(e2) {
      var _e$target = e2.target, str = _e$target.value, composing = _e$target.composing;
      var _this$str = this.str, oldStr = _this$str === void 0 ? "" : _this$str;
      if (e2.isComposing || composing || oldStr === str) return;
      var _this$$props = this.$props, disabledDate = _this$$props.disabledDate, format3 = _this$$props.format, selectedValue6 = _this$$props.selectedValue;
      if (!str) {
        this.__emit("change", null);
        this.setState({
          invalid: false,
          str
        });
        return;
      }
      var parsed = hooks(str, format3, true);
      if (!parsed.isValid()) {
        this.setState({
          invalid: true,
          str
        });
        return;
      }
      var value26 = this.value.clone();
      value26.year(parsed.year()).month(parsed.month()).date(parsed.date()).hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());
      if (!value26 || disabledDate && disabledDate(value26)) {
        this.setState({
          invalid: true,
          str
        });
        return;
      }
      if (selectedValue6 !== value26 || selectedValue6 && value26 && !selectedValue6.isSame(value26)) {
        this.setState({
          invalid: false,
          str
        });
        this.__emit("change", value26);
      }
    },
    onFocus: function onFocus2() {
      this.setState({
        hasFocus: true
      });
    },
    onBlur: function onBlur2() {
      this.setState(function(prevState, prevProps) {
        return {
          hasFocus: false,
          str: formatDate$1(prevProps.value, prevProps.format)
        };
      });
    },
    onKeyDown: function onKeyDown3(event) {
      var keyCode = event.keyCode;
      var _this$$props2 = this.$props, value26 = _this$$props2.value, disabledDate = _this$$props2.disabledDate;
      if (keyCode === KeyCode$1.ENTER) {
        var validateDate = !disabledDate || !disabledDate(value26);
        if (validateDate) {
          this.__emit("select", value26.clone());
        }
        event.preventDefault();
      }
    },
    getRootDOMNode: function getRootDOMNode2() {
      return findDOMNode(this);
    },
    focus: function focus11() {
      if (dateInputInstance) {
        dateInputInstance.focus();
      }
    },
    saveDateInput: function saveDateInput(dateInput) {
      dateInputInstance = dateInput;
    }
  },
  render: function render71() {
    var invalid = this.invalid, str = this.str, locale2 = this.locale, prefixCls2 = this.prefixCls, placeholder = this.placeholder, disabled = this.disabled, showClear = this.showClear, inputMode = this.inputMode, inputReadOnly = this.inputReadOnly;
    var clearIcon = getComponent(this, "clearIcon");
    var invalidClass = invalid ? "".concat(prefixCls2, "-input-invalid") : "";
    return _createVNode$2$("div", {
      "class": "".concat(prefixCls2, "-input-wrap")
    }, [_createVNode$2$("div", {
      "class": "".concat(prefixCls2, "-date-input-wrap")
    }, [withDirectives$5(_createVNode$2$("input", {
      "ref": this.saveDateInput,
      "class": "".concat(prefixCls2, "-input ").concat(invalidClass),
      "value": str,
      "disabled": disabled,
      "placeholder": placeholder,
      "onInput": this.onInputChange,
      "onChange": this.onInputChange,
      "onKeydown": this.onKeyDown,
      "onFocus": this.onFocus,
      "onBlur": this.onBlur,
      "inputMode": inputMode,
      "readonly": inputReadOnly
    }, null), [[antInput]])]), showClear ? _createVNode$2$("a", {
      "role": "button",
      "title": locale2.clear,
      "onClick": this.onClear
    }, [clearIcon || _createVNode$2$("span", {
      "class": "".concat(prefixCls2, "-clear-btn")
    }, null)]) : null]);
  }
};
function goStartMonth(time) {
  return time.clone().startOf("month");
}
function goEndMonth(time) {
  return time.clone().endOf("month");
}
function goTime(time, direction, unit) {
  return time.clone().add(direction, unit);
}
function includesTime() {
  var timeList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var time = arguments.length > 1 ? arguments[1] : void 0;
  var unit = arguments.length > 2 ? arguments[2] : void 0;
  return timeList.some(function(t2) {
    return t2.isSame(time, unit);
  });
}
const { createVNode: _createVNode$2_ } = await importShared("vue");
const { defineComponent: defineComponent$1E } = await importShared("vue");
var getMomentObjectIfValid = function getMomentObjectIfValid2(date3) {
  if (hooks.isMoment(date3) && date3.isValid()) {
    return date3;
  }
  return false;
};
var Calendar = defineComponent$1E({
  name: "Calendar",
  mixins: [BaseMixin, CommonMixin, CalendarMixin],
  inheritAttrs: false,
  props: {
    locale: PropTypes.object.def(enUs),
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.func]),
    visible: PropTypes.looseBool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    // prefixCls: PropTypes.string,
    defaultValue: PropTypes.object,
    value: PropTypes.object,
    selectedValue: PropTypes.object,
    defaultSelectedValue: PropTypes.object,
    mode: PropTypes.oneOf(["time", "date", "month", "year", "decade"]),
    // locale: PropTypes.object,
    showDateInput: PropTypes.looseBool.def(true),
    showWeekNumber: PropTypes.looseBool,
    showToday: PropTypes.looseBool.def(true),
    showOk: PropTypes.looseBool,
    // onSelect: PropTypes.func,
    // onOk: PropTypes.func,
    // onKeyDown: PropTypes.func,
    timePicker: PropTypes.any,
    dateInputPlaceholder: PropTypes.any,
    // onClear: PropTypes.func,
    // onChange: PropTypes.func,
    // onPanelChange: PropTypes.func,
    disabledDate: PropTypes.func,
    disabledTime: PropTypes.any,
    dateRender: PropTypes.func,
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    }),
    clearIcon: PropTypes.any,
    focusablePanel: PropTypes.looseBool.def(true),
    inputMode: PropTypes.string,
    inputReadOnly: PropTypes.looseBool,
    monthCellRender: PropTypes.func,
    monthCellContentRender: PropTypes.func
  },
  data: function data31() {
    var props2 = this.$props;
    return {
      sMode: this.mode || "date",
      sValue: getMomentObjectIfValid(props2.value) || getMomentObjectIfValid(props2.defaultValue) || hooks(),
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  watch: {
    mode: function mode2(val) {
      this.setState({
        sMode: val
      });
    },
    value: function value16(val) {
      this.setState({
        sValue: getMomentObjectIfValid(val) || getMomentObjectIfValid(this.defaultValue) || getNowByCurrentStateValue(this.sValue)
      });
    },
    selectedValue: function selectedValue4(val) {
      this.setState({
        sSelectedValue: val
      });
    }
  },
  mounted: function mounted16() {
    var _this = this;
    this.$nextTick(function() {
      _this.saveFocusElement(DateInput.getInstance());
    });
  },
  methods: {
    onPanelChange: function onPanelChange(value26, mode4) {
      var sValue = this.sValue;
      if (!hasProp(this, "mode")) {
        this.setState({
          sMode: mode4
        });
      }
      this.__emit("panelChange", value26 || sValue, mode4);
    },
    onKeyDown: function onKeyDown4(event) {
      if (event.target.nodeName.toLowerCase() === "input") {
        return void 0;
      }
      var keyCode = event.keyCode;
      var ctrlKey = event.ctrlKey || event.metaKey;
      var disabledDate = this.disabledDate, value26 = this.sValue;
      switch (keyCode) {
        case KeyCode$1.DOWN:
          this.goTime(1, "weeks");
          event.preventDefault();
          return 1;
        case KeyCode$1.UP:
          this.goTime(-1, "weeks");
          event.preventDefault();
          return 1;
        case KeyCode$1.LEFT:
          if (ctrlKey) {
            this.goTime(-1, "years");
          } else {
            this.goTime(-1, "days");
          }
          event.preventDefault();
          return 1;
        case KeyCode$1.RIGHT:
          if (ctrlKey) {
            this.goTime(1, "years");
          } else {
            this.goTime(1, "days");
          }
          event.preventDefault();
          return 1;
        case KeyCode$1.HOME:
          this.setValue(goStartMonth(value26));
          event.preventDefault();
          return 1;
        case KeyCode$1.END:
          this.setValue(goEndMonth(value26));
          event.preventDefault();
          return 1;
        case KeyCode$1.PAGE_DOWN:
          this.goTime(1, "month");
          event.preventDefault();
          return 1;
        case KeyCode$1.PAGE_UP:
          this.goTime(-1, "month");
          event.preventDefault();
          return 1;
        case KeyCode$1.ENTER:
          if (!disabledDate || !disabledDate(value26)) {
            this.onSelect(value26, {
              source: "keyboard"
            });
          }
          event.preventDefault();
          return 1;
        default:
          this.__emit("keydown", event);
          return 1;
      }
    },
    onClear: function onClear2() {
      this.onSelect(null);
      this.__emit("clear");
    },
    onOk: function onOk() {
      var sSelectedValue = this.sSelectedValue;
      if (this.isAllowedDate(sSelectedValue)) {
        this.__emit("ok", sSelectedValue);
      }
    },
    onDateInputChange: function onDateInputChange(value26) {
      this.onSelect(value26, {
        source: "dateInput"
      });
    },
    onDateInputSelect: function onDateInputSelect(value26) {
      this.onSelect(value26, {
        source: "dateInputSelect"
      });
    },
    onDateTableSelect: function onDateTableSelect(value26) {
      var timePicker = this.timePicker, sSelectedValue = this.sSelectedValue;
      if (!sSelectedValue && timePicker) {
        var timePickerProps3 = getOptionProps(timePicker);
        var timePickerDefaultValue = timePickerProps3.defaultValue;
        if (timePickerDefaultValue) {
          syncTime(timePickerDefaultValue, value26);
        }
      }
      this.onSelect(value26);
    },
    onToday: function onToday() {
      var sValue = this.sValue;
      var now2 = getTodayTime(sValue);
      this.onSelect(now2, {
        source: "todayButton"
      });
    },
    onBlur: function onBlur3(event) {
      var _this2 = this;
      setTimeout(function() {
        var dateInput = DateInput.getInstance();
        var rootInstance = _this2.rootInstance;
        if (!rootInstance || rootInstance.contains(document.activeElement) || dateInput && dateInput.contains(document.activeElement)) {
          return;
        }
        _this2.__emit("blur", event);
      }, 0);
    },
    getRootDOMNode: function getRootDOMNode3() {
      return findDOMNode(this);
    },
    openTimePicker: function openTimePicker() {
      this.onPanelChange(null, "time");
    },
    closeTimePicker: function closeTimePicker() {
      this.onPanelChange(null, "date");
    },
    goTime: function goTime$1(direction, unit) {
      this.setValue(goTime(this.sValue, direction, unit));
    }
  },
  render: function render72() {
    var locale2 = this.locale, prefixCls2 = this.prefixCls, disabledDate = this.disabledDate, dateInputPlaceholder = this.dateInputPlaceholder, timePicker = this.timePicker, disabledTime = this.disabledTime, showDateInput = this.showDateInput, sValue = this.sValue, sSelectedValue = this.sSelectedValue, sMode = this.sMode, renderFooter5 = this.renderFooter, inputMode = this.inputMode, inputReadOnly = this.inputReadOnly, monthCellRender = this.monthCellRender, monthCellContentRender = this.monthCellContentRender, props2 = this.$props;
    var clearIcon = getComponent(this, "clearIcon");
    var showTimePicker = sMode === "time";
    var disabledTimeConfig = showTimePicker && disabledTime && timePicker ? getTimeConfig(sSelectedValue, disabledTime) : null;
    var timePickerEle = null;
    if (timePicker && showTimePicker) {
      var timePickerOriginProps = getOptionProps(timePicker);
      var timePickerProps3 = _extends$1(_extends$1(_extends$1({
        showHour: true,
        showSecond: true,
        showMinute: true
      }, timePickerOriginProps), disabledTimeConfig), {
        value: sSelectedValue,
        disabledTime,
        onChange: this.onDateInputChange
      });
      if (timePickerOriginProps.defaultValue !== void 0) {
        timePickerProps3.defaultOpenValue = timePickerOriginProps.defaultValue;
      }
      timePickerEle = cloneElement(timePicker, timePickerProps3);
    }
    var dateInputElement = showDateInput ? _createVNode$2_(DateInput, {
      "format": this.getFormat(),
      "key": "date-input",
      "value": sValue,
      "locale": locale2,
      "placeholder": dateInputPlaceholder,
      "showClear": true,
      "disabledTime": disabledTime,
      "disabledDate": disabledDate,
      "onClear": this.onClear,
      "prefixCls": prefixCls2,
      "selectedValue": sSelectedValue,
      "onChange": this.onDateInputChange,
      "clearIcon": clearIcon,
      "onSelect": this.onDateInputSelect,
      "inputMode": inputMode,
      "inputReadOnly": inputReadOnly
    }, null) : null;
    var children = [];
    if (props2.renderSidebar) {
      children.push(props2.renderSidebar());
    }
    children.push(_createVNode$2_("div", {
      "class": "".concat(prefixCls2, "-panel"),
      "key": "panel"
    }, [dateInputElement, _createVNode$2_("div", {
      "tabindex": props2.focusablePanel ? 0 : void 0,
      "class": "".concat(prefixCls2, "-date-panel")
    }, [_createVNode$2_(CalendarHeader, {
      "locale": locale2,
      "mode": sMode,
      "value": sValue,
      "onValueChange": this.setValue,
      "onPanelChange": this.onPanelChange,
      "renderFooter": renderFooter5,
      "showTimePicker": showTimePicker,
      "prefixCls": prefixCls2,
      "monthCellRender": monthCellRender,
      "monthCellContentRender": monthCellContentRender
    }, null), timePicker && showTimePicker ? _createVNode$2_("div", {
      "class": "".concat(prefixCls2, "-time-picker")
    }, [_createVNode$2_("div", {
      "class": "".concat(prefixCls2, "-time-picker-panel")
    }, [timePickerEle])]) : null, _createVNode$2_("div", {
      "class": "".concat(prefixCls2, "-body")
    }, [_createVNode$2_(DateTable, {
      "locale": locale2,
      "value": sValue,
      "selectedValue": sSelectedValue,
      "prefixCls": prefixCls2,
      "dateRender": props2.dateRender,
      "onSelect": this.onDateTableSelect,
      "disabledDate": disabledDate,
      "showWeekNumber": props2.showWeekNumber
    }, null)]), _createVNode$2_(CalendarFooter, {
      "showOk": props2.showOk,
      "mode": sMode,
      "renderFooter": props2.renderFooter,
      "locale": locale2,
      "prefixCls": prefixCls2,
      "showToday": props2.showToday,
      "disabledTime": disabledTime,
      "showTimePicker": showTimePicker,
      "showDateInput": props2.showDateInput,
      "timePicker": timePicker,
      "selectedValue": sSelectedValue,
      "timePickerDisabled": !sSelectedValue,
      "value": sValue,
      "disabledDate": disabledDate,
      "okDisabled": props2.showOk !== false && (!sSelectedValue || !this.isAllowedDate(sSelectedValue)),
      "onOk": this.onOk,
      "onSelect": this.onSelect,
      "onToday": this.onToday,
      "onOpenTimePicker": this.openTimePicker,
      "onCloseTimePicker": this.closeTimePicker
    }, null)])]));
    return this.renderRoot({
      children,
      class: props2.showWeekNumber ? "".concat(prefixCls2, "-week-number") : ""
    });
  }
});
const { createVNode: _createVNode$2Z } = await importShared("vue");
const { defineComponent: defineComponent$1D } = await importShared("vue");
var MonthCalendar = defineComponent$1D({
  name: "MonthCalendar",
  mixins: [BaseMixin, CommonMixin, CalendarMixin],
  inheritAttrs: false,
  props: {
    locale: PropTypes.object.def(enUs),
    format: PropTypes.string,
    visible: PropTypes.looseBool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    monthCellRender: PropTypes.func,
    value: PropTypes.object,
    defaultValue: PropTypes.object,
    selectedValue: PropTypes.object,
    defaultSelectedValue: PropTypes.object,
    disabledDate: PropTypes.func,
    monthCellContentRender: PropTypes.func,
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    })
  },
  data: function data32() {
    var props2 = this.$props;
    return {
      mode: "month",
      sValue: props2.value || props2.defaultValue || hooks(),
      sSelectedValue: props2.selectedValue || props2.defaultSelectedValue
    };
  },
  methods: {
    onKeyDown: function onKeyDown5(event) {
      var keyCode = event.keyCode;
      var ctrlKey = event.ctrlKey || event.metaKey;
      var stateValue = this.sValue;
      var disabledDate = this.disabledDate;
      var value26 = stateValue;
      switch (keyCode) {
        case KeyCode$1.DOWN:
          value26 = stateValue.clone();
          value26.add(3, "months");
          break;
        case KeyCode$1.UP:
          value26 = stateValue.clone();
          value26.add(-3, "months");
          break;
        case KeyCode$1.LEFT:
          value26 = stateValue.clone();
          if (ctrlKey) {
            value26.add(-1, "years");
          } else {
            value26.add(-1, "months");
          }
          break;
        case KeyCode$1.RIGHT:
          value26 = stateValue.clone();
          if (ctrlKey) {
            value26.add(1, "years");
          } else {
            value26.add(1, "months");
          }
          break;
        case KeyCode$1.ENTER:
          if (!disabledDate || !disabledDate(stateValue)) {
            this.onSelect(stateValue);
          }
          event.preventDefault();
          return 1;
        default:
          return void 0;
      }
      if (value26 !== stateValue) {
        this.setValue(value26);
        event.preventDefault();
        return 1;
      }
    },
    handlePanelChange: function handlePanelChange(_2, mode4) {
      if (mode4 !== "date") {
        this.setState({
          mode: mode4
        });
      }
    }
  },
  render: function render73() {
    var mode4 = this.mode, value26 = this.sValue, props2 = this.$props, $slots = this.$slots;
    var prefixCls2 = props2.prefixCls, locale2 = props2.locale, disabledDate = props2.disabledDate;
    var monthCellRender = this.monthCellRender || $slots.monthCellRender;
    var monthCellContentRender = this.monthCellContentRender || $slots.monthCellContentRender;
    var renderFooter5 = this.renderFooter || $slots.renderFooter;
    var children = _createVNode$2Z("div", {
      "class": "".concat(prefixCls2, "-month-calendar-content")
    }, [_createVNode$2Z("div", {
      "class": "".concat(prefixCls2, "-month-header-wrap")
    }, [_createVNode$2Z(CalendarHeader, {
      "prefixCls": prefixCls2,
      "mode": mode4,
      "value": value26,
      "locale": locale2,
      "disabledMonth": disabledDate,
      "monthCellRender": monthCellRender,
      "monthCellContentRender": monthCellContentRender,
      "onMonthSelect": this.onSelect,
      "onValueChange": this.setValue,
      "onPanelChange": this.handlePanelChange
    }, null)]), _createVNode$2Z(CalendarFooter, {
      "prefixCls": prefixCls2,
      "renderFooter": renderFooter5
    }, null)]);
    return this.renderRoot({
      class: "".concat(props2.prefixCls, "-month-calendar"),
      children
    });
  }
});
function createChainedFunction() {
  var args = [].slice.call(arguments, 0);
  if (args.length === 1) {
    return args[0];
  }
  return function chainedFunction() {
    for (var i2 = 0; i2 < args.length; i2++) {
      if (args[i2] && args[i2].apply) {
        args[i2].apply(this, arguments);
      }
    }
  };
}
var autoAdjustOverflow$1 = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset$1 = [0, 0];
var placements$1 = {
  bottomLeft: {
    points: ["tl", "tl"],
    overflow: autoAdjustOverflow$1,
    offset: [0, -3],
    targetOffset: targetOffset$1
  },
  bottomRight: {
    points: ["tr", "tr"],
    overflow: autoAdjustOverflow$1,
    offset: [0, -3],
    targetOffset: targetOffset$1
  },
  topRight: {
    points: ["br", "br"],
    overflow: autoAdjustOverflow$1,
    offset: [0, 3],
    targetOffset: targetOffset$1
  },
  topLeft: {
    points: ["bl", "bl"],
    overflow: autoAdjustOverflow$1,
    offset: [0, 3],
    targetOffset: targetOffset$1
  }
};
const { createVNode: _createVNode$2Y } = await importShared("vue");
const { defineComponent: defineComponent$1C } = await importShared("vue");
var TimeType = {
  validator: function validator3(value26) {
    if (Array.isArray(value26)) {
      return value26.length === 0 || value26.findIndex(function(val) {
        return !isNil(val) && !hooks.isMoment(val);
      }) === -1;
    } else {
      return isNil(value26) || hooks.isMoment(value26);
    }
  }
};
function refFn$1(field, component) {
  this[field] = component;
}
var Picker = defineComponent$1C({
  name: "Picker",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    animation: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),
    disabled: PropTypes.looseBool,
    transitionName: PropTypes.string,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.func]),
    // onChange: PropTypes.func,
    // onOpenChange: PropTypes.func,
    getCalendarContainer: PropTypes.func,
    calendar: PropTypes.any,
    open: PropTypes.looseBool,
    defaultOpen: PropTypes.looseBool.def(false),
    prefixCls: PropTypes.string.def("rc-calendar-picker"),
    placement: PropTypes.any.def("bottomLeft"),
    value: TimeType,
    defaultValue: TimeType,
    align: PropTypes.object.def(function() {
      return {};
    }),
    dropdownClassName: PropTypes.string,
    dateRender: PropTypes.func,
    children: PropTypes.func
  },
  data: function data33() {
    var props2 = this.$props;
    this.calendarElement = null;
    this.saveCalendarRef = refFn$1.bind(this, "calendarInstance");
    var open6;
    if (hasProp(this, "open")) {
      open6 = props2.open;
    } else {
      open6 = props2.defaultOpen;
    }
    var value26 = props2.value || props2.defaultValue;
    return {
      sOpen: open6,
      sValue: value26
    };
  },
  watch: {
    value: function value17(val) {
      this.setState({
        sValue: val
      });
    },
    open: function open2(val) {
      this.setState({
        sOpen: val
      });
    }
  },
  mounted: function mounted17() {
    this.preSOpen = this.sOpen;
  },
  updated: function updated9() {
    if (!this.preSOpen && this.sOpen) {
      this.focusTimeout = setTimeout(this.focusCalendar, 100);
    }
    this.preSOpen = this.sOpen;
  },
  beforeUnmount: function beforeUnmount13() {
    clearTimeout(this.focusTimeout);
  },
  methods: {
    onCalendarKeyDown: function onCalendarKeyDown(event) {
      if (event.keyCode === KeyCode$1.ESC) {
        event.stopPropagation();
        this.closeCalendar(this.focus);
      }
    },
    onCalendarSelect: function onCalendarSelect(value26) {
      var cause = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var props2 = this.$props;
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      var calendarProps = getOptionProps(props2.calendar);
      if (cause.source === "keyboard" || cause.source === "dateInputSelect" || !calendarProps.timePicker && cause.source !== "dateInput" || cause.source === "todayButton") {
        this.closeCalendar(this.focus);
      }
      this.__emit("change", value26);
    },
    onKeyDown: function onKeyDown6(event) {
      if (!this.sOpen && (event.keyCode === KeyCode$1.DOWN || event.keyCode === KeyCode$1.ENTER)) {
        this.openCalendar();
        event.preventDefault();
      }
    },
    onCalendarOk: function onCalendarOk() {
      this.closeCalendar(this.focus);
    },
    onCalendarClear: function onCalendarClear() {
      this.closeCalendar(this.focus);
    },
    onCalendarBlur: function onCalendarBlur() {
      this.setOpen(false);
    },
    onVisibleChange: function onVisibleChange3(open6) {
      this.setOpen(open6);
    },
    getCalendarElement: function getCalendarElement() {
      var props2 = this.$props;
      var calendarProps = getOptionProps(props2.calendar);
      var calendarEvents = getEvents(props2.calendar);
      var value26 = this.sValue;
      var defaultValue = value26;
      var extraProps = {
        ref: this.saveCalendarRef,
        defaultValue: defaultValue || calendarProps.defaultValue,
        selectedValue: value26,
        onKeydown: this.onCalendarKeyDown,
        onOk: createChainedFunction(calendarEvents.onOk, this.onCalendarOk),
        onSelect: createChainedFunction(calendarEvents.onSelect, this.onCalendarSelect),
        onClear: createChainedFunction(calendarEvents.onClear, this.onCalendarClear),
        onBlur: createChainedFunction(calendarEvents.onBlur, this.onCalendarBlur)
      };
      return cloneElement(props2.calendar, extraProps);
    },
    setOpen: function setOpen(open6, callback) {
      if (this.sOpen !== open6) {
        if (!hasProp(this, "open")) {
          this.setState({
            sOpen: open6
          }, callback);
        }
        this.__emit("openChange", open6);
      }
    },
    openCalendar: function openCalendar(callback) {
      this.setOpen(true, callback);
    },
    closeCalendar: function closeCalendar(callback) {
      this.setOpen(false, callback);
    },
    focus: function focus12() {
      if (!this.sOpen) {
        findDOMNode(this).focus();
      }
    },
    focusCalendar: function focusCalendar() {
      if (this.sOpen && !!this.calendarInstance) {
        this.calendarInstance.focus();
      }
    }
  },
  render: function render74() {
    var _this = this;
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, placement2 = props2.placement, getCalendarContainer = props2.getCalendarContainer, align = props2.align, animation2 = props2.animation, disabled = props2.disabled, dropdownClassName = props2.dropdownClassName, transitionName2 = props2.transitionName;
    var sValue = this.sValue, sOpen2 = this.sOpen;
    var childrenState = {
      value: sValue,
      open: sOpen2
    };
    var children = this.$slots.default(childrenState);
    if (this.sOpen || !this.calendarElement) {
      this.calendarElement = this.getCalendarElement();
    }
    return _createVNode$2Y(Trigger, {
      "popupAlign": align,
      "builtinPlacements": placements$1,
      "popupPlacement": placement2,
      "action": disabled && !sOpen2 ? [] : ["click"],
      "destroyPopupOnHide": true,
      "getPopupContainer": getCalendarContainer,
      "popupStyle": this.$attrs.style || {},
      "popupAnimation": animation2,
      "popupTransitionName": transitionName2,
      "popupVisible": sOpen2,
      "onPopupVisibleChange": this.onVisibleChange,
      "prefixCls": prefixCls2,
      "popupClassName": dropdownClassName,
      "popup": this.calendarElement
    }, {
      default: function _default8() {
        return [cloneElement(children, {
          onKeydown: _this.onKeyDown
        })];
      }
    });
  }
});
var CalendarOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z" } }] }, "name": "calendar", "theme": "outlined" };
const { createVNode: _createVNode$2X } = await importShared("vue");
function _objectSpread$s(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$t(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$t(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CalendarOutlined = function CalendarOutlined2(props2, context2) {
  var p = _objectSpread$s({}, props2, context2.attrs);
  return _createVNode$2X(Icon, _objectSpread$s({}, p, {
    "icon": CalendarOutlined$1
  }), null);
};
CalendarOutlined.displayName = "CalendarOutlined";
CalendarOutlined.inheritAttrs = false;
function formatDate(value26, format3) {
  if (!value26) {
    return "";
  }
  if (Array.isArray(format3)) {
    format3 = format3[0];
  }
  if (typeof format3 === "function") {
    return format3(value26);
  }
  return value26.format(format3);
}
const { resolveDirective: _resolveDirective$e, createVNode: _createVNode$2W } = await importShared("vue");
const { defineComponent: defineComponent$1B, inject: inject$J, nextTick: nextTick$j } = await importShared("vue");
function createPicker(TheCalendar, props2, name) {
  return defineComponent$1B({
    name,
    mixins: [BaseMixin],
    inheritAttrs: false,
    props: _extends$1(_extends$1({}, props2), {
      allowClear: PropTypes.looseBool.def(true),
      showToday: PropTypes.looseBool.def(true)
    }),
    setup: function setup161() {
      return {
        configProvider: inject$J("configProvider", defaultConfigProvider),
        input: void 0,
        sPrefixCls: void 0
      };
    },
    data: function data79() {
      var value26 = this.value || this.defaultValue;
      return {
        sValue: value26,
        showDate: value26,
        sOpen: !!this.open
      };
    },
    watch: {
      open: function open6(val) {
        var props3 = getOptionProps(this);
        var state = {};
        state.sOpen = val;
        if ("value" in props3 && !val && props3.value !== this.showDate) {
          state.showDate = props3.value;
        }
        this.setState(state);
      },
      value: function value26(val) {
        var state = {};
        state.sValue = val;
        if (val !== this.sValue) {
          state.showDate = val;
        }
        this.setState(state);
      },
      sOpen: function sOpen2(val, oldVal) {
        var _this = this;
        nextTick$j(function() {
          if (!hasProp(_this, "open") && oldVal && !val) {
            _this.focus();
          }
        });
      }
    },
    methods: {
      saveInput: function saveInput7(node) {
        this.input = node;
      },
      clearSelection: function clearSelection4(e2) {
        e2.preventDefault();
        e2.stopPropagation();
        this.handleChange(null);
      },
      handleChange: function handleChange22(value26) {
        if (!hasProp(this, "value")) {
          this.setState({
            sValue: value26,
            showDate: value26
          });
        }
        this.$emit("change", value26, formatDate(value26, this.format));
      },
      handleCalendarChange: function handleCalendarChange(value26) {
        this.setState({
          showDate: value26
        });
      },
      handleOpenChange: function handleOpenChange3(open6) {
        var props3 = getOptionProps(this);
        if (!("open" in props3)) {
          this.setState({
            sOpen: open6
          });
        }
        this.$emit("openChange", open6);
      },
      focus: function focus27() {
        var _a;
        (_a = this.input) === null || _a === void 0 ? void 0 : _a.focus();
      },
      blur: function blur24() {
        var _a;
        (_a = this.input) === null || _a === void 0 ? void 0 : _a.blur();
      },
      renderFooter: function renderFooter5() {
        var $slots = this.$slots, prefixCls2 = this.sPrefixCls;
        var renderExtraFooter = this.renderExtraFooter || $slots.renderExtraFooter;
        return renderExtraFooter ? _createVNode$2W("div", {
          "class": "".concat(prefixCls2, "-footer-extra")
        }, [typeof renderExtraFooter === "function" ? renderExtraFooter.apply(void 0, arguments) : renderExtraFooter]) : null;
      },
      onMouseEnter: function onMouseEnter4(e2) {
        this.$emit("mouseenter", e2);
      },
      onMouseLeave: function onMouseLeave5(e2) {
        this.$emit("mouseleave", e2);
      }
    },
    render: function render165() {
      var _classNames, _this2 = this;
      var $slots = this.$slots;
      var _this$$data = this.$data, value26 = _this$$data.sValue, showDate = _this$$data.showDate, open6 = _this$$data.sOpen;
      var suffixIcon = getComponent(this, "suffixIcon");
      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
      var props3 = omit(_extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), ["onChange"]);
      var customizePrefixCls = props3.prefixCls, locale2 = props3.locale, localeCode = props3.localeCode, inputReadOnly = props3.inputReadOnly;
      var getPrefixCls2 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("calendar", customizePrefixCls);
      this.sPrefixCls = prefixCls2;
      var dateRender = props3.dateRender || $slots.dateRender;
      var monthCellContentRender = props3.monthCellContentRender || $slots.monthCellContentRender;
      var placeholder = "placeholder" in props3 ? props3.placeholder : locale2.lang.placeholder;
      var disabledTime = props3.showTime ? props3.disabledTime : null;
      var calendarClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-time"), props3.showTime), _defineProperty$U(_classNames, "".concat(prefixCls2, "-month"), MonthCalendar === TheCalendar), _classNames));
      if (value26 && localeCode) {
        value26.locale(localeCode);
      }
      var pickerProps = {};
      var calendarProps = {};
      var pickerStyle = {};
      if (props3.showTime) {
        calendarProps.onSelect = this.handleChange;
        pickerStyle.minWidth = "195px";
      } else {
        pickerProps.onChange = this.handleChange;
      }
      if ("mode" in props3) {
        calendarProps.mode = props3.mode;
      }
      var theCalendarProps = _extends$1(_extends$1({}, calendarProps), {
        disabledDate: props3.disabledDate,
        disabledTime,
        locale: locale2.lang,
        timePicker: props3.timePicker,
        defaultValue: props3.defaultPickerValue || interopDefault(hooks)(),
        dateInputPlaceholder: placeholder,
        prefixCls: prefixCls2,
        dateRender,
        format: props3.format,
        showToday: props3.showToday,
        monthCellContentRender,
        renderFooter: this.renderFooter,
        value: showDate,
        inputReadOnly,
        onOk: props3.onOk,
        onPanelChange: props3.onPanelChange,
        onChange: this.handleCalendarChange,
        class: calendarClassName
      });
      var calendar2 = _createVNode$2W(TheCalendar, theCalendarProps, $slots);
      var clearIcon = !props3.disabled && props3.allowClear && value26 ? _createVNode$2W(CloseCircleFilled, {
        "class": "".concat(prefixCls2, "-picker-clear"),
        "onClick": this.clearSelection
      }, null) : null;
      var inputIcon = suffixIcon && (isValidElement(suffixIcon) ? cloneElement(suffixIcon, {
        class: "".concat(prefixCls2, "-picker-icon")
      }) : _createVNode$2W("span", {
        "class": "".concat(prefixCls2, "-picker-icon")
      }, [suffixIcon])) || _createVNode$2W(CalendarOutlined, {
        "class": "".concat(prefixCls2, "-picker-icon")
      }, null);
      var input = function input2(_ref) {
        var inputValue = _ref.value;
        return _createVNode$2W("div", null, [_createVNode$2W("input", {
          "ref": _this2.saveInput,
          "disabled": props3.disabled,
          "onFocus": props3.onFocus,
          "onBlur": props3.onBlur,
          "readonly": true,
          "value": formatDate(inputValue, _this2.format),
          "placeholder": placeholder,
          "class": props3.pickerInputClass,
          "tabindex": props3.tabindex,
          "name": _this2.name
        }, null), clearIcon, inputIcon]);
      };
      var vcDatePickerProps = _extends$1(_extends$1(_extends$1({}, props3), pickerProps), {
        calendar: calendar2,
        value: value26,
        prefixCls: "".concat(prefixCls2, "-picker-container"),
        open: open6,
        onOpenChange: this.handleOpenChange,
        style: props3.popupStyle
      });
      return _createVNode$2W("span", _objectSpread2$2(_objectSpread2$2({
        "id": props3.id,
        "class": classNames(props3.class, props3.pickerClass),
        "style": _extends$1(_extends$1({}, pickerStyle), props3.style)
      }, getDataAndAriaProps$1(this.$attrs)), {}, {
        "onMouseenter": this.onMouseEnter,
        "onMouseleave": this.onMouseLeave
      }), [_createVNode$2W(Picker, vcDatePickerProps, _extends$1(_extends$1({}, $slots), {
        default: isEmptySlot($slots.default) ? input : $slots.default
      }))]);
    }
  });
}
const { createVNode: _createVNode$2V } = await importShared("vue");
const { withDirectives: withDirectives$4 } = await importShared("vue");
var Header$1 = {
  inheritAttrs: false,
  name: "Header",
  mixins: [BaseMixin],
  props: {
    format: PropTypes.string,
    prefixCls: PropTypes.string,
    disabledDate: PropTypes.func,
    placeholder: PropTypes.string,
    clearText: PropTypes.string,
    value: PropTypes.object,
    inputReadOnly: PropTypes.looseBool.def(false),
    hourOptions: PropTypes.array,
    minuteOptions: PropTypes.array,
    secondOptions: PropTypes.array,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    // onChange: PropTypes.func,
    // onClear: PropTypes.func,
    // onEsc: PropTypes.func,
    allowEmpty: PropTypes.looseBool,
    defaultOpenValue: PropTypes.object,
    currentSelectPanel: PropTypes.string,
    focusOnOpen: PropTypes.looseBool,
    // onKeyDown: PropTypes.func,
    clearIcon: PropTypes.any
  },
  data: function data34() {
    var value26 = this.value, format3 = this.format;
    return {
      str: value26 && value26.format(format3) || "",
      invalid: false
    };
  },
  mounted: function mounted18() {
    var _this = this;
    if (this.focusOnOpen) {
      var requestAnimationFrame2 = window.requestAnimationFrame || window.setTimeout;
      requestAnimationFrame2(function() {
        _this.refInput.focus();
        _this.refInput.select();
      });
    }
  },
  watch: {
    value: function value18(val) {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.setState({
          str: val && val.format(_this2.format) || "",
          invalid: false
        });
      });
    }
  },
  methods: {
    onInputChange: function onInputChange2(e2) {
      var _e$target = e2.target, str = _e$target.value, composing = _e$target.composing;
      var _this$str = this.str, oldStr = _this$str === void 0 ? "" : _this$str;
      if (e2.isComposing || composing || oldStr === str) return;
      this.setState({
        str
      });
      var format3 = this.format, hourOptions = this.hourOptions, minuteOptions = this.minuteOptions, secondOptions = this.secondOptions, disabledHours3 = this.disabledHours, disabledMinutes2 = this.disabledMinutes, disabledSeconds2 = this.disabledSeconds, originalValue = this.value;
      if (str) {
        var value26 = this.getProtoValue().clone();
        var parsed = hooks(str, format3, true);
        if (!parsed.isValid()) {
          this.setState({
            invalid: true
          });
          return;
        }
        value26.hour(parsed.hour()).minute(parsed.minute()).second(parsed.second());
        if (hourOptions.indexOf(value26.hour()) < 0 || minuteOptions.indexOf(value26.minute()) < 0 || secondOptions.indexOf(value26.second()) < 0) {
          this.setState({
            invalid: true
          });
          return;
        }
        var disabledHourOptions = disabledHours3();
        var disabledMinuteOptions = disabledMinutes2(value26.hour());
        var disabledSecondOptions = disabledSeconds2(value26.hour(), value26.minute());
        if (disabledHourOptions && disabledHourOptions.indexOf(value26.hour()) >= 0 || disabledMinuteOptions && disabledMinuteOptions.indexOf(value26.minute()) >= 0 || disabledSecondOptions && disabledSecondOptions.indexOf(value26.second()) >= 0) {
          this.setState({
            invalid: true
          });
          return;
        }
        if (originalValue) {
          if (originalValue.hour() !== value26.hour() || originalValue.minute() !== value26.minute() || originalValue.second() !== value26.second()) {
            var changedValue = originalValue.clone();
            changedValue.hour(value26.hour());
            changedValue.minute(value26.minute());
            changedValue.second(value26.second());
            this.__emit("change", changedValue);
          }
        } else if (originalValue !== value26) {
          this.__emit("change", value26);
        }
      } else {
        this.__emit("change", null);
      }
      this.setState({
        invalid: false
      });
    },
    onKeyDown: function onKeyDown7(e2) {
      if (e2.keyCode === 27) {
        this.__emit("esc");
      }
      this.__emit("keydown", e2);
    },
    getProtoValue: function getProtoValue() {
      return this.value || this.defaultOpenValue;
    },
    getInput: function getInput() {
      var _this3 = this;
      var prefixCls2 = this.prefixCls, placeholder = this.placeholder, inputReadOnly = this.inputReadOnly, invalid = this.invalid, str = this.str;
      var invalidClass = invalid ? "".concat(prefixCls2, "-input-invalid") : "";
      return withDirectives$4(_createVNode$2V("input", {
        "class": "".concat(prefixCls2, "-input ").concat(invalidClass),
        "ref": function ref2(_ref) {
          _this3.refInput = _ref;
        },
        "onKeydown": this.onKeyDown,
        "value": str,
        "placeholder": placeholder,
        "onInput": this.onInputChange,
        "onChange": this.onInputChange,
        "readonly": !!inputReadOnly
      }, null), [[antInput]]);
    }
  },
  render: function render75() {
    var prefixCls2 = this.prefixCls;
    return _createVNode$2V("div", {
      "class": "".concat(prefixCls2, "-input-wrap")
    }, [this.getInput()]);
  }
};
const { createVNode: _createVNode$2U } = await importShared("vue");
function noop$l() {
}
var scrollTo = function scrollTo2(element, to2, duration2) {
  if (duration2 <= 0) {
    requestAnimationFrame(function() {
      element.scrollTop = to2;
    });
    return;
  }
  var difference = to2 - element.scrollTop;
  var perTick = difference / duration2 * 10;
  requestAnimationFrame(function() {
    element.scrollTop += perTick;
    if (element.scrollTop === to2) return;
    scrollTo2(element, to2, duration2 - 10);
  });
};
var Select$1 = {
  name: "Select",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    options: PropTypes.array,
    selectedIndex: PropTypes.number,
    type: PropTypes.string
    // onSelect: PropTypes.func,
    // onMouseEnter: PropTypes.func,
  },
  data: function data35() {
    return {
      active: false
    };
  },
  mounted: function mounted19() {
    var _this = this;
    this.$nextTick(function() {
      _this.scrollToSelected(0);
    });
  },
  watch: {
    selectedIndex: function selectedIndex() {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.scrollToSelected(120);
      });
    }
  },
  methods: {
    onSelect: function onSelect3(value26) {
      var type3 = this.type;
      this.__emit("select", type3, value26);
    },
    onEsc: function onEsc(e2) {
      this.__emit("esc", e2);
    },
    getOptions: function getOptions2() {
      var _this3 = this;
      var options2 = this.options, selectedIndex2 = this.selectedIndex, prefixCls2 = this.prefixCls;
      return options2.map(function(item, index2) {
        var _classnames;
        var cls = classNames((_classnames = {}, _defineProperty$U(_classnames, "".concat(prefixCls2, "-select-option-selected"), selectedIndex2 === index2), _defineProperty$U(_classnames, "".concat(prefixCls2, "-select-option-disabled"), item.disabled), _classnames));
        var onClick7 = item.disabled ? noop$l : function() {
          _this3.onSelect(item.value);
        };
        var onKeyDown14 = function onKeyDown15(e2) {
          if (e2.keyCode === 13) onClick7();
          else if (e2.keyCode === 27) _this3.onEsc();
        };
        return _createVNode$2U("li", {
          "role": "button",
          "onClick": onClick7,
          "class": cls,
          "key": index2,
          "disabled": item.disabled,
          "tabindex": "0",
          "onKeydown": onKeyDown14
        }, [item.value]);
      });
    },
    handleMouseEnter: function handleMouseEnter(e2) {
      this.setState({
        active: true
      });
      this.__emit("mouseenter", e2);
    },
    handleMouseLeave: function handleMouseLeave() {
      this.setState({
        active: false
      });
    },
    scrollToSelected: function scrollToSelected(duration2) {
      var select2 = findDOMNode(this);
      var list = this.$refs.list;
      if (!list) {
        return;
      }
      var index2 = this.selectedIndex;
      if (index2 < 0) {
        index2 = 0;
      }
      var topOption = list.children[index2];
      var to2 = topOption.offsetTop;
      scrollTo(select2, to2, duration2);
    }
  },
  render: function render76() {
    var _cls;
    var prefixCls2 = this.prefixCls, options2 = this.options, active = this.active;
    if (options2.length === 0) {
      return null;
    }
    var cls = (_cls = {}, _defineProperty$U(_cls, "".concat(prefixCls2, "-select"), 1), _defineProperty$U(_cls, "".concat(prefixCls2, "-select-active"), active), _cls);
    return _createVNode$2U("div", {
      "class": cls,
      "onMouseenter": this.handleMouseEnter,
      "onMouseleave": this.handleMouseLeave
    }, [_createVNode$2U("ul", {
      "ref": "list"
    }, [this.getOptions()])]);
  }
};
const { createVNode: _createVNode$2T } = await importShared("vue");
var formatOption = function formatOption2(option, disabledOptions) {
  var value26 = "".concat(option);
  if (option < 10) {
    value26 = "0".concat(option);
  }
  var disabled = false;
  if (disabledOptions && disabledOptions.indexOf(option) >= 0) {
    disabled = true;
  }
  return {
    value: value26,
    disabled
  };
};
var Combobox = {
  inheritAttrs: false,
  mixins: [BaseMixin],
  name: "Combobox",
  props: {
    format: PropTypes.string,
    defaultOpenValue: PropTypes.object,
    prefixCls: PropTypes.string,
    value: PropTypes.object,
    // onChange: PropTypes.func,
    // onAmPmChange: PropTypes.func,
    showHour: PropTypes.looseBool,
    showMinute: PropTypes.looseBool,
    showSecond: PropTypes.looseBool,
    hourOptions: PropTypes.array,
    minuteOptions: PropTypes.array,
    secondOptions: PropTypes.array,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    // onCurrentSelectPanelChange: PropTypes.func,
    use12Hours: PropTypes.looseBool,
    isAM: PropTypes.looseBool
  },
  methods: {
    onItemChange: function onItemChange(type3, itemValue) {
      var defaultOpenValue = this.defaultOpenValue, use12Hours = this.use12Hours, propValue = this.value, isAM2 = this.isAM;
      var value26 = (propValue || defaultOpenValue).clone();
      if (type3 === "hour") {
        if (use12Hours) {
          if (isAM2) {
            value26.hour(+itemValue % 12);
          } else {
            value26.hour(+itemValue % 12 + 12);
          }
        } else {
          value26.hour(+itemValue);
        }
      } else if (type3 === "minute") {
        value26.minute(+itemValue);
      } else if (type3 === "ampm") {
        var ampm = itemValue.toUpperCase();
        if (use12Hours) {
          if (ampm === "PM" && value26.hour() < 12) {
            value26.hour(value26.hour() % 12 + 12);
          }
          if (ampm === "AM") {
            if (value26.hour() >= 12) {
              value26.hour(value26.hour() - 12);
            }
          }
        }
        this.__emit("amPmChange", ampm);
      } else {
        value26.second(+itemValue);
      }
      this.__emit("change", value26);
    },
    onEnterSelectPanel: function onEnterSelectPanel(range2) {
      this.__emit("currentSelectPanelChange", range2);
    },
    onEsc: function onEsc2(e2) {
      this.__emit("esc", e2);
    },
    getHourSelect: function getHourSelect(hour) {
      var _this = this;
      var prefixCls2 = this.prefixCls, hourOptions = this.hourOptions, disabledHours3 = this.disabledHours, showHour = this.showHour, use12Hours = this.use12Hours;
      if (!showHour) {
        return null;
      }
      var disabledOptions = disabledHours3();
      var hourOptionsAdj;
      var hourAdj;
      if (use12Hours) {
        hourOptionsAdj = [12].concat(hourOptions.filter(function(h2) {
          return h2 < 12 && h2 > 0;
        }));
        hourAdj = hour % 12 || 12;
      } else {
        hourOptionsAdj = hourOptions;
        hourAdj = hour;
      }
      return _createVNode$2T(Select$1, {
        "prefixCls": prefixCls2,
        "options": hourOptionsAdj.map(function(option) {
          return formatOption(option, disabledOptions);
        }),
        "selectedIndex": hourOptionsAdj.indexOf(hourAdj),
        "type": "hour",
        "onSelect": this.onItemChange,
        "onMouseenter": function onMouseenter2() {
          return _this.onEnterSelectPanel("hour");
        },
        "onEsc": this.onEsc
      }, null);
    },
    getMinuteSelect: function getMinuteSelect(minute) {
      var _this2 = this;
      var prefixCls2 = this.prefixCls, minuteOptions = this.minuteOptions, disabledMinutes2 = this.disabledMinutes, defaultOpenValue = this.defaultOpenValue, showMinute = this.showMinute, propValue = this.value;
      if (!showMinute) {
        return null;
      }
      var value26 = propValue || defaultOpenValue;
      var disabledOptions = disabledMinutes2(value26.hour());
      return _createVNode$2T(Select$1, {
        "prefixCls": prefixCls2,
        "options": minuteOptions.map(function(option) {
          return formatOption(option, disabledOptions);
        }),
        "selectedIndex": minuteOptions.indexOf(minute),
        "type": "minute",
        "onSelect": this.onItemChange,
        "onMouseenter": function onMouseenter2() {
          return _this2.onEnterSelectPanel("minute");
        },
        "onEsc": this.onEsc
      }, null);
    },
    getSecondSelect: function getSecondSelect(second) {
      var _this3 = this;
      var prefixCls2 = this.prefixCls, secondOptions = this.secondOptions, disabledSeconds2 = this.disabledSeconds, showSecond = this.showSecond, defaultOpenValue = this.defaultOpenValue, propValue = this.value;
      if (!showSecond) {
        return null;
      }
      var value26 = propValue || defaultOpenValue;
      var disabledOptions = disabledSeconds2(value26.hour(), value26.minute());
      return _createVNode$2T(Select$1, {
        "prefixCls": prefixCls2,
        "options": secondOptions.map(function(option) {
          return formatOption(option, disabledOptions);
        }),
        "selectedIndex": secondOptions.indexOf(second),
        "type": "second",
        "onSelect": this.onItemChange,
        "onMouseenter": function onMouseenter2() {
          return _this3.onEnterSelectPanel("second");
        },
        "onEsc": this.onEsc
      }, null);
    },
    getAMPMSelect: function getAMPMSelect() {
      var _this4 = this;
      var prefixCls2 = this.prefixCls, use12Hours = this.use12Hours, format3 = this.format, isAM2 = this.isAM;
      if (!use12Hours) {
        return null;
      }
      var AMPMOptions = ["am", "pm"].map(function(c2) {
        return format3.match(/\sA/) ? c2.toUpperCase() : c2;
      }).map(function(c2) {
        return {
          value: c2
        };
      });
      var selected = isAM2 ? 0 : 1;
      return _createVNode$2T(Select$1, {
        "prefixCls": prefixCls2,
        "options": AMPMOptions,
        "selectedIndex": selected,
        "type": "ampm",
        "onSelect": this.onItemChange,
        "onMouseenter": function onMouseenter2() {
          return _this4.onEnterSelectPanel("ampm");
        },
        "onEsc": this.onEsc
      }, null);
    }
  },
  render: function render77() {
    var prefixCls2 = this.prefixCls, defaultOpenValue = this.defaultOpenValue, propValue = this.value;
    var value26 = propValue || defaultOpenValue;
    return _createVNode$2T("div", {
      "class": "".concat(prefixCls2, "-combobox")
    }, [this.getHourSelect(value26.hour()), this.getMinuteSelect(value26.minute()), this.getSecondSelect(value26.second()), this.getAMPMSelect(value26.hour())]);
  }
};
const { createVNode: _createVNode$2S } = await importShared("vue");
const { defineComponent: defineComponent$1A } = await importShared("vue");
function noop$k() {
}
function generateOptions$1(length, disabledOptions, hideDisabledOptions) {
  var step = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1;
  var arr = [];
  for (var value26 = 0; value26 < length; value26 += step) {
    if (!disabledOptions || disabledOptions.indexOf(value26) < 0 || !hideDisabledOptions) {
      arr.push(value26);
    }
  }
  return arr;
}
function toNearestValidTime(time, hourOptions, minuteOptions, secondOptions) {
  var hour = hourOptions.slice().sort(function(a2, b2) {
    return Math.abs(time.hour() - a2) - Math.abs(time.hour() - b2);
  })[0];
  var minute = minuteOptions.slice().sort(function(a2, b2) {
    return Math.abs(time.minute() - a2) - Math.abs(time.minute() - b2);
  })[0];
  var second = secondOptions.slice().sort(function(a2, b2) {
    return Math.abs(time.second() - a2) - Math.abs(time.second() - b2);
  })[0];
  return hooks("".concat(hour, ":").concat(minute, ":").concat(second), "HH:mm:ss");
}
var Panel = defineComponent$1A({
  name: "Panel",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    clearText: PropTypes.string,
    prefixCls: PropTypes.string.def("rc-time-picker-panel"),
    defaultOpenValue: {
      type: Object,
      default: function _default4() {
        return hooks();
      }
    },
    value: PropTypes.any,
    defaultValue: PropTypes.any,
    placeholder: PropTypes.string,
    format: PropTypes.string,
    inputReadOnly: PropTypes.looseBool.def(false),
    disabledHours: PropTypes.func.def(noop$k),
    disabledMinutes: PropTypes.func.def(noop$k),
    disabledSeconds: PropTypes.func.def(noop$k),
    hideDisabledOptions: PropTypes.looseBool,
    // onChange: PropTypes.func,
    // onEsc: PropTypes.func,
    allowEmpty: PropTypes.looseBool,
    showHour: PropTypes.looseBool,
    showMinute: PropTypes.looseBool,
    showSecond: PropTypes.looseBool,
    // onClear: PropTypes.func,
    use12Hours: PropTypes.looseBool.def(false),
    hourStep: PropTypes.number,
    minuteStep: PropTypes.number,
    secondStep: PropTypes.number,
    addon: PropTypes.func.def(noop$k),
    focusOnOpen: PropTypes.looseBool,
    // onKeydown: PropTypes.func,
    clearIcon: PropTypes.any
  },
  data: function data36() {
    return {
      sValue: this.value,
      selectionRange: [],
      currentSelectPanel: ""
    };
  },
  watch: {
    value: function value19(val) {
      this.setState({
        sValue: val
      });
    }
  },
  methods: {
    onChange: function onChange(newValue) {
      this.setState({
        sValue: newValue
      });
      this.__emit("change", newValue);
    },
    onAmPmChange: function onAmPmChange(ampm) {
      this.__emit("amPmChange", ampm);
    },
    onCurrentSelectPanelChange: function onCurrentSelectPanelChange(currentSelectPanel) {
      this.setState({
        currentSelectPanel
      });
    },
    // https://github.com/ant-design/ant-design/issues/5829
    close: function close2() {
      this.__emit("esc");
    },
    onEsc: function onEsc3(e2) {
      this.__emit("esc", e2);
    },
    disabledHours2: function disabledHours2() {
      var use12Hours = this.use12Hours, disabledHours3 = this.disabledHours;
      var disabledOptions = disabledHours3();
      if (use12Hours && Array.isArray(disabledOptions)) {
        if (this.isAM()) {
          disabledOptions = disabledOptions.filter(function(h2) {
            return h2 < 12;
          }).map(function(h2) {
            return h2 === 0 ? 12 : h2;
          });
        } else {
          disabledOptions = disabledOptions.map(function(h2) {
            return h2 === 12 ? 12 : h2 - 12;
          });
        }
      }
      return disabledOptions;
    },
    isAM: function isAM() {
      var value26 = this.sValue || this.defaultOpenValue;
      return value26.hour() >= 0 && value26.hour() < 12;
    }
  },
  render: function render78() {
    var prefixCls2 = this.prefixCls, placeholder = this.placeholder, disabledMinutes2 = this.disabledMinutes, addon = this.addon, disabledSeconds2 = this.disabledSeconds, hideDisabledOptions = this.hideDisabledOptions, showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, format3 = this.format, defaultOpenValue = this.defaultOpenValue, clearText = this.clearText, use12Hours = this.use12Hours, focusOnOpen = this.focusOnOpen, hourStep = this.hourStep, minuteStep = this.minuteStep, secondStep = this.secondStep, inputReadOnly = this.inputReadOnly, sValue = this.sValue, currentSelectPanel = this.currentSelectPanel;
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, _this$$attrs$onEsc = _this$$attrs.onEsc, onEsc5 = _this$$attrs$onEsc === void 0 ? noop$k : _this$$attrs$onEsc, _this$$attrs$onKeydow = _this$$attrs.onKeydown, onKeydown2 = _this$$attrs$onKeydow === void 0 ? noop$k : _this$$attrs$onKeydow;
    var clearIcon = getComponent(this, "clearIcon");
    var disabledHourOptions = this.disabledHours2();
    var disabledMinuteOptions = disabledMinutes2(sValue ? sValue.hour() : null);
    var disabledSecondOptions = disabledSeconds2(sValue ? sValue.hour() : null, sValue ? sValue.minute() : null);
    var hourOptions = generateOptions$1(24, disabledHourOptions, hideDisabledOptions, hourStep);
    var minuteOptions = generateOptions$1(60, disabledMinuteOptions, hideDisabledOptions, minuteStep);
    var secondOptions = generateOptions$1(60, disabledSecondOptions, hideDisabledOptions, secondStep);
    var validDefaultOpenValue = toNearestValidTime(defaultOpenValue, hourOptions, minuteOptions, secondOptions);
    return _createVNode$2S("div", {
      "className": classNames(className, "".concat(prefixCls2, "-inner"))
    }, [_createVNode$2S(Header$1, {
      "clearText": clearText,
      "prefixCls": prefixCls2,
      "defaultOpenValue": validDefaultOpenValue,
      "value": sValue,
      "currentSelectPanel": currentSelectPanel,
      "onEsc": onEsc5,
      "format": format3,
      "placeholder": placeholder,
      "hourOptions": hourOptions,
      "minuteOptions": minuteOptions,
      "secondOptions": secondOptions,
      "disabledHours": this.disabledHours2,
      "disabledMinutes": disabledMinutes2,
      "disabledSeconds": disabledSeconds2,
      "onChange": this.onChange,
      "focusOnOpen": focusOnOpen,
      "onKeydown": onKeydown2,
      "inputReadOnly": inputReadOnly,
      "clearIcon": clearIcon
    }, null), _createVNode$2S(Combobox, {
      "prefixCls": prefixCls2,
      "value": sValue,
      "defaultOpenValue": validDefaultOpenValue,
      "format": format3,
      "onChange": this.onChange,
      "onAmPmChange": this.onAmPmChange,
      "showHour": showHour,
      "showMinute": showMinute,
      "showSecond": showSecond,
      "hourOptions": hourOptions,
      "minuteOptions": minuteOptions,
      "secondOptions": secondOptions,
      "disabledHours": this.disabledHours2,
      "disabledMinutes": disabledMinutes2,
      "disabledSeconds": disabledSeconds2,
      "onCurrentSelectPanelChange": this.onCurrentSelectPanelChange,
      "use12Hours": use12Hours,
      "onEsc": this.onEsc,
      "isAM": this.isAM()
    }, null), addon(this)]);
  }
});
var autoAdjustOverflow = {
  adjustX: 1,
  adjustY: 1
};
var targetOffset = [0, 0];
var placements = {
  bottomLeft: {
    points: ["tl", "tl"],
    overflow: autoAdjustOverflow,
    offset: [0, -3],
    targetOffset
  },
  bottomRight: {
    points: ["tr", "tr"],
    overflow: autoAdjustOverflow,
    offset: [0, -3],
    targetOffset
  },
  topRight: {
    points: ["br", "br"],
    overflow: autoAdjustOverflow,
    offset: [0, 3],
    targetOffset
  },
  topLeft: {
    points: ["bl", "bl"],
    overflow: autoAdjustOverflow,
    offset: [0, 3],
    targetOffset
  }
};
const { createVNode: _createVNode$2R } = await importShared("vue");
const { defineComponent: defineComponent$1z } = await importShared("vue");
function noop$j() {
}
function refFn(field, component) {
  this[field] = component;
}
const VcTimePicker = defineComponent$1z({
  name: "VcTimePicker",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1({
    prefixCls: PropTypes.string,
    clearText: PropTypes.string,
    value: PropTypes.any,
    defaultOpenValue: {
      type: Object,
      default: function _default5() {
        return hooks();
      }
    },
    pickerInputClass: String,
    inputReadOnly: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    allowEmpty: PropTypes.looseBool,
    defaultValue: PropTypes.any,
    open: PropTypes.looseBool,
    defaultOpen: PropTypes.looseBool,
    align: PropTypes.object,
    placement: PropTypes.any,
    transitionName: PropTypes.string,
    getPopupContainer: PropTypes.func,
    placeholder: PropTypes.string,
    format: PropTypes.string,
    showHour: PropTypes.looseBool,
    showMinute: PropTypes.looseBool,
    showSecond: PropTypes.looseBool,
    popupClassName: PropTypes.string,
    popupStyle: PropTypes.object,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    hideDisabledOptions: PropTypes.looseBool,
    // onChange: PropTypes.func,
    // onAmPmChange: PropTypes.func,
    // onOpen: PropTypes.func,
    // onClose: PropTypes.func,
    // onFocus: PropTypes.func,
    // onBlur: PropTypes.func,
    name: PropTypes.string,
    autocomplete: PropTypes.string,
    use12Hours: PropTypes.looseBool,
    hourStep: PropTypes.number,
    minuteStep: PropTypes.number,
    secondStep: PropTypes.number,
    focusOnOpen: PropTypes.looseBool,
    // onKeyDown: PropTypes.func,
    autofocus: PropTypes.looseBool,
    id: PropTypes.string,
    inputIcon: PropTypes.any,
    clearIcon: PropTypes.any,
    addon: PropTypes.func
  }, {
    clearText: "clear",
    prefixCls: "rc-time-picker",
    defaultOpen: false,
    inputReadOnly: false,
    popupClassName: "",
    popupStyle: {},
    align: {},
    allowEmpty: true,
    showHour: true,
    showMinute: true,
    showSecond: true,
    disabledHours: noop$j,
    disabledMinutes: noop$j,
    disabledSeconds: noop$j,
    hideDisabledOptions: false,
    placement: "bottomLeft",
    use12Hours: false,
    focusOnOpen: false
  }),
  data: function data37() {
    this.saveInputRef = refFn.bind(this, "picker");
    this.savePanelRef = refFn.bind(this, "panelInstance");
    var defaultOpen = this.defaultOpen, defaultValue = this.defaultValue, _this$open = this.open, open6 = _this$open === void 0 ? defaultOpen : _this$open, _this$value = this.value, value26 = _this$value === void 0 ? defaultValue : _this$value;
    return {
      sOpen: open6,
      sValue: value26
    };
  },
  watch: {
    value: function value20(val) {
      this.setState({
        sValue: val
      });
    },
    open: function open3(val) {
      if (val !== void 0) {
        this.setState({
          sOpen: val
        });
      }
    }
  },
  mounted: function mounted20() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.autofocus) {
        _this.focus();
      }
    });
  },
  methods: {
    onPanelChange: function onPanelChange2(value26) {
      this.setValue(value26);
    },
    onAmPmChange: function onAmPmChange2(ampm) {
      this.__emit("amPmChange", ampm);
    },
    onClear: function onClear3(event) {
      event.stopPropagation();
      this.setValue(null);
      this.setOpen(false);
    },
    onVisibleChange: function onVisibleChange4(open6) {
      this.setOpen(open6);
    },
    onEsc: function onEsc4() {
      this.setOpen(false);
      this.focus();
    },
    onKeyDown: function onKeyDown8(e2) {
      if (e2.keyCode === 40) {
        this.setOpen(true);
      }
    },
    onKeyDown2: function onKeyDown22(e2) {
      this.__emit("keydown", e2);
    },
    setValue: function setValue7(value26) {
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      this.__emit("change", value26);
    },
    getFormat: function getFormat2() {
      var format3 = this.format, showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, use12Hours = this.use12Hours;
      if (format3) {
        return format3;
      }
      if (use12Hours) {
        var fmtString = [showHour ? "h" : "", showMinute ? "mm" : "", showSecond ? "ss" : ""].filter(function(item) {
          return !!item;
        }).join(":");
        return fmtString.concat(" a");
      }
      return [showHour ? "HH" : "", showMinute ? "mm" : "", showSecond ? "ss" : ""].filter(function(item) {
        return !!item;
      }).join(":");
    },
    getPanelElement: function getPanelElement() {
      var prefixCls2 = this.prefixCls, placeholder = this.placeholder, disabledHours3 = this.disabledHours, addon = this.addon, disabledMinutes2 = this.disabledMinutes, disabledSeconds2 = this.disabledSeconds, hideDisabledOptions = this.hideDisabledOptions, inputReadOnly = this.inputReadOnly, showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, defaultOpenValue = this.defaultOpenValue, clearText = this.clearText, use12Hours = this.use12Hours, focusOnOpen = this.focusOnOpen, onKeyDown23 = this.onKeyDown2, hourStep = this.hourStep, minuteStep = this.minuteStep, secondStep = this.secondStep, sValue = this.sValue;
      var clearIcon = getComponent(this, "clearIcon");
      return _createVNode$2R(Panel, {
        "clearText": clearText,
        "prefixCls": "".concat(prefixCls2, "-panel"),
        "ref": this.savePanelRef,
        "value": sValue,
        "inputReadOnly": inputReadOnly,
        "onChange": this.onPanelChange,
        "onAmPmChange": this.onAmPmChange,
        "defaultOpenValue": defaultOpenValue,
        "showHour": showHour,
        "showMinute": showMinute,
        "showSecond": showSecond,
        "onEsc": this.onEsc,
        "format": this.getFormat(),
        "placeholder": placeholder,
        "disabledHours": disabledHours3,
        "disabledMinutes": disabledMinutes2,
        "disabledSeconds": disabledSeconds2,
        "hideDisabledOptions": hideDisabledOptions,
        "use12Hours": use12Hours,
        "hourStep": hourStep,
        "minuteStep": minuteStep,
        "secondStep": secondStep,
        "focusOnOpen": focusOnOpen,
        "onKeydown": onKeyDown23,
        "clearIcon": clearIcon,
        "addon": addon
      }, null);
    },
    getPopupClassName: function getPopupClassName() {
      var showHour = this.showHour, showMinute = this.showMinute, showSecond = this.showSecond, use12Hours = this.use12Hours, prefixCls2 = this.prefixCls, popupClassName = this.popupClassName;
      var selectColumnCount = 0;
      if (showHour) {
        selectColumnCount += 1;
      }
      if (showMinute) {
        selectColumnCount += 1;
      }
      if (showSecond) {
        selectColumnCount += 1;
      }
      if (use12Hours) {
        selectColumnCount += 1;
      }
      return classNames(popupClassName, _defineProperty$U({}, "".concat(prefixCls2, "-panel-narrow"), (!showHour || !showMinute || !showSecond) && !use12Hours), "".concat(prefixCls2, "-panel-column-").concat(selectColumnCount));
    },
    setOpen: function setOpen2(open6) {
      if (this.sOpen !== open6) {
        if (!hasProp(this, "open")) {
          this.setState({
            sOpen: open6
          });
        }
        if (open6) {
          this.__emit("open", {
            open: open6
          });
        } else {
          this.__emit("close", {
            open: open6
          });
        }
      }
    },
    focus: function focus13() {
      this.picker.focus();
    },
    blur: function blur10() {
      this.picker.blur();
    },
    onFocus: function onFocus3(e2) {
      this.__emit("focus", e2);
    },
    onBlur: function onBlur4(e2) {
      this.__emit("blur", e2);
    },
    renderClearButton: function renderClearButton() {
      var _this2 = this;
      var sValue = this.sValue;
      var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, allowEmpty = _this$$props.allowEmpty, clearText = _this$$props.clearText, disabled = _this$$props.disabled;
      if (!allowEmpty || !sValue || disabled) {
        return null;
      }
      var clearIcon = getComponent(this, "clearIcon");
      if (isValidElement(clearIcon)) {
        var _ref = getEvents(clearIcon) || {}, _onClick = _ref.onClick;
        return cloneElement(clearIcon, {
          onClick: function onClick7() {
            if (_onClick) _onClick.apply(void 0, arguments);
            _this2.onClear.apply(_this2, arguments);
          }
        });
      }
      return _createVNode$2R("a", {
        "role": "button",
        "class": "".concat(prefixCls2, "-clear"),
        "title": clearText,
        "onClick": this.onClear,
        "tabindex": 0
      }, [clearIcon || _createVNode$2R("i", {
        "class": "".concat(prefixCls2, "-clear-icon")
      }, null)]);
    }
  },
  render: function render79() {
    var _this3 = this;
    var prefixCls2 = this.prefixCls, placeholder = this.placeholder, placement2 = this.placement, align = this.align, id2 = this.id, disabled = this.disabled, transitionName2 = this.transitionName, getPopupContainer = this.getPopupContainer, name = this.name, autocomplete = this.autocomplete, autofocus = this.autofocus, sOpen2 = this.sOpen, sValue = this.sValue, onFocus6 = this.onFocus, onBlur7 = this.onBlur, popupStyle = this.popupStyle, pickerInputClass = this.pickerInputClass;
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    var popupClassName = this.getPopupClassName();
    var inputIcon = getComponent(this, "inputIcon");
    return _createVNode$2R(Trigger, {
      "prefixCls": "".concat(prefixCls2, "-panel"),
      "popupClassName": popupClassName,
      "popupStyle": popupStyle,
      "popupAlign": align,
      "builtinPlacements": placements,
      "popupPlacement": placement2,
      "action": disabled ? [] : ["click"],
      "destroyPopupOnHide": true,
      "getPopupContainer": getPopupContainer,
      "popupTransitionName": transitionName2,
      "popupVisible": sOpen2,
      "onPopupVisibleChange": this.onVisibleChange,
      "popup": this.getPanelElement()
    }, {
      default: function _default8() {
        return [_createVNode$2R("span", {
          "class": classNames(prefixCls2, className),
          "style": style3
        }, [_createVNode$2R("input", {
          "class": pickerInputClass,
          "ref": _this3.saveInputRef,
          "type": "text",
          "placeholder": placeholder,
          "name": name,
          "onKeydown": _this3.onKeyDown,
          "disabled": disabled,
          "value": sValue && sValue.format(_this3.getFormat()) || "",
          "autocomplete": autocomplete,
          "onFocus": onFocus6,
          "onBlur": onBlur7,
          "autofocus": autofocus,
          "readonly": true,
          "id": id2
        }, null), inputIcon || _createVNode$2R("span", {
          "class": "".concat(prefixCls2, "-icon")
        }, null), _this3.renderClearButton()])];
      }
    });
  }
});
var ClockCircleOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z" } }, { "tag": "path", "attrs": { "d": "M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z" } }] }, "name": "clock-circle", "theme": "outlined" };
const { createVNode: _createVNode$2Q } = await importShared("vue");
function _objectSpread$r(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$s(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$s(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ClockCircleOutlined = function ClockCircleOutlined2(props2, context2) {
  var p = _objectSpread$r({}, props2, context2.attrs);
  return _createVNode$2Q(Icon, _objectSpread$r({}, p, {
    "icon": ClockCircleOutlined$1
  }), null);
};
ClockCircleOutlined.displayName = "ClockCircleOutlined";
ClockCircleOutlined.inheritAttrs = false;
const { createVNode: _createVNode$2P } = await importShared("vue");
const { defineComponent: defineComponent$1y, inject: inject$I, provide: provide$c } = await importShared("vue");
function generateShowHourMinuteSecond(format3) {
  return {
    showHour: format3.indexOf("H") > -1 || format3.indexOf("h") > -1 || format3.indexOf("k") > -1,
    showMinute: format3.indexOf("m") > -1,
    showSecond: format3.indexOf("s") > -1
  };
}
var timePickerProps = function timePickerProps2() {
  return {
    size: PropTypes.oneOf(tuple("large", "default", "small")),
    value: TimeOrTimesType,
    defaultValue: TimeOrTimesType,
    open: PropTypes.looseBool,
    format: PropTypes.string,
    disabled: PropTypes.looseBool,
    placeholder: PropTypes.string,
    prefixCls: PropTypes.string,
    hideDisabledOptions: PropTypes.looseBool,
    disabledHours: PropTypes.func,
    disabledMinutes: PropTypes.func,
    disabledSeconds: PropTypes.func,
    getPopupContainer: PropTypes.func,
    use12Hours: PropTypes.looseBool,
    focusOnOpen: PropTypes.looseBool,
    hourStep: PropTypes.number,
    minuteStep: PropTypes.number,
    secondStep: PropTypes.number,
    allowEmpty: PropTypes.looseBool,
    allowClear: PropTypes.looseBool,
    inputReadOnly: PropTypes.looseBool,
    clearText: PropTypes.string,
    defaultOpenValue: PropTypes.object,
    popupClassName: PropTypes.string,
    popupStyle: PropTypes.style,
    suffixIcon: PropTypes.any,
    align: PropTypes.object,
    placement: PropTypes.any,
    transitionName: PropTypes.string,
    autofocus: PropTypes.looseBool,
    addon: PropTypes.any,
    clearIcon: PropTypes.any,
    locale: PropTypes.object,
    valueFormat: PropTypes.string,
    onChange: PropTypes.func,
    onAmPmChange: PropTypes.func,
    onOpen: PropTypes.func,
    onClose: PropTypes.func,
    onFocus: PropTypes.func,
    onBlur: PropTypes.func,
    onKeydown: PropTypes.func,
    onOpenChange: PropTypes.func
  };
};
var TimePicker = defineComponent$1y({
  name: "ATimePicker",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(timePickerProps(), {
    align: {
      offset: [0, -2]
    },
    disabled: false,
    disabledHours: void 0,
    disabledMinutes: void 0,
    disabledSeconds: void 0,
    hideDisabledOptions: false,
    placement: "bottomLeft",
    transitionName: "slide-up",
    focusOnOpen: true,
    allowClear: true
  }),
  emits: ["update:value", "update:open", "change", "openChange", "focus", "blur", "keydown"],
  setup: function setup76() {
    return {
      popupRef: null,
      timePickerRef: null,
      configProvider: inject$I("configProvider", defaultConfigProvider)
    };
  },
  data: function data38() {
    var value26 = this.value, defaultValue = this.defaultValue, valueFormat = this.valueFormat;
    checkValidate("TimePicker", defaultValue, "defaultValue", valueFormat);
    checkValidate("TimePicker", value26, "value", valueFormat);
    warning$5(!hasProp(this, "allowEmpty"), "TimePicker", "`allowEmpty` is deprecated. Please use `allowClear` instead.");
    return {
      sValue: stringToMoment(value26 || defaultValue, valueFormat)
    };
  },
  watch: {
    value: function value21(val) {
      checkValidate("TimePicker", val, "value", this.valueFormat);
      this.setState({
        sValue: stringToMoment(val, this.valueFormat)
      });
    }
  },
  created: function created11() {
    provide$c("savePopupRef", this.savePopupRef);
  },
  methods: {
    getDefaultFormat: function getDefaultFormat() {
      var format3 = this.format, use12Hours = this.use12Hours;
      if (format3) {
        return format3;
      } else if (use12Hours) {
        return "h:mm:ss a";
      }
      return "HH:mm:ss";
    },
    getAllowClear: function getAllowClear() {
      var _this$$props = this.$props, allowClear = _this$$props.allowClear, allowEmpty = _this$$props.allowEmpty;
      if (hasProp(this, "allowClear")) {
        return allowClear;
      }
      return allowEmpty;
    },
    getDefaultLocale: function getDefaultLocale2() {
      var defaultLocale2 = _extends$1(_extends$1({}, locale$2), this.$props.locale);
      return defaultLocale2;
    },
    savePopupRef: function savePopupRef5(ref2) {
      this.popupRef = ref2;
    },
    saveTimePicker: function saveTimePicker(timePickerRef) {
      this.timePickerRef = timePickerRef;
    },
    handleChange: function handleChange11(value26) {
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      var _this$format = this.format, format3 = _this$format === void 0 ? "HH:mm:ss" : _this$format;
      var val = this.valueFormat ? momentToString(value26, this.valueFormat) : value26;
      this.$emit("update:value", val);
      this.$emit("change", val, value26 && value26.format(format3) || "");
    },
    handleOpenClose: function handleOpenClose(_ref) {
      var open6 = _ref.open;
      this.$emit("update:open", open6);
      this.$emit("openChange", open6);
    },
    focus: function focus14() {
      this.timePickerRef.focus();
    },
    blur: function blur11() {
      this.timePickerRef.blur();
    },
    renderInputIcon: function renderInputIcon(prefixCls2) {
      var suffixIcon = getComponent(this, "suffixIcon");
      suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
      var clockIcon = suffixIcon && isValidElement(suffixIcon) && cloneElement(suffixIcon, {
        class: "".concat(prefixCls2, "-clock-icon")
      }) || _createVNode$2P(ClockCircleOutlined, {
        "class": "".concat(prefixCls2, "-clock-icon")
      }, null);
      return _createVNode$2P("span", {
        "class": "".concat(prefixCls2, "-icon")
      }, [clockIcon]);
    },
    renderClearIcon: function renderClearIcon2(prefixCls2) {
      var clearIcon = getComponent(this, "clearIcon");
      var clearIconPrefixCls = "".concat(prefixCls2, "-clear");
      if (clearIcon && isValidElement(clearIcon)) {
        return cloneElement(clearIcon, {
          class: clearIconPrefixCls
        });
      }
      return _createVNode$2P(CloseCircleFilled, {
        "class": clearIconPrefixCls
      }, null);
    },
    renderTimePicker: function renderTimePicker(locale2) {
      var _pickerClassName;
      var props2 = getOptionProps(this);
      props2 = omit$1(props2, ["defaultValue", "suffixIcon", "allowEmpty", "allowClear"]);
      var className = this.$attrs.class;
      var _props = props2, customizePrefixCls = _props.prefixCls, getPopupContainer = _props.getPopupContainer, placeholder = _props.placeholder, size = _props.size;
      var getPrefixCls2 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("time-picker", customizePrefixCls);
      var inputPrefixCls = getPrefixCls2("input");
      var pickerInputClass = classNames("".concat(prefixCls2, "-input"), inputPrefixCls);
      var format3 = this.getDefaultFormat();
      var pickerClassName = (_pickerClassName = {}, _defineProperty$U(_pickerClassName, className, className), _defineProperty$U(_pickerClassName, "".concat(prefixCls2, "-").concat(size), !!size), _pickerClassName);
      var tempAddon = getComponent(this, "addon", {}, false);
      var pickerAddon = function pickerAddon2(panel) {
        return tempAddon ? _createVNode$2P("div", {
          "class": "".concat(prefixCls2, "-panel-addon")
        }, [typeof tempAddon === "function" ? tempAddon(panel) : tempAddon]) : null;
      };
      var inputIcon = this.renderInputIcon(prefixCls2);
      var clearIcon = this.renderClearIcon(prefixCls2);
      var getContextPopupContainer = this.configProvider.getPopupContainer;
      var timeProps = _extends$1(_extends$1(_extends$1(_extends$1({}, generateShowHourMinuteSecond(format3)), props2), this.$attrs), {
        allowEmpty: this.getAllowClear(),
        prefixCls: prefixCls2,
        pickerInputClass,
        getPopupContainer: getPopupContainer || getContextPopupContainer,
        format: format3,
        value: this.sValue,
        placeholder: placeholder === void 0 ? locale2.placeholder : placeholder,
        addon: pickerAddon,
        inputIcon,
        clearIcon,
        class: pickerClassName,
        ref: this.saveTimePicker,
        onChange: this.handleChange,
        onOpen: this.handleOpenClose,
        onClose: this.handleOpenClose
      });
      return _createVNode$2P(VcTimePicker, timeProps, null);
    }
  },
  render: function render80() {
    return _createVNode$2P(LocaleReceiver, {
      "componentName": "TimePicker",
      "defaultLocale": this.getDefaultLocale(),
      "children": this.renderTimePicker
    }, null);
  }
});
const index$b = withInstall(TimePicker);
const { resolveDirective: _resolveDirective$d, createVNode: _createVNode$2O } = await importShared("vue");
const { provide: provide$b, inject: inject$H, defineComponent: defineComponent$1x, nextTick: nextTick$i } = await importShared("vue");
var DEFAULT_FORMAT = {
  date: "YYYY-MM-DD",
  dateTime: "YYYY-MM-DD HH:mm:ss",
  week: "gggg-wo",
  month: "YYYY-MM"
};
var LOCALE_FORMAT_MAPPING = {
  date: "dateFormat",
  dateTime: "dateTimeFormat",
  week: "weekFormat",
  month: "monthFormat"
};
function getColumns(_ref) {
  var showHour = _ref.showHour, showMinute = _ref.showMinute, showSecond = _ref.showSecond, use12Hours = _ref.use12Hours;
  var column = 0;
  if (showHour) {
    column += 1;
  }
  if (showMinute) {
    column += 1;
  }
  if (showSecond) {
    column += 1;
  }
  if (use12Hours) {
    column += 1;
  }
  return column;
}
function wrapPicker(Picker2, props2, pickerType) {
  return defineComponent$1x({
    name: Picker2.name,
    inheritAttrs: false,
    props: _extends$1(_extends$1({}, props2), {
      transitionName: PropTypes.string.def("slide-up"),
      popupStyle: PropTypes.style,
      locale: PropTypes.any.def({})
    }),
    emits: ["update:value", "openChange", "focus", "blur", "mouseenter", "mouseleave", "change", "ok", "calendarChange"],
    setup: function setup161() {
      return {
        configProvider: inject$H("configProvider", defaultConfigProvider),
        picker: void 0,
        popupRef: void 0
      };
    },
    watch: {
      value: function value26(val) {
        checkValidate("DatePicker", val, "value", this.valueFormat);
      }
    },
    created: function created26() {
      provide$b("savePopupRef", this.savePopupRef);
    },
    mounted: function mounted45() {
      var _this = this;
      var _this$$props = this.$props, autofocus = _this$$props.autofocus, disabled = _this$$props.disabled, value26 = _this$$props.value, defaultValue = _this$$props.defaultValue, valueFormat = _this$$props.valueFormat;
      checkValidate("DatePicker", defaultValue, "defaultValue", valueFormat);
      checkValidate("DatePicker", value26, "value", valueFormat);
      if (autofocus && !disabled) {
        nextTick$i(function() {
          _this.focus();
        });
      }
    },
    methods: {
      savePicker: function savePicker2(node) {
        this.picker = node;
      },
      getDefaultLocale: function getDefaultLocale3() {
        var result = _extends$1(_extends$1({}, locale$1), this.locale);
        result.lang = _extends$1(_extends$1({}, result.lang), (this.locale || {}).lang);
        return result;
      },
      savePopupRef: function savePopupRef6(ref2) {
        this.popupRef = ref2;
      },
      handleOpenChange: function handleOpenChange3(open6) {
        this.$emit("openChange", open6);
      },
      handleFocus: function handleFocus2(e2) {
        this.$emit("focus", e2);
      },
      handleBlur: function handleBlur4(e2) {
        this.$emit("blur", e2);
      },
      handleMouseEnter: function handleMouseEnter2(e2) {
        this.$emit("mouseenter", e2);
      },
      handleMouseLeave: function handleMouseLeave2(e2) {
        this.$emit("mouseleave", e2);
      },
      handleChange: function handleChange22(date3, dateString) {
        var value26 = this.valueFormat ? momentToString(date3, this.valueFormat) : date3;
        this.$emit("update:value", value26);
        this.$emit("change", value26, dateString);
      },
      handleOk: function handleOk2(val) {
        this.$emit("ok", this.valueFormat ? momentToString(val, this.valueFormat) : val);
      },
      handleCalendarChange: function handleCalendarChange(date3, dateString) {
        this.$emit("calendarChange", this.valueFormat ? momentToString(date3, this.valueFormat) : date3, dateString);
      },
      focus: function focus27() {
        this.picker.focus();
      },
      blur: function blur24() {
        this.picker.blur();
      },
      transformValue: function transformValue(props3) {
        if ("value" in props3) {
          props3.value = stringToMoment(props3.value, this.valueFormat);
        }
        if ("defaultValue" in props3) {
          props3.defaultValue = stringToMoment(props3.defaultValue, this.valueFormat);
        }
        if ("defaultPickerValue" in props3) {
          props3.defaultPickerValue = stringToMoment(props3.defaultPickerValue, this.valueFormat);
        }
      },
      renderPicker: function renderPicker(locale2, localeCode) {
        var _classNames2;
        var props3 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
        this.transformValue(props3);
        var customizePrefixCls = props3.prefixCls, customizeInputPrefixCls = props3.inputPrefixCls, getCalendarContainer = props3.getCalendarContainer, size = props3.size, showTime = props3.showTime, disabled = props3.disabled, format3 = props3.format;
        var mergedPickerType = showTime ? "".concat(pickerType, "Time") : pickerType;
        var mergedFormat = format3 || locale2[LOCALE_FORMAT_MAPPING[mergedPickerType]] || DEFAULT_FORMAT[mergedPickerType];
        var _this$configProvider = this.configProvider, getPrefixCls2 = _this$configProvider.getPrefixCls, getContextPopupContainer = _this$configProvider.getPopupContainer;
        var getPopupContainer = getCalendarContainer || getContextPopupContainer;
        var prefixCls2 = getPrefixCls2("calendar", customizePrefixCls);
        var inputPrefixCls = getPrefixCls2("input", customizeInputPrefixCls);
        var pickerClass = classNames("".concat(prefixCls2, "-picker"), _defineProperty$U({}, "".concat(prefixCls2, "-picker-").concat(size), !!size));
        var pickerInputClass = classNames("".concat(prefixCls2, "-picker-input"), inputPrefixCls, (_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(inputPrefixCls, "-lg"), size === "large"), _defineProperty$U(_classNames2, "".concat(inputPrefixCls, "-sm"), size === "small"), _defineProperty$U(_classNames2, "".concat(inputPrefixCls, "-disabled"), disabled), _classNames2));
        var timeFormat = showTime && showTime.format || "HH:mm:ss";
        var vcTimePickerProps = _extends$1(_extends$1({}, generateShowHourMinuteSecond(timeFormat)), {
          format: timeFormat,
          use12Hours: showTime && showTime.use12Hours
        });
        var columns2 = getColumns(vcTimePickerProps);
        var timePickerCls = "".concat(prefixCls2, "-time-picker-column-").concat(columns2);
        var timePickerPanelProps = _extends$1(_extends$1(_extends$1({}, vcTimePickerProps), showTime), {
          prefixCls: "".concat(prefixCls2, "-time-picker"),
          placeholder: locale2.timePickerLocale.placeholder,
          transitionName: "slide-up",
          class: timePickerCls,
          onEsc: function onEsc5() {
          }
        });
        var timePicker = showTime ? _createVNode$2O(Panel, timePickerPanelProps, null) : null;
        var pickerProps = _extends$1(_extends$1({}, props3), {
          getCalendarContainer: getPopupContainer,
          format: mergedFormat,
          pickerClass,
          pickerInputClass,
          locale: locale2,
          localeCode,
          timePicker,
          onOpenChange: this.handleOpenChange,
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          onMouseenter: this.handleMouseEnter,
          onMouseleave: this.handleMouseLeave,
          onChange: this.handleChange,
          onOk: this.handleOk,
          onCalendarChange: this.handleCalendarChange,
          ref: this.savePicker
        });
        return _createVNode$2O(Picker2, pickerProps, this.$slots);
      }
    },
    render: function render165() {
      return _createVNode$2O(LocaleReceiver, {
        "componentName": "DatePicker",
        "defaultLocale": this.getDefaultLocale,
        "children": this.renderPicker
      }, null);
    }
  });
}
const { createVNode: _createVNode$2N } = await importShared("vue");
function noop$i() {
}
var CalendarPart = {
  name: "CalendarPart",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    value: PropTypes.any,
    hoverValue: PropTypes.any,
    selectedValue: PropTypes.any,
    direction: PropTypes.any,
    locale: PropTypes.any,
    showDateInput: PropTypes.looseBool,
    showTimePicker: PropTypes.looseBool,
    showWeekNumber: PropTypes.looseBool,
    format: PropTypes.any,
    placeholder: PropTypes.any,
    disabledDate: PropTypes.any,
    timePicker: PropTypes.any,
    disabledTime: PropTypes.any,
    disabledMonth: PropTypes.any,
    mode: PropTypes.any,
    // onInputSelect: PropTypes.func,
    timePickerDisabledTime: PropTypes.object,
    enableNext: PropTypes.any,
    enablePrev: PropTypes.any,
    clearIcon: PropTypes.any,
    dateRender: PropTypes.func,
    inputMode: PropTypes.string,
    inputReadOnly: PropTypes.looseBool
  },
  render: function render81() {
    var props2 = this.$props;
    var prefixCls2 = props2.prefixCls, value26 = props2.value, hoverValue2 = props2.hoverValue, selectedValue6 = props2.selectedValue, mode4 = props2.mode, direction = props2.direction, locale2 = props2.locale, format3 = props2.format, placeholder = props2.placeholder, disabledDate = props2.disabledDate, timePicker = props2.timePicker, disabledTime = props2.disabledTime, timePickerDisabledTime = props2.timePickerDisabledTime, showTimePicker = props2.showTimePicker, enablePrev = props2.enablePrev, enableNext = props2.enableNext, disabledMonth = props2.disabledMonth, showDateInput = props2.showDateInput, dateRender = props2.dateRender, showWeekNumber = props2.showWeekNumber, showClear = props2.showClear, inputMode = props2.inputMode, inputReadOnly = props2.inputReadOnly;
    var clearIcon = getComponent(this, "clearIcon");
    var _this$$attrs = this.$attrs, _this$$attrs$onInputC = _this$$attrs.onInputChange, onInputChange3 = _this$$attrs$onInputC === void 0 ? noop$i : _this$$attrs$onInputC, _this$$attrs$onInputS = _this$$attrs.onInputSelect, onInputSelect2 = _this$$attrs$onInputS === void 0 ? noop$i : _this$$attrs$onInputS, _this$$attrs$onValueC = _this$$attrs.onValueChange, onValueChange = _this$$attrs$onValueC === void 0 ? noop$i : _this$$attrs$onValueC, _this$$attrs$onPanelC = _this$$attrs.onPanelChange, onPanelChange3 = _this$$attrs$onPanelC === void 0 ? noop$i : _this$$attrs$onPanelC, _this$$attrs$onSelect = _this$$attrs.onSelect, onSelect6 = _this$$attrs$onSelect === void 0 ? noop$i : _this$$attrs$onSelect, _this$$attrs$onDayHov = _this$$attrs.onDayHover, onDayHover2 = _this$$attrs$onDayHov === void 0 ? noop$i : _this$$attrs$onDayHov;
    var shouldShowTimePicker = showTimePicker && timePicker;
    var disabledTimeConfig = shouldShowTimePicker && disabledTime ? getTimeConfig(selectedValue6, disabledTime) : null;
    var rangeClassName = "".concat(prefixCls2, "-range");
    var newProps = {
      locale: locale2,
      value: value26,
      prefixCls: prefixCls2,
      showTimePicker
    };
    var index2 = direction === "left" ? 0 : 1;
    var timePickerEle = null;
    if (shouldShowTimePicker) {
      var timePickerProps3 = getOptionProps(timePicker);
      timePickerEle = cloneElement(timePicker, _extends$1(_extends$1(_extends$1(_extends$1({
        showHour: true,
        showMinute: true,
        showSecond: true
      }, timePickerProps3), disabledTimeConfig), timePickerDisabledTime), {
        defaultOpenValue: value26,
        value: selectedValue6[index2],
        onChange: onInputChange3
      }));
    }
    var dateInputElement = showDateInput && _createVNode$2N(DateInput, {
      "format": format3,
      "locale": locale2,
      "prefixCls": prefixCls2,
      "timePicker": timePicker,
      "disabledDate": disabledDate,
      "placeholder": placeholder,
      "disabledTime": disabledTime,
      "value": value26,
      "showClear": showClear || false,
      "selectedValue": selectedValue6[index2],
      "onChange": onInputChange3,
      "onSelect": onInputSelect2,
      "clearIcon": clearIcon,
      "inputMode": inputMode,
      "inputReadOnly": inputReadOnly
    }, null);
    var headerProps = _extends$1(_extends$1({}, newProps), {
      mode: mode4,
      enableNext,
      enablePrev,
      disabledMonth,
      onValueChange,
      onPanelChange: onPanelChange3
    });
    var tableProps2 = _extends$1(_extends$1({}, newProps), {
      hoverValue: hoverValue2,
      selectedValue: selectedValue6,
      dateRender,
      disabledDate,
      showWeekNumber,
      onSelect: onSelect6,
      onDayHover: onDayHover2
    });
    return _createVNode$2N("div", {
      "class": "".concat(rangeClassName, "-part ").concat(rangeClassName, "-").concat(direction)
    }, [dateInputElement, _createVNode$2N("div", {
      "style": {
        outline: "none"
      }
    }, [_createVNode$2N(CalendarHeader, headerProps, null), showTimePicker ? _createVNode$2N("div", {
      "class": "".concat(prefixCls2, "-time-picker")
    }, [_createVNode$2N("div", {
      "class": "".concat(prefixCls2, "-time-picker-panel")
    }, [timePickerEle])]) : null, _createVNode$2N("div", {
      "class": "".concat(prefixCls2, "-body")
    }, [_createVNode$2N(DateTable, tableProps2, null)])])]);
  }
};
const { createVNode: _createVNode$2M } = await importShared("vue");
const { defineComponent: defineComponent$1w } = await importShared("vue");
function noop$h() {
}
function isEmptyArray$1(arr) {
  return Array.isArray(arr) && (arr.length === 0 || arr.every(function(i2) {
    return !i2;
  }));
}
function isArraysEqual(a2, b2) {
  if (a2 === b2) return true;
  if (a2 === null || typeof a2 === "undefined" || b2 === null || typeof b2 === "undefined") {
    return false;
  }
  if (a2.length !== b2.length) return false;
  for (var i2 = 0; i2 < a2.length; ++i2) {
    if (a2[i2] !== b2[i2]) return false;
  }
  return true;
}
function getValueFromSelectedValue(selectedValue6) {
  var _selectedValue = _slicedToArray$2(selectedValue6, 2), start = _selectedValue[0], end = _selectedValue[1];
  if (end && (start === void 0 || start === null)) {
    start = end.clone().subtract(1, "month");
  }
  if (start && (end === void 0 || end === null)) {
    end = start.clone().add(1, "month");
  }
  return [start, end];
}
function normalizeAnchor(props2, init) {
  var selectedValue6 = props2.selectedValue || init && props2.defaultSelectedValue;
  var value26 = props2.value || init && props2.defaultValue;
  var normalizedValue = value26 ? getValueFromSelectedValue(value26) : getValueFromSelectedValue(selectedValue6);
  return !isEmptyArray$1(normalizedValue) ? normalizedValue : init && [hooks(), hooks().add(1, "months")];
}
function generateOptions(length, extraOptionGen) {
  var arr = extraOptionGen ? extraOptionGen().concat() : [];
  for (var value26 = 0; value26 < length; value26++) {
    if (arr.indexOf(value26) === -1) {
      arr.push(value26);
    }
  }
  return arr;
}
function onInputSelect(direction, value26, cause) {
  if (!value26) {
    return;
  }
  var originalValue = this.sSelectedValue;
  var selectedValue6 = originalValue.concat();
  var index2 = direction === "left" ? 0 : 1;
  selectedValue6[index2] = value26;
  if (selectedValue6[0] && this.compare(selectedValue6[0], selectedValue6[1]) > 0) {
    selectedValue6[1 - index2] = this.sShowTimePicker ? selectedValue6[index2] : void 0;
  }
  this.__emit("inputSelect", selectedValue6);
  this.fireSelectValueChange(selectedValue6, null, cause || {
    source: "dateInput"
  });
}
var RangeCalendar = defineComponent$1w({
  name: "RangeCalendar",
  mixins: [BaseMixin, CommonMixin],
  inheritAttrs: false,
  props: {
    locale: PropTypes.object.def(enUs),
    visible: PropTypes.looseBool.def(true),
    prefixCls: PropTypes.string.def("rc-calendar"),
    dateInputPlaceholder: PropTypes.any,
    seperator: PropTypes.string.def("~"),
    defaultValue: PropTypes.any,
    value: PropTypes.any,
    hoverValue: PropTypes.any,
    mode: PropTypes.arrayOf(PropTypes.oneOf(["time", "date", "month", "year", "decade"])),
    showDateInput: PropTypes.looseBool.def(true),
    timePicker: PropTypes.any,
    showOk: PropTypes.looseBool,
    showToday: PropTypes.looseBool.def(true),
    defaultSelectedValue: PropTypes.array.def([]),
    selectedValue: PropTypes.array,
    showClear: PropTypes.looseBool,
    showWeekNumber: PropTypes.looseBool,
    // locale: PropTypes.object,
    // onChange: PropTypes.func,
    // onSelect: PropTypes.func,
    // onValueChange: PropTypes.func,
    // onHoverChange: PropTypes.func,
    // onPanelChange: PropTypes.func,
    format: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.func]),
    // onClear: PropTypes.func,
    type: PropTypes.any.def("both"),
    disabledDate: PropTypes.func,
    disabledTime: PropTypes.func.def(noop$h),
    renderFooter: PropTypes.func.def(function() {
      return null;
    }),
    renderSidebar: PropTypes.func.def(function() {
      return null;
    }),
    dateRender: PropTypes.func,
    clearIcon: PropTypes.any,
    inputReadOnly: PropTypes.looseBool
  },
  data: function data39() {
    var props2 = this.$props;
    var selectedValue6 = props2.selectedValue || props2.defaultSelectedValue;
    var value26 = normalizeAnchor(props2, 1);
    return {
      sSelectedValue: selectedValue6,
      prevSelectedValue: selectedValue6,
      firstSelectedValue: null,
      sHoverValue: props2.hoverValue || [],
      sValue: value26,
      sShowTimePicker: false,
      sMode: props2.mode || ["date", "date"],
      sPanelTriggerSource: ""
      // Trigger by which picker panel: 'start' & 'end'
    };
  },
  watch: {
    value: function value22() {
      var newState = {};
      newState.sValue = normalizeAnchor(this.$props, 0);
      this.setState(newState);
    },
    hoverValue: function hoverValue(val) {
      if (!isArraysEqual(this.sHoverValue, val)) {
        this.setState({
          sHoverValue: val
        });
      }
    },
    selectedValue: function selectedValue5(val) {
      var newState = {};
      newState.sSelectedValue = val;
      newState.prevSelectedValue = val;
      this.setState(newState);
    },
    mode: function mode3(val) {
      if (!isArraysEqual(this.sMode, val)) {
        this.setState({
          sMode: val
        });
      }
    }
  },
  methods: {
    onDatePanelEnter: function onDatePanelEnter() {
      if (this.hasSelectedValue()) {
        this.fireHoverValueChange(this.sSelectedValue.concat());
      }
    },
    onDatePanelLeave: function onDatePanelLeave() {
      if (this.hasSelectedValue()) {
        this.fireHoverValueChange([]);
      }
    },
    onSelect: function onSelect4(value26) {
      var type3 = this.type, sSelectedValue = this.sSelectedValue, prevSelectedValue = this.prevSelectedValue, firstSelectedValue = this.firstSelectedValue;
      var nextSelectedValue;
      if (type3 === "both") {
        if (!firstSelectedValue) {
          syncTime(prevSelectedValue[0], value26);
          nextSelectedValue = [value26];
        } else if (this.compare(firstSelectedValue, value26) < 0) {
          syncTime(prevSelectedValue[1], value26);
          nextSelectedValue = [firstSelectedValue, value26];
        } else {
          syncTime(prevSelectedValue[0], value26);
          syncTime(prevSelectedValue[1], firstSelectedValue);
          nextSelectedValue = [value26, firstSelectedValue];
        }
      } else if (type3 === "start") {
        syncTime(prevSelectedValue[0], value26);
        var endValue = sSelectedValue[1];
        nextSelectedValue = endValue && this.compare(endValue, value26) > 0 ? [value26, endValue] : [value26];
      } else {
        var startValue = sSelectedValue[0];
        if (startValue && this.compare(startValue, value26) <= 0) {
          syncTime(prevSelectedValue[1], value26);
          nextSelectedValue = [startValue, value26];
        } else {
          syncTime(prevSelectedValue[0], value26);
          nextSelectedValue = [value26];
        }
      }
      this.fireSelectValueChange(nextSelectedValue);
    },
    onKeyDown: function onKeyDown9(event) {
      var _this = this;
      if (event.target.nodeName.toLowerCase() === "input") {
        return;
      }
      var keyCode = event.keyCode;
      var ctrlKey = event.ctrlKey || event.metaKey;
      var _this$$data = this.$data, selectedValue6 = _this$$data.sSelectedValue, hoverValue2 = _this$$data.sHoverValue, firstSelectedValue = _this$$data.firstSelectedValue, value26 = _this$$data.sValue;
      var disabledDate = this.$props.disabledDate;
      var updateHoverPoint = function updateHoverPoint2(func) {
        var currentHoverTime;
        var nextHoverTime;
        var nextHoverValue;
        if (!firstSelectedValue) {
          currentHoverTime = hoverValue2[0] || selectedValue6[0] || value26[0] || hooks();
          nextHoverTime = func(currentHoverTime);
          nextHoverValue = [nextHoverTime];
          _this.fireHoverValueChange(nextHoverValue);
        } else {
          if (hoverValue2.length === 1) {
            currentHoverTime = hoverValue2[0].clone();
            nextHoverTime = func(currentHoverTime);
            nextHoverValue = _this.onDayHover(nextHoverTime);
          } else {
            currentHoverTime = hoverValue2[0].isSame(firstSelectedValue, "day") ? hoverValue2[1] : hoverValue2[0];
            nextHoverTime = func(currentHoverTime);
            nextHoverValue = _this.onDayHover(nextHoverTime);
          }
        }
        if (nextHoverValue.length >= 2) {
          var miss = nextHoverValue.some(function(ht) {
            return !includesTime(value26, ht, "month");
          });
          if (miss) {
            var newValue = nextHoverValue.slice().sort(function(t1, t2) {
              return t1.valueOf() - t2.valueOf();
            });
            if (newValue[0].isSame(newValue[1], "month")) {
              newValue[1] = newValue[0].clone().add(1, "month");
            }
            _this.fireValueChange(newValue);
          }
        } else if (nextHoverValue.length === 1) {
          var oriValueIndex = value26.findIndex(function(time) {
            return time.isSame(currentHoverTime, "month");
          });
          if (oriValueIndex === -1) oriValueIndex = 0;
          if (value26.every(function(time) {
            return !time.isSame(nextHoverTime, "month");
          })) {
            var _newValue = value26.slice();
            _newValue[oriValueIndex] = nextHoverTime.clone();
            _this.fireValueChange(_newValue);
          }
        }
        event.preventDefault();
        return nextHoverTime;
      };
      switch (keyCode) {
        case KeyCode$1.DOWN:
          updateHoverPoint(function(time) {
            return goTime(time, 1, "weeks");
          });
          return;
        case KeyCode$1.UP:
          updateHoverPoint(function(time) {
            return goTime(time, -1, "weeks");
          });
          return;
        case KeyCode$1.LEFT:
          if (ctrlKey) {
            updateHoverPoint(function(time) {
              return goTime(time, -1, "years");
            });
          } else {
            updateHoverPoint(function(time) {
              return goTime(time, -1, "days");
            });
          }
          return;
        case KeyCode$1.RIGHT:
          if (ctrlKey) {
            updateHoverPoint(function(time) {
              return goTime(time, 1, "years");
            });
          } else {
            updateHoverPoint(function(time) {
              return goTime(time, 1, "days");
            });
          }
          return;
        case KeyCode$1.HOME:
          updateHoverPoint(function(time) {
            return goStartMonth(time);
          });
          return;
        case KeyCode$1.END:
          updateHoverPoint(function(time) {
            return goEndMonth(time);
          });
          return;
        case KeyCode$1.PAGE_DOWN:
          updateHoverPoint(function(time) {
            return goTime(time, 1, "month");
          });
          return;
        case KeyCode$1.PAGE_UP:
          updateHoverPoint(function(time) {
            return goTime(time, -1, "month");
          });
          return;
        case KeyCode$1.ENTER: {
          var lastValue;
          if (hoverValue2.length === 0) {
            lastValue = updateHoverPoint(function(time) {
              return time;
            });
          } else if (hoverValue2.length === 1) {
            lastValue = hoverValue2[0];
          } else {
            lastValue = hoverValue2[0].isSame(firstSelectedValue, "day") ? hoverValue2[1] : hoverValue2[0];
          }
          if (lastValue && (!disabledDate || !disabledDate(lastValue))) {
            this.onSelect(lastValue);
          }
          event.preventDefault();
          return;
        }
        default:
          this.__emit("keydown", event);
      }
    },
    onDayHover: function onDayHover(value26) {
      var hoverValue2 = [];
      var sSelectedValue = this.sSelectedValue, firstSelectedValue = this.firstSelectedValue, type3 = this.type;
      if (type3 === "start" && sSelectedValue[1]) {
        hoverValue2 = this.compare(value26, sSelectedValue[1]) < 0 ? [value26, sSelectedValue[1]] : [value26];
      } else if (type3 === "end" && sSelectedValue[0]) {
        hoverValue2 = this.compare(value26, sSelectedValue[0]) > 0 ? [sSelectedValue[0], value26] : [];
      } else {
        if (!firstSelectedValue) {
          if (this.sHoverValue.length) {
            this.setState({
              sHoverValue: []
            });
          }
          return hoverValue2;
        }
        hoverValue2 = this.compare(value26, firstSelectedValue) < 0 ? [value26, firstSelectedValue] : [firstSelectedValue, value26];
      }
      this.fireHoverValueChange(hoverValue2);
      return hoverValue2;
    },
    onToday: function onToday2() {
      var startValue = getTodayTime(this.sValue[0]);
      var endValue = startValue.clone().add(1, "months");
      this.setState({
        sValue: [startValue, endValue]
      });
    },
    onOpenTimePicker: function onOpenTimePicker() {
      this.setState({
        sShowTimePicker: true
      });
    },
    onCloseTimePicker: function onCloseTimePicker() {
      this.setState({
        sShowTimePicker: false
      });
    },
    onOk: function onOk2() {
      var sSelectedValue = this.sSelectedValue;
      if (this.isAllowedDateAndTime(sSelectedValue)) {
        this.__emit("ok", sSelectedValue);
      }
    },
    onStartInputChange: function onStartInputChange() {
      for (var _len = arguments.length, oargs = new Array(_len), _key = 0; _key < _len; _key++) {
        oargs[_key] = arguments[_key];
      }
      var args = ["left"].concat(oargs);
      return onInputSelect.apply(this, args);
    },
    onEndInputChange: function onEndInputChange() {
      for (var _len2 = arguments.length, oargs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        oargs[_key2] = arguments[_key2];
      }
      var args = ["right"].concat(oargs);
      return onInputSelect.apply(this, args);
    },
    onStartInputSelect: function onStartInputSelect(value26) {
      var args = ["left", value26, {
        source: "dateInputSelect"
      }];
      return onInputSelect.apply(this, args);
    },
    onEndInputSelect: function onEndInputSelect(value26) {
      var args = ["right", value26, {
        source: "dateInputSelect"
      }];
      return onInputSelect.apply(this, args);
    },
    onStartValueChange: function onStartValueChange(leftValue) {
      var value26 = _toConsumableArray(this.sValue);
      value26[0] = leftValue;
      return this.fireValueChange(value26);
    },
    onEndValueChange: function onEndValueChange(rightValue) {
      var value26 = _toConsumableArray(this.sValue);
      value26[1] = rightValue;
      return this.fireValueChange(value26);
    },
    onStartPanelChange: function onStartPanelChange(value26, mode4) {
      var sMode = this.sMode, sValue = this.sValue;
      var newMode = [mode4, sMode[1]];
      var newValue = [value26 || sValue[0], sValue[1]];
      this.__emit("panelChange", newValue, newMode);
      var newState = {
        sPanelTriggerSource: "start"
      };
      if (!hasProp(this, "mode")) {
        newState.sMode = newMode;
      }
      this.setState(newState);
    },
    onEndPanelChange: function onEndPanelChange(value26, mode4) {
      var sMode = this.sMode, sValue = this.sValue;
      var newMode = [sMode[0], mode4];
      var newValue = [sValue[0], value26 || sValue[1]];
      this.__emit("panelChange", newValue, newMode);
      var newState = {
        sPanelTriggerSource: "end"
      };
      if (!hasProp(this, "mode")) {
        newState.sMode = newMode;
      }
      this.setState(newState);
    },
    getStartValue: function getStartValue() {
      var _this$$data2 = this.$data, selectedValue6 = _this$$data2.sSelectedValue, showTimePicker = _this$$data2.sShowTimePicker, value26 = _this$$data2.sValue, mode4 = _this$$data2.sMode, panelTriggerSource = _this$$data2.sPanelTriggerSource;
      var startValue = value26[0];
      if (selectedValue6[0] && this.$props.timePicker) {
        startValue = startValue.clone();
        syncTime(selectedValue6[0], startValue);
      }
      if (showTimePicker && selectedValue6[0]) {
        startValue = selectedValue6[0];
      }
      if (panelTriggerSource === "end" && mode4[0] === "date" && mode4[1] === "date" && startValue.isSame(value26[1], "month")) {
        startValue = startValue.clone().subtract(1, "month");
      }
      return startValue;
    },
    getEndValue: function getEndValue() {
      var _this$$data3 = this.$data, selectedValue6 = _this$$data3.sSelectedValue, showTimePicker = _this$$data3.sShowTimePicker, value26 = _this$$data3.sValue, mode4 = _this$$data3.sMode, panelTriggerSource = _this$$data3.sPanelTriggerSource;
      var endValue = value26[1] ? value26[1].clone() : value26[0].clone().add(1, "month");
      if (selectedValue6[1] && this.$props.timePicker) {
        syncTime(selectedValue6[1], endValue);
      }
      if (showTimePicker) {
        endValue = selectedValue6[1] ? selectedValue6[1] : this.getStartValue();
      }
      if (!showTimePicker && panelTriggerSource !== "end" && mode4[0] === "date" && mode4[1] === "date" && endValue.isSame(value26[0], "month")) {
        endValue = endValue.clone().add(1, "month");
      }
      return endValue;
    },
    // get disabled hours for second picker
    getEndDisableTime: function getEndDisableTime() {
      var sSelectedValue = this.sSelectedValue, sValue = this.sValue, disabledTime = this.disabledTime;
      var userSettingDisabledTime = disabledTime(sSelectedValue, "end") || {};
      var startValue = sSelectedValue && sSelectedValue[0] || sValue[0].clone();
      if (!sSelectedValue[1] || startValue.isSame(sSelectedValue[1], "day")) {
        var hours2 = startValue.hour();
        var minutes2 = startValue.minute();
        var second = startValue.second();
        var _disabledHours = userSettingDisabledTime.disabledHours, _disabledMinutes = userSettingDisabledTime.disabledMinutes, _disabledSeconds = userSettingDisabledTime.disabledSeconds;
        var oldDisabledMinutes = _disabledMinutes ? _disabledMinutes() : [];
        var olddisabledSeconds = _disabledSeconds ? _disabledSeconds() : [];
        _disabledHours = generateOptions(hours2, _disabledHours);
        _disabledMinutes = generateOptions(minutes2, _disabledMinutes);
        _disabledSeconds = generateOptions(second, _disabledSeconds);
        return {
          disabledHours: function disabledHours3() {
            return _disabledHours;
          },
          disabledMinutes: function disabledMinutes2(hour) {
            if (hour === hours2) {
              return _disabledMinutes;
            }
            return oldDisabledMinutes;
          },
          disabledSeconds: function disabledSeconds2(hour, minute) {
            if (hour === hours2 && minute === minutes2) {
              return _disabledSeconds;
            }
            return olddisabledSeconds;
          }
        };
      }
      return userSettingDisabledTime;
    },
    isAllowedDateAndTime: function isAllowedDateAndTime(selectedValue6) {
      return isAllowedDate(selectedValue6[0], this.disabledDate, this.disabledStartTime) && isAllowedDate(selectedValue6[1], this.disabledDate, this.disabledEndTime);
    },
    isMonthYearPanelShow: function isMonthYearPanelShow(mode4) {
      return ["month", "year", "decade"].indexOf(mode4) > -1;
    },
    hasSelectedValue: function hasSelectedValue() {
      var sSelectedValue = this.sSelectedValue;
      return !!sSelectedValue[1] && !!sSelectedValue[0];
    },
    compare: function compare(v1, v2) {
      if (this.timePicker) {
        return v1.diff(v2);
      }
      return v1.diff(v2, "days");
    },
    fireSelectValueChange: function fireSelectValueChange(selectedValue6, direct, cause) {
      var timePicker = this.timePicker, prevSelectedValue = this.prevSelectedValue;
      if (timePicker) {
        var timePickerProps3 = getOptionProps(timePicker);
        if (timePickerProps3.defaultValue) {
          var timePickerDefaultValue = timePickerProps3.defaultValue;
          if (!prevSelectedValue[0] && selectedValue6[0]) {
            syncTime(timePickerDefaultValue[0], selectedValue6[0]);
          }
          if (!prevSelectedValue[1] && selectedValue6[1]) {
            syncTime(timePickerDefaultValue[1], selectedValue6[1]);
          }
        }
      }
      if (!this.sSelectedValue[0] || !this.sSelectedValue[1]) {
        var startValue = selectedValue6[0] || hooks();
        var endValue = selectedValue6[1] || startValue.clone().add(1, "months");
        this.setState({
          sSelectedValue: selectedValue6,
          sValue: selectedValue6 && selectedValue6.length === 2 ? getValueFromSelectedValue([startValue, endValue]) : this.sValue
        });
      }
      if (selectedValue6[0] && !selectedValue6[1]) {
        this.setState({
          firstSelectedValue: selectedValue6[0]
        });
        this.fireHoverValueChange(selectedValue6.concat());
      }
      this.__emit("change", selectedValue6);
      if (direct || selectedValue6[0] && selectedValue6[1]) {
        this.setState({
          prevSelectedValue: selectedValue6,
          firstSelectedValue: null
        });
        this.fireHoverValueChange([]);
        this.__emit("select", selectedValue6, cause);
      }
      if (!hasProp(this, "selectedValue")) {
        this.setState({
          sSelectedValue: selectedValue6
        });
      }
    },
    fireValueChange: function fireValueChange(value26) {
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: value26
        });
      }
      this.__emit("valueChange", value26);
    },
    fireHoverValueChange: function fireHoverValueChange(hoverValue2) {
      if (!hasProp(this, "hoverValue")) {
        this.setState({
          sHoverValue: hoverValue2
        });
      }
      this.__emit("hoverChange", hoverValue2);
    },
    clear: function clear() {
      this.fireSelectValueChange([], true);
      this.__emit("clear");
    },
    disabledStartTime: function disabledStartTime(time) {
      return this.disabledTime(time, "start");
    },
    disabledEndTime: function disabledEndTime(time) {
      return this.disabledTime(time, "end");
    },
    disabledStartMonth: function disabledStartMonth(month) {
      var sValue = this.sValue;
      return month.isAfter(sValue[1], "month");
    },
    disabledEndMonth: function disabledEndMonth(month) {
      var sValue = this.sValue;
      return month.isBefore(sValue[0], "month");
    }
  },
  render: function render82() {
    var _className, _cls;
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, dateInputPlaceholder = props2.dateInputPlaceholder, timePicker = props2.timePicker, showOk = props2.showOk, locale2 = props2.locale, showClear = props2.showClear, showToday = props2.showToday, type3 = props2.type, seperator = props2.seperator;
    var clearIcon = getComponent(this, "clearIcon");
    var sHoverValue = this.sHoverValue, sSelectedValue = this.sSelectedValue, mode4 = this.sMode, sShowTimePicker = this.sShowTimePicker, sValue = this.sValue;
    var className = (_className = {}, _defineProperty$U(_className, this.$attrs.class, !!this.$attrs.class), _defineProperty$U(_className, prefixCls2, 1), _defineProperty$U(_className, "".concat(prefixCls2, "-hidden"), !props2.visible), _defineProperty$U(_className, "".concat(prefixCls2, "-range"), 1), _defineProperty$U(_className, "".concat(prefixCls2, "-show-time-picker"), sShowTimePicker), _defineProperty$U(_className, "".concat(prefixCls2, "-week-number"), props2.showWeekNumber), _className);
    var baseProps3 = _extends$1(_extends$1({}, props2), this.$attrs);
    var newProps = {
      selectedValue: sSelectedValue,
      onSelect: this.onSelect,
      onDayHover: type3 === "start" && sSelectedValue[1] || type3 === "end" && sSelectedValue[0] || !!sHoverValue.length ? this.onDayHover : noop$h
    };
    var placeholder1;
    var placeholder2;
    if (dateInputPlaceholder) {
      if (Array.isArray(dateInputPlaceholder)) {
        var _dateInputPlaceholder = _slicedToArray$2(dateInputPlaceholder, 2);
        placeholder1 = _dateInputPlaceholder[0];
        placeholder2 = _dateInputPlaceholder[1];
      } else {
        placeholder1 = placeholder2 = dateInputPlaceholder;
      }
    }
    var showOkButton = showOk === true || showOk !== false && !!timePicker;
    var cls = (_cls = {}, _defineProperty$U(_cls, "".concat(prefixCls2, "-footer"), true), _defineProperty$U(_cls, "".concat(prefixCls2, "-range-bottom"), true), _defineProperty$U(_cls, "".concat(prefixCls2, "-footer-show-ok"), showOkButton), _cls);
    var startValue = this.getStartValue();
    var endValue = this.getEndValue();
    var todayTime = getTodayTime(startValue);
    var thisMonth = todayTime.month();
    var thisYear = todayTime.year();
    var isTodayInView = startValue.year() === thisYear && startValue.month() === thisMonth || endValue.year() === thisYear && endValue.month() === thisMonth;
    var nextMonthOfStart = startValue.clone().add(1, "months");
    var isClosestMonths = nextMonthOfStart.year() === endValue.year() && nextMonthOfStart.month() === endValue.month();
    var leftPartProps = _extends$1(_extends$1(_extends$1({}, baseProps3), newProps), {
      hoverValue: sHoverValue,
      direction: "left",
      disabledTime: this.disabledStartTime,
      disabledMonth: this.disabledStartMonth,
      format: this.getFormat(),
      value: startValue,
      mode: mode4[0],
      placeholder: placeholder1,
      showDateInput: this.showDateInput,
      timePicker,
      showTimePicker: sShowTimePicker || mode4[0] === "time",
      enablePrev: true,
      enableNext: !isClosestMonths || this.isMonthYearPanelShow(mode4[1]),
      clearIcon,
      onInputChange: this.onStartInputChange,
      onInputSelect: this.onStartInputSelect,
      onValueChange: this.onStartValueChange,
      onPanelChange: this.onStartPanelChange
    });
    var rightPartProps = _extends$1(_extends$1(_extends$1({}, baseProps3), newProps), {
      hoverValue: sHoverValue,
      direction: "right",
      format: this.getFormat(),
      timePickerDisabledTime: this.getEndDisableTime(),
      placeholder: placeholder2,
      value: endValue,
      mode: mode4[1],
      showDateInput: this.showDateInput,
      timePicker,
      showTimePicker: sShowTimePicker || mode4[1] === "time",
      disabledTime: this.disabledEndTime,
      disabledMonth: this.disabledEndMonth,
      enablePrev: !isClosestMonths || this.isMonthYearPanelShow(mode4[0]),
      enableNext: true,
      clearIcon,
      onInputChange: this.onEndInputChange,
      onInputSelect: this.onEndInputSelect,
      onValueChange: this.onEndValueChange,
      onPanelChange: this.onEndPanelChange
    });
    var TodayButtonNode = null;
    if (showToday) {
      var todayButtonProps = _extends$1(_extends$1({}, baseProps3), {
        disabled: isTodayInView,
        value: sValue[0],
        text: locale2.backToToday,
        onToday: this.onToday
      });
      TodayButtonNode = _createVNode$2M(TodayButton, _objectSpread2$2({
        "key": "todayButton"
      }, todayButtonProps), null);
    }
    var TimePickerButtonNode = null;
    if (props2.timePicker) {
      var timePickerButtonProps = _extends$1(_extends$1({}, baseProps3), {
        showTimePicker: sShowTimePicker || mode4[0] === "time" && mode4[1] === "time",
        timePickerDisabled: !this.hasSelectedValue() || sHoverValue.length,
        onOpenTimePicker: this.onOpenTimePicker,
        onCloseTimePicker: this.onCloseTimePicker
      });
      TimePickerButtonNode = _createVNode$2M(TimePickerButton, _objectSpread2$2({
        "key": "timePickerButton"
      }, timePickerButtonProps), null);
    }
    var OkButtonNode = null;
    if (showOkButton) {
      var okButtonProps = _extends$1(_extends$1({}, baseProps3), {
        okDisabled: !this.isAllowedDateAndTime(sSelectedValue) || !this.hasSelectedValue() || sHoverValue.length,
        onOk: this.onOk
      });
      OkButtonNode = _createVNode$2M(OkButton, _objectSpread2$2({
        "key": "okButtonNode"
      }, okButtonProps), null);
    }
    var extraFooter = this.renderFooter(mode4);
    return _createVNode$2M("div", {
      "ref": "rootInstance",
      "class": className,
      "tabindex": "0",
      "onKeydown": this.onKeyDown
    }, [props2.renderSidebar(), _createVNode$2M("div", {
      "class": "".concat(prefixCls2, "-panel")
    }, [showClear && sSelectedValue[0] && sSelectedValue[1] ? _createVNode$2M("a", {
      "role": "button",
      "title": locale2.clear,
      "onClick": this.clear
    }, [clearIcon || _createVNode$2M("span", {
      "class": "".concat(prefixCls2, "-clear-btn")
    }, null)]) : null, _createVNode$2M("div", {
      "class": "".concat(prefixCls2, "-date-panel"),
      "onMouseleave": type3 !== "both" ? this.onDatePanelLeave : noop$h,
      "onMouseenter": type3 !== "both" ? this.onDatePanelEnter : noop$h
    }, [_createVNode$2M(CalendarPart, leftPartProps, null), _createVNode$2M("span", {
      "class": "".concat(prefixCls2, "-range-middle")
    }, [seperator]), _createVNode$2M(CalendarPart, rightPartProps, null)]), _createVNode$2M("div", {
      "class": cls
    }, [showToday || props2.timePicker || showOkButton || extraFooter ? _createVNode$2M("div", {
      "class": "".concat(prefixCls2, "-footer-btn")
    }, [extraFooter, TodayButtonNode, TimePickerButtonNode, OkButtonNode]) : null])])]);
  }
});
const { createVNode: _createVNode$2L } = await importShared("vue");
const { defineComponent: defineComponent$1v, computed: computed$w } = await importShared("vue");
var CheckableTag = defineComponent$1v({
  name: "ACheckableTag",
  props: {
    prefixCls: PropTypes.string,
    checked: PropTypes.looseBool,
    onChange: {
      type: Function
    },
    onClick: {
      type: Function
    }
  },
  emits: ["update:checked", "change", "click"],
  setup: function setup77(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit;
    var _useConfigInject = useConfigInject("tag", props2), prefixCls2 = _useConfigInject.prefixCls;
    var handleClick5 = function handleClick6(e2) {
      var checked2 = props2.checked;
      emit("update:checked", !checked2);
      emit("change", !checked2);
      emit("click", e2);
    };
    var cls = computed$w(function() {
      var _classNames;
      return classNames(prefixCls2.value, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-checkable"), true), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-checkable-checked"), props2.checked), _classNames));
    });
    return function() {
      var _a;
      return _createVNode$2L("span", {
        "class": cls.value,
        "onClick": handleClick5
      }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
    };
  }
});
const { Fragment: _Fragment$a, createVNode: _createVNode$2K } = await importShared("vue");
const { ref: ref$s, defineComponent: defineComponent$1u, watchEffect: watchEffect$3, computed: computed$v } = await importShared("vue");
var PresetColorRegex = new RegExp("^(".concat(PresetColorTypes.join("|"), ")(-inverse)?$"));
var PresetStatusColorRegex = new RegExp("^(".concat(PresetStatusColorTypes.join("|"), ")$"));
var tagProps = {
  prefixCls: PropTypes.string,
  color: {
    type: String
  },
  closable: PropTypes.looseBool.def(false),
  closeIcon: PropTypes.VNodeChild,
  visible: PropTypes.looseBool,
  onClose: {
    type: Function
  },
  icon: PropTypes.VNodeChild
};
var Tag = defineComponent$1u({
  name: "ATag",
  props: tagProps,
  emits: ["update:visible", "close"],
  slots: ["closeIcon", "icon"],
  setup: function setup78(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit, attrs = _ref.attrs;
    var _useConfigInject = useConfigInject("tag", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var visible9 = ref$s(true);
    watchEffect$3(function() {
      if (props2.visible !== void 0) {
        visible9.value = props2.visible;
      }
    });
    var handleCloseClick = function handleCloseClick2(e2) {
      e2.stopPropagation();
      emit("update:visible", false);
      emit("close", e2);
      if (e2.defaultPrevented) {
        return;
      }
      if (props2.visible === void 0) {
        visible9.value = false;
      }
    };
    var isPresetColor2 = computed$v(function() {
      var color = props2.color;
      if (!color) {
        return false;
      }
      return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);
    });
    var tagClassName = computed$v(function() {
      var _classNames;
      return classNames(prefixCls2.value, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-").concat(props2.color), isPresetColor2.value), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-has-color"), props2.color && !isPresetColor2.value), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-hidden"), !visible9.value), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _classNames));
    });
    return function() {
      var _a, _b, _c;
      var _props$icon = props2.icon, icon = _props$icon === void 0 ? (_a = slots.icon) === null || _a === void 0 ? void 0 : _a.call(slots) : _props$icon, color = props2.color, _props$closeIcon = props2.closeIcon, closeIcon = _props$closeIcon === void 0 ? (_b = slots.closeIcon) === null || _b === void 0 ? void 0 : _b.call(slots) : _props$closeIcon, _props$closable = props2.closable, closable = _props$closable === void 0 ? false : _props$closable;
      var renderCloseIcon2 = function renderCloseIcon3() {
        if (closable) {
          return closeIcon ? _createVNode$2K("div", {
            "class": "".concat(prefixCls2.value, "-close-icon"),
            "onClick": handleCloseClick
          }, [closeIcon]) : _createVNode$2K(CloseOutlined, {
            "class": "".concat(prefixCls2.value, "-close-icon"),
            "onClick": handleCloseClick
          }, null);
        }
        return null;
      };
      var tagStyle = {
        backgroundColor: color && !isPresetColor2.value ? color : void 0
      };
      var iconNode = icon || null;
      var children = (_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots);
      var kids = iconNode ? _createVNode$2K(_Fragment$a, null, [iconNode, _createVNode$2K("span", null, [children])]) : children;
      var isNeedWave = "onClick" in attrs;
      var tagNode = _createVNode$2K("span", {
        "class": tagClassName.value,
        "style": tagStyle
      }, [kids, renderCloseIcon2()]);
      return isNeedWave ? _createVNode$2K(Wave, null, {
        default: function _default8() {
          return [tagNode];
        }
      }) : tagNode;
    };
  }
});
Tag.CheckableTag = CheckableTag;
Tag.install = function(app) {
  app.component(Tag.name, Tag);
  app.component(CheckableTag.name, CheckableTag);
  return app;
};
var PickerProps = {
  name: PropTypes.string,
  transitionName: PropTypes.string,
  prefixCls: PropTypes.string,
  inputPrefixCls: PropTypes.string,
  format: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.func]),
  disabled: PropTypes.looseBool,
  allowClear: PropTypes.looseBool,
  suffixIcon: PropTypes.any,
  popupStyle: PropTypes.object,
  dropdownClassName: PropTypes.string,
  locale: PropTypes.any,
  localeCode: PropTypes.string,
  size: PropTypes.oneOf(tuple("large", "small", "default")),
  getCalendarContainer: PropTypes.func,
  open: PropTypes.looseBool,
  disabledDate: PropTypes.func,
  showToday: PropTypes.looseBool,
  dateRender: PropTypes.any,
  pickerClass: PropTypes.string,
  pickerInputClass: PropTypes.string,
  timePicker: PropTypes.any,
  autofocus: PropTypes.looseBool,
  tagPrefixCls: PropTypes.string,
  tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  align: PropTypes.object.def(function() {
    return {};
  }),
  inputReadOnly: PropTypes.looseBool,
  valueFormat: PropTypes.string,
  onOpenChange: PropTypes.func,
  onFocus: PropTypes.func,
  onBlur: PropTypes.func,
  //'onUpdate:value': PropTypes.func,
  onMouseenter: PropTypes.func,
  onMouseleave: PropTypes.func
};
var SinglePickerProps = {
  value: {
    type: [String, Object]
  },
  defaultValue: {
    type: [String, Object]
  },
  defaultPickerValue: {
    type: [String, Object]
  },
  renderExtraFooter: PropTypes.any,
  placeholder: PropTypes.string,
  onChange: PropTypes.func
};
var DatePickerProps = _extends$1(_extends$1(_extends$1({}, PickerProps), SinglePickerProps), {
  showTime: withUndefined(PropTypes.oneOfType([PropTypes.object, PropTypes.looseBool])),
  open: PropTypes.looseBool,
  disabledTime: PropTypes.func,
  mode: PropTypes.oneOf(tuple("time", "date", "month", "year", "decade")),
  onOpenChange: PropTypes.func,
  onPanelChange: PropTypes.func,
  onOk: PropTypes.func
});
var MonthPickerProps = _extends$1(_extends$1(_extends$1({}, PickerProps), SinglePickerProps), {
  placeholder: PropTypes.string,
  monthCellContentRender: PropTypes.func
});
var RangePickerProps = _extends$1(_extends$1({}, PickerProps), {
  tagPrefixCls: PropTypes.string,
  value: {
    type: Array
  },
  defaultValue: {
    type: Array
  },
  defaultPickerValue: {
    type: Array
  },
  timePicker: PropTypes.any,
  showTime: withUndefined(PropTypes.oneOfType([PropTypes.object, PropTypes.looseBool])),
  ranges: PropTypes.object,
  placeholder: PropTypes.arrayOf(String),
  mode: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(String)]),
  separator: PropTypes.any,
  disabledTime: PropTypes.func,
  showToday: PropTypes.looseBool,
  renderExtraFooter: PropTypes.any,
  onChange: PropTypes.func,
  onCalendarChange: PropTypes.func,
  onOk: PropTypes.func,
  onPanelChange: PropTypes.func,
  onMouseenter: PropTypes.func,
  onMouseleave: PropTypes.func
});
var WeekPickerProps = _extends$1(_extends$1(_extends$1({}, PickerProps), SinglePickerProps), {
  placeholder: PropTypes.string
});
const { createVNode: _createVNode$2J } = await importShared("vue");
var InputIcon = function InputIcon2(_2, _ref) {
  var _classNames;
  var attrs = _ref.attrs;
  var _a, _b;
  var suffixIcon = attrs.suffixIcon, prefixCls2 = attrs.prefixCls;
  return (suffixIcon && isValidElement(suffixIcon) ? cloneElement(suffixIcon, {
    class: classNames((_classNames = {}, _defineProperty$U(_classNames, (_a = suffixIcon.props) === null || _a === void 0 ? void 0 : _a.class, (_b = suffixIcon.props) === null || _b === void 0 ? void 0 : _b.class), _defineProperty$U(_classNames, "".concat(prefixCls2, "-picker-icon"), true), _classNames))
  }) : _createVNode$2J("span", {
    "class": "".concat(prefixCls2, "-picker-icon")
  }, [suffixIcon])) || _createVNode$2J(CalendarOutlined, {
    "class": "".concat(prefixCls2, "-picker-icon")
  }, null);
};
InputIcon.inheritAttrs = false;
const { createTextVNode: _createTextVNode$3, resolveDirective: _resolveDirective$c, createVNode: _createVNode$2I } = await importShared("vue");
const { defineComponent: defineComponent$1t, inject: inject$G, nextTick: nextTick$h } = await importShared("vue");
function getShowDateFromValue(value26, mode4) {
  var _value = _slicedToArray$2(value26, 2), start = _value[0], end = _value[1];
  if (!start && !end) {
    return;
  }
  if (mode4 && mode4[0] === "month") {
    return [start, end];
  }
  var newEnd = end && end.isSame(start, "month") ? end.clone().add(1, "month") : end;
  return [start, newEnd];
}
function pickerValueAdapter(value26) {
  if (!value26) {
    return;
  }
  if (Array.isArray(value26)) {
    return value26;
  }
  return [value26, value26.clone().add(1, "month")];
}
function isEmptyArray(arr) {
  if (Array.isArray(arr)) {
    return arr.length === 0 || arr.every(function(i2) {
      return !i2;
    });
  }
  return false;
}
function fixLocale(value26, localeCode) {
  if (!localeCode) {
    return;
  }
  if (!value26 || value26.length === 0) {
    return;
  }
  var _value2 = _slicedToArray$2(value26, 2), start = _value2[0], end = _value2[1];
  if (start) {
    start.locale(localeCode);
  }
  if (end) {
    end.locale(localeCode);
  }
}
const RangePicker = defineComponent$1t({
  name: "ARangePicker",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(RangePickerProps, {
    allowClear: true,
    showToday: false,
    separator: "~"
  }),
  setup: function setup79() {
    return {
      configProvider: inject$G("configProvider", defaultConfigProvider),
      picker: null,
      sTagPrefixCls: void 0,
      sPrefixCls: ""
    };
  },
  data: function data40() {
    var value26 = this.value || this.defaultValue || [];
    var _value3 = _slicedToArray$2(value26, 2), start = _value3[0], end = _value3[1];
    if (start && !interopDefault(hooks).isMoment(start) || end && !interopDefault(hooks).isMoment(end)) {
      throw new Error("The value/defaultValue of RangePicker must be a moment object array after `antd@2.0`, see: https://u.ant.design/date-picker-value");
    }
    var pickerValue = !value26 || isEmptyArray(value26) ? this.defaultPickerValue : value26;
    return {
      sValue: value26,
      sShowDate: pickerValueAdapter(pickerValue || interopDefault(hooks)()),
      sOpen: this.open,
      sHoverValue: []
    };
  },
  watch: {
    value: function value23(val) {
      var value26 = val || [];
      var state = {
        sValue: value26
      };
      if (!shallowEqual$1(val, this.sValue)) {
        state = _extends$1(_extends$1({}, state), {
          sShowDate: getShowDateFromValue(value26, this.mode) || this.sShowDate
        });
      }
      this.setState(state);
    },
    open: function open4(val) {
      var state = {
        sOpen: val
      };
      this.setState(state);
    },
    sOpen: function sOpen(val, oldVal) {
      var _this = this;
      nextTick$h(function() {
        if (!hasProp(_this, "open") && oldVal && !val) {
          _this.focus();
        }
      });
    }
  },
  methods: {
    setValue: function setValue8(value26, hidePanel) {
      this.handleChange(value26);
      if ((hidePanel || !this.showTime) && !hasProp(this, "open")) {
        this.setState({
          sOpen: false
        });
      }
    },
    savePicker: function savePicker(node) {
      this.picker = node;
    },
    clearSelection: function clearSelection2(e2) {
      e2.preventDefault();
      e2.stopPropagation();
      this.setState({
        sValue: []
      });
      this.handleChange([]);
    },
    clearHoverValue: function clearHoverValue() {
      this.setState({
        sHoverValue: []
      });
    },
    handleChange: function handleChange12(value26) {
      if (!hasProp(this, "value")) {
        this.setState(function(_ref) {
          var sShowDate = _ref.sShowDate;
          return {
            sValue: value26,
            sShowDate: getShowDateFromValue(value26) || sShowDate
          };
        });
      }
      if (value26[0] && value26[1] && value26[0].diff(value26[1]) > 0) {
        value26[1] = void 0;
      }
      var _value4 = _slicedToArray$2(value26, 2), start = _value4[0], end = _value4[1];
      this.$emit("change", value26, [formatDate(start, this.format), formatDate(end, this.format)]);
    },
    handleOpenChange: function handleOpenChange(open6) {
      if (!hasProp(this, "open")) {
        this.setState({
          sOpen: open6
        });
      }
      if (open6 === false) {
        this.clearHoverValue();
      }
      this.$emit("openChange", open6);
    },
    handleShowDateChange: function handleShowDateChange(showDate) {
      this.setState({
        sShowDate: showDate
      });
    },
    handleHoverChange: function handleHoverChange(hoverValue2) {
      this.setState({
        sHoverValue: hoverValue2
      });
    },
    handleRangeMouseLeave: function handleRangeMouseLeave() {
      if (this.sOpen) {
        this.clearHoverValue();
      }
    },
    handleCalendarInputSelect: function handleCalendarInputSelect(value26) {
      var _value5 = _slicedToArray$2(value26, 1), start = _value5[0];
      if (!start) {
        return;
      }
      this.setState(function(_ref2) {
        var sShowDate = _ref2.sShowDate;
        return {
          sValue: value26,
          sShowDate: getShowDateFromValue(value26) || sShowDate
        };
      });
    },
    handleRangeClick: function handleRangeClick(value26) {
      if (typeof value26 === "function") {
        value26 = value26();
      }
      this.setValue(value26, true);
      this.$emit("ok", value26);
      this.$emit("openChange", false);
    },
    onMouseEnter: function onMouseEnter(e2) {
      this.$emit("mouseenter", e2);
    },
    onMouseLeave: function onMouseLeave(e2) {
      this.$emit("mouseleave", e2);
    },
    focus: function focus15() {
      this.picker.focus();
    },
    blur: function blur12() {
      this.picker.blur();
    },
    renderFooter: function renderFooter() {
      var _this2 = this;
      var ranges = this.ranges, $slots = this.$slots;
      var prefixCls2 = this.sPrefixCls, tagPrefixCls = this.sTagPrefixCls;
      var renderExtraFooter = this.renderExtraFooter || $slots.renderExtraFooter;
      if (!ranges && !renderExtraFooter) {
        return null;
      }
      var customFooter = renderExtraFooter ? _createVNode$2I("div", {
        "class": "".concat(prefixCls2, "-footer-extra"),
        "key": "extra"
      }, [typeof renderExtraFooter === "function" ? renderExtraFooter() : renderExtraFooter]) : null;
      var operations = ranges && Object.keys(ranges).map(function(range2) {
        var value26 = ranges[range2];
        var hoverValue2 = typeof value26 === "function" ? value26.call(_this2) : value26;
        return _createVNode$2I(Tag, {
          "key": range2,
          "prefixCls": tagPrefixCls,
          "color": "blue",
          "onClick": function onClick7() {
            return _this2.handleRangeClick(value26);
          },
          "onMouseenter": function onMouseenter2() {
            return _this2.setState({
              sHoverValue: hoverValue2
            });
          },
          "onMouseleave": _this2.handleRangeMouseLeave
        }, {
          default: function _default8() {
            return [range2];
          }
        });
      });
      var rangeNode = operations && operations.length > 0 ? _createVNode$2I("div", {
        "class": "".concat(prefixCls2, "-footer-extra ").concat(prefixCls2, "-range-quick-selector"),
        "key": "range"
      }, [operations]) : null;
      return [rangeNode, customFooter];
    }
  },
  render: function render83() {
    var _classNames, _this3 = this;
    var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
    var suffixIcon = getComponent(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var value26 = this.sValue, showDate = this.sShowDate, hoverValue2 = this.sHoverValue, open6 = this.sOpen, $slots = this.$slots;
    var customizePrefixCls = props2.prefixCls, customizeTagPrefixCls = props2.tagPrefixCls, popupStyle = props2.popupStyle, disabledDate = props2.disabledDate, disabledTime = props2.disabledTime, showTime = props2.showTime, showToday = props2.showToday, ranges = props2.ranges, locale2 = props2.locale, localeCode = props2.localeCode, format3 = props2.format, separator = props2.separator, inputReadOnly = props2.inputReadOnly, style3 = props2.style, onCalendarChange = props2.onCalendarChange, onOk3 = props2.onOk, onBlur7 = props2.onBlur, onFocus6 = props2.onFocus, onPanelChange3 = props2.onPanelChange;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("calendar", customizePrefixCls);
    var tagPrefixCls = getPrefixCls2("tag", customizeTagPrefixCls);
    this.sPrefixCls = prefixCls2;
    this.sTagPrefixCls = tagPrefixCls;
    var dateRender = props2.dateRender || $slots.dateRender;
    fixLocale(value26, localeCode);
    fixLocale(showDate, localeCode);
    var calendarClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-time"), showTime), _defineProperty$U(_classNames, "".concat(prefixCls2, "-range-with-ranges"), ranges), _classNames));
    var pickerChangeHandler = {
      onChange: this.handleChange
    };
    var calendarProps = {
      onOk: this.handleChange
    };
    if (props2.timePicker) {
      pickerChangeHandler.onChange = function(changedValue) {
        return _this3.handleChange(changedValue);
      };
    } else {
      calendarProps = {};
    }
    if ("mode" in props2) {
      calendarProps.mode = props2.mode;
    }
    var startPlaceholder = Array.isArray(props2.placeholder) ? props2.placeholder[0] : locale2.lang.rangePlaceholder[0];
    var endPlaceholder = Array.isArray(props2.placeholder) ? props2.placeholder[1] : locale2.lang.rangePlaceholder[1];
    var rangeCalendarProps = _extends$1(_extends$1({}, calendarProps), {
      separator,
      format: format3,
      prefixCls: prefixCls2,
      renderFooter: this.renderFooter,
      timePicker: props2.timePicker,
      disabledDate,
      disabledTime,
      dateInputPlaceholder: [startPlaceholder, endPlaceholder],
      locale: locale2.lang,
      dateRender,
      value: showDate,
      hoverValue: hoverValue2,
      showToday,
      inputReadOnly,
      onChange: onCalendarChange,
      onOk: onOk3,
      onValueChange: this.handleShowDateChange,
      onHoverChange: this.handleHoverChange,
      onPanelChange: onPanelChange3,
      onInputSelect: this.handleCalendarInputSelect,
      class: calendarClassName
    });
    var calendar2 = _createVNode$2I(RangeCalendar, rangeCalendarProps, $slots);
    var pickerStyle = {};
    if (props2.showTime) {
      pickerStyle.width = "350px";
    }
    var _value6 = _slicedToArray$2(value26, 2), startValue = _value6[0], endValue = _value6[1];
    var clearIcon = !props2.disabled && props2.allowClear && value26 && (startValue || endValue) ? _createVNode$2I(CloseCircleFilled, {
      "class": "".concat(prefixCls2, "-picker-clear"),
      "onClick": this.clearSelection
    }, null) : null;
    var inputIcon = _createVNode$2I(InputIcon, {
      "suffixIcon": suffixIcon,
      "prefixCls": prefixCls2
    }, null);
    var input = function input2(_ref3) {
      var inputValue = _ref3.value;
      var _inputValue = _slicedToArray$2(inputValue, 2), start = _inputValue[0], end = _inputValue[1];
      return _createVNode$2I("span", {
        "class": props2.pickerInputClass
      }, [_createVNode$2I("input", {
        "disabled": props2.disabled,
        "readonly": true,
        "value": formatDate(start, props2.format),
        "placeholder": startPlaceholder,
        "class": "".concat(prefixCls2, "-range-picker-input"),
        "tabindex": -1
      }, null), _createVNode$2I("span", {
        "class": "".concat(prefixCls2, "-range-picker-separator")
      }, [_createTextVNode$3(" "), separator, _createTextVNode$3(" ")]), _createVNode$2I("input", {
        "disabled": props2.disabled,
        "readonly": true,
        "value": formatDate(end, props2.format),
        "placeholder": endPlaceholder,
        "class": "".concat(prefixCls2, "-range-picker-input"),
        "tabindex": -1
      }, null), clearIcon, inputIcon]);
    };
    var vcDatePickerProps = _extends$1(_extends$1(_extends$1({}, props2), pickerChangeHandler), {
      calendar: calendar2,
      value: value26,
      open: open6,
      prefixCls: "".concat(prefixCls2, "-picker-container"),
      onOpenChange: this.handleOpenChange,
      style: popupStyle
    });
    return _createVNode$2I("span", _objectSpread2$2({
      "ref": this.savePicker,
      "id": props2.id,
      "class": classNames(props2.class, props2.pickerClass),
      "style": _extends$1(_extends$1({}, pickerStyle), style3),
      "tabindex": props2.disabled ? -1 : 0,
      "onFocus": onFocus6,
      "onBlur": onBlur7,
      "onMouseenter": this.onMouseEnter,
      "onMouseleave": this.onMouseLeave
    }, getDataAndAriaProps$1(props2)), [_createVNode$2I(Picker, vcDatePickerProps, _extends$1({
      default: input
    }, $slots))]);
  }
});
const { resolveDirective: _resolveDirective$b, createVNode: _createVNode$2H } = await importShared("vue");
const { defineComponent: defineComponent$1s, inject: inject$F, nextTick: nextTick$g } = await importShared("vue");
function formatValue(value26, format3) {
  return value26 && value26.format(format3) || "";
}
function noop$g() {
}
const WeekPicker = defineComponent$1s({
  name: "AWeekPicker",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(WeekPickerProps, {
    allowClear: true
  }),
  setup: function setup80() {
    return {
      configProvider: inject$F("configProvider", defaultConfigProvider),
      prevState: {},
      input: void 0,
      sPrefixCls: void 0
    };
  },
  data: function data41() {
    var value26 = this.value || this.defaultValue;
    if (value26 && !interopDefault(hooks).isMoment(value26)) {
      throw new Error("The value/defaultValue of WeekPicker or MonthPicker must be a moment object");
    }
    return {
      _value: value26,
      _open: this.open
    };
  },
  watch: {
    value: function value24(val) {
      var state = {
        _value: val
      };
      this.setState(state);
      this.prevState = _extends$1(_extends$1({}, this.$data), state);
    },
    open: function open5(val) {
      var state = {
        _open: val
      };
      this.setState(state);
      this.prevState = _extends$1(_extends$1({}, this.$data), state);
    },
    _open: function _open(val, oldVal) {
      var _this = this;
      nextTick$g(function() {
        if (!hasProp(_this, "open") && oldVal && !val) {
          _this.focus();
        }
      });
    }
  },
  mounted: function mounted21() {
    this.prevState = _extends$1({}, this.$data);
  },
  updated: function updated10() {
    var _this2 = this;
    nextTick$g(function() {
      if (!hasProp(_this2, "open") && _this2.prevState._open && !_this2._open) {
        _this2.focus();
      }
    });
  },
  methods: {
    saveInput: function saveInput5(node) {
      this.input = node;
    },
    weekDateRender: function weekDateRender(_ref) {
      var current2 = _ref.current;
      var selectedValue6 = this.$data._value;
      var prefixCls2 = this.sPrefixCls, $slots = this.$slots;
      var dateRender = this.dateRender || $slots.dateRender;
      var dateNode = dateRender ? dateRender({
        current: current2
      }) : current2.date();
      if (selectedValue6 && current2.year() === selectedValue6.year() && current2.week() === selectedValue6.week()) {
        return _createVNode$2H("div", {
          "class": "".concat(prefixCls2, "-selected-day")
        }, [_createVNode$2H("div", {
          "class": "".concat(prefixCls2, "-date")
        }, [dateNode])]);
      }
      return _createVNode$2H("div", {
        "class": "".concat(prefixCls2, "-date")
      }, [dateNode]);
    },
    handleChange: function handleChange13(value26) {
      if (!hasProp(this, "value")) {
        this.setState({
          _value: value26
        });
      }
      this.$emit("change", value26, formatValue(value26, this.format));
    },
    handleOpenChange: function handleOpenChange2(open6) {
      if (!hasProp(this, "open")) {
        this.setState({
          _open: open6
        });
      }
      this.$emit("openChange", open6);
    },
    clearSelection: function clearSelection3(e2) {
      e2.preventDefault();
      e2.stopPropagation();
      this.handleChange(null);
    },
    focus: function focus16() {
      this.input.focus();
    },
    blur: function blur13() {
      this.input.blur();
    },
    renderFooter: function renderFooter2() {
      var prefixCls2 = this.sPrefixCls, $slots = this.$slots;
      var renderExtraFooter = this.renderExtraFooter || $slots.renderExtraFooter;
      return renderExtraFooter ? _createVNode$2H("div", {
        "class": "".concat(prefixCls2, "-footer-extra")
      }, [renderExtraFooter.apply(void 0, arguments)]) : null;
    }
  },
  render: function render84() {
    var _this3 = this;
    var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
    var suffixIcon = getComponent(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var customizePrefixCls = this.prefixCls, disabled = this.disabled, pickerClass = this.pickerClass, popupStyle = this.popupStyle, pickerInputClass = this.pickerInputClass, format3 = this.format, allowClear = this.allowClear, locale2 = this.locale, localeCode = this.localeCode, disabledDate = this.disabledDate, defaultPickerValue = this.defaultPickerValue, $data = this.$data, $slots = this.$slots;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("calendar", customizePrefixCls);
    this.sPrefixCls = prefixCls2;
    var pickerValue = $data._value, open6 = $data._open;
    var className = props2.class, style3 = props2.style, id2 = props2.id, _props$onFocus = props2.onFocus, onFocus6 = _props$onFocus === void 0 ? noop$g : _props$onFocus, _props$onBlur = props2.onBlur, onBlur7 = _props$onBlur === void 0 ? noop$g : _props$onBlur;
    if (pickerValue && localeCode) {
      pickerValue.locale(localeCode);
    }
    var placeholder = hasProp(this, "placeholder") ? this.placeholder : locale2.lang.placeholder;
    var weekDateRender2 = this.dateRender || $slots.dateRender || this.weekDateRender;
    var calendar2 = _createVNode$2H(Calendar, {
      "showWeekNumber": true,
      "dateRender": weekDateRender2,
      "prefixCls": prefixCls2,
      "format": format3,
      "locale": locale2.lang,
      "showDateInput": false,
      "showToday": false,
      "disabledDate": disabledDate,
      "renderFooter": this.renderFooter,
      "defaultValue": defaultPickerValue
    }, null);
    var clearIcon = !disabled && allowClear && $data._value ? _createVNode$2H(CloseCircleFilled, {
      "class": "".concat(prefixCls2, "-picker-clear"),
      "onClick": this.clearSelection
    }, null) : null;
    var inputIcon = _createVNode$2H(InputIcon, {
      "suffixIcon": suffixIcon,
      "prefixCls": prefixCls2
    }, null);
    var input = function input2(_ref2) {
      var value26 = _ref2.value;
      return _createVNode$2H("span", {
        "style": {
          display: "inline-block",
          width: "100%"
        }
      }, [_createVNode$2H("input", {
        "ref": _this3.saveInput,
        "disabled": disabled,
        "readonly": true,
        "value": value26 && value26.format(format3) || "",
        "placeholder": placeholder,
        "class": pickerInputClass,
        "onFocus": onFocus6,
        "onBlur": onBlur7
      }, null), clearIcon, inputIcon]);
    };
    var vcDatePickerProps = _extends$1(_extends$1({}, props2), {
      calendar: calendar2,
      prefixCls: "".concat(prefixCls2, "-picker-container"),
      value: pickerValue,
      open: open6,
      onChange: this.handleChange,
      onOpenChange: this.handleOpenChange,
      style: popupStyle
    });
    return _createVNode$2H("span", _objectSpread2$2({
      "class": classNames(className, pickerClass),
      "style": style3,
      "id": id2
    }, getDataAndAriaProps$1(props2)), [_createVNode$2H(Picker, vcDatePickerProps, _extends$1({
      default: input
    }, $slots))]);
  }
});
var WrappedRangePicker = wrapPicker(RangePicker, RangePickerProps, "date");
var WrappedWeekPicker = wrapPicker(WeekPicker, WeekPickerProps, "week");
var DatePicker = wrapPicker(createPicker(Calendar, DatePickerProps, "ADatePicker"), DatePickerProps, "date");
var MonthPicker = wrapPicker(createPicker(MonthCalendar, MonthPickerProps, "AMonthPicker"), MonthPickerProps, "month");
_extends$1(DatePicker, {
  RangePicker: WrappedRangePicker,
  MonthPicker,
  WeekPicker: WrappedWeekPicker
});
DatePicker.install = function(app) {
  app.component(DatePicker.name, DatePicker);
  app.component(DatePicker.RangePicker.name, DatePicker.RangePicker);
  app.component(DatePicker.MonthPicker.name, DatePicker.MonthPicker);
  app.component(DatePicker.WeekPicker.name, DatePicker.WeekPicker);
  return app;
};
const { createVNode: _createVNode$2G } = await importShared("vue");
function notEmpty(val) {
  return val !== void 0 && val !== null;
}
var Cell = function Cell2(props2) {
  var itemPrefixCls = props2.itemPrefixCls, component = props2.component, span = props2.span, labelStyle = props2.labelStyle, contentStyle = props2.contentStyle, bordered = props2.bordered, label = props2.label, content = props2.content, colon = props2.colon;
  var Component = component;
  if (bordered) {
    var _ref;
    return _createVNode$2G(Component, {
      "class": [(_ref = {}, _defineProperty$U(_ref, "".concat(itemPrefixCls, "-item-label"), notEmpty(label)), _defineProperty$U(_ref, "".concat(itemPrefixCls, "-item-content"), notEmpty(content)), _ref)],
      "colSpan": span
    }, {
      default: function _default8() {
        return [notEmpty(label) && _createVNode$2G("span", {
          "style": labelStyle
        }, [label]), notEmpty(content) && _createVNode$2G("span", {
          "style": contentStyle
        }, [content])];
      }
    });
  }
  return _createVNode$2G(Component, {
    "class": ["".concat(itemPrefixCls, "-item")],
    "colSpan": span
  }, {
    default: function _default8() {
      return [_createVNode$2G("div", {
        "class": "".concat(itemPrefixCls, "-item-container")
      }, [label && _createVNode$2G("span", {
        "class": ["".concat(itemPrefixCls, "-item-label"), _defineProperty$U({}, "".concat(itemPrefixCls, "-item-no-colon"), !colon)],
        "style": labelStyle
      }, [label]), content && _createVNode$2G("span", {
        "class": "".concat(itemPrefixCls, "-item-content"),
        "style": contentStyle
      }, [content])])];
    }
  });
};
const { Fragment: _Fragment$9, createVNode: _createVNode$2F } = await importShared("vue");
const { inject: inject$E, ref: ref$r } = await importShared("vue");
var Row = function Row2(props2) {
  var renderCells = function renderCells2(items, _ref, _ref2) {
    var colon = _ref.colon, prefixCls3 = _ref.prefixCls, bordered2 = _ref.bordered;
    var component = _ref2.component, type3 = _ref2.type, showLabel = _ref2.showLabel, showContent = _ref2.showContent, rootLabelStyle = _ref2.labelStyle, rootContentStyle = _ref2.contentStyle;
    return items.map(function(item, index3) {
      var _a, _b;
      var _ref3 = item.props || {}, _ref3$prefixCls = _ref3.prefixCls, itemPrefixCls = _ref3$prefixCls === void 0 ? prefixCls3 : _ref3$prefixCls, _ref3$span = _ref3.span, span = _ref3$span === void 0 ? 1 : _ref3$span, labelStyle2 = _ref3.labelStyle, contentStyle2 = _ref3.contentStyle, _ref3$label = _ref3.label, label = _ref3$label === void 0 ? (_b = (_a = item.children) === null || _a === void 0 ? void 0 : _a.label) === null || _b === void 0 ? void 0 : _b.call(_a) : _ref3$label;
      var children = getSlot(item);
      var className = getClass(item);
      var style3 = getStyle$1(item);
      var key2 = item.key;
      if (typeof component === "string") {
        return _createVNode$2F(Cell, {
          "key": "".concat(type3, "-").concat(String(key2) || index3),
          "class": className,
          "style": style3,
          "labelStyle": _extends$1(_extends$1({}, rootLabelStyle.value), labelStyle2),
          "contentStyle": _extends$1(_extends$1({}, rootContentStyle.value), contentStyle2),
          "span": span,
          "colon": colon,
          "component": component,
          "itemPrefixCls": itemPrefixCls,
          "bordered": bordered2,
          "label": showLabel ? label : null,
          "content": showContent ? children : null
        }, null);
      }
      return [_createVNode$2F(Cell, {
        "key": "label-".concat(String(key2) || index3),
        "class": className,
        "style": _extends$1(_extends$1(_extends$1({}, rootLabelStyle.value), style3), labelStyle2),
        "span": 1,
        "colon": colon,
        "component": component[0],
        "itemPrefixCls": itemPrefixCls,
        "bordered": bordered2,
        "label": label
      }, null), _createVNode$2F(Cell, {
        "key": "content-".concat(String(key2) || index3),
        "class": className,
        "style": _extends$1(_extends$1(_extends$1({}, rootContentStyle.value), style3), contentStyle2),
        "span": span * 2 - 1,
        "component": component[1],
        "itemPrefixCls": itemPrefixCls,
        "bordered": bordered2,
        "content": children
      }, null)];
    });
  };
  var prefixCls2 = props2.prefixCls, vertical = props2.vertical, row = props2.row, index2 = props2.index, bordered = props2.bordered;
  var _inject2 = inject$E(descriptionsContext, {
    labelStyle: ref$r({}),
    contentStyle: ref$r({})
  }), labelStyle = _inject2.labelStyle, contentStyle = _inject2.contentStyle;
  if (vertical) {
    return _createVNode$2F(_Fragment$9, null, [_createVNode$2F("tr", {
      "key": "label-".concat(index2),
      "class": "".concat(prefixCls2, "-row")
    }, [renderCells(row, props2, {
      component: "th",
      type: "label",
      showLabel: true,
      labelStyle,
      contentStyle
    })]), _createVNode$2F("tr", {
      "key": "content-".concat(index2),
      "class": "".concat(prefixCls2, "-row")
    }, [renderCells(row, props2, {
      component: "td",
      type: "content",
      showContent: true,
      labelStyle,
      contentStyle
    })])]);
  }
  return _createVNode$2F("tr", {
    "key": index2,
    "class": "".concat(prefixCls2, "-row")
  }, [renderCells(row, props2, {
    component: bordered ? ["th", "td"] : "td",
    type: "item",
    showLabel: true,
    showContent: true,
    labelStyle,
    contentStyle
  })]);
};
const { createVNode: _createVNode$2E } = await importShared("vue");
const { ref: ref$q, defineComponent: defineComponent$1r, onMounted: onMounted$d, onBeforeUnmount: onBeforeUnmount$6, provide: provide$a, toRef: toRef$2, computed: computed$u } = await importShared("vue");
({
  prefixCls: PropTypes.string,
  label: PropTypes.any,
  span: PropTypes.number
});
var descriptionsItemProp = {
  prefixCls: PropTypes.string,
  label: PropTypes.VNodeChild,
  labelStyle: PropTypes.style,
  contentStyle: PropTypes.style,
  span: PropTypes.number.def(1)
};
var DescriptionsItem = defineComponent$1r({
  name: "ADescriptionsItem",
  props: descriptionsItemProp,
  slots: ["label"],
  setup: function setup81(_2, _ref) {
    var slots = _ref.slots;
    return function() {
      var _a;
      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
  }
});
var DEFAULT_COLUMN_MAP = {
  xxl: 3,
  xl: 3,
  lg: 3,
  md: 3,
  sm: 2,
  xs: 1
};
function getColumn(column, screens2) {
  if (typeof column === "number") {
    return column;
  }
  if (_typeof$3(column) === "object") {
    for (var i2 = 0; i2 < responsiveArray.length; i2++) {
      var breakpoint = responsiveArray[i2];
      if (screens2[breakpoint] && column[breakpoint] !== void 0) {
        return column[breakpoint] || DEFAULT_COLUMN_MAP[breakpoint];
      }
    }
  }
  return 3;
}
function getFilledItem(node, span, rowRestCol) {
  var clone4 = node;
  if (span === void 0 || span > rowRestCol) {
    clone4 = cloneElement(node, {
      span: rowRestCol
    });
    warning$5(span === void 0, "Descriptions", "Sum of column `span` in a line not match `column` of Descriptions.");
  }
  return clone4;
}
function getRows(children, column) {
  var childNodes = flattenChildren(children);
  var rows = [];
  var tmpRow = [];
  var rowRestCol = column;
  childNodes.forEach(function(node, index2) {
    var _a;
    var span = (_a = node.props) === null || _a === void 0 ? void 0 : _a.span;
    var mergedSpan = span || 1;
    if (index2 === childNodes.length - 1) {
      tmpRow.push(getFilledItem(node, span, rowRestCol));
      rows.push(tmpRow);
      return;
    }
    if (mergedSpan < rowRestCol) {
      rowRestCol -= mergedSpan;
      tmpRow.push(node);
    } else {
      tmpRow.push(getFilledItem(node, mergedSpan, rowRestCol));
      rows.push(tmpRow);
      rowRestCol = column;
      tmpRow = [];
    }
  });
  return rows;
}
var descriptionsProps = {
  prefixCls: PropTypes.string,
  bordered: PropTypes.looseBool,
  size: PropTypes.oneOf(tuple("default", "middle", "small")).def("default"),
  title: PropTypes.VNodeChild,
  extra: PropTypes.VNodeChild,
  column: {
    type: [Number, Object],
    default: function _default6() {
      return DEFAULT_COLUMN_MAP;
    }
  },
  layout: PropTypes.oneOf(tuple("horizontal", "vertical")),
  colon: PropTypes.looseBool,
  labelStyle: PropTypes.style,
  contentStyle: PropTypes.style
};
var descriptionsContext = Symbol("descriptionsContext");
var Descriptions = defineComponent$1r({
  name: "ADescriptions",
  props: descriptionsProps,
  slots: ["title", "extra"],
  Item: DescriptionsItem,
  setup: function setup82(props2, _ref2) {
    var slots = _ref2.slots;
    var _useConfigInject = useConfigInject("descriptions", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var token2;
    var screens2 = ref$q({});
    onMounted$d(function() {
      token2 = responsiveObserve.subscribe(function(screen) {
        if (_typeof$3(props2.column) !== "object") {
          return;
        }
        screens2.value = screen;
      });
    });
    onBeforeUnmount$6(function() {
      responsiveObserve.unsubscribe(token2);
    });
    provide$a(descriptionsContext, {
      labelStyle: toRef$2(props2, "labelStyle"),
      contentStyle: toRef$2(props2, "contentStyle")
    });
    var mergeColumn = computed$u(function() {
      return getColumn(props2.column, screens2.value);
    });
    return function() {
      var _ref3;
      var _a, _b, _c;
      var size = props2.size, _props$bordered = props2.bordered, bordered = _props$bordered === void 0 ? false : _props$bordered, _props$layout = props2.layout, layout = _props$layout === void 0 ? "horizontal" : _props$layout, _props$colon = props2.colon, colon = _props$colon === void 0 ? true : _props$colon, _props$title = props2.title, title = _props$title === void 0 ? (_a = slots.title) === null || _a === void 0 ? void 0 : _a.call(slots) : _props$title, _props$extra = props2.extra, extra = _props$extra === void 0 ? (_b = slots.extra) === null || _b === void 0 ? void 0 : _b.call(slots) : _props$extra;
      var children = (_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots);
      var rows = getRows(children, mergeColumn.value);
      return _createVNode$2E("div", {
        "class": [prefixCls2.value, (_ref3 = {}, _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-").concat(size), size !== "default"), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-bordered"), !!bordered), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _ref3)]
      }, [(title || extra) && _createVNode$2E("div", {
        "class": "".concat(prefixCls2.value, "-header")
      }, [title && _createVNode$2E("div", {
        "class": "".concat(prefixCls2.value, "-title")
      }, [title]), extra && _createVNode$2E("div", {
        "class": "".concat(prefixCls2.value, "-extra")
      }, [extra])]), _createVNode$2E("div", {
        "class": "".concat(prefixCls2.value, "-view")
      }, [_createVNode$2E("table", null, [_createVNode$2E("tbody", null, [rows.map(function(row, index2) {
        return _createVNode$2E(Row, {
          "key": index2,
          "index": index2,
          "colon": colon,
          "prefixCls": prefixCls2.value,
          "vertical": layout === "vertical",
          "bordered": bordered,
          "row": row
        }, null);
      })])])])]);
    };
  }
});
Descriptions.install = function(app) {
  app.component(Descriptions.name, Descriptions);
  app.component(Descriptions.Item.name, Descriptions.Item);
  return app;
};
const { createVNode: _createVNode$2D } = await importShared("vue");
const { computed: computed$t, defineComponent: defineComponent$1q, inject: inject$D } = await importShared("vue");
var dividerProps = {
  prefixCls: String,
  type: {
    type: String,
    default: "horizontal"
  },
  dashed: {
    type: Boolean,
    default: false
  },
  orientation: {
    type: String,
    default: "center"
  },
  plain: {
    type: Boolean,
    default: false
  }
};
var Divider = defineComponent$1q({
  name: "ADivider",
  props: dividerProps,
  setup: function setup83(props2, _ref) {
    var slots = _ref.slots;
    var configProvider = inject$D("configProvider", defaultConfigProvider);
    var prefixClsRef = computed$t(function() {
      return configProvider.getPrefixCls("divider", props2.prefixCls);
    });
    var classString = computed$t(function() {
      var _ref2;
      var type3 = props2.type, dashed = props2.dashed, plain = props2.plain;
      var prefixCls2 = prefixClsRef.value;
      return _ref2 = {}, _defineProperty$U(_ref2, prefixCls2, true), _defineProperty$U(_ref2, "".concat(prefixCls2, "-").concat(type3), true), _defineProperty$U(_ref2, "".concat(prefixCls2, "-dashed"), !!dashed), _defineProperty$U(_ref2, "".concat(prefixCls2, "-plain"), !!plain), _defineProperty$U(_ref2, "".concat(prefixCls2, "-rtl"), configProvider.direction === "rtl"), _ref2;
    });
    var orientationPrefix = computed$t(function() {
      return props2.orientation.length > 0 ? "-" + props2.orientation : props2.orientation;
    });
    return function() {
      var _a;
      var children = flattenChildren((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
      return _createVNode$2D("div", {
        "class": [classString.value, children.length ? "".concat(prefixClsRef.value, "-with-text ").concat(prefixClsRef.value, "-with-text").concat(orientationPrefix.value) : ""],
        "role": "separator"
      }, [children.length ? _createVNode$2D("span", {
        "class": "".concat(prefixClsRef.value, "-inner-text")
      }, [children]) : null]);
    };
  }
});
const index$a = withInstall(Divider);
Dropdown.Button = DropdownButton;
Dropdown.install = function(app) {
  app.component(Dropdown.name, Dropdown);
  app.component(DropdownButton.name, DropdownButton);
  return app;
};
var cached;
function getScrollBarSize(fresh) {
  if (fresh || cached === void 0) {
    var inner = document.createElement("div");
    inner.style.width = "100%";
    inner.style.height = "200px";
    var outer = document.createElement("div");
    var outerStyle = outer.style;
    outerStyle.position = "absolute";
    outerStyle.top = 0;
    outerStyle.left = 0;
    outerStyle.pointerEvents = "none";
    outerStyle.visibility = "hidden";
    outerStyle.width = "200px";
    outerStyle.height = "150px";
    outerStyle.overflow = "hidden";
    outer.appendChild(inner);
    document.body.appendChild(outer);
    var widthContained = inner.offsetWidth;
    outer.style.overflow = "scroll";
    var widthScroll = inner.offsetWidth;
    if (widthContained === widthScroll) {
      widthScroll = outer.clientWidth;
    }
    document.body.removeChild(outer);
    cached = widthContained - widthScroll;
  }
  return cached;
}
var IProps = {
  width: PropTypes.any,
  height: PropTypes.any,
  defaultOpen: PropTypes.looseBool,
  firstEnter: PropTypes.looseBool,
  open: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  placement: PropTypes.string,
  level: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  levelMove: PropTypes.oneOfType([PropTypes.number, PropTypes.func, PropTypes.array]),
  ease: PropTypes.string,
  duration: PropTypes.string,
  handler: PropTypes.any,
  showMask: PropTypes.looseBool,
  maskStyle: PropTypes.object,
  className: PropTypes.string,
  wrapStyle: PropTypes.object,
  maskClosable: PropTypes.looseBool,
  afterVisibleChange: PropTypes.func,
  keyboard: PropTypes.looseBool
};
var IDrawerProps = _extends$1(_extends$1({}, IProps), {
  wrapperClassName: PropTypes.string,
  forceRender: PropTypes.looseBool,
  getContainer: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object, PropTypes.looseBool])
});
_extends$1(_extends$1({}, IProps), {
  getContainer: PropTypes.func,
  getOpenCount: PropTypes.func,
  switchScrollingEffect: PropTypes.func
});
function dataToArray(vars) {
  if (Array.isArray(vars)) {
    return vars;
  }
  return [vars];
}
var transitionEndObject = {
  transition: "transitionend",
  WebkitTransition: "webkitTransitionEnd",
  MozTransition: "transitionend",
  OTransition: "oTransitionEnd otransitionend"
};
var transitionStr = Object.keys(transitionEndObject).filter(function(key2) {
  if (typeof document === "undefined") {
    return false;
  }
  var html = document.getElementsByTagName("html")[0];
  return key2 in (html ? html.style : {});
})[0];
var transitionEnd = transitionEndObject[transitionStr];
function addEventListener(target, eventType, callback, options2) {
  if (target.addEventListener) {
    target.addEventListener(eventType, callback, options2);
  } else if (target.attachEvent) {
    target.attachEvent("on".concat(eventType), callback);
  }
}
function removeEventListener(target, eventType, callback, options2) {
  if (target.removeEventListener) {
    target.removeEventListener(eventType, callback, options2);
  } else if (target.attachEvent) {
    target.detachEvent("on".concat(eventType), callback);
  }
}
function transformArguments(arg, cb) {
  var result;
  if (typeof arg === "function") {
    result = arg(cb);
  } else {
    result = arg;
  }
  if (Array.isArray(result)) {
    if (result.length === 2) {
      return result;
    }
    return [result[0], result[1]];
  }
  return [result];
}
var isNumeric2 = function isNumeric3(value26) {
  return !isNaN(parseFloat(value26)) && isFinite(value26);
};
const { createVNode: _createVNode$2C } = await importShared("vue");
var __rest$t = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { Teleport, nextTick: nextTick$f, defineComponent: defineComponent$1p } = await importShared("vue");
function noop$f() {
}
var currentDrawer = {};
var windowIsUndefined$1 = !(typeof window !== "undefined" && window.document && window.document.createElement);
var Drawer$1 = defineComponent$1p({
  name: "Drawer",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(IDrawerProps, {
    prefixCls: "drawer",
    placement: "left",
    getContainer: "body",
    level: "all",
    duration: ".3s",
    ease: "cubic-bezier(0.78, 0.14, 0.15, 0.86)",
    firstEnter: false,
    showMask: true,
    handler: true,
    maskStyle: {},
    wrapperClassName: ""
  }),
  data: function data42() {
    this.levelDom = [];
    this.contentDom = null;
    this.maskDom = null;
    this.handlerdom = null;
    this.mousePos = null;
    this.sFirstEnter = this.firstEnter;
    this.timeout = null;
    this.children = null;
    this.dom = null;
    this.drawerId = Number((Date.now() + Math.random()).toString().replace(".", Math.round(Math.random() * 9))).toString(16);
    var open6 = this.open !== void 0 ? this.open : !!this.defaultOpen;
    currentDrawer[this.drawerId] = open6;
    this.orignalOpen = this.open;
    this.preProps = _extends$1({}, this.$props);
    return {
      sOpen: open6,
      isOpenChange: void 0,
      passive: void 0,
      container: void 0
    };
  },
  watch: {
    open: function(_open3) {
      function open6(_x) {
        return _open3.apply(this, arguments);
      }
      open6.toString = function() {
        return _open3.toString();
      };
      return open6;
    }(function(val) {
      var _this = this;
      if (val !== void 0 && val !== this.preProps.open) {
        this.isOpenChange = true;
        if (!this.container) {
          this.getDefault(this.$props);
        }
        this.setState({
          sOpen: open
        });
      }
      this.preProps.open = val;
      if (val) {
        setTimeout(function() {
          _this.domFocus();
        });
      }
    }),
    placement: function placement(val) {
      if (val !== this.preProps.placement) {
        this.contentDom = null;
      }
      this.preProps.placement = val;
    },
    level: function level(val) {
      if (this.preProps.level !== val) {
        this.getParentAndLevelDom(this.$props);
      }
      this.preProps.level = val;
    }
  },
  mounted: function mounted22() {
    var _this2 = this;
    nextTick$f(function() {
      if (!windowIsUndefined$1) {
        _this2.passive = supportsPassive ? {
          passive: false
        } : false;
      }
      var open6 = _this2.getOpen();
      if (_this2.handler || open6 || _this2.sFirstEnter) {
        _this2.getDefault(_this2.$props);
        if (open6) {
          _this2.isOpenChange = true;
          nextTick$f(function() {
            _this2.domFocus();
          });
        }
        _this2.$forceUpdate();
      }
    });
  },
  updated: function updated11() {
    var _this3 = this;
    nextTick$f(function() {
      if (!_this3.sFirstEnter && _this3.container) {
        _this3.$forceUpdate();
        _this3.sFirstEnter = true;
      }
    });
  },
  beforeUnmount: function beforeUnmount14() {
    delete currentDrawer[this.drawerId];
    delete this.isOpenChange;
    if (this.container) {
      if (this.sOpen) {
        this.setLevelDomTransform(false, true);
      }
      document.body.style.overflow = "";
    }
    this.sFirstEnter = false;
    clearTimeout(this.timeout);
  },
  methods: {
    domFocus: function domFocus() {
      if (this.dom) {
        this.dom.focus();
      }
    },
    onKeyDown: function onKeyDown10(e2) {
      if (e2.keyCode === KeyCode$1.ESC) {
        e2.stopPropagation();
        this.__emit("close", e2);
      }
    },
    onMaskTouchEnd: function onMaskTouchEnd(e2) {
      this.__emit("close", e2);
      this.onTouchEnd(e2, true);
    },
    onIconTouchEnd: function onIconTouchEnd(e2) {
      this.__emit("handleClick", e2);
      this.onTouchEnd(e2);
    },
    onTouchEnd: function onTouchEnd(e2, close7) {
      if (this.open !== void 0) {
        return;
      }
      var open6 = close7 || this.sOpen;
      this.isOpenChange = true;
      this.setState({
        sOpen: !open6
      });
    },
    onWrapperTransitionEnd: function onWrapperTransitionEnd(e2) {
      if (e2.target === this.contentWrapper && e2.propertyName.match(/transform$/)) {
        var _open22 = this.getOpen();
        this.dom.style.transition = "";
        if (!_open22 && this.getCurrentDrawerSome()) {
          document.body.style.overflowX = "";
          if (this.maskDom) {
            this.maskDom.style.left = "";
            this.maskDom.style.width = "";
          }
        }
        if (this.afterVisibleChange) {
          this.afterVisibleChange(!!_open22);
        }
      }
    },
    getDefault: function getDefault(props2) {
      this.getParentAndLevelDom(props2);
      if (props2.getContainer || props2.parent) {
        this.container = this.defaultGetContainer();
      }
    },
    getCurrentDrawerSome: function getCurrentDrawerSome() {
      return !Object.keys(currentDrawer).some(function(key2) {
        return currentDrawer[key2];
      });
    },
    getSelfContainer: function getSelfContainer() {
      return this.container;
    },
    getParentAndLevelDom: function getParentAndLevelDom(props2) {
      var _this4 = this;
      if (windowIsUndefined$1) {
        return;
      }
      var level2 = props2.level, getContainer5 = props2.getContainer;
      this.levelDom = [];
      if (getContainer5) {
        if (typeof getContainer5 === "string") {
          var dom = document.querySelectorAll(getContainer5)[0];
          this.parent = dom;
        }
        if (typeof getContainer5 === "function") {
          this.parent = getContainer5();
        }
        if (_typeof$3(getContainer5) === "object" && getContainer5 instanceof window.HTMLElement) {
          this.parent = getContainer5;
        }
      }
      if (!getContainer5 && this.container) {
        this.parent = this.container.parentNode;
      }
      if (level2 === "all") {
        var children = Array.prototype.slice.call(this.parent.children);
        children.forEach(function(child) {
          if (child.nodeName !== "SCRIPT" && child.nodeName !== "STYLE" && child.nodeName !== "LINK" && child !== _this4.container) {
            _this4.levelDom.push(child);
          }
        });
      } else if (level2) {
        dataToArray(level2).forEach(function(key2) {
          document.querySelectorAll(key2).forEach(function(item) {
            _this4.levelDom.push(item);
          });
        });
      }
    },
    setLevelDomTransform: function setLevelDomTransform(open6, openTransition, placementName, value26) {
      var _this5 = this;
      var _this$$props = this.$props, placement2 = _this$$props.placement, levelMove = _this$$props.levelMove, duration2 = _this$$props.duration, ease = _this$$props.ease, getContainer5 = _this$$props.getContainer;
      if (!windowIsUndefined$1) {
        this.levelDom.forEach(function(dom) {
          if (dom && (_this5.isOpenChange || openTransition)) {
            dom.style.transition = "transform ".concat(duration2, " ").concat(ease);
            addEventListener(dom, transitionEnd, _this5.trnasitionEnd);
            var levelValue = open6 ? value26 : 0;
            if (levelMove) {
              var $levelMove = transformArguments(levelMove, {
                target: dom,
                open: open6
              });
              levelValue = open6 ? $levelMove[0] : $levelMove[1] || 0;
            }
            var $value = typeof levelValue === "number" ? "".concat(levelValue, "px") : levelValue;
            var placementPos = placement2 === "left" || placement2 === "top" ? $value : "-".concat($value);
            dom.style.transform = levelValue ? "".concat(placementName, "(").concat(placementPos, ")") : "";
            dom.style.msTransform = levelValue ? "".concat(placementName, "(").concat(placementPos, ")") : "";
          }
        });
        if (getContainer5 === "body") {
          var eventArray = ["touchstart"];
          var domArray = [document.body, this.maskDom, this.handlerdom, this.contentDom];
          var right = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth ? getScrollBarSize(1) : 0;
          var widthTransition = "width ".concat(duration2, " ").concat(ease);
          var trannsformTransition = "transform ".concat(duration2, " ").concat(ease);
          if (open6 && document.body.style.overflow !== "hidden") {
            document.body.style.overflow = "hidden";
            if (right) {
              document.body.style.position = "relative";
              document.body.style.width = "calc(100% - ".concat(right, "px)");
              clearTimeout(this.timeout);
              if (this.dom) {
                this.dom.style.transition = "none";
                switch (placement2) {
                  case "right":
                    this.dom.style.transform = "translateX(-".concat(right, "px)");
                    this.dom.style.msTransform = "translateX(-".concat(right, "px)");
                    break;
                  case "top":
                  case "bottom":
                    this.dom.style.width = "calc(100% - ".concat(right, "px)");
                    this.dom.style.transform = "translateZ(0)";
                    break;
                }
                this.timeout = setTimeout(function() {
                  _this5.dom.style.transition = "".concat(trannsformTransition, ",").concat(widthTransition);
                  _this5.dom.style.width = "";
                  _this5.dom.style.transform = "";
                  _this5.dom.style.msTransform = "";
                });
              }
            }
            domArray.forEach(function(item, i2) {
              if (!item) {
                return;
              }
              addEventListener(item, eventArray[i2] || "touchmove", i2 ? _this5.removeMoveHandler : _this5.removeStartHandler, _this5.passive);
            });
          } else if (this.getCurrentDrawerSome()) {
            document.body.style.overflow = "";
            if ((this.isOpenChange || openTransition) && right) {
              document.body.style.position = "";
              document.body.style.width = "";
              if (transitionStr) {
                document.body.style.overflowX = "hidden";
              }
              if (placement2 === "right" && this.maskDom) {
                this.maskDom.style.left = "-".concat(right, "px");
                this.maskDom.style.width = "calc(100% + ".concat(right, "px)");
              }
              clearTimeout(this.timeout);
              if (this.dom) {
                this.dom.style.transition = "none";
                var heightTransition;
                switch (placement2) {
                  case "right": {
                    this.dom.style.transform = "translateX(".concat(right, "px)");
                    this.dom.style.msTransform = "translateX(".concat(right, "px)");
                    this.dom.style.width = "100%";
                    widthTransition = "width 0s ".concat(ease, " ").concat(duration2);
                    break;
                  }
                  case "top":
                  case "bottom": {
                    this.dom.style.width = "calc(100% + ".concat(right, "px)");
                    this.dom.style.height = "100%";
                    this.dom.style.transform = "translateZ(0)";
                    heightTransition = "height 0s ".concat(ease, " ").concat(duration2);
                    break;
                  }
                }
                this.timeout = setTimeout(function() {
                  _this5.dom.style.transition = "".concat(trannsformTransition, ",").concat(heightTransition ? "".concat(heightTransition, ",") : "").concat(widthTransition);
                  _this5.dom.style.transform = "";
                  _this5.dom.style.msTransform = "";
                  _this5.dom.style.width = "";
                  _this5.dom.style.height = "";
                });
              }
            }
            domArray.forEach(function(item, i2) {
              if (!item) {
                return;
              }
              removeEventListener(item, eventArray[i2] || "touchmove", i2 ? _this5.removeMoveHandler : _this5.removeStartHandler, _this5.passive);
            });
          }
        }
      }
      var onChange9 = this.$attrs.onChange;
      if (onChange9 && this.isOpenChange && this.sFirstEnter) {
        onChange9(open6);
        this.isOpenChange = false;
      }
    },
    getChildToRender: function getChildToRender(open6) {
      var _classnames, _this6 = this, _touchEvents;
      var _this$$props2 = this.$props, prefixCls2 = _this$$props2.prefixCls, placement2 = _this$$props2.placement, handler8 = _this$$props2.handler, showMask = _this$$props2.showMask, maskStyle = _this$$props2.maskStyle, width = _this$$props2.width, height = _this$$props2.height, wrapStyle = _this$$props2.wrapStyle, keyboard = _this$$props2.keyboard, maskClosable = _this$$props2.maskClosable;
      var _a = this.$attrs, cls = _a.class, style3 = _a.style, restAttrs = __rest$t(_a, ["class", "style"]);
      var children = getSlot(this);
      var wrapperClassname = classNames(prefixCls2, (_classnames = {}, _defineProperty$U(_classnames, "".concat(prefixCls2, "-").concat(placement2), true), _defineProperty$U(_classnames, "".concat(prefixCls2, "-open"), open6), _defineProperty$U(_classnames, "no-mask", !showMask), _defineProperty$U(_classnames, cls, cls), _classnames));
      var isOpenChange = this.isOpenChange;
      var isHorizontal = placement2 === "left" || placement2 === "right";
      var placementName = "translate".concat(isHorizontal ? "X" : "Y");
      var placementPos = placement2 === "left" || placement2 === "top" ? "-100%" : "100%";
      var transform = open6 ? "" : "".concat(placementName, "(").concat(placementPos, ")");
      if (isOpenChange === void 0 || isOpenChange) {
        var contentValue = this.contentDom ? this.contentDom.getBoundingClientRect()[isHorizontal ? "width" : "height"] : 0;
        var value26 = (isHorizontal ? width : height) || contentValue;
        this.setLevelDomTransform(open6, false, placementName, value26);
      }
      var handlerChildren;
      if (handler8 !== false) {
        var handlerDefalut = _createVNode$2C("div", {
          "class": "drawer-handle",
          "onClick": function onClick7() {
          }
        }, [_createVNode$2C("i", {
          "class": "drawer-handle-icon"
        }, null)]);
        var handlerSlot = this.handler;
        var handlerSlotVnode = handlerSlot || handlerDefalut;
        var handleIconClick = handlerSlotVnode.props && handlerSlotVnode.props.onClick;
        handlerChildren = cloneElement(handlerSlotVnode, {
          onClick: function onClick7(e2) {
            handleIconClick && handleIconClick(e2);
            _this6.onIconTouchEnd(e2);
          },
          ref: function ref2(c2) {
            _this6.handlerdom = c2;
          }
        });
      }
      var domContProps = _extends$1(_extends$1({}, restAttrs), {
        class: wrapperClassname,
        onTransitionend: this.onWrapperTransitionEnd,
        onKeydown: open6 && keyboard ? this.onKeyDown : noop$f,
        style: _extends$1(_extends$1({}, wrapStyle), style3)
      });
      var touchEvents = (_touchEvents = {}, _defineProperty$U(_touchEvents, supportsPassive ? "onTouchstartPassive" : "onTouchstart", open6 ? this.removeStartHandler : noop$f), _defineProperty$U(_touchEvents, supportsPassive ? "onTouchmovePassive" : "onTouchmove", open6 ? this.removeMoveHandler : noop$f), _touchEvents);
      return _createVNode$2C("div", _objectSpread2$2(_objectSpread2$2({
        "ref": function ref2(c2) {
          _this6.dom = c2;
        }
      }, domContProps), {}, {
        "tabindex": -1
      }), [showMask && _createVNode$2C("div", {
        "key": open6,
        "class": "".concat(prefixCls2, "-mask"),
        "onClick": maskClosable ? this.onMaskTouchEnd : noop$f,
        "style": maskStyle,
        "ref": function ref2(c2) {
          _this6.maskDom = c2;
        }
      }, null), _createVNode$2C("div", {
        "class": "".concat(prefixCls2, "-content-wrapper"),
        "style": {
          transform,
          msTransform: transform,
          width: isNumeric2(width) ? "".concat(width, "px") : width,
          height: isNumeric2(height) ? "".concat(height, "px") : height
        },
        "ref": function ref2(c2) {
          _this6.contentWrapper = c2;
        }
      }, [_createVNode$2C("div", _objectSpread2$2({
        "class": "".concat(prefixCls2, "-content"),
        "ref": function ref2(c2) {
          _this6.contentDom = c2;
        }
      }, touchEvents), [children]), handlerChildren])]);
    },
    getOpen: function getOpen() {
      return this.open !== void 0 ? this.open : this.sOpen;
    },
    getTouchParentScroll: function getTouchParentScroll(root2, currentTarget, differX, differY) {
      if (!currentTarget || currentTarget === document) {
        return false;
      }
      if (currentTarget === root2.parentNode) {
        return true;
      }
      var isY = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differY);
      var isX = Math.max(Math.abs(differX), Math.abs(differY)) === Math.abs(differX);
      var scrollY = currentTarget.scrollHeight - currentTarget.clientHeight;
      var scrollX = currentTarget.scrollWidth - currentTarget.clientWidth;
      var t2 = currentTarget.scrollTop;
      var l2 = currentTarget.scrollLeft;
      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft + 1, currentTarget.scrollTop + 1);
      }
      var currentT = currentTarget.scrollTop;
      var currentL = currentTarget.scrollLeft;
      if (currentTarget.scrollTo) {
        currentTarget.scrollTo(currentTarget.scrollLeft - 1, currentTarget.scrollTop - 1);
      }
      if (isY && (!scrollY || !(currentT - t2) || scrollY && (currentTarget.scrollTop >= scrollY && differY < 0 || currentTarget.scrollTop <= 0 && differY > 0)) || isX && (!scrollX || !(currentL - l2) || scrollX && (currentTarget.scrollLeft >= scrollX && differX < 0 || currentTarget.scrollLeft <= 0 && differX > 0))) {
        return this.getTouchParentScroll(root2, currentTarget.parentNode, differX, differY);
      }
      return false;
    },
    removeStartHandler: function removeStartHandler(e2) {
      if (e2.touches.length > 1) {
        return;
      }
      this.startPos = {
        x: e2.touches[0].clientX,
        y: e2.touches[0].clientY
      };
    },
    removeMoveHandler: function removeMoveHandler(e2) {
      if (e2.changedTouches.length > 1) {
        return;
      }
      var currentTarget = e2.currentTarget;
      var differX = e2.changedTouches[0].clientX - this.startPos.x;
      var differY = e2.changedTouches[0].clientY - this.startPos.y;
      if (currentTarget === this.maskDom || currentTarget === this.handlerdom || currentTarget === this.contentDom && this.getTouchParentScroll(currentTarget, e2.target, differX, differY)) {
        e2.preventDefault();
      }
    },
    trnasitionEnd: function trnasitionEnd(e2) {
      removeEventListener(e2.target, transitionEnd, this.trnasitionEnd);
      e2.target.style.transition = "";
    },
    defaultGetContainer: function defaultGetContainer() {
      if (windowIsUndefined$1) {
        return null;
      }
      var container = document.createElement("div");
      this.parent.appendChild(container);
      if (this.wrapperClassName) {
        container.className = this.wrapperClassName;
      }
      return container;
    }
  },
  render: function render85() {
    var _this7 = this;
    var _this$$props3 = this.$props, getContainer5 = _this$$props3.getContainer, wrapperClassName = _this$$props3.wrapperClassName, handler8 = _this$$props3.handler, forceRender = _this$$props3.forceRender;
    var open6 = this.getOpen();
    var portal = null;
    currentDrawer[this.drawerId] = open6 ? this.container : open6;
    var children = this.getChildToRender(this.sFirstEnter ? open6 : false);
    if (!getContainer5) {
      return _createVNode$2C("div", {
        "class": wrapperClassName,
        "ref": function ref2(c2) {
          _this7.container = c2;
        }
      }, [children]);
    }
    if (!this.container || !open6 && !this.sFirstEnter) {
      return null;
    }
    var $forceRender = !!handler8 || forceRender;
    if ($forceRender || open6 || this.dom) {
      portal = _createVNode$2C(Teleport, {
        "to": this.getSelfContainer()
      }, {
        default: function _default8() {
          return [children];
        }
      });
    }
    return portal;
  }
});
const { createVNode: _createVNode$2B } = await importShared("vue");
var __rest$s = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { inject: inject$C, provide: provide$9, nextTick: nextTick$e, defineComponent: defineComponent$1o } = await importShared("vue");
var PlacementTypes = tuple("top", "right", "bottom", "left");
var Drawer = defineComponent$1o({
  name: "ADrawer",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    closable: PropTypes.looseBool.def(true),
    destroyOnClose: PropTypes.looseBool,
    getContainer: PropTypes.any,
    maskClosable: PropTypes.looseBool.def(true),
    mask: PropTypes.looseBool.def(true),
    maskStyle: PropTypes.object,
    wrapStyle: PropTypes.object,
    bodyStyle: PropTypes.object,
    headerStyle: PropTypes.object,
    drawerStyle: PropTypes.object,
    title: PropTypes.VNodeChild,
    visible: PropTypes.looseBool,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).def(256),
    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).def(256),
    zIndex: PropTypes.number,
    prefixCls: PropTypes.string,
    placement: PropTypes.oneOf(PlacementTypes).def("right"),
    level: PropTypes.any.def(null),
    wrapClassName: PropTypes.string,
    handle: PropTypes.VNodeChild,
    afterVisibleChange: PropTypes.func,
    keyboard: PropTypes.looseBool.def(true),
    onClose: PropTypes.func,
    "onUpdate:visible": PropTypes.func
  },
  setup: function setup84(props2) {
    var configProvider = inject$C("configProvider", defaultConfigProvider);
    return {
      configProvider,
      destroyClose: false,
      preVisible: props2.visible,
      parentDrawer: inject$C("parentDrawer", null)
    };
  },
  data: function data43() {
    return {
      sPush: false
    };
  },
  beforeCreate: function beforeCreate() {
    provide$9("parentDrawer", this);
  },
  mounted: function mounted23() {
    var visible9 = this.visible;
    if (visible9 && this.parentDrawer) {
      this.parentDrawer.push();
    }
  },
  updated: function updated12() {
    var _this = this;
    nextTick$e(function() {
      if (_this.preVisible !== _this.visible && _this.parentDrawer) {
        if (_this.visible) {
          _this.parentDrawer.push();
        } else {
          _this.parentDrawer.pull();
        }
      }
      _this.preVisible = _this.visible;
    });
  },
  beforeUnmount: function beforeUnmount15() {
    if (this.parentDrawer) {
      this.parentDrawer.pull();
    }
  },
  methods: {
    domFocus: function domFocus2() {
      if (this.$refs.vcDrawer) {
        this.$refs.vcDrawer.domFocus();
      }
    },
    close: function close3(e2) {
      this.$emit("update:visible", false);
      this.$emit("close", e2);
    },
    // onMaskClick(e) {
    //   if (!this.maskClosable) {
    //     return;
    //   }
    //   this.close(e);
    // },
    push: function push() {
      this.setState({
        sPush: true
      });
    },
    pull: function pull() {
      var _this2 = this;
      this.setState({
        sPush: false
      }, function() {
        _this2.domFocus();
      });
    },
    onDestroyTransitionEnd: function onDestroyTransitionEnd() {
      var isDestroyOnClose = this.getDestroyOnClose();
      if (!isDestroyOnClose) {
        return;
      }
      if (!this.visible) {
        this.destroyClose = true;
        this.$forceUpdate();
      }
    },
    getDestroyOnClose: function getDestroyOnClose() {
      return this.destroyOnClose && !this.visible;
    },
    // get drawar push width or height
    getPushTransform: function getPushTransform(placement2) {
      if (placement2 === "left" || placement2 === "right") {
        return "translateX(".concat(placement2 === "left" ? 180 : -180, "px)");
      }
      if (placement2 === "top" || placement2 === "bottom") {
        return "translateY(".concat(placement2 === "top" ? 180 : -180, "px)");
      }
    },
    getRcDrawerStyle: function getRcDrawerStyle() {
      var _this$$props = this.$props, zIndex = _this$$props.zIndex, placement2 = _this$$props.placement, wrapStyle = _this$$props.wrapStyle;
      var push2 = this.$data.sPush;
      return _extends$1({
        zIndex,
        transform: push2 ? this.getPushTransform(placement2) : void 0
      }, wrapStyle);
    },
    renderHeader: function renderHeader(prefixCls2) {
      var _this$$props2 = this.$props, closable = _this$$props2.closable, headerStyle = _this$$props2.headerStyle;
      var title = getComponent(this, "title");
      if (!title && !closable) {
        return null;
      }
      var headerClassName = title ? "".concat(prefixCls2, "-header") : "".concat(prefixCls2, "-header-no-title");
      return _createVNode$2B("div", {
        "class": headerClassName,
        "style": headerStyle
      }, [title && _createVNode$2B("div", {
        "class": "".concat(prefixCls2, "-title")
      }, [title]), closable ? this.renderCloseIcon(prefixCls2) : null]);
    },
    renderCloseIcon: function renderCloseIcon(prefixCls2) {
      var closable = this.closable;
      return closable && _createVNode$2B("button", {
        "key": "closer",
        "onClick": this.close,
        "aria-label": "Close",
        "class": "".concat(prefixCls2, "-close")
      }, [_createVNode$2B(CloseOutlined, null, null)]);
    },
    // render drawer body dom
    renderBody: function renderBody(prefixCls2) {
      var _a, _b;
      if (this.destroyClose && !this.visible) {
        return null;
      }
      this.destroyClose = false;
      var _this$$props3 = this.$props, bodyStyle = _this$$props3.bodyStyle, drawerStyle = _this$$props3.drawerStyle;
      var containerStyle = {};
      var isDestroyOnClose = this.getDestroyOnClose();
      if (isDestroyOnClose) {
        containerStyle.opacity = 0;
        containerStyle.transition = "opacity .3s";
      }
      return _createVNode$2B("div", {
        "class": "".concat(prefixCls2, "-wrapper-body"),
        "style": _extends$1(_extends$1({}, containerStyle), drawerStyle),
        "onTransitionend": this.onDestroyTransitionEnd
      }, [this.renderHeader(prefixCls2), _createVNode$2B("div", {
        "key": "body",
        "class": "".concat(prefixCls2, "-body"),
        "style": bodyStyle
      }, [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)])]);
    }
  },
  render: function render86() {
    var _classnames, _this3 = this;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, width = props2.width, height = props2.height, visible9 = props2.visible, placement2 = props2.placement, wrapClassName = props2.wrapClassName, mask = props2.mask, rest = __rest$s(props2, ["prefixCls", "width", "height", "visible", "placement", "wrapClassName", "mask"]);
    var haveMask = mask ? "" : "no-mask";
    var offsetStyle = {};
    if (placement2 === "left" || placement2 === "right") {
      offsetStyle.width = typeof width === "number" ? "".concat(width, "px") : width;
    } else {
      offsetStyle.height = typeof height === "number" ? "".concat(height, "px") : height;
    }
    var handler8 = getComponent(this, "handle") || false;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("drawer", customizePrefixCls);
    var className = this.$attrs.class;
    var vcDrawerProps = _extends$1(_extends$1(_extends$1(_extends$1(_extends$1({}, this.$attrs), omit$1(rest, ["closable", "destroyOnClose", "drawerStyle", "headerStyle", "bodyStyle", "title", "push", "visible", "getPopupContainer", "rootPrefixCls", "getPrefixCls", "renderEmpty", "csp", "pageHeader", "autoInsertSpaceInButton"])), {
      onClose: this.close,
      handler: handler8
    }), offsetStyle), {
      prefixCls: prefixCls2,
      open: visible9,
      showMask: mask,
      placement: placement2,
      class: classNames((_classnames = {}, _defineProperty$U(_classnames, className, !!className), _defineProperty$U(_classnames, wrapClassName, !!wrapClassName), _defineProperty$U(_classnames, haveMask, !!haveMask), _classnames)),
      wrapStyle: this.getRcDrawerStyle(),
      ref: "vcDrawer"
    });
    return _createVNode$2B(Drawer$1, vcDrawerProps, {
      default: function _default8() {
        return [_this3.renderBody(prefixCls2)];
      }
    });
  }
});
const index$9 = withInstall(Drawer);
var CLONE_DEEP_FLAG = 1, CLONE_SYMBOLS_FLAG = 4;
function cloneDeep(value26) {
  return baseClone(value26, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}
var regeneratorRuntime$1 = { exports: {} };
var OverloadYield = { exports: {} };
(function(module2) {
  function _OverloadYield(e2, d2) {
    this.v = e2, this.k = d2;
  }
  module2.exports = _OverloadYield, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(OverloadYield);
var OverloadYieldExports = OverloadYield.exports;
var regenerator$1 = { exports: {} };
var regeneratorDefine = { exports: {} };
(function(module2) {
  function _regeneratorDefine(e2, r2, n2, t2) {
    var i2 = Object.defineProperty;
    try {
      i2({}, "", {});
    } catch (e3) {
      i2 = 0;
    }
    module2.exports = _regeneratorDefine = function regeneratorDefine2(e3, r3, n3, t3) {
      if (r3) i2 ? i2(e3, r3, {
        value: n3,
        enumerable: !t3,
        configurable: !t3,
        writable: !t3
      }) : e3[r3] = n3;
      else {
        var o2 = function o3(r4, n4) {
          _regeneratorDefine(e3, r4, function(e4) {
            return this._invoke(r4, n4, e4);
          });
        };
        o2("next", 0), o2("throw", 1), o2("return", 2);
      }
    }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports, _regeneratorDefine(e2, r2, n2, t2);
  }
  module2.exports = _regeneratorDefine, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorDefine);
var regeneratorDefineExports = regeneratorDefine.exports;
(function(module2) {
  var regeneratorDefine2 = regeneratorDefineExports;
  function _regenerator() {
    /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */
    var e2, t2, r2 = "function" == typeof Symbol ? Symbol : {}, n2 = r2.iterator || "@@iterator", o2 = r2.toStringTag || "@@toStringTag";
    function i2(r3, n3, o3, i3) {
      var c3 = n3 && n3.prototype instanceof Generator ? n3 : Generator, u3 = Object.create(c3.prototype);
      return regeneratorDefine2(u3, "_invoke", function(r4, n4, o4) {
        var i4, c4, u4, f3 = 0, p = o4 || [], y2 = false, G = {
          p: 0,
          n: 0,
          v: e2,
          a: d2,
          f: d2.bind(e2, 4),
          d: function d3(t3, r5) {
            return i4 = t3, c4 = 0, u4 = e2, G.n = r5, a2;
          }
        };
        function d2(r5, n5) {
          for (c4 = r5, u4 = n5, t2 = 0; !y2 && f3 && !o5 && t2 < p.length; t2++) {
            var o5, i5 = p[t2], d3 = G.p, l2 = i5[2];
            r5 > 3 ? (o5 = l2 === n5) && (u4 = i5[(c4 = i5[4]) ? 5 : (c4 = 3, 3)], i5[4] = i5[5] = e2) : i5[0] <= d3 && ((o5 = r5 < 2 && d3 < i5[1]) ? (c4 = 0, G.v = n5, G.n = i5[1]) : d3 < l2 && (o5 = r5 < 3 || i5[0] > n5 || n5 > l2) && (i5[4] = r5, i5[5] = n5, G.n = l2, c4 = 0));
          }
          if (o5 || r5 > 1) return a2;
          throw y2 = true, n5;
        }
        return function(o5, p2, l2) {
          if (f3 > 1) throw TypeError("Generator is already running");
          for (y2 && 1 === p2 && d2(p2, l2), c4 = p2, u4 = l2; (t2 = c4 < 2 ? e2 : u4) || !y2; ) {
            i4 || (c4 ? c4 < 3 ? (c4 > 1 && (G.n = -1), d2(c4, u4)) : G.n = u4 : G.v = u4);
            try {
              if (f3 = 2, i4) {
                if (c4 || (o5 = "next"), t2 = i4[o5]) {
                  if (!(t2 = t2.call(i4, u4))) throw TypeError("iterator result is not an object");
                  if (!t2.done) return t2;
                  u4 = t2.value, c4 < 2 && (c4 = 0);
                } else 1 === c4 && (t2 = i4["return"]) && t2.call(i4), c4 < 2 && (u4 = TypeError("The iterator does not provide a '" + o5 + "' method"), c4 = 1);
                i4 = e2;
              } else if ((t2 = (y2 = G.n < 0) ? u4 : r4.call(n4, G)) !== a2) break;
            } catch (t3) {
              i4 = e2, c4 = 1, u4 = t3;
            } finally {
              f3 = 1;
            }
          }
          return {
            value: t2,
            done: y2
          };
        };
      }(r3, o3, i3), true), u3;
    }
    var a2 = {};
    function Generator() {
    }
    function GeneratorFunction() {
    }
    function GeneratorFunctionPrototype() {
    }
    t2 = Object.getPrototypeOf;
    var c2 = [][n2] ? t2(t2([][n2]())) : (regeneratorDefine2(t2 = {}, n2, function() {
      return this;
    }), t2), u2 = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c2);
    function f2(e3) {
      return Object.setPrototypeOf ? Object.setPrototypeOf(e3, GeneratorFunctionPrototype) : (e3.__proto__ = GeneratorFunctionPrototype, regeneratorDefine2(e3, o2, "GeneratorFunction")), e3.prototype = Object.create(u2), e3;
    }
    return GeneratorFunction.prototype = GeneratorFunctionPrototype, regeneratorDefine2(u2, "constructor", GeneratorFunctionPrototype), regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", regeneratorDefine2(GeneratorFunctionPrototype, o2, "GeneratorFunction"), regeneratorDefine2(u2), regeneratorDefine2(u2, o2, "Generator"), regeneratorDefine2(u2, n2, function() {
      return this;
    }), regeneratorDefine2(u2, "toString", function() {
      return "[object Generator]";
    }), (module2.exports = _regenerator = function _regenerator2() {
      return {
        w: i2,
        m: f2
      };
    }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports)();
  }
  module2.exports = _regenerator, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regenerator$1);
var regeneratorExports = regenerator$1.exports;
var regeneratorAsync = { exports: {} };
var regeneratorAsyncGen = { exports: {} };
var regeneratorAsyncIterator = { exports: {} };
(function(module2) {
  var OverloadYield2 = OverloadYieldExports;
  var regeneratorDefine2 = regeneratorDefineExports;
  function AsyncIterator(t2, e2) {
    function n2(r3, o2, i2, f2) {
      try {
        var c2 = t2[r3](o2), u2 = c2.value;
        return u2 instanceof OverloadYield2 ? e2.resolve(u2.v).then(function(t3) {
          n2("next", t3, i2, f2);
        }, function(t3) {
          n2("throw", t3, i2, f2);
        }) : e2.resolve(u2).then(function(t3) {
          c2.value = t3, i2(c2);
        }, function(t3) {
          return n2("throw", t3, i2, f2);
        });
      } catch (t3) {
        f2(t3);
      }
    }
    var r2;
    this.next || (regeneratorDefine2(AsyncIterator.prototype), regeneratorDefine2(AsyncIterator.prototype, "function" == typeof Symbol && Symbol.asyncIterator || "@asyncIterator", function() {
      return this;
    })), regeneratorDefine2(this, "_invoke", function(t3, o2, i2) {
      function f2() {
        return new e2(function(e3, r3) {
          n2(t3, i2, e3, r3);
        });
      }
      return r2 = r2 ? r2.then(f2, f2) : f2();
    }, true);
  }
  module2.exports = AsyncIterator, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorAsyncIterator);
var regeneratorAsyncIteratorExports = regeneratorAsyncIterator.exports;
(function(module2) {
  var regenerator2 = regeneratorExports;
  var regeneratorAsyncIterator2 = regeneratorAsyncIteratorExports;
  function _regeneratorAsyncGen(r2, e2, t2, o2, n2) {
    return new regeneratorAsyncIterator2(regenerator2().w(r2, e2, t2, o2), n2 || Promise);
  }
  module2.exports = _regeneratorAsyncGen, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorAsyncGen);
var regeneratorAsyncGenExports = regeneratorAsyncGen.exports;
(function(module2) {
  var regeneratorAsyncGen2 = regeneratorAsyncGenExports;
  function _regeneratorAsync(n2, e2, r2, t2, o2) {
    var a2 = regeneratorAsyncGen2(n2, e2, r2, t2, o2);
    return a2.next().then(function(n3) {
      return n3.done ? n3.value : a2.next();
    });
  }
  module2.exports = _regeneratorAsync, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorAsync);
var regeneratorAsyncExports = regeneratorAsync.exports;
var regeneratorKeys = { exports: {} };
(function(module2) {
  function _regeneratorKeys(e2) {
    var n2 = Object(e2), r2 = [];
    for (var t2 in n2) r2.unshift(t2);
    return function e3() {
      for (; r2.length; ) if ((t2 = r2.pop()) in n2) return e3.value = t2, e3.done = false, e3;
      return e3.done = true, e3;
    };
  }
  module2.exports = _regeneratorKeys, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorKeys);
var regeneratorKeysExports = regeneratorKeys.exports;
var regeneratorValues = { exports: {} };
var _typeof$1 = { exports: {} };
(function(module2) {
  function _typeof2(o2) {
    "@babel/helpers - typeof";
    return module2.exports = _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
      return typeof o3;
    } : function(o3) {
      return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
    }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports, _typeof2(o2);
  }
  module2.exports = _typeof2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(_typeof$1);
var _typeofExports = _typeof$1.exports;
(function(module2) {
  var _typeof2 = _typeofExports["default"];
  function _regeneratorValues(e2) {
    if (null != e2) {
      var t2 = e2["function" == typeof Symbol && Symbol.iterator || "@@iterator"], r2 = 0;
      if (t2) return t2.call(e2);
      if ("function" == typeof e2.next) return e2;
      if (!isNaN(e2.length)) return {
        next: function next3() {
          return e2 && r2 >= e2.length && (e2 = void 0), {
            value: e2 && e2[r2++],
            done: !e2
          };
        }
      };
    }
    throw new TypeError(_typeof2(e2) + " is not iterable");
  }
  module2.exports = _regeneratorValues, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorValues);
var regeneratorValuesExports = regeneratorValues.exports;
(function(module2) {
  var OverloadYield2 = OverloadYieldExports;
  var regenerator2 = regeneratorExports;
  var regeneratorAsync2 = regeneratorAsyncExports;
  var regeneratorAsyncGen2 = regeneratorAsyncGenExports;
  var regeneratorAsyncIterator2 = regeneratorAsyncIteratorExports;
  var regeneratorKeys2 = regeneratorKeysExports;
  var regeneratorValues2 = regeneratorValuesExports;
  function _regeneratorRuntime2() {
    var r2 = regenerator2(), e2 = r2.m(_regeneratorRuntime2), t2 = (Object.getPrototypeOf ? Object.getPrototypeOf(e2) : e2.__proto__).constructor;
    function n2(r3) {
      var e3 = "function" == typeof r3 && r3.constructor;
      return !!e3 && (e3 === t2 || "GeneratorFunction" === (e3.displayName || e3.name));
    }
    var o2 = {
      "throw": 1,
      "return": 2,
      "break": 3,
      "continue": 3
    };
    function a2(r3) {
      var e3, t3;
      return function(n3) {
        e3 || (e3 = {
          stop: function stop2() {
            return t3(n3.a, 2);
          },
          "catch": function _catch() {
            return n3.v;
          },
          abrupt: function abrupt(r4, e4) {
            return t3(n3.a, o2[r4], e4);
          },
          delegateYield: function delegateYield(r4, o3, a3) {
            return e3.resultName = o3, t3(n3.d, regeneratorValues2(r4), a3);
          },
          finish: function finish(r4) {
            return t3(n3.f, r4);
          }
        }, t3 = function t4(r4, _t, o3) {
          n3.p = e3.prev, n3.n = e3.next;
          try {
            return r4(_t, o3);
          } finally {
            e3.next = n3.n;
          }
        }), e3.resultName && (e3[e3.resultName] = n3.v, e3.resultName = void 0), e3.sent = n3.v, e3.next = n3.n;
        try {
          return r3.call(this, e3);
        } finally {
          n3.p = e3.prev, n3.n = e3.next;
        }
      };
    }
    return (module2.exports = _regeneratorRuntime2 = function _regeneratorRuntime3() {
      return {
        wrap: function wrap(e3, t3, n3, o3) {
          return r2.w(a2(e3), t3, n3, o3 && o3.reverse());
        },
        isGeneratorFunction: n2,
        mark: r2.m,
        awrap: function awrap(r3, e3) {
          return new OverloadYield2(r3, e3);
        },
        AsyncIterator: regeneratorAsyncIterator2,
        async: function async(r3, e3, t3, o3, u2) {
          return (n2(e3) ? regeneratorAsyncGen2 : regeneratorAsync2)(a2(r3), e3, t3, o3, u2);
        },
        keys: regeneratorKeys2,
        values: regeneratorValues2
      };
    }, module2.exports.__esModule = true, module2.exports["default"] = module2.exports)();
  }
  module2.exports = _regeneratorRuntime2, module2.exports.__esModule = true, module2.exports["default"] = module2.exports;
})(regeneratorRuntime$1);
var regeneratorRuntimeExports = regeneratorRuntime$1.exports;
var runtime = regeneratorRuntimeExports();
var regenerator = runtime;
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}
const _regeneratorRuntime = /* @__PURE__ */ getDefaultExportFromCjs(regenerator);
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i2 = 1; i2 < arguments.length; i2++) {
      var source = arguments[i2];
      for (var key2 in source) {
        if (Object.prototype.hasOwnProperty.call(source, key2)) {
          target[key2] = source[key2];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
function _getPrototypeOf(o2) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o22) {
    return o22.__proto__ || Object.getPrototypeOf(o22);
  };
  return _getPrototypeOf(o2);
}
function _setPrototypeOf(o2, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o22, p2) {
    o22.__proto__ = p2;
    return o22;
  };
  return _setPrototypeOf(o2, p);
}
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
    return true;
  } catch (e2) {
    return false;
  }
}
function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct2(Parent2, args2, Class2) {
      var a2 = [null];
      a2.push.apply(a2, args2);
      var Constructor = Function.bind.apply(Parent2, a2);
      var instance = new Constructor();
      if (Class2) _setPrototypeOf(instance, Class2.prototype);
      return instance;
    };
  }
  return _construct.apply(null, arguments);
}
function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? /* @__PURE__ */ new Map() : void 0;
  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {
    if (Class2 === null || !_isNativeFunction(Class2)) return Class2;
    if (typeof Class2 !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class2)) return _cache.get(Class2);
      _cache.set(Class2, Wrapper);
    }
    function Wrapper() {
      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class2.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class2);
  };
  return _wrapNativeSuper(Class);
}
var formatRegExp = /%[sdj%]/g;
var warning$1 = function warning2() {
};
function convertFieldsError(errors) {
  if (!errors || !errors.length) return null;
  var fields = {};
  errors.forEach(function(error3) {
    var field = error3.field;
    fields[field] = fields[field] || [];
    fields[field].push(error3);
  });
  return fields;
}
function format$1() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var i2 = 1;
  var f2 = args[0];
  var len = args.length;
  if (typeof f2 === "function") {
    return f2.apply(null, args.slice(1));
  }
  if (typeof f2 === "string") {
    var str = String(f2).replace(formatRegExp, function(x2) {
      if (x2 === "%%") {
        return "%";
      }
      if (i2 >= len) {
        return x2;
      }
      switch (x2) {
        case "%s":
          return String(args[i2++]);
        case "%d":
          return Number(args[i2++]);
        case "%j":
          try {
            return JSON.stringify(args[i2++]);
          } catch (_2) {
            return "[Circular]";
          }
          break;
        default:
          return x2;
      }
    });
    return str;
  }
  return f2;
}
function isNativeStringType(type22) {
  return type22 === "string" || type22 === "url" || type22 === "hex" || type22 === "email" || type22 === "date" || type22 === "pattern";
}
function isEmptyValue(value26, type22) {
  if (value26 === void 0 || value26 === null) {
    return true;
  }
  if (type22 === "array" && Array.isArray(value26) && !value26.length) {
    return true;
  }
  if (isNativeStringType(type22) && typeof value26 === "string" && !value26) {
    return true;
  }
  return false;
}
function asyncParallelArray(arr, func, callback) {
  var results = [];
  var total2 = 0;
  var arrLength = arr.length;
  function count(errors) {
    results.push.apply(results, errors);
    total2++;
    if (total2 === arrLength) {
      callback(results);
    }
  }
  arr.forEach(function(a2) {
    func(a2, count);
  });
}
function asyncSerialArray(arr, func, callback) {
  var index2 = 0;
  var arrLength = arr.length;
  function next3(errors) {
    if (errors && errors.length) {
      callback(errors);
      return;
    }
    var original = index2;
    index2 = index2 + 1;
    if (original < arrLength) {
      func(arr[original], next3);
    } else {
      callback([]);
    }
  }
  next3([]);
}
function flattenObjArr(objArr) {
  var ret = [];
  Object.keys(objArr).forEach(function(k2) {
    ret.push.apply(ret, objArr[k2]);
  });
  return ret;
}
var AsyncValidationError = /* @__PURE__ */ function(_Error) {
  _inheritsLoose(AsyncValidationError2, _Error);
  function AsyncValidationError2(errors, fields) {
    var _this;
    _this = _Error.call(this, "Async Validation Error") || this;
    _this.errors = errors;
    _this.fields = fields;
    return _this;
  }
  return AsyncValidationError2;
}(/* @__PURE__ */ _wrapNativeSuper(Error));
function asyncMap(objArr, option, func, callback) {
  if (option.first) {
    var _pending = new Promise(function(resolve, reject) {
      var next3 = function next22(errors) {
        callback(errors);
        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve();
      };
      var flattenArr = flattenObjArr(objArr);
      asyncSerialArray(flattenArr, func, next3);
    });
    _pending["catch"](function(e2) {
      return e2;
    });
    return _pending;
  }
  var firstFields = option.firstFields || [];
  if (firstFields === true) {
    firstFields = Object.keys(objArr);
  }
  var objArrKeys = Object.keys(objArr);
  var objArrLength = objArrKeys.length;
  var total2 = 0;
  var results = [];
  var pending = new Promise(function(resolve, reject) {
    var next3 = function next22(errors) {
      results.push.apply(results, errors);
      total2++;
      if (total2 === objArrLength) {
        callback(results);
        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve();
      }
    };
    if (!objArrKeys.length) {
      callback(results);
      resolve();
    }
    objArrKeys.forEach(function(key2) {
      var arr = objArr[key2];
      if (firstFields.indexOf(key2) !== -1) {
        asyncSerialArray(arr, func, next3);
      } else {
        asyncParallelArray(arr, func, next3);
      }
    });
  });
  pending["catch"](function(e2) {
    return e2;
  });
  return pending;
}
function complementError(rule) {
  return function(oe) {
    if (oe && oe.message) {
      oe.field = oe.field || rule.fullField;
      return oe;
    }
    return {
      message: typeof oe === "function" ? oe() : oe,
      field: oe.field || rule.fullField
    };
  };
}
function deepMerge(target, source) {
  if (source) {
    for (var s2 in source) {
      if (source.hasOwnProperty(s2)) {
        var value26 = source[s2];
        if (typeof value26 === "object" && typeof target[s2] === "object") {
          target[s2] = _extends({}, target[s2], value26);
        } else {
          target[s2] = value26;
        }
      }
    }
  }
  return target;
}
function required(rule, value26, source, errors, options2, type22) {
  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value26, type22 || rule.type))) {
    errors.push(format$1(options2.messages.required, rule.fullField));
  }
}
function whitespace(rule, value26, source, errors, options2) {
  if (/^\s+$/.test(value26) || value26 === "") {
    errors.push(format$1(options2.messages.whitespace, rule.fullField));
  }
}
var pattern = {
  // http://emailregex.com/
  email: /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
  url: new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$", "i"),
  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
};
var types = {
  integer: function integer(value26) {
    return types.number(value26) && parseInt(value26, 10) === value26;
  },
  "float": function float(value26) {
    return types.number(value26) && !types.integer(value26);
  },
  array: function array(value26) {
    return Array.isArray(value26);
  },
  regexp: function regexp(value26) {
    if (value26 instanceof RegExp) {
      return true;
    }
    try {
      return !!new RegExp(value26);
    } catch (e2) {
      return false;
    }
  },
  date: function date(value26) {
    return typeof value26.getTime === "function" && typeof value26.getMonth === "function" && typeof value26.getYear === "function" && !isNaN(value26.getTime());
  },
  number: function number(value26) {
    if (isNaN(value26)) {
      return false;
    }
    return typeof value26 === "number";
  },
  object: function object(value26) {
    return typeof value26 === "object" && !types.array(value26);
  },
  method: function method(value26) {
    return typeof value26 === "function";
  },
  email: function email(value26) {
    return typeof value26 === "string" && !!value26.match(pattern.email) && value26.length < 255;
  },
  url: function url(value26) {
    return typeof value26 === "string" && !!value26.match(pattern.url);
  },
  hex: function hex(value26) {
    return typeof value26 === "string" && !!value26.match(pattern.hex);
  }
};
function type2(rule, value26, source, errors, options2) {
  if (rule.required && value26 === void 0) {
    required(rule, value26, source, errors, options2);
    return;
  }
  var custom = ["integer", "float", "array", "regexp", "object", "method", "email", "number", "date", "url", "hex"];
  var ruleType = rule.type;
  if (custom.indexOf(ruleType) > -1) {
    if (!types[ruleType](value26)) {
      errors.push(format$1(options2.messages.types[ruleType], rule.fullField, rule.type));
    }
  } else if (ruleType && typeof value26 !== rule.type) {
    errors.push(format$1(options2.messages.types[ruleType], rule.fullField, rule.type));
  }
}
function range(rule, value26, source, errors, options2) {
  var len = typeof rule.len === "number";
  var min4 = typeof rule.min === "number";
  var max4 = typeof rule.max === "number";
  var spRegexp = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
  var val = value26;
  var key2 = null;
  var num = typeof value26 === "number";
  var str = typeof value26 === "string";
  var arr = Array.isArray(value26);
  if (num) {
    key2 = "number";
  } else if (str) {
    key2 = "string";
  } else if (arr) {
    key2 = "array";
  }
  if (!key2) {
    return false;
  }
  if (arr) {
    val = value26.length;
  }
  if (str) {
    val = value26.replace(spRegexp, "_").length;
  }
  if (len) {
    if (val !== rule.len) {
      errors.push(format$1(options2.messages[key2].len, rule.fullField, rule.len));
    }
  } else if (min4 && !max4 && val < rule.min) {
    errors.push(format$1(options2.messages[key2].min, rule.fullField, rule.min));
  } else if (max4 && !min4 && val > rule.max) {
    errors.push(format$1(options2.messages[key2].max, rule.fullField, rule.max));
  } else if (min4 && max4 && (val < rule.min || val > rule.max)) {
    errors.push(format$1(options2.messages[key2].range, rule.fullField, rule.min, rule.max));
  }
}
var ENUM = "enum";
function enumerable(rule, value26, source, errors, options2) {
  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
  if (rule[ENUM].indexOf(value26) === -1) {
    errors.push(format$1(options2.messages[ENUM], rule.fullField, rule[ENUM].join(", ")));
  }
}
function pattern$1(rule, value26, source, errors, options2) {
  if (rule.pattern) {
    if (rule.pattern instanceof RegExp) {
      rule.pattern.lastIndex = 0;
      if (!rule.pattern.test(value26)) {
        errors.push(format$1(options2.messages.pattern.mismatch, rule.fullField, value26, rule.pattern));
      }
    } else if (typeof rule.pattern === "string") {
      var _pattern = new RegExp(rule.pattern);
      if (!_pattern.test(value26)) {
        errors.push(format$1(options2.messages.pattern.mismatch, rule.fullField, value26, rule.pattern));
      }
    }
  }
}
var rules = {
  required,
  whitespace,
  type: type2,
  range,
  "enum": enumerable,
  pattern: pattern$1
};
function string(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2, "string");
    if (!isEmptyValue(value26, "string")) {
      rules.type(rule, value26, source, errors, options2);
      rules.range(rule, value26, source, errors, options2);
      rules.pattern(rule, value26, source, errors, options2);
      if (rule.whitespace === true) {
        rules.whitespace(rule, value26, source, errors, options2);
      }
    }
  }
  callback(errors);
}
function method2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules.type(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function number2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (value26 === "") {
      value26 = void 0;
    }
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules.type(rule, value26, source, errors, options2);
      rules.range(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function _boolean(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules.type(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function regexp2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (!isEmptyValue(value26)) {
      rules.type(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function integer2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules.type(rule, value26, source, errors, options2);
      rules.range(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function floatFn(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules.type(rule, value26, source, errors, options2);
      rules.range(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function array2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if ((value26 === void 0 || value26 === null) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2, "array");
    if (value26 !== void 0 && value26 !== null) {
      rules.type(rule, value26, source, errors, options2);
      rules.range(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function object2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules.type(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
var ENUM$1 = "enum";
function enumerable$1(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (value26 !== void 0) {
      rules[ENUM$1](rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function pattern$2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26, "string") && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (!isEmptyValue(value26, "string")) {
      rules.pattern(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function date2(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26, "date") && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
    if (!isEmptyValue(value26, "date")) {
      var dateObject;
      if (value26 instanceof Date) {
        dateObject = value26;
      } else {
        dateObject = new Date(value26);
      }
      rules.type(rule, dateObject, source, errors, options2);
      if (dateObject) {
        rules.range(rule, dateObject.getTime(), source, errors, options2);
      }
    }
  }
  callback(errors);
}
function required$1(rule, value26, callback, source, options2) {
  var errors = [];
  var type22 = Array.isArray(value26) ? "array" : typeof value26;
  rules.required(rule, value26, source, errors, options2, type22);
  callback(errors);
}
function type$1(rule, value26, callback, source, options2) {
  var ruleType = rule.type;
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26, ruleType) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2, ruleType);
    if (!isEmptyValue(value26, ruleType)) {
      rules.type(rule, value26, source, errors, options2);
    }
  }
  callback(errors);
}
function any(rule, value26, callback, source, options2) {
  var errors = [];
  var validate2 = rule.required || !rule.required && source.hasOwnProperty(rule.field);
  if (validate2) {
    if (isEmptyValue(value26) && !rule.required) {
      return callback();
    }
    rules.required(rule, value26, source, errors, options2);
  }
  callback(errors);
}
var validators = {
  string,
  method: method2,
  number: number2,
  "boolean": _boolean,
  regexp: regexp2,
  integer: integer2,
  "float": floatFn,
  array: array2,
  object: object2,
  "enum": enumerable$1,
  pattern: pattern$2,
  date: date2,
  url: type$1,
  hex: type$1,
  email: type$1,
  required: required$1,
  any
};
function newMessages() {
  return {
    "default": "Validation error on field %s",
    required: "%s is required",
    "enum": "%s must be one of %s",
    whitespace: "%s cannot be empty",
    date: {
      format: "%s date %s is invalid for format %s",
      parse: "%s date could not be parsed, %s is invalid ",
      invalid: "%s date %s is invalid"
    },
    types: {
      string: "%s is not a %s",
      method: "%s is not a %s (function)",
      array: "%s is not an %s",
      object: "%s is not an %s",
      number: "%s is not a %s",
      date: "%s is not a %s",
      "boolean": "%s is not a %s",
      integer: "%s is not an %s",
      "float": "%s is not a %s",
      regexp: "%s is not a valid %s",
      email: "%s is not a valid %s",
      url: "%s is not a valid %s",
      hex: "%s is not a valid %s"
    },
    string: {
      len: "%s must be exactly %s characters",
      min: "%s must be at least %s characters",
      max: "%s cannot be longer than %s characters",
      range: "%s must be between %s and %s characters"
    },
    number: {
      len: "%s must equal %s",
      min: "%s cannot be less than %s",
      max: "%s cannot be greater than %s",
      range: "%s must be between %s and %s"
    },
    array: {
      len: "%s must be exactly %s in length",
      min: "%s cannot be less than %s in length",
      max: "%s cannot be greater than %s in length",
      range: "%s must be between %s and %s in length"
    },
    pattern: {
      mismatch: "%s value %s does not match pattern %s"
    },
    clone: function clone4() {
      var cloned = JSON.parse(JSON.stringify(this));
      cloned.clone = this.clone;
      return cloned;
    }
  };
}
var messages = newMessages();
function Schema(descriptor) {
  this.rules = null;
  this._messages = messages;
  this.define(descriptor);
}
Schema.prototype = {
  messages: function messages2(_messages) {
    if (_messages) {
      this._messages = deepMerge(newMessages(), _messages);
    }
    return this._messages;
  },
  define: function define(rules2) {
    if (!rules2) {
      throw new Error("Cannot configure a schema with no rules");
    }
    if (typeof rules2 !== "object" || Array.isArray(rules2)) {
      throw new Error("Rules must be an object");
    }
    this.rules = {};
    var z2;
    var item;
    for (z2 in rules2) {
      if (rules2.hasOwnProperty(z2)) {
        item = rules2[z2];
        this.rules[z2] = Array.isArray(item) ? item : [item];
      }
    }
  },
  validate: function validate(source_, o2, oc) {
    var _this = this;
    if (o2 === void 0) {
      o2 = {};
    }
    if (oc === void 0) {
      oc = function oc2() {
      };
    }
    var source = source_;
    var options2 = o2;
    var callback = oc;
    if (typeof options2 === "function") {
      callback = options2;
      options2 = {};
    }
    if (!this.rules || Object.keys(this.rules).length === 0) {
      if (callback) {
        callback();
      }
      return Promise.resolve();
    }
    function complete(results) {
      var i2;
      var errors = [];
      var fields = {};
      function add3(e2) {
        if (Array.isArray(e2)) {
          var _errors;
          errors = (_errors = errors).concat.apply(_errors, e2);
        } else {
          errors.push(e2);
        }
      }
      for (i2 = 0; i2 < results.length; i2++) {
        add3(results[i2]);
      }
      if (!errors.length) {
        errors = null;
        fields = null;
      } else {
        fields = convertFieldsError(errors);
      }
      callback(errors, fields);
    }
    if (options2.messages) {
      var messages$1 = this.messages();
      if (messages$1 === messages) {
        messages$1 = newMessages();
      }
      deepMerge(messages$1, options2.messages);
      options2.messages = messages$1;
    } else {
      options2.messages = this.messages();
    }
    var arr;
    var value26;
    var series = {};
    var keys2 = options2.keys || Object.keys(this.rules);
    keys2.forEach(function(z2) {
      arr = _this.rules[z2];
      value26 = source[z2];
      arr.forEach(function(r2) {
        var rule = r2;
        if (typeof rule.transform === "function") {
          if (source === source_) {
            source = _extends({}, source);
          }
          value26 = source[z2] = rule.transform(value26);
        }
        if (typeof rule === "function") {
          rule = {
            validator: rule
          };
        } else {
          rule = _extends({}, rule);
        }
        rule.validator = _this.getValidationMethod(rule);
        rule.field = z2;
        rule.fullField = rule.fullField || z2;
        rule.type = _this.getType(rule);
        if (!rule.validator) {
          return;
        }
        series[z2] = series[z2] || [];
        series[z2].push({
          rule,
          value: value26,
          source,
          field: z2
        });
      });
    });
    var errorFields = {};
    return asyncMap(series, options2, function(data79, doIt) {
      var rule = data79.rule;
      var deep = (rule.type === "object" || rule.type === "array") && (typeof rule.fields === "object" || typeof rule.defaultField === "object");
      deep = deep && (rule.required || !rule.required && data79.value);
      rule.field = data79.field;
      function addFullfield(key2, schema) {
        return _extends({}, schema, {
          fullField: rule.fullField + "." + key2
        });
      }
      function cb(e2) {
        if (e2 === void 0) {
          e2 = [];
        }
        var errors = e2;
        if (!Array.isArray(errors)) {
          errors = [errors];
        }
        if (!options2.suppressWarning && errors.length) {
          Schema.warning("async-validator:", errors);
        }
        if (errors.length && rule.message !== void 0) {
          errors = [].concat(rule.message);
        }
        errors = errors.map(complementError(rule));
        if (options2.first && errors.length) {
          errorFields[rule.field] = 1;
          return doIt(errors);
        }
        if (!deep) {
          doIt(errors);
        } else {
          if (rule.required && !data79.value) {
            if (rule.message !== void 0) {
              errors = [].concat(rule.message).map(complementError(rule));
            } else if (options2.error) {
              errors = [options2.error(rule, format$1(options2.messages.required, rule.field))];
            }
            return doIt(errors);
          }
          var fieldsSchema = {};
          if (rule.defaultField) {
            for (var k2 in data79.value) {
              if (data79.value.hasOwnProperty(k2)) {
                fieldsSchema[k2] = rule.defaultField;
              }
            }
          }
          fieldsSchema = _extends({}, fieldsSchema, data79.rule.fields);
          for (var f2 in fieldsSchema) {
            if (fieldsSchema.hasOwnProperty(f2)) {
              var fieldSchema = Array.isArray(fieldsSchema[f2]) ? fieldsSchema[f2] : [fieldsSchema[f2]];
              fieldsSchema[f2] = fieldSchema.map(addFullfield.bind(null, f2));
            }
          }
          var schema = new Schema(fieldsSchema);
          schema.messages(options2.messages);
          if (data79.rule.options) {
            data79.rule.options.messages = options2.messages;
            data79.rule.options.error = options2.error;
          }
          schema.validate(data79.value, data79.rule.options || options2, function(errs) {
            var finalErrors = [];
            if (errors && errors.length) {
              finalErrors.push.apply(finalErrors, errors);
            }
            if (errs && errs.length) {
              finalErrors.push.apply(finalErrors, errs);
            }
            doIt(finalErrors.length ? finalErrors : null);
          });
        }
      }
      var res;
      if (rule.asyncValidator) {
        res = rule.asyncValidator(rule, data79.value, cb, data79.source, options2);
      } else if (rule.validator) {
        res = rule.validator(rule, data79.value, cb, data79.source, options2);
        if (res === true) {
          cb();
        } else if (res === false) {
          cb(rule.message || rule.field + " fails");
        } else if (res instanceof Array) {
          cb(res);
        } else if (res instanceof Error) {
          cb(res.message);
        }
      }
      if (res && res.then) {
        res.then(function() {
          return cb();
        }, function(e2) {
          return cb(e2);
        });
      }
    }, function(results) {
      complete(results);
    });
  },
  getType: function getType(rule) {
    if (rule.type === void 0 && rule.pattern instanceof RegExp) {
      rule.type = "pattern";
    }
    if (typeof rule.validator !== "function" && rule.type && !validators.hasOwnProperty(rule.type)) {
      throw new Error(format$1("Unknown rule type %s", rule.type));
    }
    return rule.type || "string";
  },
  getValidationMethod: function getValidationMethod(rule) {
    if (typeof rule.validator === "function") {
      return rule.validator;
    }
    var keys2 = Object.keys(rule);
    var messageIndex = keys2.indexOf("message");
    if (messageIndex !== -1) {
      keys2.splice(messageIndex, 1);
    }
    if (keys2.length === 1 && keys2[0] === "required") {
      return validators.required;
    }
    return validators[this.getType(rule)] || false;
  }
};
Schema.register = function register2(type22, validator4) {
  if (typeof validator4 !== "function") {
    throw new Error("Cannot register a validator by type, validator is not a function");
  }
  validators[type22] = validator4;
};
Schema.warning = warning$1;
Schema.messages = messages;
Schema.validators = validators;
function toArray$3(value26) {
  if (value26 === void 0 || value26 === null) {
    return [];
  }
  return Array.isArray(value26) ? value26 : [value26];
}
function getNamePath(path2) {
  return toArray$3(path2);
}
function containsNamePath(namePathList, namePath) {
  return namePathList && namePathList.some(function(path2) {
    return matchNamePath(path2, namePath);
  });
}
function isObject2(obj) {
  return _typeof$3(obj) === "object" && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;
}
function internalSetValues(store, values) {
  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _extends$1({}, store);
  if (!values) {
    return newStore;
  }
  Object.keys(values).forEach(function(key2) {
    var prevValue = newStore[key2];
    var value26 = values[key2];
    var recursive = isObject2(prevValue) && isObject2(value26);
    newStore[key2] = recursive ? internalSetValues(prevValue, value26 || {}) : value26;
  });
  return newStore;
}
function setValues(store) {
  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    restValues[_key - 1] = arguments[_key];
  }
  return restValues.reduce(function(current2, newStore) {
    return internalSetValues(current2, newStore);
  }, store);
}
function matchNamePath(namePath, changedNamePath) {
  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {
    return false;
  }
  return namePath.every(function(nameUnit, i2) {
    return changedNamePath[i2] === nameUnit;
  });
}
var typeTemplate = "'${name}' is not a valid ${type}";
var defaultValidateMessages = {
  default: "Validation error on field '${name}'",
  required: "'${name}' is required",
  enum: "'${name}' must be one of [${enum}]",
  whitespace: "'${name}' cannot be empty",
  date: {
    format: "'${name}' is invalid for format date",
    parse: "'${name}' could not be parsed as date",
    invalid: "'${name}' is invalid date"
  },
  types: {
    string: typeTemplate,
    method: typeTemplate,
    array: typeTemplate,
    object: typeTemplate,
    number: typeTemplate,
    date: typeTemplate,
    boolean: typeTemplate,
    integer: typeTemplate,
    float: typeTemplate,
    regexp: typeTemplate,
    email: typeTemplate,
    url: typeTemplate,
    hex: typeTemplate
  },
  string: {
    len: "'${name}' must be exactly ${len} characters",
    min: "'${name}' must be at least ${min} characters",
    max: "'${name}' cannot be longer than ${max} characters",
    range: "'${name}' must be between ${min} and ${max} characters"
  },
  number: {
    len: "'${name}' must equal ${len}",
    min: "'${name}' cannot be less than ${min}",
    max: "'${name}' cannot be greater than ${max}",
    range: "'${name}' must be between ${min} and ${max}"
  },
  array: {
    len: "'${name}' must be exactly ${len} in length",
    min: "'${name}' cannot be less than ${min} in length",
    max: "'${name}' cannot be greater than ${max} in length",
    range: "'${name}' must be between ${min} and ${max} in length"
  },
  pattern: {
    mismatch: "'${name}' does not match pattern ${pattern}"
  }
};
var __awaiter = function(thisArg, _arguments, P2, generator2) {
  function adopt(value26) {
    return value26 instanceof P2 ? value26 : new P2(function(resolve) {
      resolve(value26);
    });
  }
  return new (P2 || (P2 = Promise))(function(resolve, reject) {
    function fulfilled(value26) {
      try {
        step(generator2.next(value26));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value26) {
      try {
        step(generator2["throw"](value26));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator2 = generator2.apply(thisArg, _arguments || [])).next());
  });
};
const { cloneVNode: cloneVNode$2 } = await importShared("vue");
var AsyncValidator = Schema;
function replaceMessage(template, kv) {
  return template.replace(/\$\{\w+\}/g, function(str) {
    var key2 = str.slice(2, -1);
    return kv[key2];
  });
}
function validateRule(name, value26, rule, options2, messageVariables) {
  return __awaiter(this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime.mark(function _callee() {
    var cloneRule, subRuleField, validator4, messages3, result, subResults, kv, fillVariableResult;
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cloneRule = _extends$1({}, rule);
            delete cloneRule.ruleIndex;
            subRuleField = null;
            if (cloneRule && cloneRule.type === "array" && cloneRule.defaultField) {
              subRuleField = cloneRule.defaultField;
              delete cloneRule.defaultField;
            }
            validator4 = new AsyncValidator(_defineProperty$U({}, name, [cloneRule]));
            messages3 = setValues({}, defaultValidateMessages, options2.validateMessages);
            validator4.messages(messages3);
            result = [];
            _context.prev = 8;
            _context.next = 11;
            return Promise.resolve(validator4.validate(_defineProperty$U({}, name, value26), _extends$1({}, options2)));
          case 11:
            _context.next = 16;
            break;
          case 13:
            _context.prev = 13;
            _context.t0 = _context["catch"](8);
            if (_context.t0.errors) {
              result = _context.t0.errors.map(function(_ref, index2) {
                var message = _ref.message;
                return (
                  // Wrap VueNode with `key`
                  isValidElement(message) ? cloneVNode$2(message, {
                    key: "error_".concat(index2)
                  }) : message
                );
              });
            } else {
              console.error(_context.t0);
              result = [messages3.default()];
            }
          case 16:
            if (!(!result.length && subRuleField)) {
              _context.next = 21;
              break;
            }
            _context.next = 19;
            return Promise.all(value26.map(function(subValue, i2) {
              return validateRule("".concat(name, ".").concat(i2), subValue, subRuleField, options2, messageVariables);
            }));
          case 19:
            subResults = _context.sent;
            return _context.abrupt("return", subResults.reduce(function(prev3, errors) {
              return [].concat(_toConsumableArray(prev3), _toConsumableArray(errors));
            }, []));
          case 21:
            kv = _extends$1(_extends$1(_extends$1({}, rule), {
              name,
              enum: (rule.enum || []).join(", ")
            }), messageVariables);
            fillVariableResult = result.map(function(error3) {
              if (typeof error3 === "string") {
                return replaceMessage(error3, kv);
              }
              return error3;
            });
            return _context.abrupt("return", fillVariableResult);
          case 24:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[8, 13]]);
  }));
}
function validateRules(namePath, value26, rules2, options2, validateFirst, messageVariables) {
  var _this = this;
  var name = namePath.join(".");
  var filledRules = rules2.map(function(currentRule, ruleIndex) {
    var originValidatorFunc = currentRule.validator;
    var cloneRule = _extends$1(_extends$1({}, currentRule), {
      ruleIndex
    });
    if (originValidatorFunc) {
      cloneRule.validator = function(rule, val, callback) {
        var hasPromise = false;
        var wrappedCallback = function wrappedCallback2() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          Promise.resolve().then(function() {
            if (!hasPromise) {
              callback.apply(void 0, args);
            }
          });
        };
        var promise = originValidatorFunc(rule, val, wrappedCallback);
        hasPromise = promise && typeof promise.then === "function" && typeof promise.catch === "function";
        if (hasPromise) {
          promise.then(function() {
            callback();
          }).catch(function(err) {
            callback(err || " ");
          });
        }
      };
    }
    return cloneRule;
  }).sort(function(_ref2, _ref3) {
    var w1 = _ref2.warningOnly, i1 = _ref2.ruleIndex;
    var w2 = _ref3.warningOnly, i2 = _ref3.ruleIndex;
    if (!!w1 === !!w2) {
      return i1 - i2;
    }
    if (w1) {
      return 1;
    }
    return -1;
  });
  var summaryPromise;
  if (validateFirst === true) {
    summaryPromise = new Promise(function(resolve, reject) {
      return __awaiter(_this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime.mark(function _callee2() {
        var i2, rule, errors;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                i2 = 0;
              case 1:
                if (!(i2 < filledRules.length)) {
                  _context2.next = 12;
                  break;
                }
                rule = filledRules[i2];
                _context2.next = 5;
                return validateRule(name, value26, rule, options2, messageVariables);
              case 5:
                errors = _context2.sent;
                if (!errors.length) {
                  _context2.next = 9;
                  break;
                }
                reject([{
                  errors,
                  rule
                }]);
                return _context2.abrupt("return");
              case 9:
                i2 += 1;
                _context2.next = 1;
                break;
              case 12:
                resolve([]);
              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));
    });
  } else {
    var rulePromises = filledRules.map(function(rule) {
      return validateRule(name, value26, rule, options2, messageVariables).then(function(errors) {
        return {
          errors,
          rule
        };
      });
    });
    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function(errors) {
      return Promise.reject(errors);
    });
  }
  summaryPromise.catch(function(e2) {
    return e2;
  });
  return summaryPromise;
}
function finishOnAllFailed(rulePromises) {
  return __awaiter(this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime.mark(function _callee3() {
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", Promise.all(rulePromises).then(function(errorsList) {
              var _ref4;
              var errors = (_ref4 = []).concat.apply(_ref4, _toConsumableArray(errorsList));
              return errors;
            }));
          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
}
function finishOnFirstFailed(rulePromises) {
  return __awaiter(this, void 0, void 0, /* @__PURE__ */ _regeneratorRuntime.mark(function _callee4() {
    var count;
    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            count = 0;
            return _context4.abrupt("return", new Promise(function(resolve) {
              rulePromises.forEach(function(promise) {
                promise.then(function(ruleError) {
                  if (ruleError.errors.length) {
                    resolve([ruleError]);
                  }
                  count += 1;
                  if (count === rulePromises.length) {
                    resolve([]);
                  }
                });
              });
            }));
          case 2:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
}
var COMPARE_PARTIAL_FLAG$1 = 1, COMPARE_UNORDERED_FLAG$1 = 2;
function baseIsMatch(object3, source, matchData, customizer) {
  var index2 = matchData.length, length = index2;
  if (object3 == null) {
    return !length;
  }
  object3 = Object(object3);
  while (index2--) {
    var data79 = matchData[index2];
    if (data79[2] ? data79[1] !== object3[data79[0]] : !(data79[0] in object3)) {
      return false;
    }
  }
  while (++index2 < length) {
    data79 = matchData[index2];
    var key2 = data79[0], objValue = object3[key2], srcValue = data79[1];
    if (data79[2]) {
      if (objValue === void 0 && !(key2 in object3)) {
        return false;
      }
    } else {
      var stack = new Stack();
      var result;
      if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG$1 | COMPARE_UNORDERED_FLAG$1, customizer, stack) : result)) {
        return false;
      }
    }
  }
  return true;
}
function isStrictComparable(value26) {
  return value26 === value26 && !isObject$1(value26);
}
function getMatchData(object3) {
  var result = keys(object3), length = result.length;
  while (length--) {
    var key2 = result[length], value26 = object3[key2];
    result[length] = [key2, value26, isStrictComparable(value26)];
  }
  return result;
}
function matchesStrictComparable(key2, srcValue) {
  return function(object3) {
    if (object3 == null) {
      return false;
    }
    return object3[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object3));
  };
}
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object3) {
    return object3 === source || baseIsMatch(object3, source, matchData);
  };
}
function get(object3, path2, defaultValue) {
  var result = object3 == null ? void 0 : baseGet(object3, path2);
  return result === void 0 ? defaultValue : result;
}
function baseHasIn(object3, key2) {
  return object3 != null && key2 in Object(object3);
}
function hasPath(object3, path2, hasFunc) {
  path2 = castPath(path2, object3);
  var index2 = -1, length = path2.length, result = false;
  while (++index2 < length) {
    var key2 = toKey(path2[index2]);
    if (!(result = object3 != null && hasFunc(object3, key2))) {
      break;
    }
    object3 = object3[key2];
  }
  if (result || ++index2 != length) {
    return result;
  }
  length = object3 == null ? 0 : object3.length;
  return !!length && isLength(length) && isIndex(key2, length) && (isArray(object3) || isArguments(object3));
}
function hasIn(object3, path2) {
  return object3 != null && hasPath(object3, path2, baseHasIn);
}
var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
function baseMatchesProperty(path2, srcValue) {
  if (isKey(path2) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path2), srcValue);
  }
  return function(object3) {
    var objValue = get(object3, path2);
    return objValue === void 0 && objValue === srcValue ? hasIn(object3, path2) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}
function baseProperty(key2) {
  return function(object3) {
    return object3 == null ? void 0 : object3[key2];
  };
}
function basePropertyDeep(path2) {
  return function(object3) {
    return baseGet(object3, path2);
  };
}
function property(path2) {
  return isKey(path2) ? baseProperty(toKey(path2)) : basePropertyDeep(path2);
}
function baseIteratee(value26) {
  if (typeof value26 == "function") {
    return value26;
  }
  if (value26 == null) {
    return identity;
  }
  if (typeof value26 == "object") {
    return isArray(value26) ? baseMatchesProperty(value26[0], value26[1]) : baseMatches(value26);
  }
  return property(value26);
}
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate);
      collection = keys(collection);
      predicate = function(key2) {
        return iteratee(iterable[key2], key2, iterable);
      };
    }
    var index2 = findIndexFunc(collection, predicate, fromIndex);
    return index2 > -1 ? iterable[iteratee ? collection[index2] : index2] : void 0;
  };
}
var nativeMax = Math.max;
function findIndex(array3, predicate, fromIndex) {
  var length = array3 == null ? 0 : array3.length;
  if (!length) {
    return -1;
  }
  var index2 = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index2 < 0) {
    index2 = nativeMax(length + index2, 0);
  }
  return baseFindIndex(array3, baseIteratee(predicate), index2);
}
var find = createFind(findIndex);
const { inject: inject$B, provide: provide$8, computed: computed$s } = await importShared("vue");
var FormContextKey = Symbol("formContextKey");
var useProvideForm = function useProvideForm2(state) {
  provide$8(FormContextKey, state);
};
var useInjectForm = function useInjectForm2() {
  return inject$B(FormContextKey, {
    labelAlign: computed$s(function() {
      return "right";
    }),
    vertical: computed$s(function() {
      return false;
    }),
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    addField: function addField(_eventKey, _field) {
    },
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    removeField: function removeField(_eventKey) {
    },
    model: computed$s(function() {
      return void 0;
    }),
    rules: computed$s(function() {
      return void 0;
    }),
    requiredMark: computed$s(function() {
      return false;
    })
  });
};
var FormItemPrefixContextKey = Symbol("formItemPrefixContextKey");
var useProvideFormItemPrefix = function useProvideFormItemPrefix2(state) {
  provide$8(FormItemPrefixContextKey, state);
};
var useInjectFormItemPrefix = function useInjectFormItemPrefix2() {
  return inject$B(FormItemPrefixContextKey, {
    prefixCls: computed$s(function() {
      return "";
    })
  });
};
const { createVNode: _createVNode$2A, Fragment: _Fragment$8 } = await importShared("vue");
var FormItemLabel = function FormItemLabel2(props2, _ref) {
  var _classNames;
  var slots = _ref.slots, emit = _ref.emit, attrs = _ref.attrs;
  var _a, _b, _c, _d, _e;
  var _Object$assign = _extends$1(_extends$1({}, props2), attrs), prefixCls2 = _Object$assign.prefixCls, htmlFor = _Object$assign.htmlFor, labelCol = _Object$assign.labelCol, labelAlign = _Object$assign.labelAlign, colon = _Object$assign.colon, required2 = _Object$assign.required, requiredMark = _Object$assign.requiredMark;
  var _useLocaleReceiver = useLocaleReceiver("Form"), _useLocaleReceiver2 = _slicedToArray$2(_useLocaleReceiver, 1), formLocale = _useLocaleReceiver2[0];
  var label = (_a = props2.label) !== null && _a !== void 0 ? _a : (_b = slots.label) === null || _b === void 0 ? void 0 : _b.call(slots);
  if (!label) return null;
  var _useInjectForm = useInjectForm(), vertical = _useInjectForm.vertical, contextLabelAlign = _useInjectForm.labelAlign, contextLabelCol = _useInjectForm.labelCol, contextColon = _useInjectForm.colon;
  var mergedLabelCol = labelCol || (contextLabelCol === null || contextLabelCol === void 0 ? void 0 : contextLabelCol.value) || {};
  var mergedLabelAlign = labelAlign || (contextLabelAlign === null || contextLabelAlign === void 0 ? void 0 : contextLabelAlign.value);
  var labelClsBasic = "".concat(prefixCls2, "-item-label");
  var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === "left" && "".concat(labelClsBasic, "-left"), mergedLabelCol.class);
  var labelChildren = label;
  var computedColon = colon === true || (contextColon === null || contextColon === void 0 ? void 0 : contextColon.value) !== false && colon !== false;
  var haveColon = computedColon && !vertical.value;
  if (haveColon && typeof label === "string" && label.trim() !== "") {
    labelChildren = label.replace(/[:|：]\s*$/, "");
  }
  labelChildren = _createVNode$2A(_Fragment$8, null, [labelChildren, (_c = slots.tooltip) === null || _c === void 0 ? void 0 : _c.call(slots, {
    class: "".concat(prefixCls2, "-item-tooltip")
  })]);
  if (requiredMark === "optional" && !required2) {
    labelChildren = _createVNode$2A(_Fragment$8, null, [labelChildren, _createVNode$2A("span", {
      "class": "".concat(prefixCls2, "-item-optional")
    }, [((_d = formLocale.value) === null || _d === void 0 ? void 0 : _d.optional) || ((_e = defaultLocale.Form) === null || _e === void 0 ? void 0 : _e.optional)])]);
  }
  var labelClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-item-required"), required2), _defineProperty$U(_classNames, "".concat(prefixCls2, "-item-required-mark-optional"), requiredMark === "optional"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-item-no-colon"), !computedColon), _classNames));
  return _createVNode$2A(Col$1, _objectSpread2$2(_objectSpread2$2({}, mergedLabelCol), {}, {
    "class": labelColClassName
  }), {
    default: function _default8() {
      return [_createVNode$2A("label", {
        "html-for": htmlFor,
        "class": labelClassName,
        "title": typeof label === "string" ? label : "",
        "onClick": function onClick7(e2) {
          return emit("click", e2);
        }
      }, [labelChildren])];
    }
  });
};
FormItemLabel.displayName = "FormItemLabel";
FormItemLabel.inheritAttrs = false;
const { createVNode: _createVNode$2z } = await importShared("vue");
const { defineComponent: defineComponent$1n, onBeforeUnmount: onBeforeUnmount$5, ref: ref$p, watch: watch$f } = await importShared("vue");
const ErrorList = defineComponent$1n({
  name: "ErrorList",
  props: ["errors", "help", "onDomErrorVisibleChange"],
  setup: function setup85(props2) {
    var _useConfigInject = useConfigInject("", props2), rootPrefixCls = _useConfigInject.prefixCls;
    var _useInjectFormItemPre = useInjectFormItemPrefix(), prefixCls2 = _useInjectFormItemPre.prefixCls, status = _useInjectFormItemPre.status;
    var visible9 = ref$p(!!(props2.errors && props2.errors.length));
    var innerStatus = ref$p(status.value);
    var timeout = ref$p();
    var cacheErrors = ref$p(_toConsumableArray(props2.errors));
    watch$f([function() {
      return _toConsumableArray(props2.errors);
    }, function() {
      return props2.help;
    }], function(newValues) {
      window.clearTimeout(timeout.value);
      if (props2.help) {
        visible9.value = !!(props2.errors && props2.errors.length);
        if (visible9.value) {
          cacheErrors.value = newValues[0];
        }
      } else {
        timeout.value = window.setTimeout(function() {
          visible9.value = !!(props2.errors && props2.errors.length);
          if (visible9.value) {
            cacheErrors.value = newValues[0];
          }
        });
      }
    });
    onBeforeUnmount$5(function() {
      window.clearTimeout(timeout.value);
    });
    watch$f([visible9, status], function() {
      if (visible9.value && status.value) {
        innerStatus.value = status.value;
      }
    });
    watch$f(visible9, function() {
      var _a;
      if (visible9.value) {
        (_a = props2.onDomErrorVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props2, true);
      }
    }, {
      immediate: true,
      flush: "post"
    });
    return function() {
      var _a;
      var baseClassName = "".concat(prefixCls2.value, "-item-explain");
      var transitionProps = getTransitionProps("".concat(rootPrefixCls.value, "-show-help"), {
        onAfterLeave: function onAfterLeave() {
          var _a2;
          (_a2 = props2.onDomErrorVisibleChange) === null || _a2 === void 0 ? void 0 : _a2.call(props2, false);
        }
      });
      return _createVNode$2z(Transition, transitionProps, {
        default: function _default8() {
          return [visible9.value ? _createVNode$2z("div", {
            "class": classNames(baseClassName, _defineProperty$U({}, "".concat(baseClassName, "-").concat(innerStatus.value), innerStatus.value)),
            "key": "help"
          }, [(_a = cacheErrors.value) === null || _a === void 0 ? void 0 : _a.map(function(error3, index2) {
            return _createVNode$2z("div", {
              "key": index2,
              "role": "alert"
            }, [error3]);
          })]) : null];
        }
      });
    };
  }
});
const { createVNode: _createVNode$2y } = await importShared("vue");
const { computed: computed$r, defineComponent: defineComponent$1m, onUnmounted: onUnmounted$1 } = await importShared("vue");
var iconMap$1 = {
  success: CheckCircleFilled,
  warning: ExclamationCircleFilled,
  error: CloseCircleFilled,
  validating: LoadingOutlined
};
var FormItemInput = defineComponent$1m({
  slots: ["help", "extra", "errors"],
  inheritAttrs: false,
  props: ["prefixCls", "errors", "hasFeedback", "validateStatus", "onDomErrorVisibleChange", "wrapperCol", "help", "extra", "status"],
  setup: function setup86(props2, _ref) {
    var slots = _ref.slots;
    var formContext = useInjectForm();
    var contextWrapperCol = formContext.wrapperCol;
    var subFormContext = _extends$1({}, formContext);
    delete subFormContext.labelCol;
    delete subFormContext.wrapperCol;
    useProvideForm(subFormContext);
    useProvideFormItemPrefix({
      prefixCls: computed$r(function() {
        return props2.prefixCls;
      }),
      status: computed$r(function() {
        return props2.status;
      })
    });
    onUnmounted$1(function() {
      props2.onDomErrorVisibleChange(false);
    });
    return function() {
      var _a, _b, _c, _d;
      var prefixCls2 = props2.prefixCls, wrapperCol = props2.wrapperCol, _props$help = props2.help, help = _props$help === void 0 ? (_a = slots.help) === null || _a === void 0 ? void 0 : _a.call(slots) : _props$help, _props$errors = props2.errors, errors = _props$errors === void 0 ? (_b = slots.errors) === null || _b === void 0 ? void 0 : _b.call(slots) : _props$errors, onDomErrorVisibleChange = props2.onDomErrorVisibleChange, hasFeedback = props2.hasFeedback, validateStatus = props2.validateStatus, _props$extra = props2.extra, extra = _props$extra === void 0 ? (_c = slots.extra) === null || _c === void 0 ? void 0 : _c.call(slots) : _props$extra;
      var baseClassName = "".concat(prefixCls2, "-item");
      var mergedWrapperCol = wrapperCol || (contextWrapperCol === null || contextWrapperCol === void 0 ? void 0 : contextWrapperCol.value) || {};
      var className = classNames("".concat(baseClassName, "-control"), mergedWrapperCol.class);
      var IconNode = validateStatus && iconMap$1[validateStatus];
      var icon = hasFeedback && IconNode ? _createVNode$2y("span", {
        "class": "".concat(baseClassName, "-children-icon")
      }, [_createVNode$2y(IconNode, null, null)]) : null;
      var inputDom = _createVNode$2y("div", {
        "class": "".concat(baseClassName, "-control-input")
      }, [_createVNode$2y("div", {
        "class": "".concat(baseClassName, "-control-input-content")
      }, [(_d = slots.default) === null || _d === void 0 ? void 0 : _d.call(slots)]), icon]);
      var errorListDom = _createVNode$2y(ErrorList, {
        "errors": errors,
        "help": help,
        "onDomErrorVisibleChange": onDomErrorVisibleChange
      }, null);
      var extraDom = extra ? _createVNode$2y("div", {
        "class": "".concat(baseClassName, "-extra")
      }, [extra]) : null;
      return _createVNode$2y(Col$1, _objectSpread2$2(_objectSpread2$2({}, mergedWrapperCol), {}, {
        "class": className
      }), {
        default: function _default8() {
          return [inputDom, errorListDom, extraDom];
        }
      });
    };
  }
});
const { createVNode: _createVNode$2x } = await importShared("vue");
const { watch: watch$e } = await importShared("vue");
const { defineComponent: defineComponent$1l, computed: computed$q, nextTick: nextTick$d, ref: ref$o, watchEffect: watchEffect$2, onBeforeUnmount: onBeforeUnmount$4 } = await importShared("vue");
tuple("success", "warning", "error", "validating", "");
function getPropByPath$1(obj, namePathList, strict) {
  var tempObj = obj;
  var keyArr = namePathList;
  var i2 = 0;
  try {
    for (var len = keyArr.length; i2 < len - 1; ++i2) {
      if (!tempObj && !strict) break;
      var key2 = keyArr[i2];
      if (key2 in tempObj) {
        tempObj = tempObj[key2];
      } else {
        if (strict) {
          throw Error("please transfer a valid name path to form item!");
        }
        break;
      }
    }
    if (strict && !tempObj) {
      throw Error("please transfer a valid name path to form item!");
    }
  } catch (error3) {
    console.error("please transfer a valid name path to form item!");
  }
  return {
    o: tempObj,
    k: keyArr[i2],
    v: tempObj ? tempObj[keyArr[i2]] : void 0
  };
}
var formItemProps = {
  id: PropTypes.string,
  htmlFor: PropTypes.string,
  prefixCls: PropTypes.string,
  label: PropTypes.VNodeChild,
  help: PropTypes.VNodeChild,
  extra: PropTypes.VNodeChild,
  labelCol: {
    type: Object
  },
  wrapperCol: {
    type: Object
  },
  hasFeedback: PropTypes.looseBool.def(false),
  colon: PropTypes.looseBool,
  labelAlign: PropTypes.oneOf(tuple("left", "right")),
  prop: {
    type: [String, Number, Array]
  },
  name: {
    type: [String, Number, Array]
  },
  rules: PropTypes.oneOfType([Array, Object]),
  autoLink: PropTypes.looseBool.def(true),
  required: PropTypes.looseBool,
  validateFirst: PropTypes.looseBool,
  validateStatus: PropTypes.oneOf(tuple("", "success", "warning", "error", "validating")),
  validateTrigger: {
    type: [String, Array]
  },
  messageVariables: {
    type: Object
  },
  hidden: Boolean
};
var indexGuid = 0;
const FormItem = defineComponent$1l({
  name: "AFormItem",
  mixins: [BaseMixin],
  inheritAttrs: false,
  __ANT_NEW_FORM_ITEM: true,
  props: formItemProps,
  slots: ["help", "label", "extra"],
  setup: function setup87(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs, expose = _ref.expose;
    warning$6(props2.prop === void 0);
    var eventKey = "form-item-".concat(++indexGuid);
    var _useConfigInject = useConfigInject("form", props2), prefixCls2 = _useConfigInject.prefixCls;
    var formContext = useInjectForm();
    var fieldName = computed$q(function() {
      return props2.name || props2.prop;
    });
    var errors = ref$o([]);
    var validateDisabled = ref$o(false);
    var domErrorVisible = ref$o(false);
    var inputRef = ref$o();
    var namePath = computed$q(function() {
      var val = fieldName.value;
      return getNamePath(val);
    });
    var fieldId = computed$q(function() {
      var id2 = props2.id;
      if (id2) {
        return id2;
      } else if (!namePath.value.length) {
        return void 0;
      } else {
        var formName = formContext.name.value;
        var mergedId = namePath.value.join("_");
        return formName ? "".concat(formName, "_").concat(mergedId) : mergedId;
      }
    });
    var fieldValue = computed$q(function() {
      var model = formContext.model.value;
      if (!model || !fieldName.value) {
        return;
      }
      return getPropByPath$1(model, namePath.value, true).v;
    });
    var initialValue = ref$o(cloneDeep(fieldValue.value));
    var mergedValidateTrigger = computed$q(function() {
      var validateTrigger = props2.validateTrigger !== void 0 ? props2.validateTrigger : formContext.validateTrigger.value;
      validateTrigger = validateTrigger === void 0 ? "change" : validateTrigger;
      return toArray$3(validateTrigger);
    });
    var rulesRef = computed$q(function() {
      var formRules = formContext.rules.value;
      var selfRules = props2.rules;
      var requiredRule = props2.required !== void 0 ? {
        required: !!props2.required,
        trigger: mergedValidateTrigger.value
      } : [];
      var prop = getPropByPath$1(formRules, namePath.value);
      formRules = formRules ? prop.o[prop.k] || prop.v : [];
      var rules2 = [].concat(selfRules || formRules || []);
      if (find(rules2, function(rule) {
        return rule.required;
      })) {
        return rules2;
      } else {
        return rules2.concat(requiredRule);
      }
    });
    var isRequired2 = computed$q(function() {
      var rules2 = rulesRef.value;
      var isRequired3 = false;
      if (rules2 && rules2.length) {
        rules2.every(function(rule) {
          if (rule.required) {
            isRequired3 = true;
            return false;
          }
          return true;
        });
      }
      return isRequired3 || props2.required;
    });
    var validateState = ref$o();
    watchEffect$2(function() {
      validateState.value = props2.validateStatus;
    });
    var validateRules$1 = function validateRules$12(options2) {
      var _props$validateFirst = props2.validateFirst, validateFirst = _props$validateFirst === void 0 ? false : _props$validateFirst, messageVariables = props2.messageVariables;
      var _ref2 = options2 || {}, triggerName = _ref2.triggerName;
      var filteredRules = rulesRef.value;
      if (triggerName) {
        filteredRules = filteredRules.filter(function(rule) {
          var trigger2 = rule.trigger;
          if (!trigger2 && !mergedValidateTrigger.value.length) {
            return true;
          }
          var triggerList = toArray$3(trigger2 || mergedValidateTrigger.value);
          return triggerList.includes(triggerName);
        });
      }
      if (!filteredRules.length) {
        return Promise.resolve();
      }
      var promise = validateRules(namePath.value, fieldValue.value, filteredRules, options2, validateFirst, messageVariables);
      validateState.value = "validating";
      errors.value = [];
      promise.catch(function(e2) {
        return e2;
      }).then(function() {
        var results = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
        if (validateState.value === "validating") {
          var res = results.filter(function(result) {
            return result && result.errors.length;
          });
          validateState.value = res.length ? "error" : "success";
          errors.value = res.map(function(r2) {
            return r2.errors;
          });
        }
      });
      return promise;
    };
    var onFieldBlur = function onFieldBlur2() {
      validateRules$1({
        triggerName: "blur"
      });
    };
    var onFieldChange = function onFieldChange2() {
      if (validateDisabled.value) {
        validateDisabled.value = false;
        return;
      }
      validateRules$1({
        triggerName: "change"
      });
    };
    var clearValidate = function clearValidate2() {
      validateState.value = "";
      validateDisabled.value = false;
      errors.value = [];
    };
    var resetField = function resetField2() {
      validateState.value = "";
      validateDisabled.value = true;
      errors.value = [];
      var model = formContext.model.value || {};
      var value26 = fieldValue.value;
      var prop = getPropByPath$1(model, namePath.value, true);
      if (Array.isArray(value26)) {
        prop.o[prop.k] = [].concat(initialValue.value);
      } else {
        prop.o[prop.k] = initialValue.value;
      }
      nextTick$d(function() {
        validateDisabled.value = false;
      });
    };
    var onLabelClick = function onLabelClick2() {
      var id2 = fieldId.value;
      if (!id2 || !inputRef.value) {
        return;
      }
      var control = inputRef.value.$el.querySelector('[id="'.concat(id2, '"]'));
      if (control && control.focus) {
        control.focus();
      }
    };
    expose({
      onFieldBlur,
      onFieldChange,
      clearValidate,
      resetField
    });
    var registered = false;
    watch$e(fieldName, function(val) {
      if (val) {
        if (!registered) {
          registered = true;
          formContext.addField(eventKey, {
            fieldValue,
            fieldId,
            fieldName,
            resetField,
            clearValidate,
            namePath,
            validateRules: validateRules$1,
            rules: rulesRef
          });
        }
      } else {
        registered = false;
        formContext.removeField(eventKey);
      }
    }, {
      immediate: true
    });
    onBeforeUnmount$4(function() {
      formContext.removeField(eventKey);
    });
    var itemClassName = computed$q(function() {
      var _ref3;
      return _ref3 = {}, _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item"), true), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-has-feedback"), validateState.value && props2.hasFeedback), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-has-success"), validateState.value === "success"), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-has-warning"), validateState.value === "warning"), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-has-error"), validateState.value === "error"), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-is-validating"), validateState.value === "validating"), _defineProperty$U(_ref3, "".concat(prefixCls2.value, "-item-hidden"), props2.hidden), _ref3;
    });
    return function() {
      var _a, _b, _c, _d, _e, _f;
      var help = (_a = props2.help) !== null && _a !== void 0 ? _a : slots.help ? filterEmpty(slots.help()) : null;
      var children = flattenChildren((_b = slots.default) === null || _b === void 0 ? void 0 : _b.call(slots));
      var firstChildren = children[0];
      if (fieldName.value && props2.autoLink && isValidElement(firstChildren)) {
        var originalEvents = firstChildren.props || {};
        var originalBlur = originalEvents.onBlur;
        var originalChange = originalEvents.onChange;
        firstChildren = cloneElement(firstChildren, _extends$1(_extends$1({}, fieldId.value ? {
          id: fieldId.value
        } : void 0), {
          onBlur: function onBlur7() {
            if (Array.isArray(originalChange)) {
              for (var i2 = 0, l2 = originalChange.length; i2 < l2; i2++) {
                originalBlur[i2].apply(originalBlur, arguments);
              }
            } else if (originalBlur) {
              originalBlur.apply(void 0, arguments);
            }
            onFieldBlur();
          },
          onChange: function onChange9() {
            if (Array.isArray(originalChange)) {
              for (var i2 = 0, l2 = originalChange.length; i2 < l2; i2++) {
                originalChange[i2].apply(originalChange, arguments);
              }
            } else if (originalChange) {
              originalChange.apply(void 0, arguments);
            }
            onFieldChange();
          }
        }));
      }
      return _createVNode$2x(ARow, _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "class": [itemClassName.value, domErrorVisible.value || !!help ? "".concat(prefixCls2.value, "-item-with-help") : "", attrs.class],
        "key": "row"
      }), {
        default: function _default8() {
          return [_createVNode$2x(FormItemLabel, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
            "htmlFor": fieldId.value,
            "required": isRequired2.value,
            "requiredMark": formContext.requiredMark.value,
            "prefixCls": prefixCls2.value,
            "onClick": onLabelClick,
            "label": (_c = props2.label) !== null && _c !== void 0 ? _c : (_d = slots.label) === null || _d === void 0 ? void 0 : _d.call(slots)
          }), null), _createVNode$2x(FormItemInput, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
            "errors": help !== void 0 && help !== null ? toArray$3(help) : errors.value,
            "prefixCls": prefixCls2.value,
            "status": validateState.value,
            "onDomErrorVisibleChange": function onDomErrorVisibleChange(v2) {
              return domErrorVisible.value = v2;
            },
            "validateStatus": validateState.value,
            "ref": inputRef,
            "help": help,
            "extra": (_e = props2.extra) !== null && _e !== void 0 ? _e : (_f = slots.extra) === null || _f === void 0 ? void 0 : _f.call(slots)
          }), {
            default: function _default9() {
              return [[firstChildren, children.slice(1)]];
            }
          })];
        }
      });
    };
  }
});
function allPromiseFinish(promiseList) {
  var hasError = false;
  var count = promiseList.length;
  var results = [];
  if (!promiseList.length) {
    return Promise.resolve([]);
  }
  return new Promise(function(resolve, reject) {
    promiseList.forEach(function(promise, index2) {
      promise.catch(function(e2) {
        hasError = true;
        return e2;
      }).then(function(result) {
        count -= 1;
        results[index2] = result;
        if (count > 0) {
          return;
        }
        if (hasError) {
          reject(results);
        }
        resolve(results);
      });
    });
  });
}
function t(t2) {
  return "object" == typeof t2 && null != t2 && 1 === t2.nodeType;
}
function e(t2, e2) {
  return (!e2 || "hidden" !== t2) && "visible" !== t2 && "clip" !== t2;
}
function n(t2, n2) {
  if (t2.clientHeight < t2.scrollHeight || t2.clientWidth < t2.scrollWidth) {
    var r2 = getComputedStyle(t2, null);
    return e(r2.overflowY, n2) || e(r2.overflowX, n2) || function(t3) {
      var e2 = function(t4) {
        if (!t4.ownerDocument || !t4.ownerDocument.defaultView) return null;
        try {
          return t4.ownerDocument.defaultView.frameElement;
        } catch (t5) {
          return null;
        }
      }(t3);
      return !!e2 && (e2.clientHeight < t3.scrollHeight || e2.clientWidth < t3.scrollWidth);
    }(t2);
  }
  return false;
}
function r(t2, e2, n2, r2, i2, o2, l2, d2) {
  return o2 < t2 && l2 > e2 || o2 > t2 && l2 < e2 ? 0 : o2 <= t2 && d2 <= n2 || l2 >= e2 && d2 >= n2 ? o2 - t2 - r2 : l2 > e2 && d2 < n2 || o2 < t2 && d2 > n2 ? l2 - e2 + i2 : 0;
}
var i = function(e2, i2) {
  var o2 = window, l2 = i2.scrollMode, d2 = i2.block, f2 = i2.inline, h2 = i2.boundary, u2 = i2.skipOverflowHiddenElements, s2 = "function" == typeof h2 ? h2 : function(t2) {
    return t2 !== h2;
  };
  if (!t(e2)) throw new TypeError("Invalid target");
  for (var a2, c2, g2 = document.scrollingElement || document.documentElement, p = [], m2 = e2; t(m2) && s2(m2); ) {
    if ((m2 = null == (c2 = (a2 = m2).parentElement) ? a2.getRootNode().host || null : c2) === g2) {
      p.push(m2);
      break;
    }
    null != m2 && m2 === document.body && n(m2) && !n(document.documentElement) || null != m2 && n(m2, u2) && p.push(m2);
  }
  for (var w2 = o2.visualViewport ? o2.visualViewport.width : innerWidth, v2 = o2.visualViewport ? o2.visualViewport.height : innerHeight, W = window.scrollX || pageXOffset, H = window.scrollY || pageYOffset, b2 = e2.getBoundingClientRect(), y2 = b2.height, E2 = b2.width, M2 = b2.top, V2 = b2.right, x2 = b2.bottom, I2 = b2.left, C = "start" === d2 || "nearest" === d2 ? M2 : "end" === d2 ? x2 : M2 + y2 / 2, R2 = "center" === f2 ? I2 + E2 / 2 : "end" === f2 ? V2 : I2, T2 = [], k2 = 0; k2 < p.length; k2++) {
    var B2 = p[k2], D2 = B2.getBoundingClientRect(), O2 = D2.height, X = D2.width, Y2 = D2.top, L2 = D2.right, S2 = D2.bottom, j2 = D2.left;
    if ("if-needed" === l2 && M2 >= 0 && I2 >= 0 && x2 <= v2 && V2 <= w2 && M2 >= Y2 && x2 <= S2 && I2 >= j2 && V2 <= L2) return T2;
    var N2 = getComputedStyle(B2), q2 = parseInt(N2.borderLeftWidth, 10), z2 = parseInt(N2.borderTopWidth, 10), A2 = parseInt(N2.borderRightWidth, 10), F2 = parseInt(N2.borderBottomWidth, 10), G = 0, J2 = 0, K = "offsetWidth" in B2 ? B2.offsetWidth - B2.clientWidth - q2 - A2 : 0, P2 = "offsetHeight" in B2 ? B2.offsetHeight - B2.clientHeight - z2 - F2 : 0, Q = "offsetWidth" in B2 ? 0 === B2.offsetWidth ? 0 : X / B2.offsetWidth : 0, U = "offsetHeight" in B2 ? 0 === B2.offsetHeight ? 0 : O2 / B2.offsetHeight : 0;
    if (g2 === B2) G = "start" === d2 ? C : "end" === d2 ? C - v2 : "nearest" === d2 ? r(H, H + v2, v2, z2, F2, H + C, H + C + y2, y2) : C - v2 / 2, J2 = "start" === f2 ? R2 : "center" === f2 ? R2 - w2 / 2 : "end" === f2 ? R2 - w2 : r(W, W + w2, w2, q2, A2, W + R2, W + R2 + E2, E2), G = Math.max(0, G + H), J2 = Math.max(0, J2 + W);
    else {
      G = "start" === d2 ? C - Y2 - z2 : "end" === d2 ? C - S2 + F2 + P2 : "nearest" === d2 ? r(Y2, S2, O2, z2, F2 + P2, C, C + y2, y2) : C - (Y2 + O2 / 2) + P2 / 2, J2 = "start" === f2 ? R2 - j2 - q2 : "center" === f2 ? R2 - (j2 + X / 2) + K / 2 : "end" === f2 ? R2 - L2 + A2 + K : r(j2, L2, X, q2, A2 + K, R2, R2 + E2, E2);
      var Z = B2.scrollLeft, $2 = B2.scrollTop;
      C += $2 - (G = Math.max(0, Math.min($2 + G / U, B2.scrollHeight - O2 / U + P2))), R2 += Z - (J2 = Math.max(0, Math.min(Z + J2 / Q, B2.scrollWidth - X / Q + K)));
    }
    T2.push({ el: B2, top: G, left: J2 });
  }
  return T2;
};
function isOptionsObject(options2) {
  return options2 === Object(options2) && Object.keys(options2).length !== 0;
}
function defaultBehavior(actions, behavior) {
  if (behavior === void 0) {
    behavior = "auto";
  }
  var canSmoothScroll = "scrollBehavior" in document.body.style;
  actions.forEach(function(_ref) {
    var el = _ref.el, top = _ref.top, left = _ref.left;
    if (el.scroll && canSmoothScroll) {
      el.scroll({
        top,
        left,
        behavior
      });
    } else {
      el.scrollTop = top;
      el.scrollLeft = left;
    }
  });
}
function getOptions3(options2) {
  if (options2 === false) {
    return {
      block: "end",
      inline: "nearest"
    };
  }
  if (isOptionsObject(options2)) {
    return options2;
  }
  return {
    block: "start",
    inline: "nearest"
  };
}
function scrollIntoView$1(target, options2) {
  var isTargetAttached = target.isConnected || target.ownerDocument.documentElement.contains(target);
  if (isOptionsObject(options2) && typeof options2.behavior === "function") {
    return options2.behavior(isTargetAttached ? i(target, options2) : []);
  }
  if (!isTargetAttached) {
    return;
  }
  var computeOptions = getOptions3(options2);
  return defaultBehavior(i(target, computeOptions), computeOptions.behavior);
}
var nativeMin = Math.min;
function baseIntersection(arrays2, iteratee, comparator) {
  var includes = arrayIncludes, length = arrays2[0].length, othLength = arrays2.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
  while (othIndex--) {
    var array3 = arrays2[othIndex];
    maxLength = nativeMin(array3.length, maxLength);
    caches[othIndex] = length >= 120 && array3.length >= 120 ? new SetCache(othIndex && array3) : void 0;
  }
  array3 = arrays2[0];
  var index2 = -1, seen = caches[0];
  outer:
    while (++index2 < length && result.length < maxLength) {
      var value26 = array3[index2], computed2 = value26;
      value26 = value26 !== 0 ? value26 : 0;
      if (!(seen ? cacheHas(seen, computed2) : includes(result, computed2))) {
        othIndex = othLength;
        while (--othIndex) {
          var cache = caches[othIndex];
          if (!(cache ? cacheHas(cache, computed2) : includes(arrays2[othIndex], computed2))) {
            continue outer;
          }
        }
        if (seen) {
          seen.push(computed2);
        }
        result.push(value26);
      }
    }
  return result;
}
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + "");
}
function isArrayLikeObject(value26) {
  return isObjectLike(value26) && isArrayLike(value26);
}
function castArrayLikeObject(value26) {
  return isArrayLikeObject(value26) ? value26 : [];
}
var intersection = baseRest(function(arrays2) {
  var mapped = arrayMap(arrays2, castArrayLikeObject);
  return mapped.length && mapped[0] === arrays2[0] ? baseIntersection(mapped) : [];
});
const { computed: computed$p } = await importShared("vue");
const { reactive: reactive$9, watch: watch$d, nextTick: nextTick$c, unref } = await importShared("vue");
function isRequired(rules2) {
  var isRequired2 = false;
  if (rules2 && rules2.length) {
    rules2.every(function(rule) {
      if (rule.required) {
        isRequired2 = true;
        return false;
      }
      return true;
    });
  }
  return isRequired2;
}
function toArray$2(value26) {
  if (value26 === void 0 || value26 === null) {
    return [];
  }
  return Array.isArray(value26) ? value26 : [value26];
}
function getPropByPath(obj, path2, strict) {
  var tempObj = obj;
  path2 = path2.replace(/\[(\w+)\]/g, ".$1");
  path2 = path2.replace(/^\./, "");
  var keyArr = path2.split(".");
  var i2 = 0;
  for (var len = keyArr.length; i2 < len - 1; ++i2) {
    if (!tempObj && !strict) break;
    var key2 = keyArr[i2];
    if (key2 in tempObj) {
      tempObj = tempObj[key2];
    } else {
      if (strict) {
        throw new Error("please transfer a valid name path to validate!");
      }
      break;
    }
  }
  return {
    o: tempObj,
    k: keyArr[i2],
    v: tempObj ? tempObj[keyArr[i2]] : null,
    isValid: tempObj && keyArr[i2] in tempObj
  };
}
function useForm(modelRef, rulesRef, options2) {
  var initialModel = cloneDeep(unref(modelRef));
  var validateInfos = reactive$9({});
  var rulesKeys = computed$p(function() {
    return rulesRef ? Object.keys(unref(rulesRef)) : [];
  });
  watch$d(rulesKeys, function() {
    var newValidateInfos = {};
    rulesKeys.value.forEach(function(key3) {
      newValidateInfos[key3] = validateInfos[key3] || {
        autoLink: false,
        required: isRequired(unref(rulesRef)[key3])
      };
      delete validateInfos[key3];
    });
    for (var key2 in validateInfos) {
      if (Object.prototype.hasOwnProperty.call(validateInfos, key2)) {
        delete validateInfos[key2];
      }
    }
    _extends$1(validateInfos, newValidateInfos);
  }, {
    immediate: true
  });
  var resetFields = function resetFields2(newValues) {
    _extends$1(unref(modelRef), _extends$1(_extends$1({}, cloneDeep(initialModel)), newValues));
    nextTick$c(function() {
      Object.keys(validateInfos).forEach(function(key2) {
        validateInfos[key2] = {
          autoLink: false,
          required: isRequired(unref(rulesRef)[key2])
        };
      });
    });
  };
  var filterRules = function filterRules2() {
    var rules2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
    var trigger2 = arguments.length > 1 ? arguments[1] : void 0;
    if (!trigger2.length) {
      return rules2;
    } else {
      return rules2.filter(function(rule) {
        var triggerList = toArray$2(rule.trigger || "change");
        return intersection(triggerList, trigger2).length;
      });
    }
  };
  var lastValidatePromise = null;
  var validateFields = function validateFields2(names2) {
    var option = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var strict = arguments.length > 2 ? arguments[2] : void 0;
    var promiseList = [];
    var values = {};
    var _loop = function _loop2(i3) {
      var name = names2[i3];
      var prop = getPropByPath(unref(modelRef), name, strict);
      if (!prop.isValid) return "continue";
      values[name] = prop.v;
      var rules2 = filterRules(unref(rulesRef)[name], toArray$2(option && option.trigger));
      if (rules2.length) {
        promiseList.push(validateField(name, prop.v, rules2, option || {}).then(function() {
          return {
            name,
            errors: [],
            warnings: []
          };
        }).catch(function(ruleErrors) {
          var mergedErrors = [];
          var mergedWarnings = [];
          ruleErrors.forEach(function(_ref) {
            var warningOnly = _ref.rule.warningOnly, errors = _ref.errors;
            if (warningOnly) {
              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));
            } else {
              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));
            }
          });
          if (mergedErrors.length) {
            return Promise.reject({
              name,
              errors: mergedErrors,
              warnings: mergedWarnings
            });
          }
          return {
            name,
            errors: mergedErrors,
            warnings: mergedWarnings
          };
        }));
      }
    };
    for (var i2 = 0; i2 < names2.length; i2++) {
      var _ret = _loop(i2);
      if (_ret === "continue") continue;
    }
    var summaryPromise = allPromiseFinish(promiseList);
    lastValidatePromise = summaryPromise;
    var returnPromise = summaryPromise.then(function() {
      if (lastValidatePromise === summaryPromise) {
        return Promise.resolve(values);
      }
      return Promise.reject([]);
    }).catch(function(results) {
      var errorList = results.filter(function(result) {
        return result && result.errors.length;
      });
      return Promise.reject({
        values,
        errorFields: errorList,
        outOfDate: lastValidatePromise !== summaryPromise
      });
    });
    returnPromise.catch(function(e2) {
      return e2;
    });
    return returnPromise;
  };
  var validateField = function validateField2(name, value26, rules2) {
    var option = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    var promise = validateRules([name], value26, rules2, _extends$1({
      validateMessages: defaultValidateMessages
    }, option), !!option.validateFirst);
    if (!validateInfos[name]) {
      return promise.catch(function(e2) {
        return e2;
      });
    }
    validateInfos[name].validateStatus = "validating";
    promise.catch(function(e2) {
      return e2;
    }).then(function() {
      var results = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      if (validateInfos[name].validateStatus === "validating") {
        var res = results.filter(function(result) {
          return result && result.errors.length;
        });
        validateInfos[name].validateStatus = res.length ? "error" : "success";
        validateInfos[name].help = res.length ? res.map(function(r2) {
          return r2.errors;
        }) : "";
      }
    });
    return promise;
  };
  var validate2 = function validate3(names2, option) {
    var keys2 = [];
    var strict = true;
    if (!names2) {
      strict = false;
      keys2 = rulesKeys.value;
    } else if (Array.isArray(names2)) {
      keys2 = names2;
    } else {
      keys2 = [names2];
    }
    var promises = validateFields(keys2, option || {}, strict);
    promises.catch(function(e2) {
      return e2;
    });
    return promises;
  };
  var clearValidate = function clearValidate2(names2) {
    var keys2 = [];
    if (!names2) {
      keys2 = rulesKeys.value;
    } else if (Array.isArray(names2)) {
      keys2 = names2;
    } else {
      keys2 = [names2];
    }
    keys2.forEach(function(key2) {
      validateInfos[key2] && _extends$1(validateInfos[key2], {
        validateStatus: "",
        help: ""
      });
    });
  };
  var mergeValidateInfo = function mergeValidateInfo2(items) {
    var info3 = {
      autoLink: false
    };
    var help = [];
    var infos = Array.isArray(items) ? items : [items];
    for (var i2 = 0; i2 < infos.length; i2++) {
      var arg = infos[i2];
      if ((arg === null || arg === void 0 ? void 0 : arg.validateStatus) === "error") {
        info3.validateStatus = "error";
        arg.help && help.push(arg.help);
      }
      info3.required = info3.required || (arg === null || arg === void 0 ? void 0 : arg.required);
    }
    info3.help = help;
    return info3;
  };
  var oldModel = initialModel;
  var isFirstTime = true;
  var modelFn = function modelFn2(model) {
    var names2 = [];
    rulesKeys.value.forEach(function(key2) {
      var prop = getPropByPath(model, key2, false);
      var oldProp = getPropByPath(oldModel, key2, false);
      var isFirstValidation = isFirstTime && (options2 === null || options2 === void 0 ? void 0 : options2.immediate) && prop.isValid;
      if (isFirstValidation || !isEqual$1(prop.v, oldProp.v)) {
        names2.push(key2);
      }
    });
    validate2(names2, {
      trigger: "change"
    });
    isFirstTime = false;
    oldModel = cloneDeep(model);
  };
  var debounceOptions = options2 === null || options2 === void 0 ? void 0 : options2.debounce;
  watch$d(modelRef, debounceOptions && debounceOptions.wait ? debounce$1(modelFn, debounceOptions.wait, omit(debounceOptions, ["wait"])) : modelFn, {
    immediate: options2 && !!options2.immediate,
    deep: true
  });
  watch$d(rulesRef, function() {
    if (options2 && options2.validateOnRuleChange) {
      validate2();
    }
  }, {
    deep: true
  });
  return {
    modelRef,
    rulesRef,
    initialModel,
    validateInfos,
    resetFields,
    validate: validate2,
    validateField,
    mergeValidateInfo,
    clearValidate
  };
}
const { createVNode: _createVNode$2w } = await importShared("vue");
const { defineComponent: defineComponent$1k, computed: computed$o, watch: watch$c, ref: ref$n } = await importShared("vue");
var formProps = {
  layout: PropTypes.oneOf(tuple("horizontal", "inline", "vertical")),
  labelCol: {
    type: Object
  },
  wrapperCol: {
    type: Object
  },
  colon: PropTypes.looseBool,
  labelAlign: PropTypes.oneOf(tuple("left", "right")),
  prefixCls: PropTypes.string,
  requiredMark: {
    type: [String, Boolean],
    default: void 0
  },
  /** @deprecated Will warning in future branch. Pls use `requiredMark` instead. */
  hideRequiredMark: PropTypes.looseBool,
  model: PropTypes.object,
  rules: {
    type: Object
  },
  validateMessages: PropTypes.object,
  validateOnRuleChange: PropTypes.looseBool,
  // 提交失败自动滚动到第一个错误字段
  scrollToFirstError: {
    type: [Boolean, Object]
  },
  onSubmit: PropTypes.func,
  onFinish: PropTypes.func,
  onFinishFailed: PropTypes.func,
  name: PropTypes.string,
  validateTrigger: {
    type: [String, Array]
  },
  size: {
    type: String
  }
};
function isEqualName(name1, name2) {
  return isEqual$1(toArray$3(name1), toArray$3(name2));
}
var Form = defineComponent$1k({
  name: "AForm",
  inheritAttrs: false,
  props: initDefaultProps2(formProps, {
    layout: "horizontal",
    hideRequiredMark: false,
    colon: true
  }),
  Item: FormItem,
  useForm,
  emits: ["finishFailed", "submit", "finish"],
  setup: function setup88(props2, _ref) {
    var emit = _ref.emit, slots = _ref.slots, expose = _ref.expose, attrs = _ref.attrs;
    var size = useInjectSize(props2);
    var _useConfigInject = useConfigInject("form", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction, contextForm = _useConfigInject.form;
    var requiredMark = computed$o(function() {
      return props2.requiredMark === "" || props2.requiredMark;
    });
    var mergedRequiredMark = computed$o(function() {
      var _a;
      if (requiredMark.value !== void 0) {
        return requiredMark.value;
      }
      if (contextForm && ((_a = contextForm.value) === null || _a === void 0 ? void 0 : _a.requiredMark) !== void 0) {
        return contextForm.value.requiredMark;
      }
      if (props2.hideRequiredMark) {
        return false;
      }
      return true;
    });
    var formClassName = computed$o(function() {
      var _classNames;
      return classNames(prefixCls2.value, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-").concat(props2.layout), true), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-hide-required-mark"), mergedRequiredMark.value === false), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-").concat(size.value), size.value), _classNames));
    });
    var lastValidatePromise = ref$n();
    var fields = {};
    var addField = function addField2(eventKey, field) {
      fields[eventKey] = field;
    };
    var removeField = function removeField2(eventKey) {
      delete fields[eventKey];
    };
    var getFieldsByNameList = function getFieldsByNameList2(nameList) {
      var provideNameList = !!nameList;
      var namePathList = provideNameList ? toArray$3(nameList).map(getNamePath) : [];
      if (!provideNameList) {
        return Object.values(fields);
      } else {
        return Object.values(fields).filter(function(field) {
          return namePathList.findIndex(function(namePath) {
            return isEqualName(namePath, field.fieldName.value);
          }) > -1;
        });
      }
    };
    var resetFields = function resetFields2(name) {
      if (!props2.model) {
        warning$5(false, "Form", "model is required for resetFields to work.");
        return;
      }
      getFieldsByNameList(name).forEach(function(field) {
        field.resetField();
      });
    };
    var clearValidate = function clearValidate2(name) {
      getFieldsByNameList(name).forEach(function(field) {
        field.clearValidate();
      });
    };
    var handleFinishFailed = function handleFinishFailed2(errorInfo) {
      var scrollToFirstError = props2.scrollToFirstError;
      emit("finishFailed", errorInfo);
      if (scrollToFirstError && errorInfo.errorFields.length) {
        var scrollToFieldOptions = {};
        if (_typeof$3(scrollToFirstError) === "object") {
          scrollToFieldOptions = scrollToFirstError;
        }
        scrollToField(errorInfo.errorFields[0].name, scrollToFieldOptions);
      }
    };
    var validate2 = function validate3() {
      return validateField.apply(void 0, arguments);
    };
    var scrollToField = function scrollToField2(name) {
      var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var fields2 = getFieldsByNameList(name);
      if (fields2.length) {
        var fieldId = fields2[0].fieldId.value;
        var node = fieldId ? document.getElementById(fieldId) : null;
        if (node) {
          scrollIntoView$1(node, _extends$1({
            scrollMode: "if-needed",
            block: "nearest"
          }, options2));
        }
      }
    };
    var getFieldsValue = function getFieldsValue2() {
      var nameList = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
      var values = {};
      Object.values(fields).forEach(function(_ref2) {
        var fieldName = _ref2.fieldName, fieldValue = _ref2.fieldValue;
        values[fieldName.value] = fieldValue.value;
      });
      if (nameList === true) {
        return values;
      } else {
        var res = {};
        toArray$3(nameList).forEach(function(namePath) {
          return res[namePath] = values[namePath];
        });
        return res;
      }
    };
    var validateFields = function validateFields2(nameList, options2) {
      warning$5(!(nameList instanceof Function), "Form", "validateFields/validateField/validate not support callback, please use promise instead");
      if (!props2.model) {
        warning$5(false, "Form", "model is required for validateFields to work.");
        return Promise.reject("Form `model` is required for validateFields to work.");
      }
      var provideNameList = !!nameList;
      var namePathList = provideNameList ? toArray$3(nameList).map(getNamePath) : [];
      var promiseList = [];
      Object.values(fields).forEach(function(field) {
        var _a;
        if (!provideNameList) {
          namePathList.push(field.namePath.value);
        }
        if (!((_a = field.rules) === null || _a === void 0 ? void 0 : _a.value.length)) {
          return;
        }
        var fieldNamePath = field.namePath.value;
        if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {
          var promise = field.validateRules(_extends$1({
            validateMessages: _extends$1(_extends$1({}, defaultValidateMessages), props2.validateMessages)
          }, options2));
          promiseList.push(promise.then(function() {
            return {
              name: fieldNamePath,
              errors: [],
              warnings: []
            };
          }).catch(function(ruleErrors) {
            var mergedErrors = [];
            var mergedWarnings = [];
            ruleErrors.forEach(function(_ref3) {
              var warningOnly = _ref3.rule.warningOnly, errors = _ref3.errors;
              if (warningOnly) {
                mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));
              } else {
                mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));
              }
            });
            if (mergedErrors.length) {
              return Promise.reject({
                name: fieldNamePath,
                errors: mergedErrors,
                warnings: mergedWarnings
              });
            }
            return {
              name: fieldNamePath,
              errors: mergedErrors,
              warnings: mergedWarnings
            };
          }));
        }
      });
      var summaryPromise = allPromiseFinish(promiseList);
      lastValidatePromise.value = summaryPromise;
      var returnPromise = summaryPromise.then(function() {
        if (lastValidatePromise.value === summaryPromise) {
          return Promise.resolve(getFieldsValue(namePathList));
        }
        return Promise.reject([]);
      }).catch(function(results) {
        var errorList = results.filter(function(result) {
          return result && result.errors.length;
        });
        return Promise.reject({
          values: getFieldsValue(namePathList),
          errorFields: errorList,
          outOfDate: lastValidatePromise.value !== summaryPromise
        });
      });
      returnPromise.catch(function(e2) {
        return e2;
      });
      return returnPromise;
    };
    var validateField = function validateField2() {
      return validateFields.apply(void 0, arguments);
    };
    var handleSubmit = function handleSubmit2(e2) {
      e2.preventDefault();
      e2.stopPropagation();
      emit("submit", e2);
      if (props2.model) {
        var res = validateFields();
        res.then(function(values) {
          emit("finish", values);
        }).catch(function(errors) {
          handleFinishFailed(errors);
        });
      }
    };
    expose({
      resetFields,
      clearValidate,
      validateFields,
      getFieldsValue,
      validate: validate2,
      scrollToField
    });
    useProvideForm({
      model: computed$o(function() {
        return props2.model;
      }),
      name: computed$o(function() {
        return props2.name;
      }),
      labelAlign: computed$o(function() {
        return props2.labelAlign;
      }),
      labelCol: computed$o(function() {
        return props2.labelCol;
      }),
      wrapperCol: computed$o(function() {
        return props2.wrapperCol;
      }),
      vertical: computed$o(function() {
        return props2.layout === "vertical";
      }),
      colon: computed$o(function() {
        return props2.colon;
      }),
      requiredMark: mergedRequiredMark,
      validateTrigger: computed$o(function() {
        return props2.validateTrigger;
      }),
      rules: computed$o(function() {
        return props2.rules;
      }),
      addField,
      removeField
    });
    watch$c(function() {
      return props2.rules;
    }, function() {
      if (props2.validateOnRuleChange) {
        validateFields();
      }
    });
    return function() {
      var _a;
      return _createVNode$2w("form", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "onSubmit": handleSubmit,
        "class": [formClassName.value, attrs.class]
      }), [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
    };
  }
});
Form.install = function(app) {
  app.component(Form.name, Form);
  app.component(Form.Item.name, Form.Item);
  return app;
};
var numberTag = "[object Number]";
function isNumber(value26) {
  return typeof value26 == "number" || isObjectLike(value26) && baseGetTag(value26) == numberTag;
}
function getClientSize() {
  var width = document.documentElement.clientWidth;
  var height = window.innerHeight || document.documentElement.clientHeight;
  return {
    width,
    height
  };
}
function getOffset$1(node) {
  var box = node.getBoundingClientRect();
  var docElem = document.documentElement;
  return {
    left: box.left + (window.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || document.body.clientLeft || 0),
    top: box.top + (window.pageYOffset || docElem.scrollTop) - (docElem.clientTop || document.body.clientTop || 0)
  };
}
var RotateLeftOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "defs", "attrs": {}, "children": [{ "tag": "style", "attrs": {} }] }, { "tag": "path", "attrs": { "d": "M672 418H144c-17.7 0-32 14.3-32 32v414c0 17.7 14.3 32 32 32h528c17.7 0 32-14.3 32-32V450c0-17.7-14.3-32-32-32zm-44 402H188V494h440v326z" } }, { "tag": "path", "attrs": { "d": "M819.3 328.5c-78.8-100.7-196-153.6-314.6-154.2l-.2-64c0-6.5-7.6-10.1-12.6-6.1l-128 101c-4 3.1-3.9 9.1 0 12.3L492 318.6c5.1 4 12.7.4 12.6-6.1v-63.9c12.9.1 25.9.9 38.8 2.5 42.1 5.2 82.1 18.2 119 38.7 38.1 21.2 71.2 49.7 98.4 84.3 27.1 34.7 46.7 73.7 58.1 115.8a325.95 325.95 0 016.5 140.9h74.9c14.8-103.6-11.3-213-81-302.3z" } }] }, "name": "rotate-left", "theme": "outlined" };
const { createVNode: _createVNode$2v } = await importShared("vue");
function _objectSpread$q(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$r(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$r(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var RotateLeftOutlined = function RotateLeftOutlined2(props2, context2) {
  var p = _objectSpread$q({}, props2, context2.attrs);
  return _createVNode$2v(Icon, _objectSpread$q({}, p, {
    "icon": RotateLeftOutlined$1
  }), null);
};
RotateLeftOutlined.displayName = "RotateLeftOutlined";
RotateLeftOutlined.inheritAttrs = false;
var RotateRightOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "defs", "attrs": {}, "children": [{ "tag": "style", "attrs": {} }] }, { "tag": "path", "attrs": { "d": "M480.5 251.2c13-1.6 25.9-2.4 38.8-2.5v63.9c0 6.5 7.5 10.1 12.6 6.1L660 217.6c4-3.2 4-9.2 0-12.3l-128-101c-5.1-4-12.6-.4-12.6 6.1l-.2 64c-118.6.5-235.8 53.4-314.6 154.2A399.75 399.75 0 00123.5 631h74.9c-.9-5.3-1.7-10.7-2.4-16.1-5.1-42.1-2.1-84.1 8.9-124.8 11.4-42.2 31-81.1 58.1-115.8 27.2-34.7 60.3-63.2 98.4-84.3 37-20.6 76.9-33.6 119.1-38.8z" } }, { "tag": "path", "attrs": { "d": "M880 418H352c-17.7 0-32 14.3-32 32v414c0 17.7 14.3 32 32 32h528c17.7 0 32-14.3 32-32V450c0-17.7-14.3-32-32-32zm-44 402H396V494h440v326z" } }] }, "name": "rotate-right", "theme": "outlined" };
const { createVNode: _createVNode$2u } = await importShared("vue");
function _objectSpread$p(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$q(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$q(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var RotateRightOutlined = function RotateRightOutlined2(props2, context2) {
  var p = _objectSpread$p({}, props2, context2.attrs);
  return _createVNode$2u(Icon, _objectSpread$p({}, p, {
    "icon": RotateRightOutlined$1
  }), null);
};
RotateRightOutlined.displayName = "RotateRightOutlined";
RotateRightOutlined.inheritAttrs = false;
var ZoomInOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M637 443H519V309c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v134H325c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h118v134c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V519h118c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm284 424L775 721c122.1-148.9 113.6-369.5-26-509-148-148.1-388.4-148.1-537 0-148.1 148.6-148.1 389 0 537 139.5 139.6 360.1 148.1 509 26l146 146c3.2 2.8 8.3 2.8 11 0l43-43c2.8-2.7 2.8-7.8 0-11zM696 696c-118.8 118.7-311.2 118.7-430 0-118.7-118.8-118.7-311.2 0-430 118.8-118.7 311.2-118.7 430 0 118.7 118.8 118.7 311.2 0 430z" } }] }, "name": "zoom-in", "theme": "outlined" };
const { createVNode: _createVNode$2t } = await importShared("vue");
function _objectSpread$o(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$p(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$p(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ZoomInOutlined = function ZoomInOutlined2(props2, context2) {
  var p = _objectSpread$o({}, props2, context2.attrs);
  return _createVNode$2t(Icon, _objectSpread$o({}, p, {
    "icon": ZoomInOutlined$1
  }), null);
};
ZoomInOutlined.displayName = "ZoomInOutlined";
ZoomInOutlined.inheritAttrs = false;
var ZoomOutOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M637 443H325c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h312c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zm284 424L775 721c122.1-148.9 113.6-369.5-26-509-148-148.1-388.4-148.1-537 0-148.1 148.6-148.1 389 0 537 139.5 139.6 360.1 148.1 509 26l146 146c3.2 2.8 8.3 2.8 11 0l43-43c2.8-2.7 2.8-7.8 0-11zM696 696c-118.8 118.7-311.2 118.7-430 0-118.7-118.8-118.7-311.2 0-430 118.8-118.7 311.2-118.7 430 0 118.7 118.8 118.7 311.2 0 430z" } }] }, "name": "zoom-out", "theme": "outlined" };
const { createVNode: _createVNode$2s } = await importShared("vue");
function _objectSpread$n(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$o(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$o(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ZoomOutOutlined = function ZoomOutOutlined2(props2, context2) {
  var p = _objectSpread$n({}, props2, context2.attrs);
  return _createVNode$2s(Icon, _objectSpread$n({}, p, {
    "icon": ZoomOutOutlined$1
  }), null);
};
ZoomOutOutlined.displayName = "ZoomOutOutlined";
ZoomOutOutlined.inheritAttrs = false;
const { createVNode: _createVNode$2r } = await importShared("vue");
var ILazyRenderBoxPropTypes = {
  visible: PropTypes.looseBool,
  hiddenClassName: PropTypes.string,
  forceRender: PropTypes.looseBool
};
const LazyRenderBox = {
  props: ILazyRenderBoxPropTypes,
  render: function render87() {
    return _createVNode$2r("div", null, [getSlot(this)]);
  }
};
const _switchScrollingEffect = function(close7) {
  var bodyIsOverflowing = document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;
  if (!bodyIsOverflowing) {
    return;
  }
  if (close7) {
    document.body.style.position = "";
    document.body.style.width = "";
    return;
  }
  var scrollBarSize = getScrollBarSize();
  if (scrollBarSize) {
    document.body.style.position = "relative";
    document.body.style.width = "calc(100% - ".concat(scrollBarSize, "px)");
  }
};
function IDialogPropTypes$3() {
  return {
    keyboard: PropTypes.looseBool,
    mask: PropTypes.looseBool,
    afterClose: PropTypes.func,
    // onClose: PropTypes. (e: SyntheticEvent<HTMLDivElement>) =>any,
    closable: PropTypes.looseBool,
    maskClosable: PropTypes.looseBool,
    visible: PropTypes.looseBool,
    destroyOnClose: PropTypes.looseBool,
    mousePosition: PropTypes.shape({
      x: PropTypes.number,
      y: PropTypes.number
    }).loose,
    title: PropTypes.any,
    footer: PropTypes.any,
    transitionName: PropTypes.string,
    maskTransitionName: PropTypes.string,
    animation: PropTypes.any,
    maskAnimation: PropTypes.any,
    wrapStyle: PropTypes.object,
    bodyStyle: PropTypes.object,
    maskStyle: PropTypes.object,
    prefixCls: PropTypes.string,
    wrapClassName: PropTypes.string,
    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    zIndex: PropTypes.number,
    bodyProps: PropTypes.any,
    maskProps: PropTypes.any,
    wrapProps: PropTypes.any,
    getContainer: PropTypes.any,
    dialogStyle: PropTypes.object,
    dialogClass: PropTypes.string,
    closeIcon: PropTypes.any,
    forceRender: PropTypes.looseBool,
    getOpenCount: PropTypes.func,
    // https://github.com/ant-design/ant-design/issues/19771
    // https://github.com/react-component/dialog/issues/95
    focusTriggerAfterClose: PropTypes.looseBool,
    onClose: PropTypes.func
  };
}
const { withDirectives: _withDirectives, vShow: _vShow, createVNode: _createVNode$2q } = await importShared("vue");
const { defineComponent: defineComponent$1j, provide: provide$7 } = await importShared("vue");
var IDialogPropTypes$2 = IDialogPropTypes$3();
var uuid$1 = 0;
function noop$e() {
}
function getScroll$2(w2, top) {
  var ret = w2["page".concat(top ? "Y" : "X", "Offset")];
  var method3 = "scroll".concat(top ? "Top" : "Left");
  if (typeof ret !== "number") {
    var d2 = w2.document;
    ret = d2.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d2.body[method3];
    }
  }
  return ret;
}
function setTransformOrigin(node, value26) {
  var style3 = node.style;
  ["Webkit", "Moz", "Ms", "ms"].forEach(function(prefix) {
    style3["".concat(prefix, "TransformOrigin")] = value26;
  });
  style3["transformOrigin"] = value26;
}
function offset2(el) {
  var rect = el.getBoundingClientRect();
  var pos = {
    left: rect.left,
    top: rect.top
  };
  var doc = el.ownerDocument;
  var w2 = doc.defaultView || doc.parentWindow;
  pos.left += getScroll$2(w2);
  pos.top += getScroll$2(w2, true);
  return pos;
}
var cacheOverflow$1 = {};
const Dialog = defineComponent$1j({
  name: "VcDialog",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(IDialogPropTypes$2, {
    mask: true,
    visible: false,
    keyboard: true,
    closable: true,
    maskClosable: true,
    destroyOnClose: false,
    prefixCls: "rc-dialog",
    getOpenCount: function getOpenCount() {
      return null;
    },
    focusTriggerAfterClose: true
  }),
  data: function data44() {
    warning$5(!this.dialogClass, "Modal", "dialogClass is deprecated, please use class instead.");
    warning$5(!this.dialogStyle, "Modal", "dialogStyle is deprecated, please use style instead.");
    return {
      inTransition: false,
      titleId: "rcDialogTitle".concat(uuid$1++),
      dialogMouseDown: void 0
    };
  },
  watch: {
    visible: function visible4(val) {
      var _this = this;
      this.$nextTick(function() {
        _this.updatedCallback(!val);
      });
    }
  },
  created: function created12() {
    provide$7("dialogContext", this);
  },
  mounted: function mounted24() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.updatedCallback(false);
      if ((_this2.forceRender || _this2.getContainer === false && !_this2.visible) && _this2.$refs.wrap) {
        _this2.$refs.wrap.style.display = "none";
      }
    });
  },
  beforeUnmount: function beforeUnmount16() {
    var visible9 = this.visible, getOpenCount2 = this.getOpenCount;
    if ((visible9 || this.inTransition) && !getOpenCount2()) {
      this.switchScrollingEffect();
    }
    clearTimeout(this.timeoutId);
  },
  methods: {
    // 对外暴露的 api 不要更改名称或删除
    getDialogWrap: function getDialogWrap() {
      return this.$refs.wrap;
    },
    updatedCallback: function updatedCallback(visible9) {
      var mousePosition2 = this.mousePosition;
      var mask = this.mask, focusTriggerAfterClose = this.focusTriggerAfterClose;
      if (this.visible) {
        if (!visible9) {
          this.openTime = Date.now();
          this.switchScrollingEffect();
          this.tryFocus();
          var dialogNode = findDOMNode(this.$refs.dialog);
          if (mousePosition2) {
            var elOffset = offset2(dialogNode);
            setTransformOrigin(dialogNode, "".concat(mousePosition2.x - elOffset.left, "px ").concat(mousePosition2.y - elOffset.top, "px"));
          } else {
            setTransformOrigin(dialogNode, "");
          }
        }
      } else if (visible9) {
        this.inTransition = true;
        if (mask && this.lastOutSideFocusNode && focusTriggerAfterClose) {
          try {
            this.lastOutSideFocusNode.focus();
          } catch (e2) {
            this.lastOutSideFocusNode = null;
          }
          this.lastOutSideFocusNode = null;
        }
      }
    },
    tryFocus: function tryFocus() {
      if (!contains(this.$refs.wrap, document.activeElement)) {
        this.lastOutSideFocusNode = document.activeElement;
        this.$refs.sentinelStart.focus();
      }
    },
    onAnimateLeave: function onAnimateLeave() {
      var afterClose = this.afterClose;
      if (this.$refs.wrap) {
        this.$refs.wrap.style.display = "none";
      }
      this.inTransition = false;
      this.switchScrollingEffect();
      if (afterClose) {
        afterClose();
      }
    },
    onDialogMouseDown: function onDialogMouseDown() {
      this.dialogMouseDown = true;
    },
    onMaskMouseUp: function onMaskMouseUp() {
      var _this3 = this;
      if (this.dialogMouseDown) {
        this.timeoutId = setTimeout(function() {
          _this3.dialogMouseDown = false;
        }, 0);
      }
    },
    onMaskClick: function onMaskClick(e2) {
      if (Date.now() - this.openTime < 300) {
        return;
      }
      if (e2.target === e2.currentTarget && !this.dialogMouseDown) {
        this.close(e2);
      }
    },
    onKeydown: function onKeydown(e2) {
      var props2 = this.$props;
      if (props2.keyboard && e2.keyCode === KeyCode$1.ESC) {
        e2.stopPropagation();
        this.close(e2);
        return;
      }
      if (props2.visible) {
        if (e2.keyCode === KeyCode$1.TAB) {
          var activeElement = document.activeElement;
          var sentinelStart = this.$refs.sentinelStart;
          if (e2.shiftKey) {
            if (activeElement === sentinelStart) {
              this.$refs.sentinelEnd.focus();
            }
          } else if (activeElement === this.$refs.sentinelEnd) {
            sentinelStart.focus();
          }
        }
      }
    },
    getDialogElement: function getDialogElement() {
      var _this4 = this;
      var closable = this.closable, prefixCls2 = this.prefixCls, width = this.width, height = this.height, title = this.title, tempFooter = this.footer, bodyStyle = this.bodyStyle, visible9 = this.visible, bodyProps = this.bodyProps, forceRender = this.forceRender, closeIcon = this.closeIcon, _this$dialogStyle = this.dialogStyle, dialogStyle = _this$dialogStyle === void 0 ? {} : _this$dialogStyle, _this$dialogClass = this.dialogClass, dialogClass = _this$dialogClass === void 0 ? "" : _this$dialogClass;
      var dest = _extends$1({}, dialogStyle);
      if (width !== void 0) {
        dest.width = typeof width === "number" ? "".concat(width, "px") : width;
      }
      if (height !== void 0) {
        dest.height = typeof height === "number" ? "".concat(height, "px") : height;
      }
      var footer;
      if (tempFooter) {
        footer = _createVNode$2q("div", {
          "key": "footer",
          "class": "".concat(prefixCls2, "-footer"),
          "ref": "footer"
        }, [tempFooter]);
      }
      var header;
      if (title) {
        header = _createVNode$2q("div", {
          "key": "header",
          "class": "".concat(prefixCls2, "-header"),
          "ref": "header"
        }, [_createVNode$2q("div", {
          "class": "".concat(prefixCls2, "-title"),
          "id": this.titleId
        }, [title])]);
      }
      var closer;
      if (closable) {
        closer = _createVNode$2q("button", {
          "type": "button",
          "key": "close",
          "onClick": this.close || noop$e,
          "aria-label": "Close",
          "class": "".concat(prefixCls2, "-close")
        }, [closeIcon || _createVNode$2q("span", {
          "class": "".concat(prefixCls2, "-close-x")
        }, null)]);
      }
      var _this$$attrs = this.$attrs, stl = _this$$attrs.style, className = _this$$attrs.class;
      var style3 = _extends$1(_extends$1({}, stl), dest);
      var sentinelStyle2 = {
        width: 0,
        height: 0,
        overflow: "hidden"
      };
      var cls = [prefixCls2, className, dialogClass];
      var transitionName2 = this.getTransitionName();
      var dialogElement = _withDirectives(_createVNode$2q(LazyRenderBox, {
        "key": "dialog-element",
        "role": "document",
        "ref": "dialog",
        "style": style3,
        "class": cls,
        "forceRender": forceRender,
        "onMousedown": this.onDialogMouseDown
      }, {
        default: function _default8() {
          return [_createVNode$2q("div", {
            "tabindex": 0,
            "ref": "sentinelStart",
            "style": sentinelStyle2,
            "aria-hidden": "true"
          }, null), _createVNode$2q("div", {
            "class": "".concat(prefixCls2, "-content")
          }, [closer, header, _createVNode$2q("div", _objectSpread2$2({
            "key": "body",
            "class": "".concat(prefixCls2, "-body"),
            "style": bodyStyle,
            "ref": "body"
          }, bodyProps), [getSlot(_this4)]), footer]), _createVNode$2q("div", {
            "tabindex": 0,
            "ref": "sentinelEnd",
            "style": sentinelStyle2,
            "aria-hidden": "true"
          }, null)];
        }
      }), [[_vShow, visible9]]);
      var dialogTransitionProps = getTransitionProps(transitionName2, {
        onAfterLeave: this.onAnimateLeave
      });
      return _createVNode$2q(Transition, _objectSpread2$2({
        "key": "dialog"
      }, dialogTransitionProps), {
        default: function _default8() {
          return [visible9 || !_this4.destroyOnClose ? dialogElement : null];
        }
      });
    },
    getZIndexStyle: function getZIndexStyle2() {
      var style3 = {};
      var props2 = this.$props;
      if (props2.zIndex !== void 0) {
        style3.zIndex = props2.zIndex;
      }
      return style3;
    },
    getWrapStyle: function getWrapStyle() {
      return _extends$1(_extends$1({}, this.getZIndexStyle()), this.wrapStyle);
    },
    getMaskStyle: function getMaskStyle() {
      return _extends$1(_extends$1({}, this.getZIndexStyle()), this.maskStyle);
    },
    getMaskElement: function getMaskElement2() {
      var props2 = this.$props;
      var maskElement;
      if (props2.mask) {
        var maskTransition = this.getMaskTransitionName();
        var tempMaskElement = _withDirectives(_createVNode$2q(LazyRenderBox, _objectSpread2$2({
          "style": this.getMaskStyle(),
          "key": "mask",
          "class": "".concat(props2.prefixCls, "-mask")
        }, props2.maskProps || {}), null), [[_vShow, props2.visible]]);
        if (maskTransition) {
          var maskTransitionProps = getTransitionProps(maskTransition);
          maskElement = _createVNode$2q(Transition, _objectSpread2$2({
            "key": "mask"
          }, maskTransitionProps), {
            default: function _default8() {
              return [tempMaskElement];
            }
          });
        } else {
          maskElement = tempMaskElement;
        }
      }
      return maskElement;
    },
    getMaskTransitionName: function getMaskTransitionName2() {
      var props2 = this.$props;
      var transitionName2 = props2.maskTransitionName;
      var animation2 = props2.maskAnimation;
      if (!transitionName2 && animation2) {
        transitionName2 = "".concat(props2.prefixCls, "-").concat(animation2);
      }
      return transitionName2;
    },
    getTransitionName: function getTransitionName4() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      var animation2 = props2.animation;
      if (!transitionName2 && animation2) {
        transitionName2 = "".concat(props2.prefixCls, "-").concat(animation2);
      }
      return transitionName2;
    },
    // setScrollbar() {
    //   if (this.bodyIsOverflowing && this.scrollbarWidth !== undefined) {
    //     document.body.style.paddingRight = `${this.scrollbarWidth}px`;
    //   }
    // },
    switchScrollingEffect: function switchScrollingEffect() {
      var getOpenCount2 = this.getOpenCount;
      var openCount2 = getOpenCount2();
      if (openCount2 === 1) {
        if (cacheOverflow$1.hasOwnProperty("overflowX")) {
          return;
        }
        cacheOverflow$1 = {
          overflowX: document.body.style.overflowX,
          overflowY: document.body.style.overflowY,
          overflow: document.body.style.overflow
        };
        _switchScrollingEffect();
        document.body.style.overflow = "hidden";
      } else if (!openCount2) {
        if (cacheOverflow$1.overflow !== void 0) {
          document.body.style.overflow = cacheOverflow$1.overflow;
        }
        if (cacheOverflow$1.overflowX !== void 0) {
          document.body.style.overflowX = cacheOverflow$1.overflowX;
        }
        if (cacheOverflow$1.overflowY !== void 0) {
          document.body.style.overflowY = cacheOverflow$1.overflowY;
        }
        cacheOverflow$1 = {};
        _switchScrollingEffect(true);
      }
    },
    // removeScrollingEffect() {
    //   const { getOpenCount } = this;
    //   const openCount = getOpenCount();
    //   if (openCount !== 0) {
    //     return;
    //   }
    //   document.body.style.overflow = '';
    //   switchScrollingEffect(true);
    //   // this.resetAdjustments();
    // },
    close: function close4(e2) {
      this.__emit("close", e2);
    }
  },
  render: function render88() {
    var prefixCls2 = this.prefixCls, maskClosable = this.maskClosable, visible9 = this.visible, wrapClassName = this.wrapClassName, title = this.title, wrapProps = this.wrapProps;
    var style3 = this.getWrapStyle();
    if (visible9) {
      style3.display = null;
    }
    return _createVNode$2q("div", {
      "class": "".concat(prefixCls2, "-root")
    }, [this.getMaskElement(), _createVNode$2q("div", _objectSpread2$2({
      "tabindex": -1,
      "onKeydown": this.onKeydown,
      "class": "".concat(prefixCls2, "-wrap ").concat(wrapClassName || ""),
      "ref": "wrap",
      "onClick": maskClosable ? this.onMaskClick : noop$e,
      "onMouseup": maskClosable ? this.onMaskMouseUp : noop$e,
      "role": "dialog",
      "aria-labelledby": title ? this.titleId : null,
      "style": style3
    }, wrapProps), [this.getDialogElement()])]);
  }
});
function setStyle(style3) {
  var options2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _options$element = options2.element, element = _options$element === void 0 ? document.body : _options$element;
  var oldStyle = {};
  var styleKeys = Object.keys(style3);
  styleKeys.forEach(function(key2) {
    oldStyle[key2] = element.style[key2];
  });
  styleKeys.forEach(function(key2) {
    element.style[key2] = style3[key2];
  });
  return oldStyle;
}
const { createVNode: _createVNode$2p } = await importShared("vue");
const { defineComponent: defineComponent$1i } = await importShared("vue");
var openCount = 0;
var windowIsUndefined = !(typeof window !== "undefined" && window.document && window.document.createElement);
var cacheOverflow = {};
const Portal = defineComponent$1i({
  name: "PortalWrapper",
  props: {
    wrapperClassName: PropTypes.string,
    forceRender: PropTypes.looseBool,
    getContainer: PropTypes.any,
    children: PropTypes.func,
    visible: PropTypes.looseBool
  },
  data: function data45() {
    this._component = null;
    var visible9 = this.$props.visible;
    openCount = visible9 ? openCount + 1 : openCount;
    return {};
  },
  watch: {
    visible: function visible5(val) {
      openCount = val ? openCount + 1 : openCount - 1;
    },
    getContainer: function getContainer2(_getContainer, prevGetContainer) {
      var getContainerIsFunc = typeof _getContainer === "function" && typeof prevGetContainer === "function";
      if (getContainerIsFunc ? _getContainer.toString() !== prevGetContainer.toString() : _getContainer !== prevGetContainer) {
        this.removeCurrentContainer(false);
      }
    }
  },
  updated: function updated13() {
    this.setWrapperClassName();
  },
  beforeUnmount: function beforeUnmount17() {
    var visible9 = this.$props.visible;
    openCount = visible9 && openCount ? openCount - 1 : openCount;
    this.removeCurrentContainer(visible9);
  },
  methods: {
    getParent: function getParent3() {
      var getContainer5 = this.$props.getContainer;
      if (getContainer5) {
        if (typeof getContainer5 === "string") {
          return document.querySelectorAll(getContainer5)[0];
        }
        if (typeof getContainer5 === "function") {
          return getContainer5();
        }
        if (_typeof$3(getContainer5) === "object" && getContainer5 instanceof window.HTMLElement) {
          return getContainer5;
        }
      }
      return document.body;
    },
    getDomContainer: function getDomContainer() {
      if (windowIsUndefined) {
        return null;
      }
      if (!this.container) {
        this.container = document.createElement("div");
        var parent2 = this.getParent();
        if (parent2) {
          parent2.appendChild(this.container);
        }
      }
      this.setWrapperClassName();
      return this.container;
    },
    setWrapperClassName: function setWrapperClassName() {
      var wrapperClassName = this.$props.wrapperClassName;
      if (this.container && wrapperClassName && wrapperClassName !== this.container.className) {
        this.container.className = wrapperClassName;
      }
    },
    savePortal: function savePortal(c2) {
      this._component = c2;
    },
    removeCurrentContainer: function removeCurrentContainer() {
      this.container = null;
      this._component = null;
    },
    /**
     * Enhance ./switchScrollingEffect
     * 1. Simulate document body scroll bar with
     * 2. Record body has overflow style and recover when all of PortalWrapper invisible
     * 3. Disable body scroll when PortalWrapper has open
     *
     * @memberof PortalWrapper
     */
    switchScrollingEffect: function switchScrollingEffect2() {
      if (openCount === 1 && !Object.keys(cacheOverflow).length) {
        _switchScrollingEffect();
        cacheOverflow = setStyle({
          overflow: "hidden",
          overflowX: "hidden",
          overflowY: "hidden"
        });
      } else if (!openCount) {
        setStyle(cacheOverflow);
        cacheOverflow = {};
        _switchScrollingEffect(true);
      }
    }
  },
  render: function render89() {
    var _this$$props = this.$props, children = _this$$props.children, forceRender = _this$$props.forceRender, visible9 = _this$$props.visible;
    var portal = null;
    var childProps = {
      getOpenCount: function getOpenCount2() {
        return openCount;
      },
      getContainer: this.getDomContainer,
      switchScrollingEffect: this.switchScrollingEffect
    };
    if (forceRender || visible9 || this._component) {
      portal = _createVNode$2p(Portal$1, {
        "getContainer": this.getDomContainer,
        "children": children(childProps),
        "ref": this.savePortal
      }, null);
    }
    return portal;
  }
});
const { createVNode: _createVNode$2o } = await importShared("vue");
const { defineComponent: defineComponent$1h } = await importShared("vue");
var IDialogPropTypes$1 = IDialogPropTypes$3();
var DialogWrap = defineComponent$1h({
  inheritAttrs: false,
  props: _extends$1(_extends$1({}, IDialogPropTypes$1), {
    visible: IDialogPropTypes$1.visible.def(false)
  }),
  render: function render90() {
    var _this = this;
    var _this$$props = this.$props, visible9 = _this$$props.visible, getContainer5 = _this$$props.getContainer, forceRender = _this$$props.forceRender;
    var dialogProps = _extends$1(_extends$1(_extends$1({}, this.$props), this.$attrs), {
      ref: "_component",
      key: "dialog"
    });
    if (getContainer5 === false) {
      return _createVNode$2o(Dialog, _objectSpread2$2(_objectSpread2$2({}, dialogProps), {}, {
        "getOpenCount": function getOpenCount2() {
          return 2;
        }
      }), {
        default: function _default8() {
          return [getSlot(_this)];
        }
      });
    }
    return _createVNode$2o(Portal, {
      "visible": visible9,
      "forceRender": forceRender,
      "getContainer": getContainer5,
      "children": function children(childProps) {
        dialogProps = _extends$1(_extends$1({}, dialogProps), childProps);
        return _createVNode$2o(Dialog, dialogProps, {
          default: function _default8() {
            return [getSlot(_this)];
          }
        });
      }
    }, null);
  }
});
const { onMounted: onMounted$c, reactive: reactive$8, ref: ref$m } = await importShared("vue");
function useFrameSetState(initial) {
  var frame = ref$m(null);
  var state = reactive$8(_extends$1({}, initial));
  var queue = ref$m([]);
  var setFrameState = function setFrameState2(newState) {
    if (frame.value === null) {
      queue.value = [];
      frame.value = wrapperRaf(function() {
        var memoState;
        queue.value.forEach(function(queueState) {
          memoState = _extends$1(_extends$1({}, memoState), queueState);
        });
        _extends$1(state, memoState);
        frame.value = null;
      });
    }
    queue.value.push(newState);
  };
  onMounted$c(function() {
    frame.value && wrapperRaf.cancel(frame.value);
  });
  return [state, setFrameState];
}
function fixPoint(key2, start, width, clientWidth) {
  var startAddWidth = start + width;
  var offsetStart = (width - clientWidth) / 2;
  if (width > clientWidth) {
    if (start > 0) {
      return _defineProperty$U({}, key2, offsetStart);
    }
    if (start < 0 && startAddWidth < clientWidth) {
      return _defineProperty$U({}, key2, -offsetStart);
    }
  } else if (start < 0 || startAddWidth > clientWidth) {
    return _defineProperty$U({}, key2, start < 0 ? offsetStart : -offsetStart);
  }
  return {};
}
function getFixScaleEleTransPosition(width, height, left, top) {
  var _getClientSize = getClientSize(), clientWidth = _getClientSize.width, clientHeight = _getClientSize.height;
  var fixPos = null;
  if (width <= clientWidth && height <= clientHeight) {
    fixPos = {
      x: 0,
      y: 0
    };
  } else if (width > clientWidth || height > clientHeight) {
    fixPos = _extends$1(_extends$1({}, fixPoint("x", left, width, clientWidth)), fixPoint("y", top, height, clientHeight));
  }
  return fixPos;
}
const { createVNode: _createVNode$2n, Fragment: _Fragment$7 } = await importShared("vue");
const { ref: ref$l, provide: _provide, defineComponent: defineComponent$1g, inject: _inject, reactive: reactive$7 } = await importShared("vue");
var previewGroupContext = Symbol("previewGroupContext");
var context = {
  provide: function provide(val) {
    _provide(previewGroupContext, val);
  },
  inject: function inject() {
    return _inject(previewGroupContext, {
      isPreviewGroup: ref$l(false),
      previewUrls: reactive$7({}),
      setPreviewUrls: function setPreviewUrls() {
      },
      current: ref$l(null),
      setCurrent: function setCurrent() {
      },
      setShowPreview: function setShowPreview() {
      },
      setMousePosition: function setMousePosition() {
      },
      registerImage: null
    });
  }
};
var Group = defineComponent$1g({
  name: "PreviewGroup",
  inheritAttrs: false,
  props: {
    previewPrefixCls: String
  },
  setup: function setup89(props2, _ref) {
    var slots = _ref.slots;
    var previewUrls = reactive$7({});
    var current2 = ref$l();
    var isShowPreview = ref$l(false);
    var mousePosition2 = ref$l(null);
    var setPreviewUrls = function setPreviewUrls2(val) {
      _extends$1(previewUrls, val);
    };
    var setCurrent = function setCurrent2(val) {
      current2.value = val;
    };
    var setMousePosition = function setMousePosition2(val) {
      mousePosition2.value = val;
    };
    var setShowPreview = function setShowPreview2(val) {
      isShowPreview.value = val;
    };
    var registerImage = function registerImage2(id2, url2) {
      previewUrls[id2] = url2;
      return function() {
        delete previewUrls[id2];
      };
    };
    var onPreviewClose = function onPreviewClose2(e2) {
      e2 === null || e2 === void 0 ? void 0 : e2.stopPropagation();
      isShowPreview.value = false;
      mousePosition2.value = null;
    };
    context.provide({
      isPreviewGroup: ref$l(true),
      previewUrls,
      setPreviewUrls,
      current: current2,
      setCurrent,
      setShowPreview,
      setMousePosition,
      registerImage
    });
    return function() {
      return _createVNode$2n(_Fragment$7, null, [slots.default && slots.default(), _createVNode$2n(Preview, {
        "ria-hidden": !isShowPreview.value,
        "visible": isShowPreview.value,
        "prefixCls": props2.previewPrefixCls,
        "onClose": onPreviewClose,
        "mousePosition": mousePosition2.value,
        "src": previewUrls[current2.value]
      }, null)]);
    };
  }
});
const { createVNode: _createVNode$2m } = await importShared("vue");
const { computed: computed$n, defineComponent: defineComponent$1f, onMounted: onMounted$b, onUnmounted, reactive: reactive$6, ref: ref$k, watch: watch$b } = await importShared("vue");
var IDialogPropTypes = IDialogPropTypes$3();
var initialPosition = {
  x: 0,
  y: 0
};
var PreviewType = _extends$1({
  src: PropTypes.string,
  alt: PropTypes.string
}, IDialogPropTypes);
var Preview = defineComponent$1f({
  name: "Preview",
  inheritAttrs: false,
  props: PreviewType,
  emits: ["close", "afterClose"],
  setup: function setup90(props2, _ref) {
    var emit = _ref.emit, attrs = _ref.attrs;
    var scale = ref$k(1);
    var rotate = ref$k(0);
    var _useFrameSetState = useFrameSetState(initialPosition), _useFrameSetState2 = _slicedToArray$2(_useFrameSetState, 2), position = _useFrameSetState2[0], setPosition = _useFrameSetState2[1];
    var onClose = function onClose2() {
      return emit("close");
    };
    var imgRef = ref$k();
    var originPositionRef = reactive$6({
      originX: 0,
      originY: 0,
      deltaX: 0,
      deltaY: 0
    });
    var isMoving = ref$k(false);
    var groupContext = context.inject();
    var previewUrls = groupContext.previewUrls, current2 = groupContext.current, isPreviewGroup = groupContext.isPreviewGroup, setCurrent = groupContext.setCurrent;
    var previewGroupCount = computed$n(function() {
      return Object.keys(previewUrls).length;
    });
    var previewUrlsKeys = computed$n(function() {
      return Object.keys(previewUrls);
    });
    var currentPreviewIndex = computed$n(function() {
      return previewUrlsKeys.value.indexOf(String(current2.value));
    });
    var combinationSrc = computed$n(function() {
      return isPreviewGroup.value ? previewUrls[current2.value] : props2.src;
    });
    var showLeftOrRightSwitches = computed$n(function() {
      return isPreviewGroup.value && previewGroupCount.value > 1;
    });
    var onAfterClose = function onAfterClose2() {
      scale.value = 1;
      rotate.value = 0;
      setPosition(initialPosition);
    };
    var onZoomIn = function onZoomIn2() {
      scale.value++;
      setPosition(initialPosition);
    };
    var onZoomOut = function onZoomOut2() {
      if (scale.value > 1) {
        scale.value--;
      }
      setPosition(initialPosition);
    };
    var onRotateRight = function onRotateRight2() {
      rotate.value += 90;
    };
    var onRotateLeft = function onRotateLeft2() {
      rotate.value -= 90;
    };
    var onSwitchLeft = function onSwitchLeft2(event) {
      event.preventDefault();
      event.stopPropagation();
      if (currentPreviewIndex.value > 0) {
        setCurrent(previewUrlsKeys.value[String(currentPreviewIndex.value - 1)]);
      }
    };
    var onSwitchRight = function onSwitchRight2(event) {
      event.preventDefault();
      event.stopPropagation();
      if (currentPreviewIndex.value < previewGroupCount.value - 1) {
        setCurrent(previewUrlsKeys.value[String(currentPreviewIndex.value + 1)]);
      }
    };
    var wrapClassName = classNames(_defineProperty$U({}, "".concat(props2.prefixCls, "-moving"), isMoving.value));
    var toolClassName = "".concat(props2.prefixCls, "-operations-operation");
    var iconClassName = "".concat(props2.prefixCls, "-operations-icon");
    var tools = [{
      icon: CloseOutlined,
      onClick: onClose,
      type: "close"
    }, {
      icon: ZoomInOutlined,
      onClick: onZoomIn,
      type: "zoomIn"
    }, {
      icon: ZoomOutOutlined,
      onClick: onZoomOut,
      type: "zoomOut",
      disabled: computed$n(function() {
        return scale.value === 1;
      })
    }, {
      icon: RotateRightOutlined,
      onClick: onRotateRight,
      type: "rotateRight"
    }, {
      icon: RotateLeftOutlined,
      onClick: onRotateLeft,
      type: "rotateLeft"
    }];
    var onMouseUp3 = function onMouseUp4() {
      if (props2.visible && isMoving.value) {
        var width = imgRef.value.offsetWidth * scale.value;
        var height = imgRef.value.offsetHeight * scale.value;
        var _getOffset = getOffset$1(imgRef.value), left = _getOffset.left, top = _getOffset.top;
        var isRotate = rotate.value % 180 !== 0;
        isMoving.value = false;
        var fixState = getFixScaleEleTransPosition(isRotate ? height : width, isRotate ? width : height, left, top);
        if (fixState) {
          setPosition(_extends$1({}, fixState));
        }
      }
    };
    var onMouseDown3 = function onMouseDown4(event) {
      event.preventDefault();
      event.stopPropagation();
      originPositionRef.deltaX = event.pageX - position.x;
      originPositionRef.deltaY = event.pageY - position.y;
      originPositionRef.originX = position.x;
      originPositionRef.originY = position.y;
      isMoving.value = true;
    };
    var onMouseMove3 = function onMouseMove4(event) {
      if (props2.visible && isMoving.value) {
        setPosition({
          x: event.pageX - originPositionRef.deltaX,
          y: event.pageY - originPositionRef.deltaY
        });
      }
    };
    var removeListeners = function removeListeners2() {
    };
    onMounted$b(function() {
      watch$b([function() {
        return props2.visible;
      }, isMoving], function() {
        removeListeners();
        var onTopMouseUpListener;
        var onTopMouseMoveListener;
        var onMouseUpListener = addEventListenerWrap(window, "mouseup", onMouseUp3, false);
        var onMouseMoveListener = addEventListenerWrap(window, "mousemove", onMouseMove3, false);
        try {
          if (window.top !== window.self) {
            onTopMouseUpListener = addEventListenerWrap(window.top, "mouseup", onMouseUp3, false);
            onTopMouseMoveListener = addEventListenerWrap(window.top, "mousemove", onMouseMove3, false);
          }
        } catch (error3) {
        }
        removeListeners = function removeListeners2() {
          onMouseUpListener.remove();
          onMouseMoveListener.remove();
          if (onTopMouseUpListener) onTopMouseUpListener.remove();
          if (onTopMouseMoveListener) onTopMouseMoveListener.remove();
        };
      }, {
        flush: "post",
        immediate: true
      });
    });
    onUnmounted(function() {
      removeListeners();
    });
    return function() {
      return _createVNode$2m(DialogWrap, _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "transitionName": "zoom",
        "maskTransitionName": "fade",
        "closable": false,
        "keyboard": true,
        "prefixCls": props2.prefixCls,
        "onClose": onClose,
        "afterClose": onAfterClose,
        "visible": props2.visible,
        "wrapClassName": wrapClassName,
        "getContainer": props2.getContainer
      }), {
        default: function _default8() {
          return [_createVNode$2m("ul", {
            "class": "".concat(props2.prefixCls, "-operations")
          }, [tools.map(function(_ref2) {
            var IconType = _ref2.icon, onClick7 = _ref2.onClick, type3 = _ref2.type, disabled = _ref2.disabled;
            return _createVNode$2m("li", {
              "class": classNames(toolClassName, _defineProperty$U({}, "".concat(props2.prefixCls, "-operations-operation-disabled"), disabled && (disabled === null || disabled === void 0 ? void 0 : disabled.value))),
              "onClick": onClick7,
              "key": type3
            }, [_createVNode$2m(IconType, {
              "class": iconClassName
            }, null)]);
          })]), _createVNode$2m("div", {
            "class": "".concat(props2.prefixCls, "-img-wrapper"),
            "style": {
              transform: "translate3d(".concat(position.x, "px, ").concat(position.y, "px, 0)")
            }
          }, [_createVNode$2m("img", {
            "onMousedown": onMouseDown3,
            "ref": imgRef,
            "class": "".concat(props2.prefixCls, "-img"),
            "src": combinationSrc.value,
            "alt": props2.alt,
            "style": {
              transform: "scale3d(".concat(scale.value, ", ").concat(scale.value, ", 1) rotate(").concat(rotate.value, "deg)")
            }
          }, null)]), showLeftOrRightSwitches.value && _createVNode$2m("div", {
            "class": classNames("".concat(props2.prefixCls, "-switch-left"), _defineProperty$U({}, "".concat(props2.prefixCls, "-switch-left-disabled"), currentPreviewIndex.value <= 0)),
            "onClick": onSwitchLeft
          }, [_createVNode$2m(LeftOutlined, null, null)]), showLeftOrRightSwitches.value && _createVNode$2m("div", {
            "class": classNames("".concat(props2.prefixCls, "-switch-right"), _defineProperty$U({}, "".concat(props2.prefixCls, "-switch-right-disabled"), currentPreviewIndex.value >= previewGroupCount.value - 1)),
            "onClick": onSwitchRight
          }, [_createVNode$2m(RightOutlined, null, null)])];
        }
      });
    };
  }
});
const { createVNode: _createVNode$2l, Fragment: _Fragment$6 } = await importShared("vue");
const { ref: ref$j, watch: watch$a, defineComponent: defineComponent$1e, computed: computed$m, onMounted: onMounted$a } = await importShared("vue");
var imageProps = {
  src: PropTypes.string,
  wrapperClassName: PropTypes.string,
  wrapperStyle: PropTypes.style,
  prefixCls: PropTypes.string,
  previewPrefixCls: PropTypes.string,
  placeholder: PropTypes.VNodeChild,
  fallback: PropTypes.string,
  preview: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.shape({
    visible: PropTypes.bool,
    onVisibleChange: PropTypes.func,
    getContainer: PropTypes.oneOfType([PropTypes.func, PropTypes.looseBool, PropTypes.string])
  }).loose]).def(true)
};
var mergeDefaultValue = function mergeDefaultValue2(obj, defaultValues) {
  var res = _extends$1({}, obj);
  Object.keys(defaultValues).forEach(function(key2) {
    if (obj[key2] === void 0) {
      res[key2] = defaultValues[key2];
    }
  });
  return res;
};
var uuid = 0;
var ImageInternal = defineComponent$1e({
  name: "Image",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: imageProps,
  emits: ["click"],
  setup: function setup91(props2, _ref) {
    var attrs = _ref.attrs, slots = _ref.slots, emit = _ref.emit;
    var prefixCls2 = computed$m(function() {
      return props2.prefixCls;
    });
    var previewPrefixCls = computed$m(function() {
      return "".concat(prefixCls2.value, "-preview");
    });
    var preview = computed$m(function() {
      var defaultValues = {
        visible: void 0,
        onVisibleChange: function onVisibleChange6() {
        },
        getContainer: void 0
      };
      return _typeof$3(props2.preview) === "object" ? mergeDefaultValue(props2.preview, defaultValues) : defaultValues;
    });
    var isCustomPlaceholder = computed$m(function() {
      return props2.placeholder && props2.placeholder !== true || slots.placeholder;
    });
    var previewVisible = computed$m(function() {
      return preview.value.visible;
    });
    var onPreviewVisibleChange = computed$m(function() {
      return preview.value.onVisibleChange;
    });
    var getPreviewContainer = computed$m(function() {
      return preview.value.getContainer;
    });
    var isControlled = computed$m(function() {
      return previewVisible.value !== void 0;
    });
    var isShowPreview = ref$j(!!previewVisible.value);
    watch$a(previewVisible, function() {
      isShowPreview.value = !!previewVisible.value;
    });
    watch$a(isShowPreview, function(val, preVal) {
      onPreviewVisibleChange.value(val, preVal);
    });
    var status = ref$j(isCustomPlaceholder.value ? "loading" : "normal");
    watch$a(function() {
      return props2.src;
    }, function() {
      status.value = isCustomPlaceholder.value ? "loading" : "normal";
    });
    var mousePosition2 = ref$j(null);
    var isError = computed$m(function() {
      return status.value === "error";
    });
    var groupContext = context.inject();
    var isPreviewGroup = groupContext.isPreviewGroup, setCurrent = groupContext.setCurrent, setGroupShowPreview = groupContext.setShowPreview, setGroupMousePosition = groupContext.setMousePosition, registerImage = groupContext.registerImage;
    var currentId = ref$j(uuid++);
    var canPreview = computed$m(function() {
      return props2.preview && !isError.value;
    });
    var onLoad3 = function onLoad4() {
      status.value = "normal";
    };
    var onError2 = function onError3() {
      status.value = "error";
    };
    var onPreview = function onPreview2(e2) {
      if (!isControlled.value) {
        var _getOffset = getOffset$1(e2.target), left = _getOffset.left, top = _getOffset.top;
        if (isPreviewGroup.value) {
          setCurrent(currentId.value);
          setGroupMousePosition({
            x: left,
            y: top
          });
        } else {
          mousePosition2.value = {
            x: left,
            y: top
          };
        }
      }
      if (isPreviewGroup.value) {
        setGroupShowPreview(true);
      } else {
        isShowPreview.value = true;
      }
      emit("click", e2);
    };
    var onPreviewClose = function onPreviewClose2() {
      isShowPreview.value = false;
      if (!isControlled.value) {
        mousePosition2.value = null;
      }
    };
    var img = ref$j(null);
    watch$a(function() {
      return img;
    }, function() {
      if (status.value !== "loading") return;
      if (img.value.complete && (img.value.naturalWidth || img.value.naturalHeight)) {
        onLoad3();
      }
    });
    var unRegister = function unRegister2() {
    };
    onMounted$a(function() {
      watch$a([function() {
        return props2.src;
      }, canPreview], function() {
        unRegister();
        if (!isPreviewGroup.value) {
          return function() {
          };
        }
        unRegister = registerImage(currentId.value, props2.src);
        if (!canPreview.value) {
          unRegister();
        }
      }, {
        flush: "post",
        immediate: true
      });
    });
    var toSizePx = function toSizePx2(l2) {
      if (isNumber(l2)) return l2 + "px";
      return l2;
    };
    return function() {
      var prefixCls3 = props2.prefixCls, wrapperClassName = props2.wrapperClassName, fallback = props2.fallback, src = props2.src, preview2 = props2.preview, placeholder = props2.placeholder, wrapperStyle2 = props2.wrapperStyle;
      var width = attrs.width, height = attrs.height, crossorigin = attrs.crossorigin, decoding = attrs.decoding, alt = attrs.alt, sizes = attrs.sizes, srcset = attrs.srcset, usemap = attrs.usemap, cls = attrs.class, style3 = attrs.style;
      var wrappperClass = classNames(prefixCls3, wrapperClassName, _defineProperty$U({}, "".concat(prefixCls3, "-error"), isError.value));
      var mergedSrc = isError.value && fallback ? fallback : src;
      var previewMask = slots.previewMask && slots.previewMask();
      var imgCommonProps = {
        crossorigin,
        decoding,
        alt,
        sizes,
        srcset,
        usemap,
        class: classNames("".concat(prefixCls3, "-img"), _defineProperty$U({}, "".concat(prefixCls3, "-img-placeholder"), placeholder === true), cls),
        style: _extends$1({
          height
        }, style3)
      };
      return _createVNode$2l(_Fragment$6, null, [_createVNode$2l("div", {
        "class": wrappperClass,
        "onClick": preview2 && !isError.value ? onPreview : function(e2) {
          emit("click", e2);
        },
        "style": _extends$1({
          width: toSizePx(width),
          height: toSizePx(height)
        }, wrapperStyle2)
      }, [_createVNode$2l("img", _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({}, imgCommonProps), isError.value && fallback ? {
        src: fallback
      } : {
        onLoad: onLoad3,
        onError: onError2,
        src
      }), {}, {
        "ref": img
      }), null), status.value === "loading" && _createVNode$2l("div", {
        "aria-hidden": "true",
        "class": "".concat(prefixCls3, "-placeholder")
      }, [placeholder || slots.placeholder && slots.placeholder()]), previewMask && canPreview.value && _createVNode$2l("div", {
        "class": "".concat(prefixCls3, "-mask")
      }, [previewMask])]), !isPreviewGroup.value && canPreview.value && _createVNode$2l(Preview, {
        "aria-hidden": !isShowPreview.value,
        "visible": isShowPreview.value,
        "prefixCls": previewPrefixCls.value,
        "onClose": onPreviewClose,
        "mousePosition": mousePosition2.value,
        "src": mergedSrc,
        "alt": alt,
        "getContainer": getPreviewContainer.value
      }, null)]);
    };
  }
});
ImageInternal.PreviewGroup = Group;
const { createVNode: _createVNode$2k, resolveDirective: _resolveDirective$a } = await importShared("vue");
const { computed: computed$l, defineComponent: defineComponent$1d, inject: inject$A } = await importShared("vue");
var InternalPreviewGroup = defineComponent$1d({
  name: "AImagePreviewGroup",
  inheritAttrs: false,
  props: {
    previewPrefixCls: PropTypes.string
  },
  setup: function setup92(props2, _ref) {
    var attrs = _ref.attrs, slots = _ref.slots;
    var configProvider = inject$A("configProvider", defaultConfigProvider);
    var prefixCls2 = computed$l(function() {
      return configProvider.getPrefixCls("image-preview", props2.previewPrefixCls);
    });
    return function() {
      return _createVNode$2k(Group, _objectSpread2$2(_objectSpread2$2({}, _extends$1(_extends$1({}, attrs), props2)), {}, {
        "previewPrefixCls": prefixCls2.value
      }), slots);
    };
  }
});
const { createVNode: _createVNode$2j, resolveDirective: _resolveDirective$9 } = await importShared("vue");
const { defineComponent: defineComponent$1c } = await importShared("vue");
var Image$1 = defineComponent$1c({
  name: "AImage",
  inheritAttrs: false,
  props: imageProps,
  setup: function setup93(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _useConfigInject = useConfigInject("image", props2), prefixCls2 = _useConfigInject.prefixCls;
    return function() {
      return _createVNode$2j(ImageInternal, _extends$1(_extends$1(_extends$1({}, attrs), props2), {
        prefixCls: prefixCls2.value
      }), slots);
    };
  }
});
Image$1.PreviewGroup = InternalPreviewGroup;
Image$1.install = function(app) {
  app.component(Image$1.name, Image$1);
  app.component(Image$1.PreviewGroup.name, Image$1.PreviewGroup);
  return app;
};
var ITouchProps = {
  disabled: PropTypes.looseBool,
  activeClassName: PropTypes.string,
  activeStyle: PropTypes.any
  // onTouchStart: PropTypes.func,
  // onTouchEnd: PropTypes.func,
  // onTouchCancel: PropTypes.func,
  // onMouseDown: PropTypes.func,
  // onMouseUp: PropTypes.func,
  // onMouseLeave: PropTypes.func,
};
const { defineComponent: defineComponent$1b } = await importShared("vue");
const TouchFeedback = defineComponent$1b({
  name: "TouchFeedback",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(ITouchProps, {
    disabled: false
  }),
  data: function data46() {
    this.child = null;
    return {
      active: false
    };
  },
  mounted: function mounted25() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.disabled && _this.active) {
        _this.setState({
          active: false
        });
      }
    });
  },
  methods: {
    triggerEvent: function triggerEvent(type3, isActive, ev) {
      var eventType = "on".concat(type3);
      var child = this.child;
      if (child.props[eventType]) {
        child.props[eventType](ev);
      }
      if (isActive !== this.active) {
        this.setState({
          active: isActive
        });
      }
    },
    onTouchStart: function onTouchStart(e2) {
      this.triggerEvent("Touchstart", true, e2);
    },
    onTouchMove: function onTouchMove(e2) {
      this.triggerEvent("Touchmove", false, e2);
    },
    onTouchEnd: function onTouchEnd2(e2) {
      this.triggerEvent("Touchend", false, e2);
    },
    onTouchCancel: function onTouchCancel(e2) {
      this.triggerEvent("Touchcancel", false, e2);
    },
    onMouseDown: function onMouseDown2(e2) {
      this.triggerEvent("Mousedown", true, e2);
    },
    onMouseUp: function onMouseUp2(e2) {
      this.triggerEvent("Mouseup", false, e2);
    },
    onMouseLeave: function onMouseLeave2(e2) {
      this.triggerEvent("Mouseleave", false, e2);
    }
  },
  render: function render91() {
    var _ref;
    var _this$$props = this.$props, disabled = _this$$props.disabled, _this$$props$activeCl = _this$$props.activeClassName, activeClassName = _this$$props$activeCl === void 0 ? "" : _this$$props$activeCl, _this$$props$activeSt = _this$$props.activeStyle, activeStyle = _this$$props$activeSt === void 0 ? {} : _this$$props$activeSt;
    var child = getSlot(this);
    if (child.length !== 1) {
      warning$5(false, "m-feedback组件只能包含一个子元素");
      return null;
    }
    var events = disabled ? void 0 : (_ref = {}, _defineProperty$U(_ref, supportsPassive ? "onTouchstartPassive" : "onTouchstart", this.onTouchStart), _defineProperty$U(_ref, supportsPassive ? "onTouchmovePassive" : "onTouchmove", this.onTouchMove), _defineProperty$U(_ref, "onTouchend", this.onTouchEnd), _defineProperty$U(_ref, "onTouchcancel", this.onTouchCancel), _defineProperty$U(_ref, "onMousedown", this.onMouseDown), _defineProperty$U(_ref, "onMouseup", this.onMouseUp), _defineProperty$U(_ref, "onMouseleave", this.onMouseLeave), _ref);
    child = child[0];
    this.child = child;
    if (!disabled && this.active) {
      var _child$props = child.props, style3 = _child$props.style, className = _child$props.class;
      if (activeStyle !== false) {
        if (activeStyle) {
          style3 = _extends$1(_extends$1({}, style3), activeStyle);
        }
        className = classNames(className, activeClassName);
      }
      return cloneElement(child, _extends$1({
        class: className,
        style: style3
      }, events));
    }
    return cloneElement(child, events);
  }
});
const { createVNode: _createVNode$2i } = await importShared("vue");
var InputHandler = {
  name: "InputHandler",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    disabled: PropTypes.looseBool
  },
  render: function render92() {
    var _this = this;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, disabled = _this$$props.disabled;
    var touchableProps = {
      disabled,
      activeClassName: "".concat(prefixCls2, "-handler-active")
    };
    return _createVNode$2i(TouchFeedback, touchableProps, {
      default: function _default8() {
        return [_createVNode$2i("span", _this.$attrs, [getSlot(_this)])];
      }
    });
  }
};
const { createVNode: _createVNode$2h } = await importShared("vue");
const { defineComponent: defineComponent$1a } = await importShared("vue");
function preventDefault(e2) {
  e2.preventDefault();
}
function defaultParser(input) {
  return input.replace(/[^\w\.-]+/g, "");
}
var SPEED = 200;
var DELAY = 600;
var MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
var isValidProps = function isValidProps2(value26) {
  return value26 !== void 0 && value26 !== null;
};
var isEqual = function isEqual2(oldValue, newValue) {
  return newValue === oldValue || typeof newValue === "number" && typeof oldValue === "number" && isNaN(newValue) && isNaN(oldValue);
};
var inputNumberProps$1 = {
  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  focusOnUpDown: PropTypes.looseBool,
  autofocus: PropTypes.looseBool,
  // onChange: PropTypes.func,
  // onKeyDown: PropTypes.func,
  // onKeyUp: PropTypes.func,
  prefixCls: PropTypes.string,
  tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  placeholder: PropTypes.string,
  disabled: PropTypes.looseBool,
  // onFocus: PropTypes.func,
  // onBlur: PropTypes.func,
  readonly: PropTypes.looseBool,
  max: PropTypes.number,
  min: PropTypes.number,
  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  upHandler: PropTypes.any,
  downHandler: PropTypes.any,
  useTouch: PropTypes.looseBool,
  formatter: PropTypes.func,
  parser: PropTypes.func,
  // onMouseEnter: PropTypes.func,
  // onMouseLeave: PropTypes.func,
  // onMouseOver: PropTypes.func,
  // onMouseOut: PropTypes.func,
  precision: PropTypes.number,
  required: PropTypes.looseBool,
  pattern: PropTypes.string,
  decimalSeparator: PropTypes.string,
  autocomplete: PropTypes.string,
  title: PropTypes.string,
  name: PropTypes.string,
  id: PropTypes.string,
  type: PropTypes.string,
  maxlength: PropTypes.any
};
const VcInputNumber = defineComponent$1a({
  name: "VCInputNumber",
  mixins: [BaseMixin],
  inheritAttrs: false,
  // model: {
  //   prop: 'value',
  //   event: 'change',
  // },
  props: initDefaultProps$1(inputNumberProps$1, {
    focusOnUpDown: true,
    useTouch: false,
    prefixCls: "rc-input-number",
    min: -MAX_SAFE_INTEGER$1,
    step: 1,
    parser: defaultParser,
    required: false,
    autocomplete: "off"
  }),
  data: function data47() {
    var props2 = getOptionProps(this);
    this.prevProps = _extends$1({}, props2);
    var value26;
    if ("value" in props2) {
      value26 = this.value;
    } else {
      value26 = this.defaultValue;
    }
    var validValue = this.getValidValue(this.toNumber(value26));
    return {
      inputValue: this.toPrecisionAsStep(validValue),
      sValue: validValue,
      focused: this.autofocus
    };
  },
  mounted: function mounted26() {
    var _this = this;
    this.$nextTick(function() {
      _this.updatedFunc();
    });
  },
  updated: function updated14() {
    var _this2 = this;
    var _this$$props = this.$props, value26 = _this$$props.value, max4 = _this$$props.max, min4 = _this$$props.min;
    var focused = this.$data.focused;
    var prevProps = this.prevProps;
    var props2 = getOptionProps(this);
    if (prevProps) {
      if (!isEqual(prevProps.value, value26) || !isEqual(prevProps.max, max4) || !isEqual(prevProps.min, min4)) {
        var validValue = focused ? value26 : this.getValidValue(value26);
        var nextInputValue;
        if (this.pressingUpOrDown) {
          nextInputValue = validValue;
        } else if (this.inputting) {
          nextInputValue = this.rawInput;
        } else {
          nextInputValue = this.toPrecisionAsStep(validValue);
        }
        this.setState({
          // eslint-disable-line
          sValue: validValue,
          inputValue: nextInputValue
        });
      }
      var nextValue = "value" in props2 ? value26 : this.$data.sValue;
      if ("max" in props2 && prevProps.max !== max4 && typeof nextValue === "number" && nextValue > max4) {
        this.__emit("update:value", max4);
        this.__emit("change", max4);
      }
      if ("min" in props2 && prevProps.min !== min4 && typeof nextValue === "number" && nextValue < min4) {
        this.__emit("update:value", min4);
        this.__emit("change", min4);
      }
    }
    this.prevProps = _extends$1({}, props2);
    this.$nextTick(function() {
      _this2.updatedFunc();
    });
  },
  beforeUnmount: function beforeUnmount18() {
    this.stop();
  },
  methods: {
    updatedFunc: function updatedFunc() {
      var inputElem = this.inputRef;
      try {
        if (this.cursorStart !== void 0 && this.$data.focused) {
          if (
            // If not match full str, try to match part of str
            !this.partRestoreByAfter(this.cursorAfter) && this.$data.sValue !== this.value
          ) {
            var pos = this.cursorStart + 1;
            if (!this.cursorAfter) {
              pos = inputElem.value.length;
            } else if (this.lastKeyCode === KeyCode$1.BACKSPACE) {
              pos = this.cursorStart - 1;
            } else if (this.lastKeyCode === KeyCode$1.DELETE) {
              pos = this.cursorStart;
            }
            this.fixCaret(pos, pos);
          } else if (this.currentValue === inputElem.value) {
            switch (this.lastKeyCode) {
              case KeyCode$1.BACKSPACE:
                this.fixCaret(this.cursorStart - 1, this.cursorStart - 1);
                break;
              case KeyCode$1.DELETE:
                this.fixCaret(this.cursorStart + 1, this.cursorStart + 1);
                break;
              default:
            }
          }
        }
      } catch (e2) {
      }
      this.lastKeyCode = null;
      if (!this.pressingUpOrDown) {
        return;
      }
      if (this.focusOnUpDown && this.$data.focused) {
        if (document.activeElement !== inputElem) {
          this.focus();
        }
      }
      this.pressingUpOrDown = false;
    },
    onKeyDown: function onKeyDown11(e2) {
      if (e2.keyCode === KeyCode$1.UP) {
        var ratio = this.getRatio(e2);
        this.up(e2, ratio);
        this.stop();
      } else if (e2.keyCode === KeyCode$1.DOWN) {
        var _ratio = this.getRatio(e2);
        this.down(e2, _ratio);
        this.stop();
      } else if (e2.keyCode === KeyCode$1.ENTER) {
        this.__emit("pressEnter", e2);
      }
      this.recordCursorPosition();
      this.lastKeyCode = e2.keyCode;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      this.__emit.apply(this, ["keydown", e2].concat(args));
    },
    onKeyUp: function onKeyUp(e2) {
      this.stop();
      this.recordCursorPosition();
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }
      this.__emit.apply(this, ["keyup", e2].concat(args));
    },
    onTrigger: function onTrigger(e2) {
      if (e2.target.composing) return false;
      this.onChange(e2);
    },
    onChange: function onChange3(e2) {
      if (this.$data.focused) {
        this.inputting = true;
      }
      this.rawInput = this.parser(this.getValueFromEvent(e2));
      this.setState({
        inputValue: this.rawInput
      });
      var num = this.toNumber(this.rawInput);
      this.__emit("update:value", num);
      this.__emit("change", num);
    },
    onFocus: function onFocus4() {
      this.setState({
        focused: true
      });
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this.__emit.apply(this, ["focus"].concat(args));
    },
    onBlur: function onBlur5() {
      this.inputting = false;
      this.setState({
        focused: false
      });
      var value26 = this.getCurrentValidValue(this.$data.inputValue);
      var newValue = this.setValue(value26);
      if (this.$attrs.onBlur && this.inputRef) {
        var originValue = this.inputRef.value;
        var inputValue = this.getInputDisplayValue({
          focused: false,
          sValue: newValue
        });
        this.inputRef.value = inputValue;
        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        this.__emit.apply(this, ["blur"].concat(args));
        this.inputRef.value = originValue;
      }
    },
    getCurrentValidValue: function getCurrentValidValue(value26) {
      var val = value26;
      if (val === "") {
        val = "";
      } else if (!this.isNotCompleteNumber(parseFloat(val, 10))) {
        val = this.getValidValue(val);
      } else {
        val = this.$data.sValue;
      }
      return this.toNumber(val);
    },
    getRatio: function getRatio(e2) {
      var ratio = 1;
      if (e2.metaKey || e2.ctrlKey) {
        ratio = 0.1;
      } else if (e2.shiftKey) {
        ratio = 10;
      }
      return ratio;
    },
    getValueFromEvent: function getValueFromEvent(e2) {
      var value26 = e2.target.value.trim().replace(/。/g, ".");
      if (isValidProps(this.decimalSeparator)) {
        value26 = value26.replace(this.decimalSeparator, ".");
      }
      return value26;
    },
    getValidValue: function getValidValue(value26) {
      var min4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.min;
      var max4 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.max;
      var val = parseFloat(value26, 10);
      if (isNaN(val)) {
        return value26;
      }
      if (val < min4) {
        val = min4;
      }
      if (val > max4) {
        val = max4;
      }
      return val;
    },
    setValue: function setValue9(v2, callback) {
      var precision = this.$props.precision;
      var newValue = this.isNotCompleteNumber(parseFloat(v2, 10)) ? null : parseFloat(v2, 10);
      var _this$$data = this.$data, _this$$data$sValue = _this$$data.sValue, value26 = _this$$data$sValue === void 0 ? null : _this$$data$sValue, _this$$data$inputValu = _this$$data.inputValue, inputValue = _this$$data$inputValu === void 0 ? null : _this$$data$inputValu;
      var newValueInString = typeof newValue === "number" ? newValue.toFixed(precision) : "".concat(newValue);
      var changed = newValue !== value26 || newValueInString !== "".concat(inputValue);
      if (!hasProp(this, "value")) {
        this.setState({
          sValue: newValue,
          inputValue: this.toPrecisionAsStep(v2)
        }, callback);
      } else {
        this.setState({
          inputValue: this.toPrecisionAsStep(this.$data.sValue)
        }, callback);
      }
      if (changed) {
        this.__emit("update:value", newValue);
        this.__emit("change", newValue);
      }
      return newValue;
    },
    getPrecision: function getPrecision(value26) {
      if (isValidProps(this.precision)) {
        return this.precision;
      }
      var valueString = value26.toString();
      if (valueString.indexOf("e-") >= 0) {
        return parseInt(valueString.slice(valueString.indexOf("e-") + 2), 10);
      }
      var precision = 0;
      if (valueString.indexOf(".") >= 0) {
        precision = valueString.length - valueString.indexOf(".") - 1;
      }
      return precision;
    },
    // step={1.0} value={1.51}
    // press +
    // then value should be 2.51, rather than 2.5
    // if this.$props.precision is undefined
    // https://github.com/react-component/input-number/issues/39
    getMaxPrecision: function getMaxPrecision(currentValue) {
      var ratio = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      if (isValidProps(this.precision)) {
        return this.precision;
      }
      var step = this.step;
      var ratioPrecision = this.getPrecision(ratio);
      var stepPrecision = this.getPrecision(step);
      var currentValuePrecision = this.getPrecision(currentValue);
      if (!currentValue) {
        return ratioPrecision + stepPrecision;
      }
      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);
    },
    getPrecisionFactor: function getPrecisionFactor(currentValue) {
      var ratio = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
      var precision = this.getMaxPrecision(currentValue, ratio);
      return Math.pow(10, precision);
    },
    getInputDisplayValue: function getInputDisplayValue(state) {
      var _ref = state || this.$data, focused = _ref.focused, inputValue = _ref.inputValue, sValue = _ref.sValue;
      var inputDisplayValue;
      if (focused) {
        inputDisplayValue = inputValue;
      } else {
        inputDisplayValue = this.toPrecisionAsStep(sValue);
      }
      if (inputDisplayValue === void 0 || inputDisplayValue === null) {
        inputDisplayValue = "";
      }
      var inputDisplayValueFormat = this.formatWrapper(inputDisplayValue);
      if (isValidProps(this.$props.decimalSeparator)) {
        inputDisplayValueFormat = inputDisplayValueFormat.toString().replace(".", this.$props.decimalSeparator);
      }
      return inputDisplayValueFormat;
    },
    recordCursorPosition: function recordCursorPosition() {
      try {
        var inputElem = this.inputRef;
        this.cursorStart = inputElem.selectionStart;
        this.cursorEnd = inputElem.selectionEnd;
        this.currentValue = inputElem.value;
        this.cursorBefore = inputElem.value.substring(0, this.cursorStart);
        this.cursorAfter = inputElem.value.substring(this.cursorEnd);
      } catch (e2) {
      }
    },
    fixCaret: function fixCaret(start, end) {
      if (start === void 0 || end === void 0 || !this.inputRef || !this.inputRef.value) {
        return;
      }
      try {
        var inputElem = this.inputRef;
        var currentStart = inputElem.selectionStart;
        var currentEnd = inputElem.selectionEnd;
        if (start !== currentStart || end !== currentEnd) {
          inputElem.setSelectionRange(start, end);
        }
      } catch (e2) {
      }
    },
    restoreByAfter: function restoreByAfter(str) {
      if (str === void 0) return false;
      var fullStr = this.inputRef.value;
      var index2 = fullStr.lastIndexOf(str);
      if (index2 === -1) return false;
      var prevCursorPos = this.cursorBefore.length;
      if (this.lastKeyCode === KeyCode$1.DELETE && this.cursorBefore.charAt(prevCursorPos - 1) === str[0]) {
        this.fixCaret(prevCursorPos, prevCursorPos);
        return true;
      }
      if (index2 + str.length === fullStr.length) {
        this.fixCaret(index2, index2);
        return true;
      }
      return false;
    },
    partRestoreByAfter: function partRestoreByAfter(str) {
      var _this3 = this;
      if (str === void 0) return false;
      return Array.prototype.some.call(str, function(_2, start) {
        var partStr = str.substring(start);
        return _this3.restoreByAfter(partStr);
      });
    },
    focus: function focus17() {
      this.inputRef.focus();
      this.recordCursorPosition();
    },
    blur: function blur14() {
      this.inputRef.blur();
    },
    formatWrapper: function formatWrapper(num) {
      if (this.formatter) {
        return this.formatter(num);
      }
      return num;
    },
    toPrecisionAsStep: function toPrecisionAsStep(num) {
      if (this.isNotCompleteNumber(num) || num === "") {
        return num;
      }
      var precision = Math.abs(this.getMaxPrecision(num));
      if (!isNaN(precision)) {
        return Number(num).toFixed(precision);
      }
      return num.toString();
    },
    // '1.' '1x' 'xx' '' => are not complete numbers
    isNotCompleteNumber: function isNotCompleteNumber(num) {
      return isNaN(num) || num === "" || num === null || num && num.toString().indexOf(".") === num.toString().length - 1;
    },
    toNumber: function toNumber2(num) {
      var _this$$props2 = this.$props, precision = _this$$props2.precision, autofocus = _this$$props2.autofocus;
      var _this$$data$focused = this.$data.focused, focused = _this$$data$focused === void 0 ? autofocus : _this$$data$focused;
      var numberIsTooLarge = num && num.length > 16 && focused;
      if (this.isNotCompleteNumber(num) || numberIsTooLarge) {
        return num;
      }
      if (isValidProps(precision)) {
        return Math.round(num * Math.pow(10, precision)) / Math.pow(10, precision);
      }
      return Number(num);
    },
    upStep: function upStep(val, rat) {
      var step = this.step;
      var precisionFactor = this.getPrecisionFactor(val, rat);
      var precision = Math.abs(this.getMaxPrecision(val, rat));
      var result = ((precisionFactor * val + precisionFactor * step * rat) / precisionFactor).toFixed(precision);
      return this.toNumber(result);
    },
    downStep: function downStep(val, rat) {
      var step = this.step;
      var precisionFactor = this.getPrecisionFactor(val, rat);
      var precision = Math.abs(this.getMaxPrecision(val, rat));
      var result = ((precisionFactor * val - precisionFactor * step * rat) / precisionFactor).toFixed(precision);
      return this.toNumber(result);
    },
    stepFn: function stepFn(type3, e2) {
      var _this4 = this;
      var ratio = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
      var recursive = arguments.length > 3 ? arguments[3] : void 0;
      this.stop();
      if (e2) {
        e2.preventDefault();
      }
      if (this.disabled) {
        return;
      }
      var max4 = this.max, min4 = this.min;
      var value26 = this.getCurrentValidValue(this.$data.inputValue) || 0;
      if (this.isNotCompleteNumber(value26)) {
        return;
      }
      var val = this["".concat(type3, "Step")](value26, ratio);
      var outOfRange = val > max4 || val < min4;
      if (val > max4) {
        val = max4;
      } else if (val < min4) {
        val = min4;
      }
      this.setValue(val);
      this.setState({
        focused: true
      });
      if (outOfRange) {
        return;
      }
      this.autoStepTimer = setTimeout(function() {
        _this4[type3](e2, ratio, true);
      }, recursive ? SPEED : DELAY);
    },
    stop: function stop() {
      if (this.autoStepTimer) {
        clearTimeout(this.autoStepTimer);
      }
    },
    down: function down(e2, ratio, recursive) {
      this.pressingUpOrDown = true;
      this.stepFn("down", e2, ratio, recursive);
    },
    up: function up(e2, ratio, recursive) {
      this.pressingUpOrDown = true;
      this.stepFn("up", e2, ratio, recursive);
    },
    handleInputClick: function handleInputClick2() {
      this.__emit("click");
    },
    saveUp: function saveUp(node) {
      this.upHandlerRef = node;
    },
    saveDown: function saveDown(node) {
      this.downHandlerRef = node;
    },
    saveInput: function saveInput6(node) {
      this.inputRef = node;
    },
    onCompositionstart: function onCompositionstart(e2) {
      e2.target.composing = true;
    },
    onCompositionend: function onCompositionend(e2) {
      this.onChange(e2);
      e2.target.composing = false;
    }
  },
  render: function render93() {
    var _classNames;
    var props2 = _extends$1(_extends$1({}, this.$props), this.$attrs);
    var prefixCls2 = props2.prefixCls, disabled = props2.disabled, readonly = props2.readonly, useTouch = props2.useTouch, autocomplete = props2.autocomplete, upHandler = props2.upHandler, downHandler = props2.downHandler, className = props2.class;
    var classes4 = classNames((_classNames = {}, _defineProperty$U(_classNames, className, className), _defineProperty$U(_classNames, prefixCls2, true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, "".concat(prefixCls2, "-focused"), this.$data.focused), _classNames));
    var upDisabledClass = "";
    var downDisabledClass = "";
    var sValue = this.$data.sValue;
    if (sValue || sValue === 0) {
      if (!isNaN(sValue)) {
        var val = Number(sValue);
        if (val >= this.max) {
          upDisabledClass = "".concat(prefixCls2, "-handler-up-disabled");
        }
        if (val <= this.min) {
          downDisabledClass = "".concat(prefixCls2, "-handler-down-disabled");
        }
      } else {
        upDisabledClass = "".concat(prefixCls2, "-handler-up-disabled");
        downDisabledClass = "".concat(prefixCls2, "-handler-down-disabled");
      }
    }
    var dataOrAriaAttributeProps = {};
    for (var key2 in props2) {
      if (props2.hasOwnProperty(key2) && (key2.substr(0, 5) === "data-" || key2.substr(0, 5) === "aria-" || key2 === "role")) {
        dataOrAriaAttributeProps[key2] = props2[key2];
      }
    }
    var editable = !this.readonly && !this.disabled;
    var inputDisplayValue = this.getInputDisplayValue();
    var upEvents;
    var downEvents;
    if (useTouch) {
      var _upEvents, _downEvents;
      upEvents = (_upEvents = {}, _defineProperty$U(_upEvents, supportsPassive ? "onTouchstartPassive" : "onTouchstart", editable && !upDisabledClass && this.up), _defineProperty$U(_upEvents, "onTouchend", this.stop), _upEvents);
      downEvents = (_downEvents = {}, _defineProperty$U(_downEvents, supportsPassive ? "onTouchstartPassive" : "onTouchstart", editable && !downDisabledClass && this.down), _defineProperty$U(_downEvents, "onTouchend", this.stop), _downEvents);
    } else {
      upEvents = {
        onMousedown: editable && !upDisabledClass && this.up,
        onMouseup: this.stop,
        onMouseleave: this.stop
      };
      downEvents = {
        onMousedown: editable && !downDisabledClass && this.down,
        onMouseup: this.stop,
        onMouseleave: this.stop
      };
    }
    var isUpDisabled = !!upDisabledClass || disabled || readonly;
    var isDownDisabled = !!downDisabledClass || disabled || readonly;
    var upHandlerProps = _extends$1(_extends$1({
      disabled: isUpDisabled,
      prefixCls: prefixCls2,
      unselectable: "unselectable",
      role: "button",
      "aria-label": "Increase Value",
      "aria-disabled": !!isUpDisabled,
      class: "".concat(prefixCls2, "-handler ").concat(prefixCls2, "-handler-up ").concat(upDisabledClass)
    }, upEvents), {
      ref: this.saveUp
    });
    var downHandlerProps = _extends$1(_extends$1({
      disabled: isDownDisabled,
      prefixCls: prefixCls2,
      unselectable: "unselectable",
      role: "button",
      "aria-label": "Decrease Value",
      "aria-disabled": !!isDownDisabled,
      class: "".concat(prefixCls2, "-handler ").concat(prefixCls2, "-handler-down ").concat(downDisabledClass)
    }, downEvents), {
      ref: this.saveDown
    });
    return _createVNode$2h("div", {
      "class": classes4,
      "style": props2.style,
      "title": props2.title,
      "onMouseenter": props2.onMouseenter,
      "onMouseleave": props2.onMouseleave,
      "onMouseover": props2.onMouseover,
      "onMouseout": props2.onMouseout
    }, [_createVNode$2h("div", {
      "class": "".concat(prefixCls2, "-handler-wrap")
    }, [_createVNode$2h("span", null, [_createVNode$2h(InputHandler, _objectSpread2$2(_objectSpread2$2({}, upHandlerProps), {}, {
      "key": "upHandler"
    }), {
      default: function _default8() {
        return [upHandler || _createVNode$2h("span", {
          "unselectable": "unselectable",
          "class": "".concat(prefixCls2, "-handler-up-inner"),
          "onClick": preventDefault
        }, null)];
      }
    })]), _createVNode$2h(InputHandler, _objectSpread2$2(_objectSpread2$2({}, downHandlerProps), {}, {
      "key": "downHandler"
    }), {
      default: function _default8() {
        return [downHandler || _createVNode$2h("span", {
          "unselectable": "unselectable",
          "class": "".concat(prefixCls2, "-handler-down-inner"),
          "onClick": preventDefault
        }, null)];
      }
    })]), _createVNode$2h("div", {
      "class": "".concat(prefixCls2, "-input-wrap")
    }, [_createVNode$2h("input", _objectSpread2$2({
      "role": "spinbutton",
      "aria-valuemin": this.min,
      "aria-valuemax": this.max,
      "aria-valuenow": sValue,
      "required": this.required,
      "type": props2.type,
      "placeholder": this.placeholder,
      "onClick": this.handleInputClick,
      "class": "".concat(prefixCls2, "-input"),
      "tabindex": this.tabindex,
      "autocomplete": autocomplete,
      "onFocus": this.onFocus,
      "onBlur": this.onBlur,
      "onKeydown": editable && this.onKeyDown,
      "onKeyup": editable && this.onKeyUp,
      "autofocus": this.autofocus,
      "maxlength": this.maxlength,
      "readonly": this.readonly,
      "disabled": this.disabled,
      "max": this.max,
      "min": this.min,
      "step": this.step,
      "name": this.name,
      "title": this.title,
      "id": this.id,
      "onInput": this.onTrigger,
      "onCompositionstart": this.onCompositionstart,
      "onCompositionend": this.onCompositionend,
      "ref": this.saveInput,
      "value": inputDisplayValue,
      "pattern": this.pattern
    }, dataOrAriaAttributeProps), null)])]);
  }
});
const { createVNode: _createVNode$2g } = await importShared("vue");
var __rest$r = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$19, inject: inject$z, nextTick: nextTick$b, onMounted: onMounted$9, ref: ref$i } = await importShared("vue");
var inputNumberProps = {
  prefixCls: PropTypes.string,
  min: PropTypes.number,
  max: PropTypes.number,
  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  step: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).def(1),
  defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  disabled: PropTypes.looseBool,
  size: PropTypes.oneOf(tuple("large", "small", "default")),
  formatter: PropTypes.func,
  parser: PropTypes.func,
  decimalSeparator: PropTypes.string,
  placeholder: PropTypes.string,
  name: PropTypes.string,
  id: PropTypes.string,
  precision: PropTypes.number,
  autofocus: PropTypes.looseBool,
  onPressEnter: {
    type: Function
  },
  onChange: Function
};
var InputNumber = defineComponent$19({
  name: "AInputNumber",
  inheritAttrs: false,
  props: inputNumberProps,
  setup: function setup94(props2) {
    var inputNumberRef = ref$i(null);
    var focus27 = function focus28() {
      inputNumberRef.value.focus();
    };
    var blur24 = function blur25() {
      inputNumberRef.value.blur();
    };
    onMounted$9(function() {
      nextTick$b(function() {
      });
    });
    return {
      configProvider: inject$z("configProvider", defaultConfigProvider),
      inputNumberRef,
      focus: focus27,
      blur: blur24
    };
  },
  render: function render94() {
    var _classNames;
    var _a = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), customizePrefixCls = _a.prefixCls, size = _a.size, className = _a.class, others = __rest$r(_a, ["prefixCls", "size", "class"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("input-number", customizePrefixCls);
    var inputNumberClass = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-sm"), size === "small"), _classNames), className);
    var upIcon = _createVNode$2g(UpOutlined, {
      "class": "".concat(prefixCls2, "-handler-up-inner")
    }, null);
    var downIcon = _createVNode$2g(DownOutlined, {
      "class": "".concat(prefixCls2, "-handler-down-inner")
    }, null);
    var vcInputNumberProps = _extends$1(_extends$1({
      prefixCls: prefixCls2,
      upHandler: upIcon,
      downHandler: downIcon
    }, others), {
      class: inputNumberClass
    });
    return _createVNode$2g(VcInputNumber, _objectSpread2$2(_objectSpread2$2({}, vcInputNumberProps), {}, {
      "ref": "inputNumberRef"
    }), null);
  }
});
const index$8 = withInstall(InputNumber);
const { createVNode: _createVNode$2f } = await importShared("vue");
const { createVNode: createVNode$1, defineComponent: defineComponent$18, provide: provide$6, ref: ref$h } = await importShared("vue");
var basicProps = {
  prefixCls: PropTypes.string,
  hasSider: PropTypes.looseBool,
  tagName: PropTypes.string
};
function generator(_ref) {
  var suffixCls = _ref.suffixCls, tagName = _ref.tagName, name = _ref.name;
  return function(BasicComponent) {
    var Adapter = defineComponent$18({
      name,
      props: basicProps,
      setup: function setup161(props2, _ref2) {
        var slots = _ref2.slots;
        var _useConfigInject = useConfigInject(suffixCls, props2), prefixCls2 = _useConfigInject.prefixCls;
        return function() {
          var _a;
          var basicComponentProps = _extends$1(_extends$1({}, props2), {
            prefixCls: prefixCls2.value,
            tagName
          });
          return _createVNode$2f(BasicComponent, basicComponentProps, {
            default: function _default8() {
              return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
            }
          });
        };
      }
    });
    return Adapter;
  };
}
var Basic = defineComponent$18({
  props: basicProps,
  setup: function setup95(props2, _ref3) {
    var slots = _ref3.slots;
    return function() {
      var _a;
      return createVNode$1(props2.tagName, {
        class: props2.prefixCls
      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
    };
  }
});
var BasicLayout = defineComponent$18({
  props: basicProps,
  setup: function setup96(props2, _ref4) {
    var slots = _ref4.slots;
    var _useConfigInject2 = useConfigInject("", props2), direction = _useConfigInject2.direction;
    var siders = ref$h([]);
    var siderHookProvider = {
      addSider: function addSider(id2) {
        siders.value = [].concat(_toConsumableArray(siders.value), [id2]);
      },
      removeSider: function removeSider(id2) {
        siders.value = siders.value.filter(function(currentId) {
          return currentId !== id2;
        });
      }
    };
    provide$6(SiderHookProviderKey, siderHookProvider);
    return function() {
      var _classNames;
      var _a;
      var prefixCls2 = props2.prefixCls, hasSider = props2.hasSider, tagName = props2.tagName;
      var divCls = classNames(prefixCls2, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-has-sider"), typeof hasSider === "boolean" ? hasSider : siders.value.length > 0), _defineProperty$U(_classNames, "".concat(prefixCls2, "-rtl"), direction.value === "rtl"), _classNames));
      return createVNode$1(tagName, {
        class: divCls
      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
    };
  }
});
var Layout = generator({
  suffixCls: "layout",
  tagName: "section",
  name: "ALayout"
})(BasicLayout);
var Header = generator({
  suffixCls: "layout-header",
  tagName: "header",
  name: "ALayoutHeader"
})(Basic);
var Footer = generator({
  suffixCls: "layout-footer",
  tagName: "footer",
  name: "ALayoutFooter"
})(Basic);
var Content = generator({
  suffixCls: "layout-content",
  tagName: "main",
  name: "ALayoutContent"
})(Basic);
Layout.Header = Header;
Layout.Footer = Footer;
Layout.Content = Content;
var BarsOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M912 192H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 284H328c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h584c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM104 228a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0zm0 284a56 56 0 10112 0 56 56 0 10-112 0z" } }] }, "name": "bars", "theme": "outlined" };
const { createVNode: _createVNode$2e } = await importShared("vue");
function _objectSpread$m(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$n(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$n(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var BarsOutlined = function BarsOutlined2(props2, context2) {
  var p = _objectSpread$m({}, props2, context2.attrs);
  return _createVNode$2e(Icon, _objectSpread$m({}, p, {
    "icon": BarsOutlined$1
  }), null);
};
BarsOutlined.displayName = "BarsOutlined";
BarsOutlined.inheritAttrs = false;
const { createVNode: _createVNode$2d } = await importShared("vue");
const { inject: inject$y, defineComponent: defineComponent$17, ref: ref$g, watch: watch$9, onMounted: onMounted$8, onBeforeUnmount: onBeforeUnmount$3, provide: provide$5 } = await importShared("vue");
var dimensionMaxMap = {
  xs: "479.98px",
  sm: "575.98px",
  md: "767.98px",
  lg: "991.98px",
  xl: "1199.98px",
  xxl: "1599.98px"
};
var siderProps = {
  prefixCls: PropTypes.string,
  collapsible: PropTypes.looseBool,
  collapsed: PropTypes.looseBool,
  defaultCollapsed: PropTypes.looseBool,
  reverseArrow: PropTypes.looseBool,
  zeroWidthTriggerStyle: PropTypes.style,
  trigger: PropTypes.VNodeChild,
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  collapsedWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  breakpoint: PropTypes.oneOf(tuple("xs", "sm", "md", "lg", "xl", "xxl")),
  theme: PropTypes.oneOf(tuple("light", "dark")).def("dark"),
  onBreakpoint: Function,
  onCollapse: Function
};
var generateId = /* @__PURE__ */ function() {
  var i2 = 0;
  return function() {
    var prefix = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    i2 += 1;
    return "".concat(prefix).concat(i2);
  };
}();
const Sider = defineComponent$17({
  name: "ALayoutSider",
  inheritAttrs: false,
  props: initDefaultProps2(siderProps, {
    collapsible: false,
    defaultCollapsed: false,
    reverseArrow: false,
    width: 200,
    collapsedWidth: 80
  }),
  emits: ["breakpoint", "update:collapsed", "collapse"],
  setup: function setup97(props2, _ref) {
    var emit = _ref.emit, attrs = _ref.attrs, slots = _ref.slots;
    var _useConfigInject = useConfigInject("layout-sider", props2), prefixCls2 = _useConfigInject.prefixCls;
    var siderHook = inject$y(SiderHookProviderKey, void 0);
    var collapsed = ref$g(!!(props2.collapsed !== void 0 ? props2.collapsed : props2.defaultCollapsed));
    var below = ref$g(false);
    watch$9(function() {
      return props2.collapsed;
    }, function() {
      collapsed.value = !!props2.collapsed;
    });
    provide$5(SiderCollapsedKey, collapsed);
    var handleSetCollapsed = function handleSetCollapsed2(value26, type3) {
      if (props2.collapsed === void 0) {
        collapsed.value = value26;
      }
      emit("update:collapsed", value26);
      emit("collapse", value26, type3);
    };
    var responsiveHandlerRef = ref$g(function(mql2) {
      below.value = mql2.matches;
      emit("breakpoint", mql2.matches);
      if (collapsed.value !== mql2.matches) {
        handleSetCollapsed(mql2.matches, "responsive");
      }
    });
    var mql;
    function responsiveHandler(mql2) {
      return responsiveHandlerRef.value(mql2);
    }
    var uniqueId = generateId("ant-sider-");
    onMounted$8(function() {
      if (typeof window !== "undefined") {
        var _window = window, matchMedia = _window.matchMedia;
        if (matchMedia && props2.breakpoint && props2.breakpoint in dimensionMaxMap) {
          mql = matchMedia("(max-width: ".concat(dimensionMaxMap[props2.breakpoint], ")"));
          try {
            mql.addEventListener("change", responsiveHandler);
          } catch (error3) {
            mql.addListener(responsiveHandler);
          }
          responsiveHandler(mql);
        }
      }
      siderHook && siderHook.addSider(uniqueId);
    });
    onBeforeUnmount$3(function() {
      try {
        mql === null || mql === void 0 ? void 0 : mql.removeEventListener("change", responsiveHandler);
      } catch (error3) {
        mql === null || mql === void 0 ? void 0 : mql.removeListener(responsiveHandler);
      }
      siderHook && siderHook.removeSider(uniqueId);
    });
    var toggle = function toggle2() {
      handleSetCollapsed(!collapsed.value, "clickTrigger");
    };
    return function() {
      var _classNames;
      var _a;
      var pre = prefixCls2.value;
      var collapsedWidth = props2.collapsedWidth, width = props2.width, reverseArrow = props2.reverseArrow, zeroWidthTriggerStyle = props2.zeroWidthTriggerStyle, trigger2 = props2.trigger, collapsible = props2.collapsible, theme = props2.theme;
      var rawWidth = collapsed.value ? collapsedWidth : width;
      var siderWidth = isNumeric$1(rawWidth) ? "".concat(rawWidth, "px") : String(rawWidth);
      var zeroWidthTrigger = parseFloat(String(collapsedWidth || 0)) === 0 ? _createVNode$2d("span", {
        "onClick": toggle,
        "class": classNames("".concat(pre, "-zero-width-trigger"), "".concat(pre, "-zero-width-trigger-").concat(reverseArrow ? "right" : "left")),
        "style": zeroWidthTriggerStyle
      }, [trigger2 || _createVNode$2d(BarsOutlined, null, null)]) : null;
      var iconObj = {
        expanded: reverseArrow ? _createVNode$2d(RightOutlined, null, null) : _createVNode$2d(LeftOutlined, null, null),
        collapsed: reverseArrow ? _createVNode$2d(LeftOutlined, null, null) : _createVNode$2d(RightOutlined, null, null)
      };
      var status = collapsed.value ? "collapsed" : "expanded";
      var defaultTrigger = iconObj[status];
      var triggerDom = trigger2 !== null ? zeroWidthTrigger || _createVNode$2d("div", {
        "class": "".concat(pre, "-trigger"),
        "onClick": toggle,
        "style": {
          width: siderWidth
        }
      }, [trigger2 || defaultTrigger]) : null;
      var divStyle = _extends$1(_extends$1({}, attrs.style), {
        flex: "0 0 ".concat(siderWidth),
        maxWidth: siderWidth,
        minWidth: siderWidth,
        width: siderWidth
      });
      var siderCls = classNames(pre, "".concat(pre, "-").concat(theme), (_classNames = {}, _defineProperty$U(_classNames, "".concat(pre, "-collapsed"), !!collapsed.value), _defineProperty$U(_classNames, "".concat(pre, "-has-trigger"), collapsible && trigger2 !== null && !zeroWidthTrigger), _defineProperty$U(_classNames, "".concat(pre, "-below"), !!below.value), _defineProperty$U(_classNames, "".concat(pre, "-zero-width"), parseFloat(siderWidth) === 0), _classNames), attrs.class);
      return _createVNode$2d("aside", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "class": siderCls,
        "style": divStyle,
        "ref": ref$g
      }), [_createVNode$2d("div", {
        "class": "".concat(pre, "-children")
      }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]), collapsible || below.value && zeroWidthTrigger ? triggerDom : null]);
    };
  }
});
Layout.Sider = Sider;
Layout.install = function(app) {
  app.component(Layout.name, Layout);
  app.component(Layout.Header.name, Layout.Header);
  app.component(Layout.Footer.name, Layout.Footer);
  app.component(Layout.Sider.name, Layout.Sider);
  app.component(Layout.Content.name, Layout.Content);
  return app;
};
var LayoutHeader = Layout.Header;
var LayoutFooter = Layout.Footer;
var LayoutSider = Layout.Sider;
var LayoutContent = Layout.Content;
const { createVNode: _createVNode$2c } = await importShared("vue");
var __rest$q = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { inject: inject$x, cloneVNode: cloneVNode$1, isVNode, defineComponent: defineComponent$16, nextTick: nextTick$a } = await importShared("vue");
var SpinSize = PropTypes.oneOf(tuple("small", "default", "large"));
var getSpinProps = function getSpinProps2() {
  return {
    prefixCls: PropTypes.string,
    spinning: PropTypes.looseBool,
    size: SpinSize,
    wrapperClassName: PropTypes.string,
    tip: PropTypes.string,
    delay: PropTypes.number,
    indicator: PropTypes.any
  };
};
var defaultIndicator = null;
function shouldDelay(spinning, delay) {
  return !!spinning && !!delay && !isNaN(Number(delay));
}
function setDefaultIndicator(Content2) {
  var Indicator = Content2.indicator;
  defaultIndicator = typeof Indicator === "function" ? Indicator : function() {
    return _createVNode$2c(Indicator, null, null);
  };
}
const Spin = defineComponent$16({
  name: "ASpin",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(getSpinProps(), {
    size: "default",
    spinning: true,
    wrapperClassName: ""
  }),
  setup: function setup98() {
    return {
      originalUpdateSpinning: null,
      configProvider: inject$x("configProvider", defaultConfigProvider)
    };
  },
  data: function data48() {
    var spinning = this.spinning, delay = this.delay;
    var shouldBeDelayed = shouldDelay(spinning, delay);
    return {
      sSpinning: spinning && !shouldBeDelayed
    };
  },
  created: function created13() {
    this.originalUpdateSpinning = this.updateSpinning;
    this.debouncifyUpdateSpinning(this.$props);
  },
  mounted: function mounted27() {
    this.updateSpinning();
  },
  updated: function updated15() {
    var _this = this;
    nextTick$a(function() {
      _this.debouncifyUpdateSpinning();
      _this.updateSpinning();
    });
  },
  beforeUnmount: function beforeUnmount19() {
    this.cancelExistingSpin();
  },
  methods: {
    debouncifyUpdateSpinning: function debouncifyUpdateSpinning(props2) {
      var _ref = props2 || this.$props, delay = _ref.delay;
      if (delay) {
        this.cancelExistingSpin();
        this.updateSpinning = debounce$1(this.originalUpdateSpinning, delay);
      }
    },
    updateSpinning: function updateSpinning() {
      var spinning = this.spinning, sSpinning = this.sSpinning;
      if (sSpinning !== spinning) {
        this.setState({
          sSpinning: spinning
        });
      }
    },
    cancelExistingSpin: function cancelExistingSpin() {
      var updateSpinning2 = this.updateSpinning;
      if (updateSpinning2 && updateSpinning2.cancel) {
        updateSpinning2.cancel();
      }
    },
    renderIndicator: function renderIndicator(prefixCls2) {
      var dotClassName = "".concat(prefixCls2, "-dot");
      var indicator = getComponent(this, "indicator");
      if (indicator === null) {
        return null;
      }
      if (Array.isArray(indicator)) {
        indicator = indicator.length === 1 ? indicator[0] : indicator;
      }
      if (isVNode(indicator)) {
        return cloneVNode$1(indicator, {
          class: dotClassName
        });
      }
      if (defaultIndicator && isVNode(defaultIndicator())) {
        return cloneVNode$1(defaultIndicator(), {
          class: dotClassName
        });
      }
      return _createVNode$2c("span", {
        "class": "".concat(dotClassName, " ").concat(prefixCls2, "-dot-spin")
      }, [_createVNode$2c("i", {
        "class": "".concat(prefixCls2, "-dot-item")
      }, null), _createVNode$2c("i", {
        "class": "".concat(prefixCls2, "-dot-item")
      }, null), _createVNode$2c("i", {
        "class": "".concat(prefixCls2, "-dot-item")
      }, null), _createVNode$2c("i", {
        "class": "".concat(prefixCls2, "-dot-item")
      }, null)]);
    }
  },
  render: function render95() {
    var _spinClassName;
    var _this$$props = this.$props, size = _this$$props.size, customizePrefixCls = _this$$props.prefixCls, tip = _this$$props.tip, wrapperClassName = _this$$props.wrapperClassName;
    var _a = this.$attrs, cls = _a.class, style3 = _a.style, divProps = __rest$q(_a, ["class", "style"]);
    var _this$configProvider = this.configProvider, getPrefixCls2 = _this$configProvider.getPrefixCls, direction = _this$configProvider.direction;
    var prefixCls2 = getPrefixCls2("spin", customizePrefixCls);
    var sSpinning = this.sSpinning;
    var spinClassName = (_spinClassName = {}, _defineProperty$U(_spinClassName, prefixCls2, true), _defineProperty$U(_spinClassName, "".concat(prefixCls2, "-sm"), size === "small"), _defineProperty$U(_spinClassName, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_spinClassName, "".concat(prefixCls2, "-spinning"), sSpinning), _defineProperty$U(_spinClassName, "".concat(prefixCls2, "-show-text"), !!tip), _defineProperty$U(_spinClassName, "".concat(prefixCls2, "-rtl"), direction === "rtl"), _defineProperty$U(_spinClassName, cls, !!cls), _spinClassName);
    var spinElement = _createVNode$2c("div", _objectSpread2$2(_objectSpread2$2({}, divProps), {}, {
      "style": style3,
      "class": spinClassName
    }), [this.renderIndicator(prefixCls2), tip ? _createVNode$2c("div", {
      "class": "".concat(prefixCls2, "-text")
    }, [tip]) : null]);
    var children = getSlot(this);
    if (children && children.length) {
      var _containerClassName;
      var containerClassName = (_containerClassName = {}, _defineProperty$U(_containerClassName, "".concat(prefixCls2, "-container"), true), _defineProperty$U(_containerClassName, "".concat(prefixCls2, "-blur"), sSpinning), _containerClassName);
      return _createVNode$2c("div", {
        "class": ["".concat(prefixCls2, "-nested-loading"), wrapperClassName]
      }, [sSpinning && _createVNode$2c("div", {
        "key": "loading"
      }, [spinElement]), _createVNode$2c("div", {
        "class": containerClassName,
        "key": "container"
      }, [children])]);
    }
    return spinElement;
  }
});
Spin.setDefaultIndicator = setDefaultIndicator;
Spin.install = function(app) {
  app.component(Spin.name, Spin);
  return app;
};
var DoubleLeftOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z" } }] }, "name": "double-left", "theme": "outlined" };
const { createVNode: _createVNode$2b } = await importShared("vue");
function _objectSpread$l(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$m(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$m(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var DoubleLeftOutlined = function DoubleLeftOutlined2(props2, context2) {
  var p = _objectSpread$l({}, props2, context2.attrs);
  return _createVNode$2b(Icon, _objectSpread$l({}, p, {
    "icon": DoubleLeftOutlined$1
  }), null);
};
DoubleLeftOutlined.displayName = "DoubleLeftOutlined";
DoubleLeftOutlined.inheritAttrs = false;
var DoubleRightOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z" } }] }, "name": "double-right", "theme": "outlined" };
const { createVNode: _createVNode$2a } = await importShared("vue");
function _objectSpread$k(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$l(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$l(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var DoubleRightOutlined = function DoubleRightOutlined2(props2, context2) {
  var p = _objectSpread$k({}, props2, context2.attrs);
  return _createVNode$2a(Icon, _objectSpread$k({}, p, {
    "icon": DoubleRightOutlined$1
  }), null);
};
DoubleRightOutlined.displayName = "DoubleRightOutlined";
DoubleRightOutlined.inheritAttrs = false;
const { createVNode: _createVNode$29 } = await importShared("vue");
const { defineComponent: defineComponent$15 } = await importShared("vue");
const MiniSelect = defineComponent$15({
  inheritAttrs: false,
  props: SelectProps(),
  Option: Select$2.Option,
  render: function render96() {
    var _this = this;
    var selectOptionsProps = getOptionProps(this);
    var selelctProps = _extends$1(_extends$1(_extends$1({}, selectOptionsProps), {
      size: "small"
    }), this.$attrs);
    return _createVNode$29(Select$2, selelctProps, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
const { createVNode: _createVNode$28 } = await importShared("vue");
const Pager = {
  name: "Pager",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    rootPrefixCls: PropTypes.string,
    page: PropTypes.number,
    active: PropTypes.looseBool,
    last: PropTypes.looseBool,
    locale: PropTypes.object,
    showTitle: PropTypes.looseBool,
    itemRender: {
      type: Function,
      default: function _default7() {
      }
    }
  },
  methods: {
    handleClick: function handleClick2() {
      this.__emit("click", this.page);
    },
    handleKeyPress: function handleKeyPress2(event) {
      this.__emit("keypress", event, this.handleClick, this.page);
    }
  },
  render: function render97() {
    var _classNames;
    var _this$$attrs = this.$attrs, _cls = _this$$attrs.class, style3 = _this$$attrs.style;
    var props2 = this.$props;
    var prefixCls2 = "".concat(props2.rootPrefixCls, "-item");
    var cls = classNames(prefixCls2, "".concat(prefixCls2, "-").concat(props2.page), (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-active"), props2.active), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), !props2.page), _classNames), _cls);
    return _createVNode$28("li", {
      "onClick": this.handleClick,
      "onKeypress": this.handleKeyPress,
      "title": this.showTitle ? this.page : null,
      "tabindex": "0",
      "class": cls,
      "style": style3
    }, [this.itemRender({
      page: this.page,
      type: "page",
      originalElement: _createVNode$28("a", null, [this.page])
    })]);
  }
};
const KEYCODE = {
  ENTER: 13,
  ARROW_UP: 38,
  ARROW_DOWN: 40
};
const { createVNode: _createVNode$27 } = await importShared("vue");
const { withDirectives: withDirectives$3 } = await importShared("vue");
const Options = {
  mixins: [BaseMixin],
  props: {
    disabled: PropTypes.looseBool,
    changeSize: PropTypes.func,
    quickGo: PropTypes.func,
    selectComponentClass: PropTypes.any,
    current: PropTypes.number,
    pageSizeOptions: PropTypes.array.def(["10", "20", "30", "40"]),
    pageSize: PropTypes.number,
    buildOptionText: PropTypes.func,
    locale: PropTypes.object,
    rootPrefixCls: PropTypes.string,
    selectPrefixCls: PropTypes.string,
    goButton: PropTypes.any
  },
  data: function data49() {
    return {
      goInputText: ""
    };
  },
  methods: {
    getValidValue: function getValidValue2() {
      var goInputText = this.goInputText, current2 = this.current;
      return !goInputText || isNaN(goInputText) ? current2 : Number(goInputText);
    },
    defaultBuildOptionText: function defaultBuildOptionText(opt) {
      return "".concat(opt.value, " ").concat(this.locale.items_per_page);
    },
    handleChange: function handleChange14(e2) {
      var _e$target = e2.target, value26 = _e$target.value, composing = _e$target.composing;
      if (e2.isComposing || composing || this.goInputText === value26) return;
      this.setState({
        goInputText: value26
      });
    },
    handleBlur: function handleBlur(e2) {
      var _this$$props = this.$props, goButton = _this$$props.goButton, quickGo = _this$$props.quickGo, rootPrefixCls = _this$$props.rootPrefixCls;
      if (goButton) {
        return;
      }
      if (e2.relatedTarget && (e2.relatedTarget.className.indexOf("".concat(rootPrefixCls, "-prev")) >= 0 || e2.relatedTarget.className.indexOf("".concat(rootPrefixCls, "-next")) >= 0)) {
        return;
      }
      quickGo(this.getValidValue());
    },
    go: function go(e2) {
      var goInputText = this.goInputText;
      if (goInputText === "") {
        return;
      }
      if (e2.keyCode === KEYCODE.ENTER || e2.type === "click") {
        this.quickGo(this.getValidValue());
        this.setState({
          goInputText: ""
        });
      }
    }
  },
  render: function render98() {
    var _this = this;
    var rootPrefixCls = this.rootPrefixCls, locale2 = this.locale, changeSize = this.changeSize, quickGo = this.quickGo, goButton = this.goButton, Select2 = this.selectComponentClass, defaultBuildOptionText2 = this.defaultBuildOptionText, selectPrefixCls = this.selectPrefixCls, pageSize2 = this.pageSize, pageSizeOptions = this.pageSizeOptions, goInputText = this.goInputText, disabled = this.disabled;
    var prefixCls2 = "".concat(rootPrefixCls, "-options");
    var changeSelect = null;
    var goInput = null;
    var gotoButton = null;
    if (!changeSize && !quickGo) {
      return null;
    }
    if (changeSize && Select2) {
      var buildOptionText = this.buildOptionText || defaultBuildOptionText2;
      var options2 = pageSizeOptions.map(function(opt, i2) {
        return _createVNode$27(Select2.Option, {
          "key": i2,
          "value": opt
        }, {
          default: function _default8() {
            return [buildOptionText({
              value: opt
            })];
          }
        });
      });
      changeSelect = _createVNode$27(Select2, {
        "disabled": disabled,
        "prefixCls": selectPrefixCls,
        "showSearch": false,
        "class": "".concat(prefixCls2, "-size-changer"),
        "optionLabelProp": "children",
        "value": (pageSize2 || pageSizeOptions[0]).toString(),
        "onChange": function onChange9(value26) {
          return _this.changeSize(Number(value26));
        },
        "getPopupContainer": function getPopupContainer(triggerNode) {
          return triggerNode.parentNode;
        }
      }, {
        default: function _default8() {
          return [options2];
        }
      });
    }
    if (quickGo) {
      if (goButton) {
        gotoButton = typeof goButton === "boolean" ? _createVNode$27("button", {
          "type": "button",
          "onClick": this.go,
          "onKeyup": this.go,
          "disabled": disabled
        }, [locale2.jump_to_confirm]) : _createVNode$27("span", {
          "onClick": this.go,
          "onKeyup": this.go
        }, [goButton]);
      }
      goInput = _createVNode$27("div", {
        "class": "".concat(prefixCls2, "-quick-jumper")
      }, [locale2.jump_to, withDirectives$3(_createVNode$27("input", {
        "disabled": disabled,
        "type": "text",
        "value": goInputText,
        "onInput": this.handleChange,
        "onChange": this.handleChange,
        "onKeyup": this.go,
        "onBlur": this.handleBlur
      }, null), [[antInput]]), locale2.page, gotoButton]);
    }
    return _createVNode$27("li", {
      "class": "".concat(prefixCls2)
    }, [changeSelect, goInput]);
  }
};
const LOCALE = {
  // Options.jsx
  items_per_page: "条/页",
  jump_to: "跳至",
  jump_to_confirm: "确定",
  page: "页",
  // Pagination.jsx
  prev_page: "上一页",
  next_page: "下一页",
  prev_5: "向前 5 页",
  next_5: "向后 5 页",
  prev_3: "向前 3 页",
  next_3: "向后 3 页"
};
const { createTextVNode: _createTextVNode$2, createVNode: _createVNode$26 } = await importShared("vue");
var __rest$p = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$14, withDirectives: withDirectives$2 } = await importShared("vue");
function noop$d() {
}
function isInteger(value26) {
  return typeof value26 === "number" && isFinite(value26) && Math.floor(value26) === value26;
}
function defaultItemRender(_ref) {
  var originalElement = _ref.originalElement;
  return originalElement;
}
function calculatePage(p, state, props2) {
  var pageSize2 = p;
  if (typeof pageSize2 === "undefined") {
    pageSize2 = state.statePageSize;
  }
  return Math.floor((props2.total - 1) / pageSize2) + 1;
}
const VcPagination = defineComponent$14({
  name: "Pagination",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    disabled: PropTypes.looseBool,
    prefixCls: PropTypes.string.def("rc-pagination"),
    selectPrefixCls: PropTypes.string.def("rc-select"),
    current: PropTypes.number,
    defaultCurrent: PropTypes.number.def(1),
    total: PropTypes.number.def(0),
    pageSize: PropTypes.number,
    defaultPageSize: PropTypes.number.def(10),
    hideOnSinglePage: PropTypes.looseBool.def(false),
    showSizeChanger: PropTypes.looseBool.def(false),
    showLessItems: PropTypes.looseBool.def(false),
    // showSizeChange: PropTypes.func.def(noop),
    selectComponentClass: PropTypes.any,
    showPrevNextJumpers: PropTypes.looseBool.def(true),
    showQuickJumper: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object]).def(false),
    showTitle: PropTypes.looseBool.def(true),
    pageSizeOptions: PropTypes.arrayOf(PropTypes.string),
    buildOptionText: PropTypes.func,
    showTotal: PropTypes.func,
    simple: PropTypes.looseBool,
    locale: PropTypes.object.def(LOCALE),
    itemRender: PropTypes.func,
    prevIcon: PropTypes.any,
    nextIcon: PropTypes.any,
    jumpPrevIcon: PropTypes.any,
    jumpNextIcon: PropTypes.any
  },
  data: function data50() {
    var props2 = getOptionProps(this);
    var hasOnChange = this.onChange !== noop$d;
    var hasCurrent = "current" in props2;
    if (hasCurrent && !hasOnChange) {
      console.warn("Warning: You provided a `current` prop to a Pagination component without an `onChange` handler. This will render a read-only component.");
    }
    var current2 = this.defaultCurrent;
    if ("current" in props2) {
      current2 = this.current;
    }
    var pageSize2 = this.defaultPageSize;
    if ("pageSize" in props2) {
      pageSize2 = this.pageSize;
    }
    current2 = Math.min(current2, calculatePage(pageSize2, void 0, props2));
    return {
      stateCurrent: current2,
      stateCurrentInputValue: current2,
      statePageSize: pageSize2
    };
  },
  watch: {
    current: function current(val) {
      this.setState({
        stateCurrent: val,
        stateCurrentInputValue: val
      });
    },
    pageSize: function pageSize(val) {
      var newState = {};
      var current2 = this.stateCurrent;
      var newCurrent = calculatePage(val, this.$data, this.$props);
      current2 = current2 > newCurrent ? newCurrent : current2;
      if (!hasProp(this, "current")) {
        newState.stateCurrent = current2;
        newState.stateCurrentInputValue = current2;
      }
      newState.statePageSize = val;
      this.setState(newState);
    },
    stateCurrent: function stateCurrent(val, oldValue) {
      var _this = this;
      this.$nextTick(function() {
        if (_this.$refs.paginationNode) {
          var lastCurrentNode = _this.$refs.paginationNode.querySelector(".".concat(_this.prefixCls, "-item-").concat(oldValue));
          if (lastCurrentNode && document.activeElement === lastCurrentNode) {
            lastCurrentNode.blur();
          }
        }
      });
    },
    total: function total() {
      var newState = {};
      var newCurrent = calculatePage(this.pageSize, this.$data, this.$props);
      if (hasProp(this, "current")) {
        var current2 = Math.min(this.current, newCurrent);
        newState.stateCurrent = current2;
        newState.stateCurrentInputValue = current2;
      } else {
        var _current = this.stateCurrent;
        if (_current === 0 && newCurrent > 0) {
          _current = 1;
        } else {
          _current = Math.min(this.stateCurrent, newCurrent);
        }
        newState.stateCurrent = _current;
      }
      this.setState(newState);
    }
  },
  methods: {
    getJumpPrevPage: function getJumpPrevPage() {
      return Math.max(1, this.stateCurrent - (this.showLessItems ? 3 : 5));
    },
    getJumpNextPage: function getJumpNextPage() {
      return Math.min(calculatePage(void 0, this.$data, this.$props), this.stateCurrent + (this.showLessItems ? 3 : 5));
    },
    getItemIcon: function getItemIcon(icon) {
      var prefixCls2 = this.$props.prefixCls;
      var iconNode = getComponent(this, icon, this.$props) || _createVNode$26("a", {
        "class": "".concat(prefixCls2, "-item-link")
      }, null);
      return iconNode;
    },
    getValidValue: function getValidValue3(e2) {
      var inputValue = e2.target.value;
      var allPages = calculatePage(void 0, this.$data, this.$props);
      var stateCurrentInputValue = this.$data.stateCurrentInputValue;
      var value26;
      if (inputValue === "") {
        value26 = inputValue;
      } else if (isNaN(Number(inputValue))) {
        value26 = stateCurrentInputValue;
      } else if (inputValue >= allPages) {
        value26 = allPages;
      } else {
        value26 = Number(inputValue);
      }
      return value26;
    },
    isValid: function isValid3(page) {
      return isInteger(page) && page !== this.stateCurrent;
    },
    shouldDisplayQuickJumper: function shouldDisplayQuickJumper() {
      var _this$$props = this.$props, showQuickJumper = _this$$props.showQuickJumper, pageSize2 = _this$$props.pageSize, total2 = _this$$props.total;
      if (total2 <= pageSize2) {
        return false;
      }
      return showQuickJumper;
    },
    // calculatePage (p) {
    //   let pageSize = p
    //   if (typeof pageSize === 'undefined') {
    //     pageSize = this.statePageSize
    //   }
    //   return Math.floor((this.total - 1) / pageSize) + 1
    // },
    handleKeyDown: function handleKeyDown5(event) {
      if (event.keyCode === KEYCODE.ARROW_UP || event.keyCode === KEYCODE.ARROW_DOWN) {
        event.preventDefault();
      }
    },
    handleKeyUp: function handleKeyUp(e2) {
      if (e2.isComposing || e2.target.composing) return;
      var value26 = this.getValidValue(e2);
      var stateCurrentInputValue = this.stateCurrentInputValue;
      if (value26 !== stateCurrentInputValue) {
        this.setState({
          stateCurrentInputValue: value26
        });
      }
      if (e2.keyCode === KEYCODE.ENTER) {
        this.handleChange(value26);
      } else if (e2.keyCode === KEYCODE.ARROW_UP) {
        this.handleChange(value26 - 1);
      } else if (e2.keyCode === KEYCODE.ARROW_DOWN) {
        this.handleChange(value26 + 1);
      }
    },
    changePageSize: function changePageSize(size) {
      var current2 = this.stateCurrent;
      var preCurrent = current2;
      var newCurrent = calculatePage(size, this.$data, this.$props);
      current2 = current2 > newCurrent ? newCurrent : current2;
      if (newCurrent === 0) {
        current2 = this.stateCurrent;
      }
      if (typeof size === "number") {
        if (!hasProp(this, "pageSize")) {
          this.setState({
            statePageSize: size
          });
        }
        if (!hasProp(this, "current")) {
          this.setState({
            stateCurrent: current2,
            stateCurrentInputValue: current2
          });
        }
      }
      this.__emit("update:pageSize", size);
      if (current2 !== preCurrent) {
        this.__emit("update:current", current2);
      }
      this.__emit("showSizeChange", current2, size);
    },
    handleChange: function handleChange15(p) {
      var disabled = this.$props.disabled;
      var page = p;
      if (this.isValid(page) && !disabled) {
        var currentPage = calculatePage(void 0, this.$data, this.$props);
        if (page > currentPage) {
          page = currentPage;
        } else if (page < 1) {
          page = 1;
        }
        if (!hasProp(this, "current")) {
          this.setState({
            stateCurrent: page,
            stateCurrentInputValue: page
          });
        }
        this.__emit("update:current", page);
        this.__emit("change", page, this.statePageSize);
        return page;
      }
      return this.stateCurrent;
    },
    prev: function prev2() {
      if (this.hasPrev()) {
        this.handleChange(this.stateCurrent - 1);
      }
    },
    next: function next2() {
      if (this.hasNext()) {
        this.handleChange(this.stateCurrent + 1);
      }
    },
    jumpPrev: function jumpPrev() {
      this.handleChange(this.getJumpPrevPage());
    },
    jumpNext: function jumpNext() {
      this.handleChange(this.getJumpNextPage());
    },
    hasPrev: function hasPrev() {
      return this.stateCurrent > 1;
    },
    hasNext: function hasNext() {
      return this.stateCurrent < calculatePage(void 0, this.$data, this.$props);
    },
    runIfEnter: function runIfEnter(event, callback) {
      if (event.key === "Enter" || event.charCode === 13) {
        for (var _len = arguments.length, restParams = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          restParams[_key - 2] = arguments[_key];
        }
        callback.apply(void 0, restParams);
      }
    },
    runIfEnterPrev: function runIfEnterPrev(event) {
      this.runIfEnter(event, this.prev);
    },
    runIfEnterNext: function runIfEnterNext(event) {
      this.runIfEnter(event, this.next);
    },
    runIfEnterJumpPrev: function runIfEnterJumpPrev(event) {
      this.runIfEnter(event, this.jumpPrev);
    },
    runIfEnterJumpNext: function runIfEnterJumpNext(event) {
      this.runIfEnter(event, this.jumpNext);
    },
    handleGoTO: function handleGoTO(event) {
      if (event.keyCode === KEYCODE.ENTER || event.type === "click") {
        this.handleChange(this.stateCurrentInputValue);
      }
    }
  },
  render: function render99() {
    var _classNames;
    var _this$$props2 = this.$props, prefixCls2 = _this$$props2.prefixCls, disabled = _this$$props2.disabled;
    var _a = splitAttrs(this.$attrs).extraAttrs, className = _a.class, restAttrs = __rest$p(_a, ["class"]);
    if (this.hideOnSinglePage === true && this.total <= this.statePageSize) {
      return null;
    }
    var itemRender = this.itemRender || defaultItemRender;
    var props2 = this.$props;
    var locale2 = this.locale;
    var allPages = calculatePage(void 0, this.$data, this.$props);
    var pagerList = [];
    var jumpPrev2 = null;
    var jumpNext2 = null;
    var firstPager = null;
    var lastPager = null;
    var gotoButton = null;
    var goButton = this.showQuickJumper && this.showQuickJumper.goButton;
    var pageBufferSize = this.showLessItems ? 1 : 2;
    var stateCurrent2 = this.stateCurrent, statePageSize = this.statePageSize;
    var prevPage = stateCurrent2 - 1 > 0 ? stateCurrent2 - 1 : 0;
    var nextPage = stateCurrent2 + 1 < allPages ? stateCurrent2 + 1 : allPages;
    if (this.simple) {
      if (goButton) {
        if (typeof goButton === "boolean") {
          gotoButton = _createVNode$26("button", {
            "type": "button",
            "onClick": this.handleGoTO,
            "onKeyup": this.handleGoTO
          }, [locale2.jump_to_confirm]);
        } else {
          gotoButton = _createVNode$26("span", {
            "onClick": this.handleGoTO,
            "onKeyup": this.handleGoTO
          }, [goButton]);
        }
        gotoButton = _createVNode$26("li", {
          "title": this.showTitle ? "".concat(locale2.jump_to).concat(this.stateCurrent, "/").concat(allPages) : null,
          "class": "".concat(prefixCls2, "-simple-pager")
        }, [gotoButton]);
      }
      var hasPrev2 = this.hasPrev();
      var hasNext2 = this.hasNext();
      return _createVNode$26("ul", _objectSpread2$2({
        "class": classNames("".concat(prefixCls2, " ").concat(prefixCls2, "-simple"), className)
      }, restAttrs), [_createVNode$26("li", {
        "title": this.showTitle ? locale2.prev_page : null,
        "onClick": this.prev,
        "tabindex": hasPrev2 ? 0 : null,
        "onKeypress": this.runIfEnterPrev,
        "class": "".concat(hasPrev2 ? "" : "".concat(prefixCls2, "-disabled"), " ").concat(prefixCls2, "-prev"),
        "aria-disabled": !this.hasPrev()
      }, [itemRender({
        page: prevPage,
        type: "prev",
        originalElement: this.getItemIcon("prevIcon")
      })]), _createVNode$26("li", {
        "title": this.showTitle ? "".concat(stateCurrent2, "/").concat(allPages) : null,
        "class": "".concat(prefixCls2, "-simple-pager")
      }, [withDirectives$2(_createVNode$26("input", {
        "type": "text",
        "value": this.stateCurrentInputValue,
        "onKeydown": this.handleKeyDown,
        "onKeyup": this.handleKeyUp,
        "onInput": this.handleKeyUp,
        "onChange": this.handleKeyUp,
        "size": "3"
      }, null), [[antInput]]), _createVNode$26("span", {
        "class": "".concat(prefixCls2, "-slash")
      }, [_createTextVNode$2("／")]), allPages]), _createVNode$26("li", {
        "title": this.showTitle ? locale2.next_page : null,
        "onClick": this.next,
        "tabindex": this.hasNext ? 0 : null,
        "onKeypress": this.runIfEnterNext,
        "class": "".concat(hasNext2 ? "" : "".concat(prefixCls2, "-disabled"), " ").concat(prefixCls2, "-next"),
        "aria-disabled": !this.hasNext()
      }, [itemRender({
        page: nextPage,
        type: "next",
        originalElement: this.getItemIcon("nextIcon")
      })]), gotoButton]);
    }
    if (allPages <= 5 + pageBufferSize * 2) {
      var pagerProps = {
        locale: locale2,
        rootPrefixCls: prefixCls2,
        showTitle: props2.showTitle,
        itemRender,
        onClick: this.handleChange,
        onKeypress: this.runIfEnter
      };
      if (!allPages) {
        pagerList.push(_createVNode$26(Pager, _objectSpread2$2(_objectSpread2$2({}, pagerProps), {}, {
          "key": "noPager",
          "page": allPages,
          "class": "".concat(prefixCls2, "-disabled")
        }), null));
      }
      for (var i2 = 1; i2 <= allPages; i2++) {
        var active = stateCurrent2 === i2;
        pagerList.push(_createVNode$26(Pager, _objectSpread2$2(_objectSpread2$2({}, pagerProps), {}, {
          "key": i2,
          "page": i2,
          "active": active
        }), null));
      }
    } else {
      var prevItemTitle = this.showLessItems ? locale2.prev_3 : locale2.prev_5;
      var nextItemTitle = this.showLessItems ? locale2.next_3 : locale2.next_5;
      if (this.showPrevNextJumpers) {
        var jumpPrevClassString = "".concat(prefixCls2, "-jump-prev");
        if (props2.jumpPrevIcon) {
          jumpPrevClassString += " ".concat(prefixCls2, "-jump-prev-custom-icon");
        }
        jumpPrev2 = _createVNode$26("li", {
          "title": this.showTitle ? prevItemTitle : null,
          "key": "prev",
          "onClick": this.jumpPrev,
          "tabindex": "0",
          "onKeypress": this.runIfEnterJumpPrev,
          "class": jumpPrevClassString
        }, [itemRender({
          page: this.getJumpPrevPage(),
          type: "jump-prev",
          originalElement: this.getItemIcon("jumpPrevIcon")
        })]);
        var jumpNextClassString = "".concat(prefixCls2, "-jump-next");
        if (props2.jumpNextIcon) {
          jumpNextClassString += " ".concat(prefixCls2, "-jump-next-custom-icon");
        }
        jumpNext2 = _createVNode$26("li", {
          "title": this.showTitle ? nextItemTitle : null,
          "key": "next",
          "tabindex": "0",
          "onClick": this.jumpNext,
          "onKeypress": this.runIfEnterJumpNext,
          "class": jumpNextClassString
        }, [itemRender({
          page: this.getJumpNextPage(),
          type: "jump-next",
          originalElement: this.getItemIcon("jumpNextIcon")
        })]);
      }
      lastPager = _createVNode$26(Pager, {
        "locale": locale2,
        "last": true,
        "rootPrefixCls": prefixCls2,
        "onClick": this.handleChange,
        "onKeypress": this.runIfEnter,
        "key": allPages,
        "page": allPages,
        "active": false,
        "showTitle": this.showTitle,
        "itemRender": itemRender
      }, null);
      firstPager = _createVNode$26(Pager, {
        "locale": locale2,
        "rootPrefixCls": prefixCls2,
        "onClick": this.handleChange,
        "onKeypress": this.runIfEnter,
        "key": 1,
        "page": 1,
        "active": false,
        "showTitle": this.showTitle,
        "itemRender": itemRender
      }, null);
      var left = Math.max(1, stateCurrent2 - pageBufferSize);
      var right = Math.min(stateCurrent2 + pageBufferSize, allPages);
      if (stateCurrent2 - 1 <= pageBufferSize) {
        right = 1 + pageBufferSize * 2;
      }
      if (allPages - stateCurrent2 <= pageBufferSize) {
        left = allPages - pageBufferSize * 2;
      }
      for (var _i = left; _i <= right; _i++) {
        var _active = stateCurrent2 === _i;
        pagerList.push(_createVNode$26(Pager, {
          "locale": locale2,
          "rootPrefixCls": prefixCls2,
          "onClick": this.handleChange,
          "onKeypress": this.runIfEnter,
          "key": _i,
          "page": _i,
          "active": _active,
          "showTitle": this.showTitle,
          "itemRender": itemRender
        }, null));
      }
      if (stateCurrent2 - 1 >= pageBufferSize * 2 && stateCurrent2 !== 1 + 2) {
        pagerList[0] = _createVNode$26(Pager, {
          "locale": locale2,
          "rootPrefixCls": prefixCls2,
          "onClick": this.handleChange,
          "onKeypress": this.runIfEnter,
          "key": left,
          "page": left,
          "class": "".concat(prefixCls2, "-item-after-jump-prev"),
          "active": false,
          "showTitle": this.showTitle,
          "itemRender": itemRender
        }, null);
        pagerList.unshift(jumpPrev2);
      }
      if (allPages - stateCurrent2 >= pageBufferSize * 2 && stateCurrent2 !== allPages - 2) {
        pagerList[pagerList.length - 1] = _createVNode$26(Pager, {
          "locale": locale2,
          "rootPrefixCls": prefixCls2,
          "onClick": this.handleChange,
          "onKeypress": this.runIfEnter,
          "key": right,
          "page": right,
          "class": "".concat(prefixCls2, "-item-before-jump-next"),
          "active": false,
          "showTitle": this.showTitle,
          "itemRender": itemRender
        }, null);
        pagerList.push(jumpNext2);
      }
      if (left !== 1) {
        pagerList.unshift(firstPager);
      }
      if (right !== allPages) {
        pagerList.push(lastPager);
      }
    }
    var totalText = null;
    if (this.showTotal) {
      totalText = _createVNode$26("li", {
        "class": "".concat(prefixCls2, "-total-text")
      }, [this.showTotal(this.total, [this.total === 0 ? 0 : (stateCurrent2 - 1) * statePageSize + 1, stateCurrent2 * statePageSize > this.total ? this.total : stateCurrent2 * statePageSize])]);
    }
    var prevDisabled = !this.hasPrev() || !allPages;
    var nextDisabled = !this.hasNext() || !allPages;
    var buildOptionText = this.buildOptionText || this.$slots.buildOptionText;
    return _createVNode$26("ul", _objectSpread2$2(_objectSpread2$2({
      "unselectable": "unselectable",
      "ref": "paginationNode"
    }, restAttrs), {}, {
      "class": classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _classNames), className)
    }), [totalText, _createVNode$26("li", {
      "title": this.showTitle ? locale2.prev_page : null,
      "onClick": this.prev,
      "tabindex": prevDisabled ? null : 0,
      "onKeypress": this.runIfEnterPrev,
      "class": "".concat(!prevDisabled ? "" : "".concat(prefixCls2, "-disabled"), " ").concat(prefixCls2, "-prev"),
      "aria-disabled": prevDisabled
    }, [itemRender({
      page: prevPage,
      type: "prev",
      originalElement: this.getItemIcon("prevIcon")
    })]), pagerList, _createVNode$26("li", {
      "title": this.showTitle ? locale2.next_page : null,
      "onClick": this.next,
      "tabindex": nextDisabled ? null : 0,
      "onKeypress": this.runIfEnterNext,
      "class": "".concat(!nextDisabled ? "" : "".concat(prefixCls2, "-disabled"), " ").concat(prefixCls2, "-next"),
      "aria-disabled": nextDisabled
    }, [itemRender({
      page: nextPage,
      type: "next",
      originalElement: this.getItemIcon("nextIcon")
    })]), _createVNode$26(Options, {
      "disabled": disabled,
      "locale": locale2,
      "rootPrefixCls": prefixCls2,
      "selectComponentClass": this.selectComponentClass,
      "selectPrefixCls": this.selectPrefixCls,
      "changeSize": this.showSizeChanger ? this.changePageSize : null,
      "current": stateCurrent2,
      "pageSize": statePageSize,
      "pageSizeOptions": this.pageSizeOptions,
      "buildOptionText": buildOptionText || null,
      "quickGo": this.shouldDisplayQuickJumper() ? this.handleChange : null,
      "goButton": goButton
    }, null)]);
  }
});
const { createTextVNode: _createTextVNode$1, createVNode: _createVNode$25 } = await importShared("vue");
var __rest$o = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$13, inject: inject$w } = await importShared("vue");
var paginationProps$1 = function paginationProps() {
  return {
    total: PropTypes.number,
    defaultCurrent: PropTypes.number,
    disabled: PropTypes.looseBool,
    current: PropTypes.number,
    defaultPageSize: PropTypes.number,
    pageSize: PropTypes.number,
    hideOnSinglePage: PropTypes.looseBool,
    showSizeChanger: PropTypes.looseBool,
    pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),
    buildOptionText: PropTypes.func,
    showSizeChange: PropTypes.func,
    showQuickJumper: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
    showTotal: PropTypes.any,
    size: PropTypes.string,
    simple: PropTypes.looseBool,
    locale: PropTypes.object,
    prefixCls: PropTypes.string,
    selectPrefixCls: PropTypes.string,
    itemRender: PropTypes.func,
    role: PropTypes.string,
    showLessItems: PropTypes.looseBool,
    onChange: PropTypes.func,
    onShowSizeChange: PropTypes.func,
    "onUpdate:current": PropTypes.func,
    "onUpdate:pageSize": PropTypes.func
  };
};
var paginationConfig = function paginationConfig2() {
  return _extends$1(_extends$1({}, paginationProps$1()), {
    position: PropTypes.oneOf(tuple("top", "bottom", "both"))
  });
};
const Pagination$1 = defineComponent$13({
  name: "APagination",
  inheritAttrs: false,
  props: _extends$1({}, paginationProps$1()),
  emits: ["change", "showSizeChange", "update:current", "update:pageSize"],
  setup: function setup99() {
    return {
      configProvider: inject$w("configProvider", defaultConfigProvider)
    };
  },
  methods: {
    getIconsProps: function getIconsProps(prefixCls2) {
      var prevIcon = _createVNode$25("a", {
        "class": "".concat(prefixCls2, "-item-link")
      }, [_createVNode$25(LeftOutlined, null, null)]);
      var nextIcon = _createVNode$25("a", {
        "class": "".concat(prefixCls2, "-item-link")
      }, [_createVNode$25(RightOutlined, null, null)]);
      var jumpPrevIcon = _createVNode$25("a", {
        "class": "".concat(prefixCls2, "-item-link")
      }, [_createVNode$25("div", {
        "class": "".concat(prefixCls2, "-item-container")
      }, [_createVNode$25(DoubleLeftOutlined, {
        "class": "".concat(prefixCls2, "-item-link-icon")
      }, null), _createVNode$25("span", {
        "class": "".concat(prefixCls2, "-item-ellipsis")
      }, [_createTextVNode$1("•••")])])]);
      var jumpNextIcon = _createVNode$25("a", {
        "class": "".concat(prefixCls2, "-item-link")
      }, [_createVNode$25("div", {
        "class": "".concat(prefixCls2, "-item-container")
      }, [_createVNode$25(DoubleRightOutlined, {
        "class": "".concat(prefixCls2, "-item-link-icon")
      }, null), _createVNode$25("span", {
        "class": "".concat(prefixCls2, "-item-ellipsis")
      }, [_createTextVNode$1("•••")])])]);
      return {
        prevIcon,
        nextIcon,
        jumpPrevIcon,
        jumpNextIcon
      };
    },
    renderPagination: function renderPagination(contextLocale) {
      var _a = getOptionProps(this), customizePrefixCls = _a.prefixCls, customizeSelectPrefixCls = _a.selectPrefixCls, buildOptionText = _a.buildOptionText, size = _a.size, customLocale = _a.locale, restProps = __rest$o(_a, ["prefixCls", "selectPrefixCls", "buildOptionText", "size", "locale"]);
      var getPrefixCls2 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("pagination", customizePrefixCls);
      var selectPrefixCls = getPrefixCls2("select", customizeSelectPrefixCls);
      var isSmall = size === "small";
      var paginationProps3 = _extends$1(_extends$1(_extends$1(_extends$1(_extends$1({
        prefixCls: prefixCls2,
        selectPrefixCls
      }, restProps), this.getIconsProps(prefixCls2)), {
        selectComponentClass: isSmall ? MiniSelect : Select$2,
        locale: _extends$1(_extends$1({}, contextLocale), customLocale),
        buildOptionText: buildOptionText || this.$slots.buildOptionText
      }), this.$attrs), {
        class: classNames({
          mini: isSmall
        }, this.$attrs.class),
        itemRender: this.itemRender || this.$slots.itemRender
      });
      return _createVNode$25(VcPagination, paginationProps3, null);
    }
  },
  render: function render100() {
    return _createVNode$25(LocaleReceiver, {
      "componentName": "Pagination",
      "defaultLocale": enUS,
      "children": this.renderPagination
    }, null);
  }
});
const Pagination = withInstall(Pagination$1);
const { createVNode: _createVNode$24 } = await importShared("vue");
const { defineComponent: defineComponent$12 } = await importShared("vue");
var listItemMetaProps = {
  avatar: PropTypes.any,
  description: PropTypes.any,
  prefixCls: PropTypes.string,
  title: PropTypes.any
};
const ItemMeta = defineComponent$12({
  name: "AListItemMeta",
  props: listItemMetaProps,
  displayName: "AListItemMeta",
  __ANT_LIST_ITEM_META: true,
  slots: ["avatar", "description", "title"],
  setup: function setup100(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("list", props2), prefixCls2 = _useConfigInject.prefixCls;
    return function() {
      var _a, _b, _c, _d, _e, _f;
      var classString = "".concat(prefixCls2.value, "-item-meta");
      var title = (_a = props2.title) !== null && _a !== void 0 ? _a : (_b = slots.title) === null || _b === void 0 ? void 0 : _b.call(slots);
      var description = (_c = props2.description) !== null && _c !== void 0 ? _c : (_d = slots.description) === null || _d === void 0 ? void 0 : _d.call(slots);
      var avatar = (_e = props2.avatar) !== null && _e !== void 0 ? _e : (_f = slots.avatar) === null || _f === void 0 ? void 0 : _f.call(slots);
      var content = _createVNode$24("div", {
        "class": "".concat(prefixCls2.value, "-item-meta-content")
      }, [title && _createVNode$24("h4", {
        "class": "".concat(prefixCls2.value, "-item-meta-title")
      }, [title]), description && _createVNode$24("div", {
        "class": "".concat(prefixCls2.value, "-item-meta-description")
      }, [description])]);
      return _createVNode$24("div", {
        "class": classString
      }, [avatar && _createVNode$24("div", {
        "class": "".concat(prefixCls2.value, "-item-meta-avatar")
      }, [avatar]), (title || description) && content]);
    };
  }
});
var ListContextKey = Symbol("ListContextKey");
const { createVNode: _createVNode$23 } = await importShared("vue");
var __rest$n = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$11, inject: inject$v, ref: ref$f } = await importShared("vue");
var ListItemProps = {
  prefixCls: PropTypes.string,
  extra: PropTypes.any,
  actions: PropTypes.array,
  grid: PropTypes.any,
  colStyle: PropTypes.style
};
const Item2 = defineComponent$11({
  name: "AListItem",
  inheritAttrs: false,
  Meta: ItemMeta,
  props: ListItemProps,
  slots: ["actions", "extra"],
  setup: function setup101(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _inject2 = inject$v(ListContextKey, {
      grid: ref$f(),
      itemLayout: ref$f()
    }), itemLayout = _inject2.itemLayout, grid = _inject2.grid;
    var _useConfigInject = useConfigInject("list", props2), prefixCls2 = _useConfigInject.prefixCls;
    var isItemContainsTextNodeAndNotSingular = function isItemContainsTextNodeAndNotSingular2() {
      var _a;
      var children = ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)) || [];
      var result;
      children.forEach(function(element) {
        if (isStringElement(element) && !isEmptyElement(element)) {
          result = true;
        }
      });
      return result && children.length > 1;
    };
    var isFlexMode = function isFlexMode2() {
      var _a, _b;
      var extra = (_a = props2.extra) !== null && _a !== void 0 ? _a : (_b = slots.extra) === null || _b === void 0 ? void 0 : _b.call(slots);
      if (itemLayout.value === "vertical") {
        return !!extra;
      }
      return !isItemContainsTextNodeAndNotSingular();
    };
    return function() {
      var _a, _b, _c, _d, _e;
      var className = attrs.class, restAttrs = __rest$n(attrs, ["class"]);
      var pre = prefixCls2.value;
      var extra = (_a = props2.extra) !== null && _a !== void 0 ? _a : (_b = slots.extra) === null || _b === void 0 ? void 0 : _b.call(slots);
      var children = (_c = slots.default) === null || _c === void 0 ? void 0 : _c.call(slots);
      var actions = (_d = props2.actions) !== null && _d !== void 0 ? _d : flattenChildren((_e = slots.actions) === null || _e === void 0 ? void 0 : _e.call(slots));
      actions = actions && !Array.isArray(actions) ? [actions] : actions;
      var actionsContent = actions && actions.length > 0 && _createVNode$23("ul", {
        "class": "".concat(pre, "-item-action"),
        "key": "actions"
      }, [actions.map(function(action, i2) {
        return _createVNode$23("li", {
          "key": "".concat(pre, "-item-action-").concat(i2)
        }, [action, i2 !== actions.length - 1 && _createVNode$23("em", {
          "class": "".concat(pre, "-item-action-split")
        }, null)]);
      })]);
      var Element3 = grid.value ? "div" : "li";
      var itemChildren = _createVNode$23(Element3, _objectSpread2$2(_objectSpread2$2({}, restAttrs), {}, {
        "class": classNames("".concat(pre, "-item"), _defineProperty$U({}, "".concat(pre, "-item-no-flex"), !isFlexMode()), className)
      }), {
        default: function _default8() {
          return [itemLayout.value === "vertical" && extra ? [_createVNode$23("div", {
            "class": "".concat(pre, "-item-main"),
            "key": "content"
          }, [children, actionsContent]), _createVNode$23("div", {
            "class": "".concat(pre, "-item-extra"),
            "key": "extra"
          }, [extra])] : [children, actionsContent, cloneElement(extra, {
            key: "extra"
          })]];
        }
      });
      return grid.value ? _createVNode$23(Col$1, {
        "flex": 1,
        "style": props2.colStyle
      }, {
        default: function _default8() {
          return [itemChildren];
        }
      }) : itemChildren;
    };
  }
});
const { createVNode: _createVNode$22 } = await importShared("vue");
const { provide: provide$4, defineComponent: defineComponent$10, ref: ref$e, watch: watch$8, computed: computed$k, toRef: toRef$1 } = await importShared("vue");
var ListGridType = {
  gutter: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(Number)]),
  column: PropTypes.number,
  xs: PropTypes.number,
  sm: PropTypes.number,
  md: PropTypes.number,
  lg: PropTypes.number,
  xl: PropTypes.number,
  xxl: PropTypes.number
};
var ListSize = tuple("small", "default", "large");
var listProps = {
  bordered: PropTypes.looseBool,
  dataSource: PropTypes.array,
  extra: PropTypes.any,
  grid: PropTypes.shape(ListGridType).loose,
  itemLayout: PropTypes.oneOf(tuple("horizontal", "vertical")),
  loading: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
  loadMore: PropTypes.any,
  pagination: withUndefined(PropTypes.oneOfType([PropTypes.shape(paginationConfig()).loose, PropTypes.looseBool])),
  prefixCls: PropTypes.string,
  rowKey: PropTypes.any,
  renderItem: PropTypes.any,
  size: PropTypes.oneOf(ListSize),
  split: PropTypes.looseBool,
  header: PropTypes.any,
  footer: PropTypes.any,
  locale: {
    type: Object
  }
};
var List$1 = defineComponent$10({
  name: "AList",
  Item: Item2,
  props: initDefaultProps2(listProps, {
    dataSource: [],
    bordered: false,
    split: true,
    loading: false,
    pagination: false
  }),
  slots: ["extra", "loadMore", "renderItem", "header", "footer"],
  setup: function setup102(props2, _ref) {
    var slots = _ref.slots;
    var _a, _b;
    provide$4(ListContextKey, {
      grid: toRef$1(props2, "grid"),
      itemLayout: toRef$1(props2, "itemLayout")
    });
    var defaultPaginationProps = {
      current: 1,
      total: 0
    };
    var _useConfigInject = useConfigInject("list", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction, renderEmpty2 = _useConfigInject.renderEmpty;
    var paginationObj = computed$k(function() {
      return props2.pagination && _typeof$3(props2.pagination) === "object" ? props2.pagination : {};
    });
    var paginationCurrent = ref$e((_a = paginationObj.value.defaultCurrent) !== null && _a !== void 0 ? _a : 1);
    var paginationSize = ref$e((_b = paginationObj.value.defaultPageSize) !== null && _b !== void 0 ? _b : 10);
    watch$8(paginationObj, function() {
      if ("current" in paginationObj.value) {
        paginationCurrent.value = paginationObj.value.current;
      }
      if ("pageSize" in paginationObj.value) {
        paginationSize.value = paginationObj.value.pageSize;
      }
    });
    var triggerPaginationEvent = function triggerPaginationEvent2(eventName) {
      return function(page, pageSize2) {
        paginationCurrent.value = page;
        paginationSize.value = pageSize2;
        if (paginationObj.value[eventName]) {
          paginationObj.value[eventName](page, pageSize2);
        }
      };
    };
    var onPaginationChange = triggerPaginationEvent("onChange");
    var onPaginationShowSizeChange = triggerPaginationEvent("onShowSizeChange");
    var renderEmptyFunc = function renderEmptyFunc2(renderEmptyHandler) {
      var _a2;
      return _createVNode$22("div", {
        "class": "".concat(prefixCls2.value, "-empty-text")
      }, [((_a2 = props2.locale) === null || _a2 === void 0 ? void 0 : _a2.emptyText) || renderEmptyHandler("List")]);
    };
    var loadingProp = computed$k(function() {
      if (typeof props2.loading === "boolean") {
        return {
          spinning: props2.loading
        };
      } else {
        return props2.loading;
      }
    });
    var isLoading = computed$k(function() {
      return loadingProp.value && loadingProp.value.spinning;
    });
    var sizeCls = computed$k(function() {
      var size = "";
      switch (props2.size) {
        case "large":
          size = "lg";
          break;
        case "small":
          size = "sm";
          break;
      }
      return size;
    });
    var classObj = computed$k(function() {
      var _ref2;
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2.value), true), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-vertical"), props2.itemLayout === "vertical"), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-").concat(sizeCls.value), sizeCls.value), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-split"), props2.split), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-bordered"), props2.bordered), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-loading"), isLoading.value), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-grid"), !!props2.grid), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _ref2;
    });
    var paginationProps3 = computed$k(function() {
      var pp = _extends$1(_extends$1(_extends$1({}, defaultPaginationProps), {
        total: props2.dataSource.length,
        current: paginationCurrent.value,
        pageSize: paginationSize.value
      }), props2.pagination || {});
      var largestPage = Math.ceil(pp.total / pp.pageSize);
      if (pp.current > largestPage) {
        pp.current = largestPage;
      }
      return pp;
    });
    var splitDataSource = computed$k(function() {
      var dd = _toConsumableArray(props2.dataSource);
      if (props2.pagination) {
        if (props2.dataSource.length > (paginationProps3.value.current - 1) * paginationProps3.value.pageSize) {
          dd = _toConsumableArray(props2.dataSource).splice((paginationProps3.value.current - 1) * paginationProps3.value.pageSize, paginationProps3.value.pageSize);
        }
      }
      return dd;
    });
    var screens2 = useBreakpoint();
    var currentBreakpoint = computed$k(function() {
      for (var i2 = 0; i2 < responsiveArray.length; i2 += 1) {
        var breakpoint = responsiveArray[i2];
        if (screens2.value[breakpoint]) {
          return breakpoint;
        }
      }
      return void 0;
    });
    var colStyle = computed$k(function() {
      if (!props2.grid) {
        return void 0;
      }
      var columnCount = currentBreakpoint.value && props2.grid[currentBreakpoint.value] ? props2.grid[currentBreakpoint.value] : props2.grid.column;
      if (columnCount) {
        return {
          width: "".concat(100 / columnCount, "%"),
          maxWidth: "".concat(100 / columnCount, "%")
        };
      }
      return void 0;
    });
    var renderInnerItem = function renderInnerItem2(keys2, item, index2) {
      var _a2;
      var renderItem = (_a2 = props2.renderItem) !== null && _a2 !== void 0 ? _a2 : slots.renderItem;
      if (!renderItem) return null;
      var key2;
      if (typeof props2.rowKey === "function") {
        key2 = props2.rowKey(item);
      } else if (typeof props2.rowKey === "string") {
        key2 = item[props2.rowKey];
      } else {
        key2 = item.key;
      }
      if (!key2) {
        key2 = "list-item-".concat(index2);
      }
      keys2[index2] = key2;
      return renderItem({
        item,
        index: index2
      });
    };
    return function() {
      var _a2, _b2, _c, _d, _e, _f, _g;
      var loadMore = (_a2 = props2.loadMore) !== null && _a2 !== void 0 ? _a2 : (_b2 = slots.loadMore) === null || _b2 === void 0 ? void 0 : _b2.call(slots);
      var footer = (_c = props2.footer) !== null && _c !== void 0 ? _c : (_d = slots.footer) === null || _d === void 0 ? void 0 : _d.call(slots);
      var header = (_e = props2.header) !== null && _e !== void 0 ? _e : (_f = slots.header) === null || _f === void 0 ? void 0 : _f.call(slots);
      var children = flattenChildren((_g = slots.default) === null || _g === void 0 ? void 0 : _g.call(slots));
      var keys2 = [];
      var isSomethingAfterLastItem = !!(loadMore || props2.pagination || footer);
      var classString = _extends$1(_extends$1({}, classObj.value), _defineProperty$U({}, "".concat(prefixCls2.value, "-something-after-last-item"), isSomethingAfterLastItem));
      var paginationContent = props2.pagination ? _createVNode$22("div", {
        "class": "".concat(prefixCls2.value, "-pagination")
      }, [_createVNode$22(Pagination, _objectSpread2$2(_objectSpread2$2({}, paginationProps3.value), {}, {
        "onChange": onPaginationChange,
        "onShowSizeChange": onPaginationShowSizeChange
      }), null)]) : null;
      var childrenContent = isLoading.value && _createVNode$22("div", {
        "style": {
          minHeight: "53px"
        }
      }, null);
      if (splitDataSource.value.length > 0) {
        var items = splitDataSource.value.map(function(item, index2) {
          return renderInnerItem(keys2, item, index2);
        });
        var childrenList = items.map(function(child, index2) {
          return _createVNode$22("div", {
            "key": keys2[index2],
            "style": colStyle.value
          }, [child]);
        });
        childrenContent = props2.grid ? _createVNode$22(ARow, {
          "gutter": props2.grid.gutter
        }, {
          default: function _default8() {
            return [childrenList];
          }
        }) : _createVNode$22("ul", {
          "class": "".concat(prefixCls2.value, "-items")
        }, [items]);
      } else if (!children.length && !isLoading.value) {
        childrenContent = renderEmptyFunc(renderEmpty2.value);
      }
      var paginationPosition = paginationProps3.value.position || "bottom";
      return _createVNode$22("div", {
        "class": classString
      }, [(paginationPosition === "top" || paginationPosition === "both") && paginationContent, header && _createVNode$22("div", {
        "class": "".concat(prefixCls2.value, "-header")
      }, [header]), _createVNode$22(Spin, loadingProp.value, {
        default: function _default8() {
          return [childrenContent, children];
        }
      }), footer && _createVNode$22("div", {
        "class": "".concat(prefixCls2.value, "-footer")
      }, [footer]), loadMore || (paginationPosition === "bottom" || paginationPosition === "both") && paginationContent]);
    };
  }
});
List$1.install = function(app) {
  app.component(List$1.name, List$1);
  app.component(List$1.Item.name, List$1.Item);
  app.component(List$1.Item.Meta.name, List$1.Item.Meta);
  return app;
};
const { createVNode: _createVNode$21 } = await importShared("vue");
const Notice = {
  mixins: [BaseMixin],
  props: {
    duration: PropTypes.number.def(1.5),
    closable: PropTypes.looseBool,
    prefixCls: PropTypes.string,
    update: PropTypes.looseBool,
    closeIcon: PropTypes.any,
    onClose: PropTypes.func
  },
  watch: {
    duration: function duration() {
      this.restartCloseTimer();
    }
  },
  mounted: function mounted28() {
    this.startCloseTimer();
  },
  updated: function updated16() {
    if (this.update) {
      this.restartCloseTimer();
    }
  },
  beforeUnmount: function beforeUnmount20() {
    this.clearCloseTimer();
    this.willDestroy = true;
  },
  methods: {
    close: function close5(e2) {
      if (e2) {
        e2.stopPropagation();
      }
      this.clearCloseTimer();
      this.__emit("close");
    },
    startCloseTimer: function startCloseTimer() {
      var _this = this;
      this.clearCloseTimer();
      if (!this.willDestroy && this.duration) {
        this.closeTimer = setTimeout(function() {
          _this.close();
        }, this.duration * 1e3);
      }
    },
    clearCloseTimer: function clearCloseTimer() {
      if (this.closeTimer) {
        clearTimeout(this.closeTimer);
        this.closeTimer = null;
      }
    },
    restartCloseTimer: function restartCloseTimer() {
      this.clearCloseTimer();
      this.startCloseTimer();
    }
  },
  render: function render101() {
    var _className;
    var prefixCls2 = this.prefixCls, closable = this.closable, clearCloseTimer2 = this.clearCloseTimer, startCloseTimer2 = this.startCloseTimer, close7 = this.close, $attrs = this.$attrs;
    var componentClass = "".concat(prefixCls2, "-notice");
    var className = (_className = {}, _defineProperty$U(_className, "".concat(componentClass), 1), _defineProperty$U(_className, "".concat(componentClass, "-closable"), closable), _className);
    var closeIcon = getComponent(this, "closeIcon");
    return _createVNode$21("div", {
      "class": className,
      "style": $attrs.style || {
        right: "50%"
      },
      "onMouseenter": clearCloseTimer2,
      "onMouseleave": startCloseTimer2
    }, [_createVNode$21("div", {
      "class": "".concat(componentClass, "-content")
    }, [getSlot(this)]), closable ? _createVNode$21("a", {
      "tabindex": "0",
      "onClick": close7,
      "class": "".concat(componentClass, "-close")
    }, [closeIcon || _createVNode$21("span", {
      "class": "".concat(componentClass, "-close-x")
    }, null)]) : null]);
  }
};
const { createVNode: _createVNode$20 } = await importShared("vue");
var __rest$m = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { createApp: createApp$2, defineComponent: defineComponent$$ } = await importShared("vue");
function noop$c() {
}
var seed = 0;
var now$1 = Date.now();
function getUuid() {
  return "rcNotification_".concat(now$1, "_").concat(seed++);
}
var Notification = defineComponent$$({
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string.def("rc-notification"),
    transitionName: PropTypes.string,
    animation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).def("fade"),
    maxCount: PropTypes.number,
    closeIcon: PropTypes.any
  },
  data: function data51() {
    return {
      notices: []
    };
  },
  methods: {
    getTransitionName: function getTransitionName5() {
      var props2 = this.$props;
      var transitionName2 = props2.transitionName;
      if (!transitionName2 && props2.animation) {
        transitionName2 = "".concat(props2.prefixCls, "-").concat(props2.animation);
      }
      return transitionName2;
    },
    add: function add2(notice2) {
      var key2 = notice2.key = notice2.key || getUuid();
      var maxCount2 = this.$props.maxCount;
      this.setState(function(previousState) {
        var notices = previousState.notices;
        var noticeIndex = notices.map(function(v2) {
          return v2.key;
        }).indexOf(key2);
        var updatedNotices = notices.concat();
        if (noticeIndex !== -1) {
          updatedNotices.splice(noticeIndex, 1, notice2);
        } else {
          if (maxCount2 && notices.length >= maxCount2) {
            notice2.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;
            updatedNotices.shift();
          }
          updatedNotices.push(notice2);
        }
        return {
          notices: updatedNotices
        };
      });
    },
    remove: function remove(key2) {
      this.setState(function(previousState) {
        return {
          notices: previousState.notices.filter(function(notice2) {
            return notice2.key !== key2;
          })
        };
      });
    }
  },
  render: function render102() {
    var _this = this;
    var prefixCls2 = this.prefixCls, notices = this.notices, remove3 = this.remove, getTransitionName6 = this.getTransitionName, $attrs = this.$attrs;
    var transitionProps = getTransitionGroupProps(getTransitionName6());
    var noticeNodes = notices.map(function(notice2, index2) {
      var update = Boolean(index2 === notices.length - 1 && notice2.updateKey);
      var key2 = notice2.updateKey ? notice2.updateKey : notice2.key;
      var content = notice2.content, duration2 = notice2.duration, closable = notice2.closable, onClose = notice2.onClose, style3 = notice2.style, className2 = notice2.class;
      var close7 = createChainedFunction(remove3.bind(_this, notice2.key), onClose);
      var noticeProps = {
        prefixCls: prefixCls2,
        duration: duration2,
        closable,
        update,
        closeIcon: getComponent(_this, "closeIcon"),
        onClose: close7,
        onClick: notice2.onClick || noop$c,
        style: style3,
        class: className2,
        key: key2
      };
      return _createVNode$20(Notice, noticeProps, {
        default: function _default8() {
          return [typeof content === "function" ? content() : content];
        }
      });
    });
    var className = _defineProperty$U({}, prefixCls2, 1);
    return _createVNode$20("div", {
      "class": className,
      "style": $attrs.style || {
        top: "65px",
        left: "50%"
      }
    }, [_createVNode$20(TransitionGroup, _objectSpread2$2({
      "tag": "span"
    }, transitionProps), {
      default: function _default8() {
        return [noticeNodes];
      }
    })]);
  }
});
Notification.newInstance = function newNotificationInstance(properties, callback) {
  var _a = properties || {}, getContainer5 = _a.getContainer, style3 = _a.style, className = _a.class, props2 = __rest$m(_a, ["getContainer", "style", "class"]);
  var div = document.createElement("div");
  if (getContainer5) {
    var root2 = getContainer5();
    root2.appendChild(div);
  } else {
    document.body.appendChild(div);
  }
  var app = createApp$2({
    mounted: function mounted45() {
      var self2 = this;
      this.$nextTick(function() {
        callback({
          notice: function notice2(noticeProps) {
            self2.$refs.notification.add(noticeProps);
          },
          removeNotice: function removeNotice(key2) {
            self2.$refs.notification.remove(key2);
          },
          component: self2,
          destroy: function destroy3() {
            app.unmount(div);
            if (div.parentNode) {
              div.parentNode.removeChild(div);
            }
          }
        });
      });
    },
    render: function render165() {
      var p = _extends$1(_extends$1({}, props2), {
        ref: "notification",
        style: style3,
        class: className
      });
      return _createVNode$20(Notification, p, null);
    }
  });
  app.mount(div);
};
const { createVNode: _createVNode$1$ } = await importShared("vue");
var defaultDuration$1 = 3;
var defaultTop$1;
var messageInstance;
var key = 1;
var prefixCls = "ant-message";
var transitionName = "move-up";
var getContainer3 = function getContainer4() {
  return document.body;
};
var maxCount;
function getMessageInstance(callback) {
  if (messageInstance) {
    callback(messageInstance);
    return;
  }
  Notification.newInstance({
    prefixCls,
    transitionName,
    style: {
      top: defaultTop$1
    },
    getContainer: getContainer3,
    maxCount
  }, function(instance) {
    if (messageInstance) {
      callback(messageInstance);
      return;
    }
    messageInstance = instance;
    callback(instance);
  });
}
var iconMap = {
  info: InfoCircleFilled,
  success: CheckCircleFilled,
  error: CloseCircleFilled,
  warning: ExclamationCircleFilled,
  loading: LoadingOutlined
};
function notice$1(args) {
  var duration2 = args.duration !== void 0 ? args.duration : defaultDuration$1;
  var Icon3 = iconMap[args.type];
  var iconNode = Icon3 ? _createVNode$1$(Icon3, null, null) : "";
  var target = args.key || key++;
  var closePromise = new Promise(function(resolve) {
    var callback = function callback2() {
      if (typeof args.onClose === "function") {
        args.onClose();
      }
      return resolve(true);
    };
    getMessageInstance(function(instance) {
      instance.notice({
        key: target,
        duration: duration2,
        style: args.style || {},
        class: args.class,
        content: function content() {
          return _createVNode$1$("div", {
            "class": "".concat(prefixCls, "-custom-content").concat(args.type ? " ".concat(prefixCls, "-").concat(args.type) : "")
          }, [args.icon || iconNode, _createVNode$1$("span", null, [args.content])]);
        },
        onClose: callback
      });
    });
  });
  var result = function result2() {
    if (messageInstance) {
      messageInstance.removeNotice(target);
    }
  };
  result.then = function(filled, rejected) {
    return closePromise.then(filled, rejected);
  };
  result.promise = closePromise;
  return result;
}
function isArgsProps(content) {
  return Object.prototype.toString.call(content) === "[object Object]" && !!content.content;
}
var api$1 = {
  open: notice$1,
  config: function config(options2) {
    if (options2.top !== void 0) {
      defaultTop$1 = options2.top;
      messageInstance = null;
    }
    if (options2.duration !== void 0) {
      defaultDuration$1 = options2.duration;
    }
    if (options2.prefixCls !== void 0) {
      prefixCls = options2.prefixCls;
    }
    if (options2.getContainer !== void 0) {
      getContainer3 = options2.getContainer;
    }
    if (options2.transitionName !== void 0) {
      transitionName = options2.transitionName;
      messageInstance = null;
    }
    if (options2.maxCount !== void 0) {
      maxCount = options2.maxCount;
      messageInstance = null;
    }
  },
  destroy: function destroy() {
    if (messageInstance) {
      messageInstance.destroy();
      messageInstance = null;
    }
  }
};
["success", "info", "warning", "error", "loading"].forEach(function(type3) {
  api$1[type3] = function(content, duration2, onClose) {
    if (isArgsProps(content)) {
      return api$1.open(_extends$1(_extends$1({}, content), {
        type: type3
      }));
    }
    if (typeof duration2 === "function") {
      onClose = duration2;
      duration2 = void 0;
    }
    return api$1.open({
      content,
      duration: duration2,
      type: type3,
      onClose
    });
  };
});
api$1.warn = api$1.warning;
function getBeforeSelectionText(input) {
  var selectionStart = input.selectionStart;
  return input.value.slice(0, selectionStart);
}
function lower(char) {
  return (char || "").toLowerCase();
}
function getLastMeasureIndex(text) {
  var prefix = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  var prefixList = Array.isArray(prefix) ? prefix : [prefix];
  return prefixList.reduce(function(lastMatch, prefixStr) {
    var lastIndex = text.lastIndexOf(prefixStr);
    if (lastIndex > lastMatch.location) {
      return {
        location: lastIndex,
        prefix: prefixStr
      };
    }
    return lastMatch;
  }, {
    location: -1,
    prefix: ""
  });
}
function reduceText(text, targetText, split) {
  var firstChar = text[0];
  if (!firstChar || firstChar === split) {
    return text;
  }
  var restText = text;
  var targetTextLen = targetText.length;
  for (var i2 = 0; i2 < targetTextLen; i2 += 1) {
    if (lower(restText[i2]) !== lower(targetText[i2])) {
      restText = restText.slice(i2);
      break;
    } else if (i2 === targetTextLen - 1) {
      restText = restText.slice(targetTextLen);
    }
  }
  return restText;
}
function replaceWithMeasure(text, measureConfig) {
  var measureLocation = measureConfig.measureLocation, prefix = measureConfig.prefix, targetText = measureConfig.targetText, selectionStart = measureConfig.selectionStart, split = measureConfig.split;
  var beforeMeasureText = text.slice(0, measureLocation);
  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {
    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);
  }
  if (beforeMeasureText) {
    beforeMeasureText = "".concat(beforeMeasureText).concat(split);
  }
  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);
  if (restText.slice(0, split.length) === split) {
    restText = restText.slice(split.length);
  }
  var connectedStartText = "".concat(beforeMeasureText).concat(prefix).concat(targetText).concat(split);
  return {
    text: "".concat(connectedStartText).concat(restText),
    selectionLocation: connectedStartText.length
  };
}
function setInputSelection(input, location) {
  input.setSelectionRange(location, location);
  input.blur();
  input.focus();
}
function validateSearch() {
  var text = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var props2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var split = props2.split;
  return !split || text.indexOf(split) === -1;
}
function filterOption() {
  var input = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$value = _ref.value, value26 = _ref$value === void 0 ? "" : _ref$value;
  var lowerCase = input.toLowerCase();
  return value26.toLowerCase().indexOf(lowerCase) !== -1;
}
const { defineComponent: defineComponent$_ } = await importShared("vue");
var OptionProps = {
  value: PropTypes.string,
  disabled: PropTypes.looseBool,
  children: PropTypes.any
};
const Option$1 = defineComponent$_({
  name: "Option",
  props: OptionProps,
  render: function render103() {
    return null;
  }
});
const { createVNode: _createVNode$1_ } = await importShared("vue");
const { inject: inject$u } = await importShared("vue");
function noop$b() {
}
const DropdownMenu = {
  name: "DropdownMenu",
  props: {
    prefixCls: PropTypes.string,
    options: PropTypes.arrayOf(OptionProps)
  },
  setup: function setup103() {
    return {
      mentionsContext: inject$u("mentionsContext")
    };
  },
  render: function render104() {
    var _this$mentionsContext = this.mentionsContext, notFoundContent = _this$mentionsContext.notFoundContent, activeIndex = _this$mentionsContext.activeIndex, setActiveIndex2 = _this$mentionsContext.setActiveIndex, selectOption2 = _this$mentionsContext.selectOption, _this$mentionsContext2 = _this$mentionsContext.onFocus, onFocus6 = _this$mentionsContext2 === void 0 ? noop$b : _this$mentionsContext2, _this$mentionsContext3 = _this$mentionsContext.onBlur, onBlur7 = _this$mentionsContext3 === void 0 ? noop$b : _this$mentionsContext3;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, options2 = _this$$props.options;
    var activeOption = options2[activeIndex] || {};
    return _createVNode$1_(Menu, {
      "prefixCls": "".concat(prefixCls2, "-menu"),
      "activeKey": activeOption.value,
      "onSelect": function onSelect6(_ref) {
        var key2 = _ref.key;
        var option = options2.find(function(_ref2) {
          var value26 = _ref2.value;
          return value26 === key2;
        });
        selectOption2(option);
      },
      "onBlur": onBlur7,
      "onFocus": onFocus6
    }, {
      default: function _default8() {
        return [[].concat(_toConsumableArray(options2.map(function(option, index2) {
          var value26 = option.value, disabled = option.disabled, children = option.children;
          return _createVNode$1_(MenuItem, {
            "key": value26,
            "disabled": disabled,
            "onMouseenter": function onMouseenter2() {
              setActiveIndex2(index2);
            }
          }, {
            default: function _default9() {
              return [children];
            }
          });
        })), [!options2.length && _createVNode$1_(MenuItem, {
          "key": "notFoundContent",
          "disabled": true
        }, {
          default: function _default9() {
            return [notFoundContent];
          }
        })]).filter(Boolean)];
      }
    });
  }
};
var PlaceMent = tuple("top", "bottom");
const { createVNode: _createVNode$1Z } = await importShared("vue");
var BUILT_IN_PLACEMENTS$1 = {
  bottomRight: {
    points: ["tl", "br"],
    offset: [0, 4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  },
  topRight: {
    points: ["bl", "tr"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    }
  }
};
const KeywordTrigger = {
  name: "KeywordTrigger",
  props: {
    loading: PropTypes.looseBool,
    options: PropTypes.arrayOf(OptionProps),
    prefixCls: PropTypes.string,
    placement: PropTypes.oneOf(PlaceMent),
    visible: PropTypes.looseBool,
    transitionName: PropTypes.string,
    getPopupContainer: PropTypes.func
  },
  methods: {
    getDropdownPrefix: function getDropdownPrefix() {
      return "".concat(this.$props.prefixCls, "-dropdown");
    },
    getDropdownElement: function getDropdownElement() {
      var options2 = this.$props.options;
      return _createVNode$1Z(DropdownMenu, {
        "prefixCls": this.getDropdownPrefix(),
        "options": options2
      }, null);
    }
  },
  render: function render105() {
    var _a;
    var _this$$props = this.$props, visible9 = _this$$props.visible, placement2 = _this$$props.placement, transitionName2 = _this$$props.transitionName, getPopupContainer = _this$$props.getPopupContainer;
    var $slots = this.$slots;
    var children = (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);
    var popupElement = this.getDropdownElement();
    return _createVNode$1Z(Trigger, {
      "prefixCls": this.getDropdownPrefix(),
      "popupVisible": visible9,
      "popup": popupElement,
      "popupPlacement": placement2 === "top" ? "topRight" : "bottomRight",
      "popupTransitionName": transitionName2,
      "builtinPlacements": BUILT_IN_PLACEMENTS$1,
      "getPopupContainer": getPopupContainer
    }, {
      default: function _default8() {
        return [children];
      }
    });
  }
};
var mentionsProps$1 = {
  autofocus: PropTypes.looseBool,
  prefix: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
  prefixCls: PropTypes.string,
  value: PropTypes.string,
  defaultValue: PropTypes.string,
  disabled: PropTypes.looseBool,
  notFoundContent: PropTypes.VNodeChild,
  split: PropTypes.string,
  transitionName: PropTypes.string,
  placement: PropTypes.oneOf(PlaceMent),
  character: PropTypes.any,
  characterRender: PropTypes.func,
  filterOption: {
    type: [Boolean, Function]
  },
  validateSearch: PropTypes.func,
  getPopupContainer: {
    type: Function
  }
};
var vcMentionsProps = _extends$1(_extends$1({}, mentionsProps$1), {
  children: PropTypes.any
});
var defaultProps$1 = {
  prefix: "@",
  split: " ",
  validateSearch,
  filterOption
};
initDefaultProps$1(vcMentionsProps, defaultProps$1);
const { createVNode: _createVNode$1Y } = await importShared("vue");
var __rest$l = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$Z, provide: provide$3, withDirectives: withDirectives$1 } = await importShared("vue");
function noop$a() {
}
var Mentions$1 = {
  name: "Mentions",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(vcMentionsProps, defaultProps$1),
  created: function created14() {
    this.mentionsContext = provide$3("mentionsContext", this);
  },
  data: function data52() {
    var _this$$props = this.$props, _this$$props$value = _this$$props.value, value26 = _this$$props$value === void 0 ? "" : _this$$props$value, _this$$props$defaultV = _this$$props.defaultValue, defaultValue = _this$$props$defaultV === void 0 ? "" : _this$$props$defaultV;
    warning$3(this.$props.children, "please children prop replace slots.default");
    return {
      _value: !hasProp(this, "value") ? defaultValue : value26,
      measuring: false,
      measureLocation: 0,
      measureText: null,
      measurePrefix: "",
      activeIndex: 0,
      isFocus: false
    };
  },
  watch: {
    value: function value25(val) {
      this.$data._value = val;
    }
  },
  updated: function updated17() {
    var _this = this;
    this.$nextTick(function() {
      var measuring = _this.$data.measuring;
      if (measuring) {
        _this.$refs.measure.scrollTop = _this.$refs.textarea.scrollTop;
      }
    });
  },
  methods: {
    triggerChange: function triggerChange3(value26) {
      var props2 = getOptionProps(this);
      if (!("value" in props2)) {
        this.setState({
          _value: value26
        });
      } else {
        this.$forceUpdate();
      }
      this.__emit("change", value26);
    },
    onChange: function onChange4(_ref) {
      var _ref$target = _ref.target, value26 = _ref$target.value, composing = _ref$target.composing, isComposing = _ref.isComposing;
      if (isComposing || composing) return;
      this.triggerChange(value26);
    },
    onKeyDown: function onKeyDown12(event) {
      var which = event.which;
      var _this$$data = this.$data, activeIndex = _this$$data.activeIndex, measuring = _this$$data.measuring;
      if (!measuring) {
        return;
      }
      if (which === KeyCode$1.UP || which === KeyCode$1.DOWN) {
        var optionLen = this.getOptions().length;
        var offset4 = which === KeyCode$1.UP ? -1 : 1;
        var newActiveIndex = (activeIndex + offset4 + optionLen) % optionLen;
        this.setState({
          activeIndex: newActiveIndex
        });
        event.preventDefault();
      } else if (which === KeyCode$1.ESC) {
        this.stopMeasure();
      } else if (which === KeyCode$1.ENTER) {
        event.preventDefault();
        var options2 = this.getOptions();
        if (!options2.length) {
          this.stopMeasure();
          return;
        }
        var option = options2[activeIndex];
        this.selectOption(option);
      }
    },
    /**
     * When to start measure:
     * 1. When user press `prefix`
     * 2. When measureText !== prevMeasureText
     *  - If measure hit
     *  - If measuring
     *
     * When to stop measure:
     * 1. Selection is out of range
     * 2. Contains `space`
     * 3. ESC or select one
     */
    onKeyUp: function onKeyUp2(event) {
      var key2 = event.key, which = event.which;
      var _this$$data2 = this.$data, prevMeasureText = _this$$data2.measureText, measuring = _this$$data2.measuring;
      var _this$$props2 = this.$props, _this$$props2$prefix = _this$$props2.prefix, prefix = _this$$props2$prefix === void 0 ? "" : _this$$props2$prefix, validateSearch2 = _this$$props2.validateSearch;
      var target = event.target;
      if (target.composing) {
        return;
      }
      var selectionStartText = getBeforeSelectionText(target);
      var _getLastMeasureIndex = getLastMeasureIndex(selectionStartText, prefix), measureIndex = _getLastMeasureIndex.location, measurePrefix = _getLastMeasureIndex.prefix;
      if ([KeyCode$1.ESC, KeyCode$1.UP, KeyCode$1.DOWN, KeyCode$1.ENTER].indexOf(which) !== -1) {
        return;
      }
      if (measureIndex !== -1) {
        var measureText = selectionStartText.slice(measureIndex + measurePrefix.length);
        var validateMeasure = validateSearch2(measureText, this.$props);
        var matchOption = !!this.getOptions(measureText).length;
        if (validateMeasure) {
          if (key2 === measurePrefix || measuring || measureText !== prevMeasureText && matchOption) {
            this.startMeasure(measureText, measurePrefix, measureIndex);
          }
        } else if (measuring) {
          this.stopMeasure();
        }
        if (validateMeasure) {
          this.__emit("search", measureText, measurePrefix);
        }
      } else if (measuring) {
        this.stopMeasure();
      }
    },
    onInputFocus: function onInputFocus(event) {
      this.onFocus(event);
    },
    onInputBlur: function onInputBlur(event) {
      this.onBlur(event);
    },
    onDropdownFocus: function onDropdownFocus() {
      this.onFocus();
    },
    onDropdownBlur: function onDropdownBlur() {
      this.onBlur();
    },
    onFocus: function onFocus5(event) {
      window.clearTimeout(this.focusId);
      var isFocus = this.$data.isFocus;
      if (!isFocus && event) {
        this.__emit("focus", event);
      }
      this.setState({
        isFocus: true
      });
    },
    onBlur: function onBlur6(event) {
      var _this2 = this;
      this.focusId = window.setTimeout(function() {
        _this2.setState({
          isFocus: false
        });
        _this2.stopMeasure();
        _this2.__emit("blur", event);
      }, 100);
    },
    selectOption: function selectOption(option) {
      var _this3 = this;
      var _this$$data3 = this.$data, value26 = _this$$data3._value, measureLocation = _this$$data3.measureLocation, measurePrefix = _this$$data3.measurePrefix;
      var split = this.$props.split;
      var _option$value = option.value, mentionValue = _option$value === void 0 ? "" : _option$value;
      var _replaceWithMeasure = replaceWithMeasure(value26, {
        measureLocation,
        targetText: mentionValue,
        prefix: measurePrefix,
        selectionStart: this.$refs.textarea.selectionStart,
        split
      }), text = _replaceWithMeasure.text, selectionLocation = _replaceWithMeasure.selectionLocation;
      this.triggerChange(text);
      this.stopMeasure(function() {
        setInputSelection(_this3.$refs.textarea, selectionLocation);
      });
      this.__emit("select", option, measurePrefix);
    },
    setActiveIndex: function setActiveIndex(activeIndex) {
      this.setState({
        activeIndex
      });
    },
    getOptions: function getOptions4(measureText) {
      var targetMeasureText = measureText || this.$data.measureText || "";
      var _this$$props3 = this.$props, filterOption2 = _this$$props3.filterOption, _this$$props3$childre = _this$$props3.children, children = _this$$props3$childre === void 0 ? [] : _this$$props3$childre;
      var list = (Array.isArray(children) ? children : [children]).map(function(item) {
        var _a, _b;
        return _extends$1(_extends$1({}, getOptionProps(item)), {
          children: (_b = (_a = item.children).default) === null || _b === void 0 ? void 0 : _b.call(_a)
        });
      }).filter(function(option) {
        if (filterOption2 === false) {
          return true;
        }
        return filterOption2(targetMeasureText, option);
      });
      return list;
    },
    startMeasure: function startMeasure(measureText, measurePrefix, measureLocation) {
      this.setState({
        measuring: true,
        measureText,
        measurePrefix,
        measureLocation,
        activeIndex: 0
      });
    },
    stopMeasure: function stopMeasure(callback) {
      this.setState({
        measuring: false,
        measureLocation: 0,
        measureText: null
      }, callback);
    },
    focus: function focus18() {
      this.$refs.textarea.focus();
    },
    blur: function blur15() {
      this.$refs.textarea.blur();
    }
  },
  render: function render106() {
    var _this$$data4 = this.$data, value26 = _this$$data4._value, measureLocation = _this$$data4.measureLocation, measurePrefix = _this$$data4.measurePrefix, measuring = _this$$data4.measuring;
    var _a = getOptionProps(this), prefixCls2 = _a.prefixCls, placement2 = _a.placement, transitionName2 = _a.transitionName;
    _a.notFoundContent;
    var getPopupContainer = _a.getPopupContainer, restProps = __rest$l(_a, ["prefixCls", "placement", "transitionName", "notFoundContent", "getPopupContainer"]);
    var _b = this.$attrs, className = _b.class, style3 = _b.style, otherAttrs = __rest$l(_b, ["class", "style"]);
    var inputProps2 = omit$1(restProps, ["value", "defaultValue", "prefix", "split", "children", "validateSearch", "filterOption"]);
    var options2 = measuring ? this.getOptions() : [];
    var textareaProps = _extends$1(_extends$1(_extends$1({}, inputProps2), otherAttrs), {
      onChange: noop$a,
      onSelect: noop$a,
      value: value26,
      onInput: this.onChange,
      onBlur: this.onInputBlur,
      onKeydown: this.onKeyDown,
      onKeyup: this.onKeyUp,
      onFocus: this.onInputFocus
    });
    return _createVNode$1Y("div", {
      "class": classNames(prefixCls2, className),
      "style": style3
    }, [withDirectives$1(_createVNode$1Y("textarea", _objectSpread2$2({
      "ref": "textarea"
    }, textareaProps), null), [[antInput]]), measuring && _createVNode$1Y("div", {
      "ref": "measure",
      "class": "".concat(prefixCls2, "-measure")
    }, [value26.slice(0, measureLocation), _createVNode$1Y(KeywordTrigger, {
      "prefixCls": prefixCls2,
      "transitionName": transitionName2,
      "placement": placement2,
      "options": options2,
      "visible": true,
      "getPopupContainer": getPopupContainer
    }, {
      default: function _default8() {
        return [_createVNode$1Y("span", null, [measurePrefix])];
      }
    }), value26.slice(measureLocation + measurePrefix.length)])]);
  }
};
const Mentions$2 = defineComponent$Z(Mentions$1);
Mentions$2.Option = Option$1;
const { createVNode: _createVNode$1X } = await importShared("vue");
var __rest$k = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$Y, inject: inject$t, nextTick: nextTick$9 } = await importShared("vue");
var Option3 = Mentions$2.Option;
function loadingFilterOption() {
  return true;
}
function getMentions() {
  var value26 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var config2 = arguments.length > 1 ? arguments[1] : void 0;
  var _ref = config2 || {}, _ref$prefix = _ref.prefix, prefix = _ref$prefix === void 0 ? "@" : _ref$prefix, _ref$split = _ref.split, split = _ref$split === void 0 ? " " : _ref$split;
  var prefixList = Array.isArray(prefix) ? prefix : [prefix];
  return value26.split(split).map(function() {
    var str = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
    var hitPrefix = null;
    prefixList.some(function(prefixStr) {
      var startStr = str.slice(0, prefixStr.length);
      if (startStr === prefixStr) {
        hitPrefix = prefixStr;
        return true;
      }
      return false;
    });
    if (hitPrefix !== null) {
      return {
        prefix: hitPrefix,
        value: str.slice(hitPrefix.length)
      };
    }
    return null;
  }).filter(function(entity) {
    return !!entity && !!entity.value;
  });
}
var mentionsProps = _extends$1(_extends$1({}, mentionsProps$1), {
  loading: PropTypes.looseBool,
  onFocus: {
    type: Function
  },
  onBlur: {
    type: Function
  },
  onSelect: {
    type: Function
  },
  onChange: {
    type: Function
  }
});
var Mentions = defineComponent$Y({
  name: "AMentions",
  mixins: [BaseMixin],
  inheritAttrs: false,
  Option: _extends$1(_extends$1({}, Option3), {
    name: "AMentionsOption"
  }),
  getMentions,
  props: mentionsProps,
  emits: ["update:value", "change", "focus", "blur", "select"],
  setup: function setup104() {
    return {
      configProvider: inject$t("configProvider", defaultConfigProvider)
    };
  },
  data: function data53() {
    return {
      focused: false
    };
  },
  mounted: function mounted29() {
    nextTick$9(function() {
    });
  },
  methods: {
    handleFocus: function handleFocus(e2) {
      this.$emit("focus", e2);
      this.setState({
        focused: true
      });
    },
    handleBlur: function handleBlur2(e2) {
      this.$emit("blur", e2);
      this.setState({
        focused: false
      });
    },
    handleSelect: function handleSelect() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.$emit.apply(this, ["select"].concat(args));
      this.setState({
        focused: true
      });
    },
    handleChange: function handleChange16(val) {
      this.$emit("update:value", val);
      this.$emit("change", val);
    },
    getNotFoundContent: function getNotFoundContent(renderEmpty2) {
      var notFoundContent = getComponent(this, "notFoundContent");
      if (notFoundContent !== void 0) {
        return notFoundContent;
      }
      return renderEmpty2("Select");
    },
    getOptions: function getOptions5() {
      var loading = this.$props.loading;
      var children = getSlot(this);
      if (loading) {
        return _createVNode$1X(Option3, {
          "value": "ANTD_SEARCHING",
          "disabled": true
        }, {
          default: function _default8() {
            return [_createVNode$1X(Spin, {
              "size": "small"
            }, null)];
          }
        });
      }
      return children;
    },
    getFilterOption: function getFilterOption() {
      var _this$$props = this.$props, filterOption2 = _this$$props.filterOption, loading = _this$$props.loading;
      if (loading) {
        return loadingFilterOption;
      }
      return filterOption2;
    },
    focus: function focus19() {
      this.$refs.vcMentions.focus();
    },
    blur: function blur16() {
      this.$refs.vcMentions.blur();
    }
  },
  render: function render107() {
    var _classNames;
    var focused = this.$data.focused;
    var _this$configProvider = this.configProvider, getPrefixCls2 = _this$configProvider.getPrefixCls, renderEmpty2 = _this$configProvider.renderEmpty;
    var _a = getOptionProps(this), customizePrefixCls = _a.prefixCls, disabled = _a.disabled, getPopupContainer = _a.getPopupContainer, restProps = __rest$k(_a, ["prefixCls", "disabled", "getPopupContainer"]);
    var _b = this.$attrs, className = _b.class, otherAttrs = __rest$k(_b, ["class"]);
    var prefixCls2 = getPrefixCls2("mentions", customizePrefixCls);
    var otherProps = omit$1(restProps, ["loading", "onUpdate:value"]);
    var mergedClassName = classNames(className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, "".concat(prefixCls2, "-focused"), focused), _classNames));
    var mentionsProps2 = _extends$1(_extends$1(_extends$1(_extends$1({
      prefixCls: prefixCls2,
      notFoundContent: this.getNotFoundContent(renderEmpty2)
    }, otherProps), {
      disabled,
      filterOption: this.getFilterOption(),
      getPopupContainer,
      children: this.getOptions(),
      class: mergedClassName,
      rows: 1
    }), otherAttrs), {
      onChange: this.handleChange,
      onSelect: this.handleSelect,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur,
      ref: "vcMentions"
    });
    return _createVNode$1X(Mentions$2, mentionsProps2, null);
  }
});
Mentions.install = function(app) {
  app.component(Mentions.name, Mentions);
  app.component(Mentions.Option.name, Mentions.Option);
  return app;
};
var MentionsOption = Mentions.Option;
const { createVNode: _createVNode$1W } = await importShared("vue");
const { defineComponent: defineComponent$X, inject: inject$s } = await importShared("vue");
var mousePosition = null;
var getClickPosition = function getClickPosition2(e2) {
  mousePosition = {
    x: e2.pageX,
    y: e2.pageY
  };
  setTimeout(function() {
    return mousePosition = null;
  }, 100);
};
if (typeof window !== "undefined" && window.document && window.document.documentElement) {
  addEventListenerWrap(document.documentElement, "click", getClickPosition, true);
}
function noop$9() {
}
var modalProps = {
  prefixCls: PropTypes.string,
  /** 对话框是否可见*/
  visible: PropTypes.looseBool,
  /** 确定按钮 loading*/
  confirmLoading: PropTypes.looseBool,
  /** 标题*/
  title: PropTypes.any,
  /** 是否显示右上角的关闭按钮*/
  closable: PropTypes.looseBool,
  closeIcon: PropTypes.any,
  /** 点击确定回调*/
  onOk: {
    type: Function
  },
  /** 点击模态框右上角叉、取消按钮、Props.maskClosable 值为 true 时的遮罩层或键盘按下 Esc 时的回调*/
  onCancel: {
    type: Function
  },
  afterClose: PropTypes.func.def(noop$9),
  /** 垂直居中 */
  centered: PropTypes.looseBool,
  /** 宽度*/
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /** 底部内容*/
  footer: PropTypes.any,
  /** 确认按钮文字*/
  okText: PropTypes.any,
  /** 确认按钮类型*/
  okType: {
    type: String
  },
  /** 取消按钮文字*/
  cancelText: PropTypes.any,
  icon: PropTypes.any,
  /** 点击蒙层是否允许关闭*/
  maskClosable: PropTypes.looseBool,
  /** 强制渲染 Modal*/
  forceRender: PropTypes.looseBool,
  okButtonProps: PropTypes.shape(buttonProps).loose,
  cancelButtonProps: PropTypes.shape(buttonProps).loose,
  destroyOnClose: PropTypes.looseBool,
  wrapClassName: PropTypes.string,
  maskTransitionName: PropTypes.string,
  transitionName: PropTypes.string,
  getContainer: PropTypes.any,
  zIndex: PropTypes.number,
  bodyStyle: PropTypes.style,
  maskStyle: PropTypes.style,
  mask: PropTypes.looseBool,
  keyboard: PropTypes.looseBool,
  wrapProps: PropTypes.object,
  focusTriggerAfterClose: PropTypes.looseBool
};
var destroyFns = [];
const Modal = defineComponent$X({
  name: "AModal",
  inheritAttrs: false,
  props: initDefaultProps2(modalProps, {
    width: 520,
    transitionName: "zoom",
    maskTransitionName: "fade",
    confirmLoading: false,
    visible: false,
    okType: "primary"
  }),
  emits: ["update:visible", "cancel", "change", "ok"],
  setup: function setup105() {
    return {
      configProvider: inject$s("configProvider", defaultConfigProvider)
    };
  },
  data: function data54() {
    return {
      sVisible: !!this.visible
    };
  },
  watch: {
    visible: function visible6(val) {
      this.sVisible = val;
    }
  },
  methods: {
    handleCancel: function handleCancel(e2) {
      this.$emit("update:visible", false);
      this.$emit("cancel", e2);
      this.$emit("change", false);
    },
    handleOk: function handleOk(e2) {
      this.$emit("ok", e2);
    },
    renderFooter: function renderFooter3(locale2) {
      var _this = this;
      var okType = this.okType, confirmLoading = this.confirmLoading;
      var cancelBtnProps = _extends$1({
        onClick: this.handleCancel
      }, this.cancelButtonProps || {});
      var okBtnProps = _extends$1(_extends$1(_extends$1({
        onClick: this.handleOk
      }, convertLegacyProps(okType)), {
        loading: confirmLoading
      }), this.okButtonProps || {});
      return _createVNode$1W("div", null, [_createVNode$1W(Button$1, cancelBtnProps, {
        default: function _default8() {
          return [getComponent(_this, "cancelText") || locale2.cancelText];
        }
      }), _createVNode$1W(Button$1, okBtnProps, {
        default: function _default8() {
          return [getComponent(_this, "okText") || locale2.okText];
        }
      })]);
    }
  },
  render: function render108() {
    var customizePrefixCls = this.prefixCls, visible9 = this.sVisible, wrapClassName = this.wrapClassName, centered = this.centered, getContainer5 = this.getContainer, $attrs = this.$attrs;
    var children = getSlot(this);
    var _this$configProvider = this.configProvider, getPrefixCls2 = _this$configProvider.getPrefixCls, getContextPopupContainer = _this$configProvider.getPopupContainer;
    var prefixCls2 = getPrefixCls2("modal", customizePrefixCls);
    var defaultFooter = _createVNode$1W(LocaleReceiver, {
      "componentName": "Modal",
      "defaultLocale": getConfirmLocale(),
      "children": this.renderFooter
    }, null);
    var closeIcon = getComponent(this, "closeIcon");
    var closeIconToRender = _createVNode$1W("span", {
      "class": "".concat(prefixCls2, "-close-x")
    }, [closeIcon || _createVNode$1W(CloseOutlined, {
      "class": "".concat(prefixCls2, "-close-icon")
    }, null)]);
    var footer = getComponent(this, "footer");
    var title = getComponent(this, "title");
    var dialogProps = _extends$1(_extends$1(_extends$1({}, this.$props), $attrs), {
      getContainer: getContainer5 === void 0 ? getContextPopupContainer : getContainer5,
      prefixCls: prefixCls2,
      wrapClassName: classNames(_defineProperty$U({}, "".concat(prefixCls2, "-centered"), !!centered), wrapClassName),
      title,
      footer: footer === void 0 ? defaultFooter : footer,
      visible: visible9,
      mousePosition,
      closeIcon: closeIconToRender,
      onClose: this.handleCancel
    });
    return _createVNode$1W(DialogWrap, dialogProps, {
      default: function _default8() {
        return [children];
      }
    });
  }
});
const { createVNode: _createVNode$1V } = await importShared("vue");
const { defineComponent: defineComponent$W } = await importShared("vue");
var ActionButtonProps = {
  type: {
    type: String
  },
  actionFn: PropTypes.func,
  closeModal: PropTypes.func,
  autofocus: PropTypes.looseBool,
  buttonProps: PropTypes.object
};
const ActionButton = defineComponent$W({
  mixins: [BaseMixin],
  props: ActionButtonProps,
  setup: function setup106() {
    return {
      timeoutId: void 0
    };
  },
  data: function data55() {
    return {
      loading: false
    };
  },
  mounted: function mounted30() {
    var _this = this;
    if (this.autofocus) {
      this.timeoutId = setTimeout(function() {
        return findDOMNode(_this).focus();
      });
    }
  },
  beforeUnmount: function beforeUnmount21() {
    clearTimeout(this.timeoutId);
  },
  methods: {
    onClick: function onClick5() {
      var _this2 = this;
      var actionFn = this.actionFn, closeModal = this.closeModal;
      if (actionFn) {
        var ret;
        if (actionFn.length) {
          ret = actionFn(closeModal);
        } else {
          ret = actionFn();
          if (!ret) {
            closeModal();
          }
        }
        if (ret && ret.then) {
          this.setState({
            loading: true
          });
          ret.then(function() {
            closeModal.apply(void 0, arguments);
          }, function(e2) {
            console.error(e2);
            _this2.setState({
              loading: false
            });
          });
        }
      } else {
        closeModal();
      }
    }
  },
  render: function render109() {
    var _this3 = this;
    var type3 = this.type, loading = this.loading, buttonProps3 = this.buttonProps;
    var props2 = _extends$1(_extends$1(_extends$1({}, convertLegacyProps(type3)), {
      onClick: this.onClick,
      loading
    }), buttonProps3);
    return _createVNode$1V(Button$1, props2, {
      default: function _default8() {
        return [getSlot(_this3)];
      }
    });
  }
});
const { createVNode: _createVNode$1U } = await importShared("vue");
function renderSomeContent(_name, someContent) {
  if (typeof someContent === "function") {
    return someContent();
  }
  return someContent;
}
var ConfirmDialog = function ConfirmDialog2(props2) {
  var icon = props2.icon, onCancel = props2.onCancel, onOk3 = props2.onOk, close7 = props2.close, _props$closable = props2.closable, closable = _props$closable === void 0 ? false : _props$closable, zIndex = props2.zIndex, afterClose = props2.afterClose, visible9 = props2.visible, keyboard = props2.keyboard, centered = props2.centered, getContainer5 = props2.getContainer, maskStyle = props2.maskStyle, okButtonProps = props2.okButtonProps, cancelButtonProps = props2.cancelButtonProps;
  var okType = props2.okType || "primary";
  var prefixCls2 = props2.prefixCls || "ant-modal";
  var contentPrefixCls = "".concat(prefixCls2, "-confirm");
  var okCancel = "okCancel" in props2 ? props2.okCancel : true;
  var width = props2.width || 416;
  var style3 = props2.style || {};
  var mask = props2.mask === void 0 ? true : props2.mask;
  var maskClosable = props2.maskClosable === void 0 ? false : props2.maskClosable;
  var runtimeLocale2 = getConfirmLocale();
  var okText = renderSomeContent("okText", props2.okText) || (okCancel ? runtimeLocale2.okText : runtimeLocale2.justOkText);
  var cancelText = renderSomeContent("cancelText", props2.cancelText) || runtimeLocale2.cancelText;
  var autoFocusButton = props2.autoFocusButton === null ? false : props2.autoFocusButton || "ok";
  var transitionName2 = props2.transitionName || "zoom";
  var maskTransitionName = props2.maskTransitionName || "fade";
  var classString = classNames(contentPrefixCls, "".concat(contentPrefixCls, "-").concat(props2.type), "".concat(prefixCls2, "-").concat(props2.type), props2.class);
  var cancelButton = okCancel && _createVNode$1U(ActionButton, {
    "actionFn": onCancel,
    "closeModal": close7,
    "autofocus": autoFocusButton === "cancel",
    "buttonProps": cancelButtonProps
  }, {
    default: function _default8() {
      return [cancelText];
    }
  });
  return _createVNode$1U(Modal, {
    "prefixCls": prefixCls2,
    "class": classString,
    "wrapClassName": classNames(_defineProperty$U({}, "".concat(contentPrefixCls, "-centered"), !!centered)),
    "onCancel": function onCancel2(e2) {
      return close7({
        triggerCancel: true
      }, e2);
    },
    "visible": visible9,
    "title": "",
    "transitionName": transitionName2,
    "footer": "",
    "maskTransitionName": maskTransitionName,
    "mask": mask,
    "maskClosable": maskClosable,
    "maskStyle": maskStyle,
    "style": style3,
    "width": width,
    "zIndex": zIndex,
    "afterClose": afterClose,
    "keyboard": keyboard,
    "centered": centered,
    "getContainer": getContainer5,
    "closable": closable
  }, {
    default: function _default8() {
      return [_createVNode$1U("div", {
        "class": "".concat(contentPrefixCls, "-body-wrapper")
      }, [_createVNode$1U("div", {
        "class": "".concat(contentPrefixCls, "-body")
      }, [renderSomeContent("icon", icon), props2.title === void 0 ? null : _createVNode$1U("span", {
        "class": "".concat(contentPrefixCls, "-title")
      }, [renderSomeContent("title", props2.title)]), _createVNode$1U("div", {
        "class": "".concat(contentPrefixCls, "-content")
      }, [renderSomeContent("content", props2.content)])]), _createVNode$1U("div", {
        "class": "".concat(contentPrefixCls, "-btns")
      }, [cancelButton, _createVNode$1U(ActionButton, {
        "type": okType,
        "actionFn": onOk3,
        "closeModal": close7,
        "autofocus": autoFocusButton === "ok",
        "buttonProps": okButtonProps
      }, {
        default: function _default9() {
          return [okText];
        }
      })])])];
    }
  });
};
ConfirmDialog.inheritAttrs = false;
const { createVNode: _createVNode$1T } = await importShared("vue");
const { createVNode, render: vueRender } = await importShared("vue");
var confirm$1 = function confirm(config2) {
  var div = document.createElement("div");
  document.body.appendChild(div);
  var currentConfig = _extends$1(_extends$1({}, omit$1(config2, ["parentContext", "appContext"])), {
    close: close7,
    visible: true
  });
  var confirmDialogInstance = null;
  function close7() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    currentConfig = _extends$1(_extends$1({}, currentConfig), {
      visible: false,
      afterClose: destroy3.bind.apply(destroy3, [this].concat(args))
    });
    update(currentConfig);
  }
  function update(newConfig) {
    currentConfig = _extends$1(_extends$1({}, currentConfig), newConfig);
    if (confirmDialogInstance) {
      _extends$1(confirmDialogInstance.component.props, currentConfig);
      confirmDialogInstance.component.update();
    }
  }
  function destroy3() {
    if (confirmDialogInstance && div.parentNode) {
      _extends$1(confirmDialogInstance.component.props, {
        vIf: false
      });
      confirmDialogInstance.component.update();
      confirmDialogInstance = null;
      div.parentNode.removeChild(div);
    }
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    var triggerCancel = args.some(function(param) {
      return param && param.triggerCancel;
    });
    if (config2.onCancel && triggerCancel) {
      config2.onCancel.apply(config2, args);
    }
    for (var i2 = 0; i2 < destroyFns.length; i2++) {
      var fn = destroyFns[i2];
      if (fn === close7) {
        destroyFns.splice(i2, 1);
        break;
      }
    }
  }
  var Wrapper = function Wrapper2(p) {
    return p.vIf ? _createVNode$1T(ConfirmDialog, p, null) : null;
  };
  function render165(props2) {
    var vm = createVNode(Wrapper, _extends$1(_extends$1({}, props2), {
      vIf: true
    }));
    vm.appContext = config2.parentContext || config2.appContext || vm.appContext;
    vueRender(vm, div);
    return vm;
  }
  confirmDialogInstance = render165(currentConfig);
  destroyFns.push(close7);
  return {
    destroy: close7,
    update
  };
};
const { createVNode: _createVNode$1S } = await importShared("vue");
var info = function info2(props2) {
  var config2 = _extends$1({
    type: "info",
    icon: function icon() {
      return _createVNode$1S(InfoCircleOutlined, null, null);
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var success = function success2(props2) {
  var config2 = _extends$1({
    type: "success",
    icon: function icon() {
      return _createVNode$1S(CheckCircleOutlined, null, null);
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var error = function error2(props2) {
  var config2 = _extends$1({
    type: "error",
    icon: function icon() {
      return _createVNode$1S(CloseCircleOutlined, null, null);
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var warning = function warning3(props2) {
  var config2 = _extends$1({
    type: "warning",
    icon: function icon() {
      return _createVNode$1S(ExclamationCircleOutlined, null, null);
    },
    okCancel: false
  }, props2);
  return confirm$1(config2);
};
var warn = warning;
var confirm2 = function confirmFn(props2) {
  var config2 = _extends$1({
    type: "confirm",
    okCancel: true
  }, props2);
  return confirm$1(config2);
};
Modal.info = info;
Modal.success = success;
Modal.error = error;
Modal.warning = warning;
Modal.warn = warn;
Modal.confirm = confirm2;
Modal.destroyAll = function destroyAllFn() {
  while (destroyFns.length) {
    var close7 = destroyFns.pop();
    if (close7) {
      close7();
    }
  }
};
Modal.install = function(app) {
  app.component(Modal.name, Modal);
  return app;
};
var MAX_SAFE_INTEGER = 9007199254740991;
var nativeFloor = Math.floor;
function baseRepeat(string2, n2) {
  var result = "";
  if (!string2 || n2 < 1 || n2 > MAX_SAFE_INTEGER) {
    return result;
  }
  do {
    if (n2 % 2) {
      result += string2;
    }
    n2 = nativeFloor(n2 / 2);
    if (n2) {
      string2 += string2;
    }
  } while (n2);
  return result;
}
function castSlice(array3, start, end) {
  var length = array3.length;
  end = end === void 0 ? length : end;
  return !start && end >= length ? array3 : baseSlice(array3, start, end);
}
var rsAstralRange$2 = "\\ud800-\\udfff", rsComboMarksRange$2 = "\\u0300-\\u036f", reComboHalfMarksRange$2 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$2 = "\\u20d0-\\u20ff", rsComboRange$2 = rsComboMarksRange$2 + reComboHalfMarksRange$2 + rsComboSymbolsRange$2, rsVarRange$2 = "\\ufe0e\\ufe0f";
var rsZWJ$2 = "\\u200d";
var reHasUnicode = RegExp("[" + rsZWJ$2 + rsAstralRange$2 + rsComboRange$2 + rsVarRange$2 + "]");
function hasUnicode(string2) {
  return reHasUnicode.test(string2);
}
var asciiSize = baseProperty("length");
var rsAstralRange$1 = "\\ud800-\\udfff", rsComboMarksRange$1 = "\\u0300-\\u036f", reComboHalfMarksRange$1 = "\\ufe20-\\ufe2f", rsComboSymbolsRange$1 = "\\u20d0-\\u20ff", rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1, rsVarRange$1 = "\\ufe0e\\ufe0f";
var rsAstral$1 = "[" + rsAstralRange$1 + "]", rsCombo$1 = "[" + rsComboRange$1 + "]", rsFitz$1 = "\\ud83c[\\udffb-\\udfff]", rsModifier$1 = "(?:" + rsCombo$1 + "|" + rsFitz$1 + ")", rsNonAstral$1 = "[^" + rsAstralRange$1 + "]", rsRegional$1 = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair$1 = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ$1 = "\\u200d";
var reOptMod$1 = rsModifier$1 + "?", rsOptVar$1 = "[" + rsVarRange$1 + "]?", rsOptJoin$1 = "(?:" + rsZWJ$1 + "(?:" + [rsNonAstral$1, rsRegional$1, rsSurrPair$1].join("|") + ")" + rsOptVar$1 + reOptMod$1 + ")*", rsSeq$1 = rsOptVar$1 + reOptMod$1 + rsOptJoin$1, rsSymbol$1 = "(?:" + [rsNonAstral$1 + rsCombo$1 + "?", rsCombo$1, rsRegional$1, rsSurrPair$1, rsAstral$1].join("|") + ")";
var reUnicode$1 = RegExp(rsFitz$1 + "(?=" + rsFitz$1 + ")|" + rsSymbol$1 + rsSeq$1, "g");
function unicodeSize(string2) {
  var result = reUnicode$1.lastIndex = 0;
  while (reUnicode$1.test(string2)) {
    ++result;
  }
  return result;
}
function stringSize(string2) {
  return hasUnicode(string2) ? unicodeSize(string2) : asciiSize(string2);
}
function asciiToArray(string2) {
  return string2.split("");
}
var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsVarRange = "\\ufe0e\\ufe0f";
var rsAstral = "[" + rsAstralRange + "]", rsCombo = "[" + rsComboRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsZWJ = "\\u200d";
var reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [rsNonAstral, rsRegional, rsSurrPair].join("|") + ")" + rsOptVar + reOptMod + ")*", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsSymbol = "(?:" + [rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral].join("|") + ")";
var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
function unicodeToArray(string2) {
  return string2.match(reUnicode) || [];
}
function stringToArray(string2) {
  return hasUnicode(string2) ? unicodeToArray(string2) : asciiToArray(string2);
}
var nativeCeil = Math.ceil;
function createPadding(length, chars) {
  chars = chars === void 0 ? " " : baseToString(chars);
  var charsLength = chars.length;
  if (charsLength < 2) {
    return charsLength ? baseRepeat(chars, length) : chars;
  }
  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
  return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
}
function padEnd(string2, length, chars) {
  string2 = toString$1(string2);
  length = toInteger(length);
  var strLength = length ? stringSize(string2) : 0;
  return length && strLength < length ? string2 + createPadding(length - strLength, chars) : string2;
}
const { createVNode: _createVNode$1R } = await importShared("vue");
var StatisticNumber = function StatisticNumber2(props2) {
  var value26 = props2.value, formatter = props2.formatter, precision = props2.precision, decimalSeparator = props2.decimalSeparator, _props$groupSeparator = props2.groupSeparator, groupSeparator = _props$groupSeparator === void 0 ? "" : _props$groupSeparator, prefixCls2 = props2.prefixCls;
  var valueNode;
  if (typeof formatter === "function") {
    valueNode = formatter({
      value: value26
    });
  } else {
    var val = String(value26);
    var cells = val.match(/^(-?)(\d*)(\.(\d+))?$/);
    if (!cells) {
      valueNode = val;
    } else {
      var negative = cells[1];
      var int = cells[2] || "0";
      var decimal = cells[4] || "";
      int = int.replace(/\B(?=(\d{3})+(?!\d))/g, groupSeparator);
      if (typeof precision === "number") {
        decimal = padEnd(decimal, precision, "0").slice(0, precision);
      }
      if (decimal) {
        decimal = "".concat(decimalSeparator).concat(decimal);
      }
      valueNode = [_createVNode$1R("span", {
        "key": "int",
        "class": "".concat(prefixCls2, "-content-value-int")
      }, [negative, int]), decimal && _createVNode$1R("span", {
        "key": "decimal",
        "class": "".concat(prefixCls2, "-content-value-decimal")
      }, [decimal])];
    }
  }
  return _createVNode$1R("span", {
    "class": "".concat(prefixCls2, "-content-value")
  }, [valueNode]);
};
StatisticNumber.displayName = "StatisticNumber";
const { createVNode: _createVNode$1Q } = await importShared("vue");
var skeletonElementProps = function skeletonElementProps2() {
  return {
    prefixCls: PropTypes.string,
    size: PropTypes.oneOfType([PropTypes.oneOf(tuple("large", "small", "default")), PropTypes.number]),
    shape: PropTypes.oneOf(tuple("circle", "square", "round")),
    active: PropTypes.looseBool
  };
};
var Element$1 = function Element2(props2) {
  var _classNames, _classNames2;
  var prefixCls2 = props2.prefixCls, size = props2.size, shape = props2.shape;
  var sizeCls = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-sm"), size === "small"), _classNames));
  var shapeCls = classNames((_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-circle"), shape === "circle"), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-square"), shape === "square"), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-round"), shape === "round"), _classNames2));
  var sizeStyle = typeof size === "number" ? {
    width: "".concat(size, "px"),
    height: "".concat(size, "px"),
    lineHeight: "".concat(size, "px")
  } : {};
  return _createVNode$1Q("span", {
    "class": classNames(prefixCls2, sizeCls, shapeCls),
    "style": sizeStyle
  }, null);
};
Element$1.displayName = "SkeletonElement";
const { createVNode: _createVNode$1P } = await importShared("vue");
const { computed: computed$j, defineComponent: defineComponent$V } = await importShared("vue");
var avatarProps = initDefaultProps2(_extends$1(_extends$1({}, skeletonElementProps()), {
  shape: PropTypes.oneOf(tuple("circle", "square"))
}), {
  size: "large"
});
var SkeletonAvatar = defineComponent$V({
  name: "ASkeletonAvatar",
  props: avatarProps,
  setup: function setup107(props2) {
    var _useConfigInject = useConfigInject("skeleton", props2), prefixCls2 = _useConfigInject.prefixCls;
    var cls = computed$j(function() {
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-element"), _defineProperty$U({}, "".concat(prefixCls2.value, "-active"), props2.active));
    });
    return function() {
      return _createVNode$1P("div", {
        "class": cls.value
      }, [_createVNode$1P(Element$1, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
        "prefixCls": "".concat(prefixCls2.value, "-avatar")
      }), null)]);
    };
  }
});
const { createVNode: _createVNode$1O } = await importShared("vue");
const { defineComponent: defineComponent$U } = await importShared("vue");
var skeletonTitleProps = {
  prefixCls: PropTypes.string,
  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
};
var SkeletonTitle = defineComponent$U({
  name: "SkeletonTitle",
  props: skeletonTitleProps,
  setup: function setup108(props2) {
    return function() {
      var prefixCls2 = props2.prefixCls, width = props2.width;
      var zWidth = typeof width === "number" ? "".concat(width, "px") : width;
      return _createVNode$1O("h3", {
        "class": prefixCls2,
        "style": {
          width: zWidth
        }
      }, null);
    };
  }
});
const { createVNode: _createVNode$1N } = await importShared("vue");
const { defineComponent: defineComponent$T } = await importShared("vue");
var widthUnit = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);
var skeletonParagraphProps = {
  prefixCls: PropTypes.string,
  width: PropTypes.oneOfType([widthUnit, PropTypes.arrayOf(widthUnit)]),
  rows: PropTypes.number
};
var SkeletonParagraph = defineComponent$T({
  name: "SkeletonParagraph",
  props: skeletonParagraphProps,
  setup: function setup109(props2) {
    var getWidth3 = function getWidth4(index2) {
      var width = props2.width, _props$rows = props2.rows, rows = _props$rows === void 0 ? 2 : _props$rows;
      if (Array.isArray(width)) {
        return width[index2];
      }
      if (rows - 1 === index2) {
        return width;
      }
      return void 0;
    };
    return function() {
      var prefixCls2 = props2.prefixCls, rows = props2.rows;
      var rowList = _toConsumableArray(Array(rows)).map(function(_2, index2) {
        var width = getWidth3(index2);
        return _createVNode$1N("li", {
          "key": index2,
          "style": {
            width: typeof width === "number" ? "".concat(width, "px") : width
          }
        }, null);
      });
      return _createVNode$1N("ul", {
        "class": prefixCls2
      }, [rowList]);
    };
  }
});
const { createVNode: _createVNode$1M } = await importShared("vue");
const { defineComponent: defineComponent$S } = await importShared("vue");
var skeletonProps = {
  active: PropTypes.looseBool,
  loading: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  avatar: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.shape(omit$1(avatarProps, ["active"])).loose, PropTypes.looseBool])),
  title: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.string, PropTypes.shape(skeletonTitleProps).loose])),
  paragraph: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.string, PropTypes.shape(skeletonParagraphProps).loose]))
};
function getComponentProps(prop) {
  if (prop && _typeof$3(prop) === "object") {
    return prop;
  }
  return {};
}
function getAvatarBasicProps(hasTitle, hasParagraph) {
  if (hasTitle && !hasParagraph) {
    return {
      size: "large",
      shape: "square"
    };
  }
  return {
    size: "large",
    shape: "circle"
  };
}
function getTitleBasicProps(hasAvatar, hasParagraph) {
  if (!hasAvatar && hasParagraph) {
    return {
      width: "38%"
    };
  }
  if (hasAvatar && hasParagraph) {
    return {
      width: "50%"
    };
  }
  return {};
}
function getParagraphBasicProps(hasAvatar, hasTitle) {
  var basicProps2 = {};
  if (!hasAvatar || !hasTitle) {
    basicProps2.width = "61%";
  }
  if (!hasAvatar && hasTitle) {
    basicProps2.rows = 3;
  } else {
    basicProps2.rows = 2;
  }
  return basicProps2;
}
var Skeleton = defineComponent$S({
  name: "ASkeleton",
  props: initDefaultProps$1(skeletonProps, {
    avatar: false,
    title: true,
    paragraph: true
  }),
  setup: function setup110(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("skeleton", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    return function() {
      var _a;
      var loading = props2.loading, avatar = props2.avatar, title = props2.title, paragraph = props2.paragraph, active = props2.active, round2 = props2.round;
      var pre = prefixCls2.value;
      if (loading || props2.loading === void 0) {
        var _classNames;
        var hasAvatar = !!avatar || avatar === "";
        var hasTitle = !!title || title === "";
        var hasParagraph = !!paragraph || paragraph === "";
        var avatarNode;
        if (hasAvatar) {
          var _avatarProps = _extends$1(_extends$1({
            prefixCls: "".concat(pre, "-avatar")
          }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));
          avatarNode = _createVNode$1M("div", {
            "class": "".concat(pre, "-header")
          }, [_createVNode$1M(Element$1, _avatarProps, null)]);
        }
        var contentNode;
        if (hasTitle || hasParagraph) {
          var $title;
          if (hasTitle) {
            var titleProps = _extends$1(_extends$1({
              prefixCls: "".concat(pre, "-title")
            }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));
            $title = _createVNode$1M(SkeletonTitle, titleProps, null);
          }
          var paragraphNode;
          if (hasParagraph) {
            var paragraphProps = _extends$1(_extends$1({
              prefixCls: "".concat(pre, "-paragraph")
            }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));
            paragraphNode = _createVNode$1M(SkeletonParagraph, paragraphProps, null);
          }
          contentNode = _createVNode$1M("div", {
            "class": "".concat(pre, "-content")
          }, [$title, paragraphNode]);
        }
        var cls = classNames(pre, (_classNames = {}, _defineProperty$U(_classNames, "".concat(pre, "-with-avatar"), hasAvatar), _defineProperty$U(_classNames, "".concat(pre, "-active"), active), _defineProperty$U(_classNames, "".concat(pre, "-rtl"), direction.value === "rtl"), _defineProperty$U(_classNames, "".concat(pre, "-round"), round2), _classNames));
        return _createVNode$1M("div", {
          "class": cls
        }, [avatarNode, contentNode]);
      }
      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
  }
});
const { createVNode: _createVNode$1L } = await importShared("vue");
const { defineComponent: defineComponent$R } = await importShared("vue");
var statisticProps = {
  prefixCls: PropTypes.string,
  decimalSeparator: PropTypes.string,
  groupSeparator: PropTypes.string,
  format: PropTypes.string,
  value: {
    type: [String, Number, Object]
  },
  valueStyle: PropTypes.style,
  valueRender: PropTypes.any,
  formatter: PropTypes.any,
  precision: PropTypes.number,
  prefix: PropTypes.VNodeChild,
  suffix: PropTypes.VNodeChild,
  title: PropTypes.VNodeChild,
  onFinish: PropTypes.func,
  loading: PropTypes.looseBool
};
const Statistic = defineComponent$R({
  name: "AStatistic",
  props: initDefaultProps2(statisticProps, {
    decimalSeparator: ".",
    groupSeparator: ",",
    loading: false
  }),
  slots: ["title", "prefix", "suffix", "formatter"],
  setup: function setup111(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("statistic", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    return function() {
      var _a, _b, _c, _d, _e, _f, _g;
      var _props$value = props2.value, value26 = _props$value === void 0 ? 0 : _props$value, valueStyle = props2.valueStyle, valueRender = props2.valueRender;
      var pre = prefixCls2.value;
      var title = (_a = props2.title) !== null && _a !== void 0 ? _a : (_b = slots.title) === null || _b === void 0 ? void 0 : _b.call(slots);
      var prefix = (_c = props2.prefix) !== null && _c !== void 0 ? _c : (_d = slots.prefix) === null || _d === void 0 ? void 0 : _d.call(slots);
      var suffix = (_e = props2.suffix) !== null && _e !== void 0 ? _e : (_f = slots.suffix) === null || _f === void 0 ? void 0 : _f.call(slots);
      var formatter = (_g = props2.formatter) !== null && _g !== void 0 ? _g : slots.formatter;
      var valueNode = _createVNode$1L(StatisticNumber, _objectSpread2$2({
        "data-for-update": Date.now()
      }, _extends$1(_extends$1({}, props2), {
        prefixCls: pre,
        value: value26,
        formatter
      })), null);
      if (valueRender) {
        valueNode = valueRender(valueNode);
      }
      return _createVNode$1L("div", {
        "class": [pre, _defineProperty$U({}, "".concat(pre, "-rtl"), direction.value === "rtl")]
      }, [title && _createVNode$1L("div", {
        "class": "".concat(pre, "-title")
      }, [title]), _createVNode$1L(Skeleton, {
        "paragraph": false,
        "loading": props2.loading
      }, {
        default: function _default8() {
          return [_createVNode$1L("div", {
            "style": valueStyle,
            "class": "".concat(pre, "-content")
          }, [prefix && _createVNode$1L("span", {
            "class": "".concat(pre, "-content-prefix")
          }, [prefix]), valueNode, suffix && _createVNode$1L("span", {
            "class": "".concat(pre, "-content-suffix")
          }, [suffix])])];
        }
      })]);
    };
  }
});
function padStart(string2, length, chars) {
  string2 = toString$1(string2);
  length = toInteger(length);
  var strLength = length ? stringSize(string2) : 0;
  return length && strLength < length ? createPadding(length - strLength, chars) + string2 : string2;
}
var timeUnits = [
  ["Y", 1e3 * 60 * 60 * 24 * 365],
  ["M", 1e3 * 60 * 60 * 24 * 30],
  ["D", 1e3 * 60 * 60 * 24],
  ["H", 1e3 * 60 * 60],
  ["m", 1e3 * 60],
  ["s", 1e3],
  ["S", 1]
  // million seconds
];
function formatTimeStr(duration2, format3) {
  var leftDuration = duration2;
  var escapeRegex = /\[[^\]]*]/g;
  var keepList = (format3.match(escapeRegex) || []).map(function(str) {
    return str.slice(1, -1);
  });
  var templateText = format3.replace(escapeRegex, "[]");
  var replacedText = timeUnits.reduce(function(current2, _ref) {
    var _ref2 = _slicedToArray$2(_ref, 2), name = _ref2[0], unit = _ref2[1];
    if (current2.indexOf(name) !== -1) {
      var value26 = Math.floor(leftDuration / unit);
      leftDuration -= value26 * unit;
      return current2.replace(new RegExp("".concat(name, "+"), "g"), function(match5) {
        var len = match5.length;
        return padStart(value26.toString(), len, "0");
      });
    }
    return current2;
  }, templateText);
  var index2 = 0;
  return replacedText.replace(escapeRegex, function() {
    var match5 = keepList[index2];
    index2 += 1;
    return match5;
  });
}
function formatCountdown(value26, config2) {
  var _config$format = config2.format, format3 = _config$format === void 0 ? "" : _config$format;
  var target = new Date(value26).getTime();
  var current2 = Date.now();
  var diff2 = Math.max(target - current2, 0);
  return formatTimeStr(diff2, format3);
}
const { createVNode: _createVNode$1K } = await importShared("vue");
const { defineComponent: defineComponent$Q, onBeforeUnmount: onBeforeUnmount$2, onMounted: onMounted$7, onUpdated: onUpdated$1, ref: ref$d } = await importShared("vue");
var REFRESH_INTERVAL = 1e3 / 30;
function getTime(value26) {
  return new Date(value26).getTime();
}
const Countdown = defineComponent$Q({
  name: "AStatisticCountdown",
  props: initDefaultProps2(statisticProps, {
    format: "HH:mm:ss"
  }),
  emits: ["finish", "change"],
  setup: function setup112(props2, _ref) {
    var emit = _ref.emit;
    var countdownId = ref$d();
    var statistic = ref$d();
    var syncTimer = function syncTimer2() {
      var value26 = props2.value;
      var timestamp = getTime(value26);
      if (timestamp >= Date.now()) {
        startTimer();
      } else {
        stopTimer();
      }
    };
    var startTimer = function startTimer2() {
      if (countdownId.value) return;
      var timestamp = getTime(props2.value);
      countdownId.value = window.setInterval(function() {
        statistic.value.$forceUpdate();
        if (timestamp > Date.now()) {
          emit("change", timestamp - Date.now());
        }
        syncTimer();
      }, REFRESH_INTERVAL);
    };
    var stopTimer = function stopTimer2() {
      var value26 = props2.value;
      if (countdownId.value) {
        clearInterval(countdownId.value);
        countdownId.value = void 0;
        var timestamp = getTime(value26);
        if (timestamp < Date.now()) {
          emit("finish");
        }
      }
    };
    var formatCountdown$1 = function formatCountdown$12(_ref2) {
      var value26 = _ref2.value, config2 = _ref2.config;
      var format3 = props2.format;
      return formatCountdown(value26, _extends$1(_extends$1({}, config2), {
        format: format3
      }));
    };
    var valueRenderHtml = function valueRenderHtml2(node) {
      return node;
    };
    onMounted$7(function() {
      syncTimer();
    });
    onUpdated$1(function() {
      syncTimer();
    });
    onBeforeUnmount$2(function() {
      stopTimer();
    });
    return function() {
      return _createVNode$1K(Statistic, _objectSpread2$2({
        "ref": statistic
      }, _extends$1(_extends$1({}, props2), {
        valueRender: valueRenderHtml,
        formatter: formatCountdown$1
      })), null);
    };
  }
});
Statistic.Countdown = Countdown;
Statistic.install = function(app) {
  app.component(Statistic.name, Statistic);
  app.component(Statistic.Countdown.name, Statistic.Countdown);
  return app;
};
var StatisticCountdown = Statistic.Countdown;
const { createVNode: _createVNode$1J } = await importShared("vue");
var notificationInstance = {};
var defaultDuration = 4.5;
var defaultTop = "24px";
var defaultBottom = "24px";
var defaultPlacement = "topRight";
var defaultGetContainer2 = function defaultGetContainer3() {
  return document.body;
};
var defaultCloseIcon = null;
function setNotificationConfig(options2) {
  var duration2 = options2.duration, placement2 = options2.placement, bottom = options2.bottom, top = options2.top, getContainer5 = options2.getContainer, closeIcon = options2.closeIcon;
  if (duration2 !== void 0) {
    defaultDuration = duration2;
  }
  if (placement2 !== void 0) {
    defaultPlacement = placement2;
  }
  if (bottom !== void 0) {
    defaultBottom = typeof bottom === "number" ? "".concat(bottom, "px") : bottom;
  }
  if (top !== void 0) {
    defaultTop = typeof top === "number" ? "".concat(top, "px") : top;
  }
  if (getContainer5 !== void 0) {
    defaultGetContainer2 = getContainer5;
  }
  if (closeIcon !== void 0) {
    defaultCloseIcon = closeIcon;
  }
}
function getPlacementStyle(placement2) {
  var top = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultTop;
  var bottom = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultBottom;
  var style3;
  switch (placement2) {
    case "topLeft":
      style3 = {
        left: "0px",
        top,
        bottom: "auto"
      };
      break;
    case "topRight":
      style3 = {
        right: "0px",
        top,
        bottom: "auto"
      };
      break;
    case "bottomLeft":
      style3 = {
        left: "0px",
        top: "auto",
        bottom
      };
      break;
    default:
      style3 = {
        right: "0px",
        top: "auto",
        bottom
      };
      break;
  }
  return style3;
}
function getNotificationInstance(_ref, callback) {
  var prefixCls2 = _ref.prefixCls, _ref$placement = _ref.placement, placement2 = _ref$placement === void 0 ? defaultPlacement : _ref$placement, _ref$getContainer = _ref.getContainer, getContainer5 = _ref$getContainer === void 0 ? defaultGetContainer2 : _ref$getContainer, top = _ref.top, bottom = _ref.bottom, _ref$closeIcon = _ref.closeIcon, _closeIcon = _ref$closeIcon === void 0 ? defaultCloseIcon : _ref$closeIcon;
  var cacheKey = "".concat(prefixCls2, "-").concat(placement2);
  if (notificationInstance[cacheKey]) {
    callback(notificationInstance[cacheKey]);
    return;
  }
  Notification.newInstance({
    prefixCls: prefixCls2,
    class: "".concat(prefixCls2, "-").concat(placement2),
    style: getPlacementStyle(placement2, top, bottom),
    getContainer: getContainer5,
    closeIcon: function closeIcon() {
      var closeIconToRender = _createVNode$1J("span", {
        "class": "".concat(prefixCls2, "-close-x")
      }, [_closeIcon || _createVNode$1J(CloseOutlined, {
        "class": "".concat(prefixCls2, "-close-icon")
      }, null)]);
      return closeIconToRender;
    }
  }, function(notification) {
    notificationInstance[cacheKey] = notification;
    callback(notification);
  });
}
var typeToIcon = {
  success: CheckCircleOutlined,
  info: InfoCircleOutlined,
  error: CloseCircleOutlined,
  warning: ExclamationCircleOutlined
};
function notice(args) {
  var icon = args.icon, type3 = args.type, description = args.description, message = args.message, btn = args.btn;
  var outerPrefixCls = args.prefixCls || "ant-notification";
  var prefixCls2 = "".concat(outerPrefixCls, "-notice");
  var duration2 = args.duration === void 0 ? defaultDuration : args.duration;
  var iconNode = null;
  if (icon) {
    iconNode = function iconNode2() {
      return _createVNode$1J("span", {
        "class": "".concat(prefixCls2, "-icon")
      }, [icon]);
    };
  } else if (type3) {
    var Icon3 = typeToIcon[type3];
    iconNode = function iconNode2() {
      return _createVNode$1J(Icon3, {
        "class": "".concat(prefixCls2, "-icon ").concat(prefixCls2, "-icon-").concat(type3)
      }, null);
    };
  }
  var placement2 = args.placement, top = args.top, bottom = args.bottom, getContainer5 = args.getContainer, closeIcon = args.closeIcon;
  getNotificationInstance({
    prefixCls: outerPrefixCls,
    placement: placement2,
    top,
    bottom,
    getContainer: getContainer5,
    closeIcon
  }, function(notification) {
    notification.notice({
      content: function content() {
        return _createVNode$1J("div", {
          "class": iconNode ? "".concat(prefixCls2, "-with-icon") : ""
        }, [iconNode && iconNode(), _createVNode$1J("div", {
          "class": "".concat(prefixCls2, "-message")
        }, [!description && iconNode ? _createVNode$1J("span", {
          "class": "".concat(prefixCls2, "-message-single-line-auto-margin")
        }, null) : null, message]), _createVNode$1J("div", {
          "class": "".concat(prefixCls2, "-description")
        }, [description]), btn ? _createVNode$1J("span", {
          "class": "".concat(prefixCls2, "-btn")
        }, [btn]) : null]);
      },
      duration: duration2,
      closable: true,
      onClose: args.onClose,
      onClick: args.onClick,
      key: args.key,
      style: args.style || {},
      class: args.class
    });
  });
}
var apiBase = {
  open: notice,
  close: function close6(key2) {
    Object.keys(notificationInstance).forEach(function(cacheKey) {
      return notificationInstance[cacheKey].removeNotice(key2);
    });
  },
  config: setNotificationConfig,
  destroy: function destroy2() {
    Object.keys(notificationInstance).forEach(function(cacheKey) {
      notificationInstance[cacheKey].destroy();
      delete notificationInstance[cacheKey];
    });
  }
};
var api = apiBase;
var iconTypes = ["success", "info", "warning", "error"];
iconTypes.forEach(function(type3) {
  api[type3] = function(args) {
    return api.open(_extends$1(_extends$1({}, args), {
      type: type3
    }));
  };
});
api.warn = api.warning;
var ArrowLeftOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z" } }] }, "name": "arrow-left", "theme": "outlined" };
const { createVNode: _createVNode$1I } = await importShared("vue");
function _objectSpread$j(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$k(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$k(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ArrowLeftOutlined = function ArrowLeftOutlined2(props2, context2) {
  var p = _objectSpread$j({}, props2, context2.attrs);
  return _createVNode$1I(Icon, _objectSpread$j({}, p, {
    "icon": ArrowLeftOutlined$1
  }), null);
};
ArrowLeftOutlined.displayName = "ArrowLeftOutlined";
ArrowLeftOutlined.inheritAttrs = false;
var ArrowRightOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M869 487.8L491.2 159.9c-2.9-2.5-6.6-3.9-10.5-3.9h-88.5c-7.4 0-10.8 9.2-5.2 14l350.2 304H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h585.1L386.9 854c-5.6 4.9-2.2 14 5.2 14h91.5c1.9 0 3.8-.7 5.2-2L869 536.2a32.07 32.07 0 000-48.4z" } }] }, "name": "arrow-right", "theme": "outlined" };
const { createVNode: _createVNode$1H } = await importShared("vue");
function _objectSpread$i(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$j(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$j(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var ArrowRightOutlined = function ArrowRightOutlined2(props2, context2) {
  var p = _objectSpread$i({}, props2, context2.attrs);
  return _createVNode$1H(Icon, _objectSpread$i({}, p, {
    "icon": ArrowRightOutlined$1
  }), null);
};
ArrowRightOutlined.displayName = "ArrowRightOutlined";
ArrowRightOutlined.inheritAttrs = false;
const { createVNode: _createVNode$1G } = await importShared("vue");
var __rest$j = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$P, ref: ref$c, onMounted: onMounted$6 } = await importShared("vue");
var inlineStyle = {
  border: 0,
  background: "transparent",
  padding: 0,
  lineHeight: "inherit",
  display: "inline-block"
};
var TransButton = defineComponent$P({
  name: "TransButton",
  inheritAttrs: false,
  props: {
    noStyle: PropTypes.looseBool,
    onClick: PropTypes.func,
    disabled: PropTypes.looseBool,
    autofocus: PropTypes.looseBool
  },
  setup: function setup113(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit, attrs = _ref.attrs, expose = _ref.expose;
    var domRef = ref$c();
    var onKeyDown14 = function onKeyDown15(event) {
      var keyCode = event.keyCode;
      if (keyCode === KeyCode$1.ENTER) {
        event.preventDefault();
      }
    };
    var onKeyUp3 = function onKeyUp4(event) {
      var keyCode = event.keyCode;
      if (keyCode === KeyCode$1.ENTER) {
        emit("click", event);
      }
    };
    var onClick7 = function onClick8(e2) {
      emit("click", e2);
    };
    var focus27 = function focus28() {
      if (domRef.value) {
        domRef.value.focus();
      }
    };
    var blur24 = function blur25() {
      if (domRef.value) {
        domRef.value.blur();
      }
    };
    onMounted$6(function() {
      if (props2.autofocus) {
        focus27();
      }
    });
    expose({
      focus: focus27,
      blur: blur24
    });
    return function() {
      var _a;
      var noStyle = props2.noStyle, disabled = props2.disabled, restProps = __rest$j(props2, ["noStyle", "disabled"]);
      var mergedStyle = {};
      if (!noStyle) {
        mergedStyle = _extends$1({}, inlineStyle);
      }
      if (disabled) {
        mergedStyle.pointerEvents = "none";
      }
      return _createVNode$1G("div", _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
        "role": "button",
        "tabindex": 0,
        "ref": domRef
      }, restProps), attrs), {}, {
        "onClick": onClick7,
        "onKeydown": onKeyDown14,
        "onKeyup": onKeyUp3,
        "style": _extends$1(_extends$1({}, mergedStyle), attrs.style || {})
      }), [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
    };
  }
});
const { createVNode: _createVNode$1F } = await importShared("vue");
const { defineComponent: defineComponent$O, ref: ref$b, computed: computed$i } = await importShared("vue");
var pageHeaderProps = {
  backIcon: PropTypes.VNodeChild,
  prefixCls: PropTypes.string,
  title: PropTypes.VNodeChild,
  subTitle: PropTypes.VNodeChild,
  breadcrumb: PropTypes.object,
  tags: PropTypes.any,
  footer: PropTypes.VNodeChild,
  extra: PropTypes.VNodeChild,
  avatar: PropTypes.object,
  ghost: PropTypes.looseBool,
  onBack: PropTypes.func
};
var PageHeader = defineComponent$O({
  name: "APageHeader",
  props: pageHeaderProps,
  emits: ["back"],
  slots: ["backIcon", "avatar", "breadcrumb", "title", "subTitle", "tags", "extra", "footer"],
  setup: function setup114(props2, _ref) {
    var emit = _ref.emit, slots = _ref.slots;
    var _useConfigInject = useConfigInject("page-header", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction, pageHeader = _useConfigInject.pageHeader;
    var compact = ref$b(false);
    var onResize = function onResize2(_ref2) {
      var width = _ref2.width;
      compact.value = width < 768;
    };
    var ghost = computed$i(function() {
      var _a, _b, _c;
      return (_c = (_a = props2.ghost) !== null && _a !== void 0 ? _a : (_b = pageHeader.value) === null || _b === void 0 ? void 0 : _b.ghost) !== null && _c !== void 0 ? _c : true;
    });
    var getBackIcon = function getBackIcon2() {
      var _a, _b, _c;
      return (_c = (_a = props2.backIcon) !== null && _a !== void 0 ? _a : (_b = slots.backIcon) === null || _b === void 0 ? void 0 : _b.call(slots)) !== null && _c !== void 0 ? _c : direction.value === "rtl" ? _createVNode$1F(ArrowRightOutlined, null, null) : _createVNode$1F(ArrowLeftOutlined, null, null);
    };
    var renderBack = function renderBack2(backIcon) {
      if (!backIcon || !props2.onBack) {
        return null;
      }
      return _createVNode$1F(LocaleReceiver, {
        "componentName": "PageHeader",
        "children": function children(_ref3) {
          var back = _ref3.back;
          return _createVNode$1F("div", {
            "class": "".concat(prefixCls2.value, "-back")
          }, [_createVNode$1F(TransButton, {
            "onClick": function onClick7(e2) {
              emit("back", e2);
            },
            "class": "".concat(prefixCls2.value, "-back-button"),
            "aria-label": back
          }, {
            default: function _default8() {
              return [backIcon];
            }
          })]);
        }
      }, null);
    };
    var renderBreadcrumb = function renderBreadcrumb2() {
      var _a;
      return props2.breadcrumb ? _createVNode$1F(Breadcrumb, props2.breadcrumb, null) : (_a = slots.breadcrumb) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
    var renderTitle2 = function renderTitle3() {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j;
      var avatar = props2.avatar;
      var title = (_a = props2.title) !== null && _a !== void 0 ? _a : (_b = slots.title) === null || _b === void 0 ? void 0 : _b.call(slots);
      var subTitle = (_c = props2.subTitle) !== null && _c !== void 0 ? _c : (_d = slots.subTitle) === null || _d === void 0 ? void 0 : _d.call(slots);
      var tags = (_e = props2.tags) !== null && _e !== void 0 ? _e : (_f = slots.tags) === null || _f === void 0 ? void 0 : _f.call(slots);
      var extra = (_g = props2.extra) !== null && _g !== void 0 ? _g : (_h = slots.extra) === null || _h === void 0 ? void 0 : _h.call(slots);
      var headingPrefixCls = "".concat(prefixCls2.value, "-heading");
      var hasHeading = title || subTitle || tags || extra;
      if (!hasHeading) {
        return null;
      }
      var backIcon = getBackIcon();
      var backIconDom = renderBack(backIcon);
      var hasTitle = backIconDom || avatar || hasHeading;
      return _createVNode$1F("div", {
        "class": headingPrefixCls
      }, [hasTitle && _createVNode$1F("div", {
        "class": "".concat(headingPrefixCls, "-left")
      }, [backIconDom, avatar ? _createVNode$1F(Avatar, avatar, null) : (_j = slots.avatar) === null || _j === void 0 ? void 0 : _j.call(slots), title && _createVNode$1F("span", {
        "class": "".concat(headingPrefixCls, "-title"),
        "title": typeof title === "string" ? title : void 0
      }, [title]), subTitle && _createVNode$1F("span", {
        "class": "".concat(headingPrefixCls, "-sub-title"),
        "title": typeof subTitle === "string" ? subTitle : void 0
      }, [subTitle]), tags && _createVNode$1F("span", {
        "class": "".concat(headingPrefixCls, "-tags")
      }, [tags])]), extra && _createVNode$1F("span", {
        "class": "".concat(headingPrefixCls, "-extra")
      }, [extra])]);
    };
    var renderFooter5 = function renderFooter6() {
      var _a, _b;
      var footer = (_a = props2.footer) !== null && _a !== void 0 ? _a : filterEmpty((_b = slots.footer) === null || _b === void 0 ? void 0 : _b.call(slots));
      return isEmptyContent(footer) ? null : _createVNode$1F("div", {
        "class": "".concat(prefixCls2.value, "-footer")
      }, [footer]);
    };
    var renderChildren4 = function renderChildren5(children) {
      return _createVNode$1F("div", {
        "class": "".concat(prefixCls2.value, "-content")
      }, [children]);
    };
    return function() {
      var _classNames;
      var _a, _b;
      var hasBreadcrumb = ((_a = props2.breadcrumb) === null || _a === void 0 ? void 0 : _a.routes) || slots.breadcrumb;
      var hasFooter = props2.footer || slots.footer;
      var children = flattenChildren((_b = slots.default) === null || _b === void 0 ? void 0 : _b.call(slots));
      var className = classNames(prefixCls2.value, (_classNames = {
        "has-breadcrumb": hasBreadcrumb,
        "has-footer": hasFooter
      }, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-ghost"), ghost.value), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-compact"), compact.value), _classNames));
      return _createVNode$1F(ResizeObserver, {
        "onResize": onResize
      }, {
        default: function _default8() {
          return [_createVNode$1F("div", {
            "class": className
          }, [renderBreadcrumb(), renderTitle2(), children.length ? renderChildren4(children) : null, renderFooter5()])];
        }
      });
    };
  }
});
const index$7 = withInstall(PageHeader);
const { createVNode: _createVNode$1E } = await importShared("vue");
const { defineComponent: defineComponent$N, inject: inject$r } = await importShared("vue");
var tooltipProps$1 = abstractTooltipProps();
var Popconfirm = defineComponent$N({
  name: "APopconfirm",
  mixins: [BaseMixin],
  props: _extends$1(_extends$1({}, tooltipProps$1), {
    prefixCls: PropTypes.string,
    transitionName: PropTypes.string.def("zoom-big"),
    content: PropTypes.any,
    title: PropTypes.any,
    trigger: tooltipProps$1.trigger.def("click"),
    okType: {
      type: String,
      default: "primary"
    },
    disabled: PropTypes.looseBool.def(false),
    okText: PropTypes.any,
    cancelText: PropTypes.any,
    icon: PropTypes.any,
    okButtonProps: PropTypes.object,
    cancelButtonProps: PropTypes.object,
    onConfirm: PropTypes.func,
    onCancel: PropTypes.func,
    onVisibleChange: PropTypes.func
  }),
  emits: ["update:visible", "confirm", "cancel", "visibleChange"],
  setup: function setup115() {
    return {
      configProvider: inject$r("configProvider", defaultConfigProvider)
    };
  },
  data: function data56() {
    var props2 = getOptionProps(this);
    var state = {
      sVisible: false
    };
    if ("visible" in props2) {
      state.sVisible = props2.visible;
    }
    if ("defaultVisible" in props2) {
      state.sVisible = props2.defaultVisible;
    }
    return state;
  },
  watch: {
    visible: function visible7(val) {
      this.sVisible = val;
    }
  },
  methods: {
    onConfirmHandle: function onConfirmHandle(e2) {
      this.setVisible(false, e2);
      this.$emit("confirm", e2);
    },
    onCancelHandle: function onCancelHandle(e2) {
      this.setVisible(false, e2);
      this.$emit("cancel", e2);
    },
    onVisibleChangeHandle: function onVisibleChangeHandle(sVisible) {
      var disabled = this.$props.disabled;
      if (disabled) {
        return;
      }
      this.setVisible(sVisible);
    },
    setVisible: function setVisible(sVisible, e2) {
      if (!hasProp(this, "visible")) {
        this.setState({
          sVisible
        });
      }
      this.$emit("update:visible", sVisible);
      this.$emit("visibleChange", sVisible, e2);
    },
    getPopupDomNode: function getPopupDomNode7() {
      return this.$refs.tooltip.getPopupDomNode();
    },
    renderOverlay: function renderOverlay2(prefixCls2, popconfirmLocale) {
      var _this = this;
      var okType = this.okType, okButtonProps = this.okButtonProps, cancelButtonProps = this.cancelButtonProps;
      var icon = getComponent(this, "icon") || _createVNode$1E(ExclamationCircleFilled, null, null);
      var cancelBtnProps = mergeProps(_extends$1({
        size: "small",
        onClick: this.onCancelHandle
      }, cancelButtonProps));
      var okBtnProps = mergeProps(_extends$1(_extends$1(_extends$1({}, convertLegacyProps(okType)), {
        size: "small",
        onClick: this.onConfirmHandle
      }), okButtonProps));
      return _createVNode$1E("div", {
        "class": "".concat(prefixCls2, "-inner-content")
      }, [_createVNode$1E("div", {
        "class": "".concat(prefixCls2, "-message")
      }, [icon, _createVNode$1E("div", {
        "class": "".concat(prefixCls2, "-message-title")
      }, [getComponent(this, "title")])]), _createVNode$1E("div", {
        "class": "".concat(prefixCls2, "-buttons")
      }, [_createVNode$1E(Button$1, cancelBtnProps, {
        default: function _default8() {
          return [getComponent(_this, "cancelText") || popconfirmLocale.cancelText];
        }
      }), _createVNode$1E(Button$1, okBtnProps, {
        default: function _default8() {
          return [getComponent(_this, "okText") || popconfirmLocale.okText];
        }
      })])]);
    }
  },
  render: function render110() {
    var _this2 = this;
    var _a;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("popover", customizePrefixCls);
    var otherProps = omit$1(props2, ["title", "content", "cancelText", "okText", "onUpdate:visible"]);
    var overlay = _createVNode$1E(LocaleReceiver, {
      "componentName": "Popconfirm",
      "defaultLocale": defaultLocale.Popconfirm,
      "children": function children(popconfirmLocale) {
        return _this2.renderOverlay(prefixCls2, popconfirmLocale);
      }
    }, null);
    var tooltipProps2 = _extends$1(_extends$1({}, otherProps), {
      title: overlay,
      prefixCls: prefixCls2,
      visible: this.sVisible,
      ref: "tooltip",
      onVisibleChange: this.onVisibleChangeHandle
    });
    return _createVNode$1E(Tooltip, tooltipProps2, {
      default: function _default8() {
        return [(_a = _this2.$slots) === null || _a === void 0 ? void 0 : _a.default()];
      }
    });
  }
});
const index$6 = withInstall(Popconfirm);
function validProgress(progress) {
  if (!progress || progress < 0) {
    return 0;
  }
  if (progress > 100) {
    return 100;
  }
  return progress;
}
const { createVNode: _createVNode$1D } = await importShared("vue");
var __rest$i = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
var sortGradient = function sortGradient2(gradients) {
  var tempArr = [];
  for (var _i = 0, _Object$entries = Object.entries(gradients); _i < _Object$entries.length; _i++) {
    var _Object$entries$_i = _slicedToArray$2(_Object$entries[_i], 2), key2 = _Object$entries$_i[0], value26 = _Object$entries$_i[1];
    var formatKey = parseFloat(key2.replace(/%/g, ""));
    if (isNaN(formatKey)) {
      return {};
    }
    tempArr.push({
      key: formatKey,
      value: value26
    });
  }
  tempArr = tempArr.sort(function(a2, b2) {
    return a2.key - b2.key;
  });
  return tempArr.map(function(_ref) {
    var key3 = _ref.key, value27 = _ref.value;
    return "".concat(value27, " ").concat(key3, "%");
  }).join(", ");
};
var handleGradient = function handleGradient2(strokeColor) {
  var _strokeColor$from = strokeColor.from, from2 = _strokeColor$from === void 0 ? "#1890ff" : _strokeColor$from, _strokeColor$to = strokeColor.to, to2 = _strokeColor$to === void 0 ? "#1890ff" : _strokeColor$to, _strokeColor$directio = strokeColor.direction, direction = _strokeColor$directio === void 0 ? "to right" : _strokeColor$directio, rest = __rest$i(strokeColor, ["from", "to", "direction"]);
  if (Object.keys(rest).length !== 0) {
    var sortedGradients = sortGradient(rest);
    return {
      backgroundImage: "linear-gradient(".concat(direction, ", ").concat(sortedGradients, ")")
    };
  }
  return {
    backgroundImage: "linear-gradient(".concat(direction, ", ").concat(from2, ", ").concat(to2, ")")
  };
};
var Line = function Line2(_2, _ref2) {
  var attrs = _ref2.attrs, slots = _ref2.slots;
  var prefixCls2 = attrs.prefixCls, percent = attrs.percent, successPercent = attrs.successPercent, strokeWidth = attrs.strokeWidth, size = attrs.size, strokeColor = attrs.strokeColor, strokeLinecap = attrs.strokeLinecap, trailColor = attrs.trailColor;
  var backgroundProps;
  if (strokeColor && typeof strokeColor !== "string") {
    backgroundProps = handleGradient(strokeColor);
  } else {
    backgroundProps = {
      background: strokeColor
    };
  }
  var trailStyle = trailColor ? {
    style: {
      backgroundColor: trailColor
    }
  } : void 0;
  var percentStyle = _extends$1({
    width: "".concat(validProgress(percent), "%"),
    height: "".concat(strokeWidth || (size === "small" ? 6 : 8), "px"),
    background: strokeColor,
    borderRadius: strokeLinecap === "square" ? 0 : "100px"
  }, backgroundProps);
  var successPercentStyle = {
    width: "".concat(validProgress(successPercent), "%"),
    height: "".concat(strokeWidth || (size === "small" ? 6 : 8), "px"),
    borderRadius: strokeLinecap === "square" ? 0 : ""
  };
  var successSegment = successPercent !== void 0 ? _createVNode$1D("div", {
    "class": "".concat(prefixCls2, "-success-bg"),
    "style": successPercentStyle
  }, null) : null;
  return _createVNode$1D("div", null, [_createVNode$1D("div", {
    "class": "".concat(prefixCls2, "-outer")
  }, [_createVNode$1D("div", _objectSpread2$2({
    "class": "".concat(prefixCls2, "-inner")
  }, trailStyle), [_createVNode$1D("div", {
    "class": "".concat(prefixCls2, "-bg"),
    "style": percentStyle
  }, null), successSegment])]), slots === null || slots === void 0 ? void 0 : slots.default()]);
};
function enhancer(Component) {
  return _extends$1(_extends$1({}, Component), {
    updated: function updated28() {
      var _this = this;
      var now2 = Date.now();
      var updated29 = false;
      Object.keys(this.paths).forEach(function(key2) {
        var path2 = _this.paths[key2];
        if (!path2) {
          return;
        }
        updated29 = true;
        var pathStyle = path2.style;
        pathStyle.transitionDuration = ".3s, .3s, .3s, .06s";
        if (_this.prevTimeStamp && now2 - _this.prevTimeStamp < 100) {
          pathStyle.transitionDuration = "0s, 0s";
        }
      });
      if (updated29) {
        this.prevTimeStamp = Date.now();
      }
    }
  });
}
var defaultProps = {
  // className: '',
  percent: 0,
  prefixCls: "rc-progress",
  strokeColor: "#2db7f5",
  strokeLinecap: "round",
  strokeWidth: 1,
  // style: {},
  trailColor: "#D9D9D9",
  trailWidth: 1
};
var mixedType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);
var propTypes = {
  // className: PropTypes.string,
  percent: PropTypes.oneOfType([mixedType, PropTypes.arrayOf(mixedType)]),
  prefixCls: PropTypes.string,
  strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])), PropTypes.object]),
  strokeLinecap: PropTypes.oneOf(["butt", "round", "square"]),
  strokeWidth: mixedType,
  // style: PropTypes.object,
  trailColor: PropTypes.string,
  trailWidth: mixedType
};
const { createVNode: _createVNode$1C } = await importShared("vue");
var __rest$h = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$M } = await importShared("vue");
var circlePropTypes = _extends$1(_extends$1({}, propTypes), {
  gapPosition: PropTypes.oneOf(["top", "bottom", "left", "right"]),
  gapDegree: withUndefined(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.looseBool]))
});
var circleDefaultProps = _extends$1(_extends$1({}, defaultProps), {
  gapPosition: "top"
});
var gradientSeed = 0;
function stripPercentToNumber(percent) {
  return +percent.replace("%", "");
}
function toArray$1(symArray) {
  return Array.isArray(symArray) ? symArray : [symArray];
}
function getPathStyles(offset4, percent, strokeColor, strokeWidth) {
  var gapDegree = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
  var gapPosition = arguments.length > 5 ? arguments[5] : void 0;
  var radius = 50 - strokeWidth / 2;
  var beginPositionX = 0;
  var beginPositionY = -radius;
  var endPositionX = 0;
  var endPositionY = -2 * radius;
  switch (gapPosition) {
    case "left":
      beginPositionX = -radius;
      beginPositionY = 0;
      endPositionX = 2 * radius;
      endPositionY = 0;
      break;
    case "right":
      beginPositionX = radius;
      beginPositionY = 0;
      endPositionX = -2 * radius;
      endPositionY = 0;
      break;
    case "bottom":
      beginPositionY = radius;
      endPositionY = 2 * radius;
      break;
  }
  var pathString = "M 50,50 m ".concat(beginPositionX, ",").concat(beginPositionY, "\n   a ").concat(radius, ",").concat(radius, " 0 1 1 ").concat(endPositionX, ",").concat(-endPositionY, "\n   a ").concat(radius, ",").concat(radius, " 0 1 1 ").concat(-endPositionX, ",").concat(endPositionY);
  var len = Math.PI * 2 * radius;
  var pathStyle = {
    stroke: strokeColor,
    strokeDasharray: "".concat(percent / 100 * (len - gapDegree), "px ").concat(len, "px"),
    strokeDashoffset: "-".concat(gapDegree / 2 + offset4 / 100 * (len - gapDegree), "px"),
    transition: "stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s, opacity .3s ease 0s"
    // eslint-disable-line
  };
  return {
    pathString,
    pathStyle
  };
}
var Circle$1 = defineComponent$M({
  name: "Circle",
  props: initDefaultProps$1(circlePropTypes, circleDefaultProps),
  created: function created15() {
    this.paths = {};
    this.gradientId = gradientSeed;
    gradientSeed += 1;
  },
  methods: {
    getStokeList: function getStokeList() {
      var _this = this;
      var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, percent = _this$$props.percent, strokeColor = _this$$props.strokeColor, strokeWidth = _this$$props.strokeWidth, strokeLinecap = _this$$props.strokeLinecap, gapDegree = _this$$props.gapDegree, gapPosition = _this$$props.gapPosition;
      var percentList = toArray$1(percent);
      var strokeColorList = toArray$1(strokeColor);
      var stackPtg = 0;
      return percentList.map(function(ptg, index2) {
        var color = strokeColorList[index2] || strokeColorList[strokeColorList.length - 1];
        var stroke = Object.prototype.toString.call(color) === "[object Object]" ? "url(#".concat(prefixCls2, "-gradient-").concat(_this.gradientId, ")") : "";
        var _getPathStyles = getPathStyles(stackPtg, ptg, color, strokeWidth, gapDegree, gapPosition), pathString = _getPathStyles.pathString, pathStyle = _getPathStyles.pathStyle;
        stackPtg += ptg;
        var pathProps = {
          key: index2,
          d: pathString,
          stroke,
          "stroke-linecap": strokeLinecap,
          "stroke-width": strokeWidth,
          opacity: ptg === 0 ? 0 : 1,
          "fill-opacity": "0",
          class: "".concat(prefixCls2, "-circle-path"),
          style: pathStyle
        };
        return _createVNode$1C("path", _objectSpread2$2({
          "ref": function ref2(c2) {
            return _this.paths[index2] = c2;
          }
        }, pathProps), null);
      });
    }
  },
  render: function render111() {
    var _a = this.$props, prefixCls2 = _a.prefixCls, strokeWidth = _a.strokeWidth, trailWidth = _a.trailWidth, gapDegree = _a.gapDegree, gapPosition = _a.gapPosition, trailColor = _a.trailColor, strokeLinecap = _a.strokeLinecap, strokeColor = _a.strokeColor, restProps = __rest$h(_a, ["prefixCls", "strokeWidth", "trailWidth", "gapDegree", "gapPosition", "trailColor", "strokeLinecap", "strokeColor"]);
    var _getPathStyles2 = getPathStyles(0, 100, trailColor, strokeWidth, gapDegree, gapPosition), pathString = _getPathStyles2.pathString, pathStyle = _getPathStyles2.pathStyle;
    delete restProps.percent;
    var strokeColorList = toArray$1(strokeColor);
    var gradient = strokeColorList.find(function(color) {
      return Object.prototype.toString.call(color) === "[object Object]";
    });
    var pathFirst = {
      d: pathString,
      stroke: trailColor,
      "stroke-linecap": strokeLinecap,
      "stroke-width": trailWidth || strokeWidth,
      "fill-opacity": "0",
      class: "".concat(prefixCls2, "-circle-trail"),
      style: pathStyle
    };
    return _createVNode$1C("svg", _objectSpread2$2({
      "class": "".concat(prefixCls2, "-circle"),
      "viewBox": "0 0 100 100"
    }, restProps), [gradient && _createVNode$1C("defs", null, [_createVNode$1C("linearGradient", {
      "id": "".concat(prefixCls2, "-gradient-").concat(this.gradientId),
      "x1": "100%",
      "y1": "0%",
      "x2": "0%",
      "y2": "0%"
    }, [Object.keys(gradient).sort(function(a2, b2) {
      return stripPercentToNumber(a2) - stripPercentToNumber(b2);
    }).map(function(key2, index2) {
      return _createVNode$1C("stop", {
        "key": index2,
        "offset": key2,
        "stop-color": gradient[key2]
      }, null);
    })])]), _createVNode$1C("path", pathFirst, null), this.getStokeList().reverse()]);
  }
});
const VCCircle = enhancer(Circle$1);
var ProgressStatuses = tuple("normal", "exception", "active", "success");
var ProgressType = PropTypes.oneOf(tuple("line", "circle", "dashboard"));
var ProgressSize = PropTypes.oneOf(tuple("default", "small"));
var ProgressProps = {
  prefixCls: PropTypes.string,
  type: ProgressType,
  percent: PropTypes.number,
  successPercent: PropTypes.number,
  format: PropTypes.func,
  status: PropTypes.oneOf(ProgressStatuses),
  showInfo: PropTypes.looseBool,
  strokeWidth: PropTypes.number,
  strokeLinecap: PropTypes.oneOf(["butt", "round", "square"]),
  strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  trailColor: PropTypes.string,
  width: PropTypes.number,
  gapDegree: PropTypes.number,
  gapPosition: PropTypes.oneOf(tuple("top", "bottom", "left", "right")),
  size: ProgressSize
};
const { createVNode: _createVNode$1B } = await importShared("vue");
const { defineComponent: defineComponent$L } = await importShared("vue");
var CircleProps = _extends$1(_extends$1({}, ProgressProps), {
  progressStatus: PropTypes.string
});
var statusColorMap = {
  normal: "#108ee9",
  exception: "#ff5500",
  success: "#87d068"
};
function getPercentage(_ref) {
  var percent = _ref.percent, successPercent = _ref.successPercent;
  var ptg = validProgress(percent);
  if (!successPercent) return ptg;
  var successPtg = validProgress(successPercent);
  return [successPercent, validProgress(ptg - successPtg)];
}
function getStrokeColor(_ref2) {
  var progressStatus = _ref2.progressStatus, successPercent = _ref2.successPercent, strokeColor = _ref2.strokeColor;
  var color = strokeColor || statusColorMap[progressStatus];
  if (!successPercent) return color;
  return [statusColorMap.success, color];
}
var Circle = defineComponent$L({
  props: CircleProps,
  setup: function setup116(props2, _ref3) {
    var slots = _ref3.slots;
    return function() {
      var _wrapperClassName;
      var prefixCls2 = props2.prefixCls, width = props2.width, strokeWidth = props2.strokeWidth, trailColor = props2.trailColor, strokeLinecap = props2.strokeLinecap, gapPosition = props2.gapPosition, gapDegree = props2.gapDegree, type3 = props2.type;
      var circleSize = width || 120;
      var circleStyle = {
        width: typeof circleSize === "number" ? "".concat(circleSize, "px") : circleSize,
        height: typeof circleSize === "number" ? "".concat(circleSize, "px") : circleSize,
        fontSize: "".concat(circleSize * 0.15 + 6, "px")
      };
      var circleWidth = strokeWidth || 6;
      var gapPos = gapPosition || type3 === "dashboard" && "bottom" || "top";
      var gapDeg = gapDegree || type3 === "dashboard" && 75;
      var strokeColor = getStrokeColor(props2);
      var isGradient = Object.prototype.toString.call(strokeColor) === "[object Object]";
      var wrapperClassName = (_wrapperClassName = {}, _defineProperty$U(_wrapperClassName, "".concat(prefixCls2, "-inner"), true), _defineProperty$U(_wrapperClassName, "".concat(prefixCls2, "-circle-gradient"), isGradient), _wrapperClassName);
      return _createVNode$1B("div", {
        "class": wrapperClassName,
        "style": circleStyle
      }, [_createVNode$1B(VCCircle, {
        "percent": getPercentage(props2),
        "strokeWidth": circleWidth,
        "trailWidth": circleWidth,
        "strokeColor": strokeColor,
        "strokeLinecap": strokeLinecap,
        "trailColor": trailColor,
        "prefixCls": prefixCls2,
        "gapDegree": gapDeg,
        "gapPosition": gapPos
      }, null), slots === null || slots === void 0 ? void 0 : slots.default()]);
    };
  }
});
const { createVNode: _createVNode$1A } = await importShared("vue");
const { defineComponent: defineComponent$K, inject: inject$q } = await importShared("vue");
const Progress$1 = defineComponent$K({
  name: "AProgress",
  props: initDefaultProps2(ProgressProps, {
    type: "line",
    percent: 0,
    showInfo: true,
    // null for different theme definition
    trailColor: null,
    size: "default",
    gapDegree: 0,
    strokeLinecap: "round"
  }),
  setup: function setup117() {
    return {
      configProvider: inject$q("configProvider", defaultConfigProvider)
    };
  },
  methods: {
    getPercentNumber: function getPercentNumber() {
      var _this$$props = this.$props, successPercent = _this$$props.successPercent, _this$$props$percent = _this$$props.percent, percent = _this$$props$percent === void 0 ? 0 : _this$$props$percent;
      return parseInt(successPercent !== void 0 ? successPercent.toString() : percent.toString(), 10);
    },
    getProgressStatus: function getProgressStatus() {
      var status = this.$props.status;
      if (ProgressStatuses.indexOf(status) < 0 && this.getPercentNumber() >= 100) {
        return "success";
      }
      return status || "normal";
    },
    renderProcessInfo: function renderProcessInfo(prefixCls2, progressStatus) {
      var _this$$props2 = this.$props, showInfo = _this$$props2.showInfo, format3 = _this$$props2.format, type3 = _this$$props2.type, percent = _this$$props2.percent, successPercent = _this$$props2.successPercent;
      if (!showInfo) return null;
      var text;
      var textFormatter = format3 || this.$slots.format || function(percentNumber) {
        return "".concat(percentNumber, "%");
      };
      var isLineType = type3 === "line";
      if (format3 || this.$slots.format || progressStatus !== "exception" && progressStatus !== "success") {
        text = textFormatter(validProgress(percent), validProgress(successPercent));
      } else if (progressStatus === "exception") {
        text = isLineType ? _createVNode$1A(CloseCircleFilled, null, null) : _createVNode$1A(CloseOutlined, null, null);
      } else if (progressStatus === "success") {
        text = isLineType ? _createVNode$1A(CheckCircleFilled, null, null) : _createVNode$1A(CheckOutlined, null, null);
      }
      return _createVNode$1A("span", {
        "class": "".concat(prefixCls2, "-text"),
        "title": typeof text === "string" ? text : void 0
      }, [text]);
    }
  },
  render: function render112() {
    var _classNames;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, size = props2.size, type3 = props2.type, showInfo = props2.showInfo;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("progress", customizePrefixCls);
    var progressStatus = this.getProgressStatus();
    var progressInfo = this.renderProcessInfo(prefixCls2, progressStatus);
    var progress;
    if (type3 === "line") {
      var lineProps = _extends$1(_extends$1({}, props2), {
        prefixCls: prefixCls2
      });
      progress = _createVNode$1A(Line, lineProps, {
        default: function _default8() {
          return [progressInfo];
        }
      });
    } else if (type3 === "circle" || type3 === "dashboard") {
      var circleProps = _extends$1(_extends$1({}, props2), {
        prefixCls: prefixCls2,
        progressStatus
      });
      progress = _createVNode$1A(Circle, circleProps, {
        default: function _default8() {
          return [progressInfo];
        }
      });
    }
    var classString = classNames(prefixCls2, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-").concat(type3 === "dashboard" && "circle" || type3), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-status-").concat(progressStatus), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-show-info"), showInfo), _defineProperty$U(_classNames, "".concat(prefixCls2, "-").concat(size), size), _classNames));
    var progressProps = {
      class: classString
    };
    return _createVNode$1A("div", progressProps, [progress]);
  }
});
const Progress = withInstall(Progress$1);
function getScroll$1(w2) {
  var ret = w2.pageXOffset;
  var method3 = "scrollLeft";
  if (typeof ret !== "number") {
    var d2 = w2.document;
    ret = d2.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d2.body[method3];
    }
  }
  return ret;
}
function getClientPosition$1(elem) {
  var x2;
  var y2;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  var box = elem.getBoundingClientRect();
  x2 = box.left;
  y2 = box.top;
  x2 -= docElem.clientLeft || body.clientLeft || 0;
  y2 -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x2,
    top: y2
  };
}
function getOffsetLeft(el) {
  var pos = getClientPosition$1(el);
  var doc = el.ownerDocument;
  var w2 = doc.defaultView || doc.parentWindow;
  pos.left += getScroll$1(w2);
  return pos.left;
}
var StarFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z" } }] }, "name": "star", "theme": "filled" };
const { createVNode: _createVNode$1z } = await importShared("vue");
function _objectSpread$h(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$i(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$i(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var StarFilled = function StarFilled2(props2, context2) {
  var p = _objectSpread$h({}, props2, context2.attrs);
  return _createVNode$1z(Icon, _objectSpread$h({}, p, {
    "icon": StarFilled$1
  }), null);
};
StarFilled.displayName = "StarFilled";
StarFilled.inheritAttrs = false;
const { createVNode: _createVNode$1y } = await importShared("vue");
const { defineComponent: defineComponent$J, computed: computed$h } = await importShared("vue");
var starProps = {
  value: PropTypes.number,
  index: PropTypes.number,
  prefixCls: PropTypes.string,
  allowHalf: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  character: PropTypes.any,
  characterRender: PropTypes.func,
  focused: PropTypes.looseBool,
  count: PropTypes.number,
  onClick: PropTypes.func,
  onHover: PropTypes.func
};
const Star = defineComponent$J({
  name: "Star",
  inheritAttrs: false,
  props: starProps,
  emits: ["hover", "click"],
  setup: function setup118(props2, _ref) {
    var slots = _ref.slots, emit = _ref.emit;
    var onHover = function onHover2(e2) {
      var index2 = props2.index;
      emit("hover", e2, index2);
    };
    var onClick7 = function onClick8(e2) {
      var index2 = props2.index;
      emit("click", e2, index2);
    };
    var onKeyDown14 = function onKeyDown15(e2) {
      var index2 = props2.index;
      if (e2.keyCode === 13) {
        emit("click", e2, index2);
      }
    };
    var cls = computed$h(function() {
      var prefixCls2 = props2.prefixCls, index2 = props2.index, value26 = props2.value, allowHalf = props2.allowHalf, focused = props2.focused;
      var starValue = index2 + 1;
      var className = prefixCls2;
      if (value26 === 0 && index2 === 0 && focused) {
        className += " ".concat(prefixCls2, "-focused");
      } else if (allowHalf && value26 + 0.5 >= starValue && value26 < starValue) {
        className += " ".concat(prefixCls2, "-half ").concat(prefixCls2, "-active");
        if (focused) {
          className += " ".concat(prefixCls2, "-focused");
        }
      } else {
        className += starValue <= value26 ? " ".concat(prefixCls2, "-full") : " ".concat(prefixCls2, "-zero");
        if (starValue === value26 && focused) {
          className += " ".concat(prefixCls2, "-focused");
        }
      }
      return className;
    });
    return function() {
      var disabled = props2.disabled, prefixCls2 = props2.prefixCls, characterRender = props2.characterRender, index2 = props2.index, count = props2.count, value26 = props2.value;
      var character = getPropsSlot(slots, props2, "character");
      var star = _createVNode$1y("li", {
        "class": cls.value
      }, [_createVNode$1y("div", {
        "onClick": disabled ? null : onClick7,
        "onKeydown": disabled ? null : onKeyDown14,
        "onMousemove": disabled ? null : onHover,
        "role": "radio",
        "aria-checked": value26 > index2 ? "true" : "false",
        "aria-posinset": index2 + 1,
        "aria-setsize": count,
        "tabindex": disabled ? -1 : 0
      }, [_createVNode$1y("div", {
        "class": "".concat(prefixCls2, "-first")
      }, [character]), _createVNode$1y("div", {
        "class": "".concat(prefixCls2, "-second")
      }, [character])])]);
      if (characterRender) {
        star = characterRender(star, props2);
      }
      return star;
    };
  }
});
const { onBeforeUpdate, ref: ref$a } = await importShared("vue");
var useRef = function useRef2() {
  var refs = ref$a({});
  var setRef = function setRef2(el, key2) {
    refs.value[key2] = el;
  };
  onBeforeUpdate(function() {
    refs.value = {};
  });
  return [setRef, refs];
};
const { createVNode: _createVNode$1x } = await importShared("vue");
const { watch: watch$7 } = await importShared("vue");
const { defineComponent: defineComponent$I, ref: ref$9, reactive: reactive$5, onMounted: onMounted$5 } = await importShared("vue");
var rateProps = {
  prefixCls: PropTypes.string,
  count: PropTypes.number,
  value: PropTypes.number,
  allowHalf: PropTypes.looseBool,
  allowClear: PropTypes.looseBool,
  tooltips: PropTypes.arrayOf(PropTypes.string),
  disabled: PropTypes.looseBool,
  character: PropTypes.any,
  autofocus: PropTypes.looseBool,
  tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
  direction: PropTypes.string
};
var Rate = defineComponent$I({
  name: "ARate",
  inheritAttrs: false,
  props: initDefaultProps$1(rateProps, {
    value: 0,
    count: 5,
    allowHalf: false,
    allowClear: true,
    prefixCls: "ant-rate",
    tabindex: 0,
    direction: "ltr"
  }),
  emits: ["hoverChange", "update:value", "change", "focus", "blur", "keydown"],
  setup: function setup119(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs, emit = _ref.emit, expose = _ref.expose;
    var _useConfigInject = useConfigInject("rate", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var rateRef = ref$9();
    var _useRef = useRef(), _useRef2 = _slicedToArray$2(_useRef, 2), setRef = _useRef2[0], starRefs = _useRef2[1];
    var state = reactive$5({
      value: props2.value,
      focused: false,
      cleanedValue: null,
      hoverValue: void 0
    });
    watch$7(function() {
      return props2.value;
    }, function() {
      state.value = props2.value;
    });
    var getStarDOM = function getStarDOM2(index2) {
      return findDOMNode(starRefs.value[index2]);
    };
    var getStarValue = function getStarValue2(index2, x2) {
      var reverse = direction.value === "rtl";
      var value26 = index2 + 1;
      if (props2.allowHalf) {
        var starEle = getStarDOM(index2);
        var leftDis = getOffsetLeft(starEle);
        var width = starEle.clientWidth;
        if (reverse && x2 - leftDis > width / 2) {
          value26 -= 0.5;
        } else if (!reverse && x2 - leftDis < width / 2) {
          value26 -= 0.5;
        }
      }
      return value26;
    };
    var changeValue = function changeValue2(value26) {
      if (props2.value === void 0) {
        state.value = value26;
      }
      emit("update:value", value26);
      emit("change", value26);
    };
    var onHover = function onHover2(e2, index2) {
      var hoverValue2 = getStarValue(index2, e2.pageX);
      if (hoverValue2 !== state.cleanedValue) {
        state.hoverValue = hoverValue2;
        state.cleanedValue = null;
      }
      emit("hoverChange", hoverValue2);
    };
    var onMouseLeave5 = function onMouseLeave6() {
      state.hoverValue = void 0;
      state.cleanedValue = null;
      emit("hoverChange", void 0);
    };
    var onClick7 = function onClick8(event, index2) {
      var allowClear = props2.allowClear;
      var newValue = getStarValue(index2, event.pageX);
      var isReset = false;
      if (allowClear) {
        isReset = newValue === state.value;
      }
      onMouseLeave5();
      changeValue(isReset ? 0 : newValue);
      state.cleanedValue = isReset ? newValue : null;
    };
    var onFocus6 = function onFocus7() {
      state.focused = true;
      emit("focus");
    };
    var onBlur7 = function onBlur8() {
      state.focused = false;
      emit("blur");
    };
    var onKeyDown14 = function onKeyDown15(event) {
      var keyCode = event.keyCode;
      var count = props2.count, allowHalf = props2.allowHalf;
      var reverse = direction.value === "rtl";
      if (keyCode === KeyCode$1.RIGHT && state.value < count && !reverse) {
        if (allowHalf) {
          state.value += 0.5;
        } else {
          state.value += 1;
        }
        changeValue(state.value);
        event.preventDefault();
      } else if (keyCode === KeyCode$1.LEFT && state.value > 0 && !reverse) {
        if (allowHalf) {
          state.value -= 0.5;
        } else {
          state.value -= 1;
        }
        changeValue(state.value);
        event.preventDefault();
      } else if (keyCode === KeyCode$1.RIGHT && state.value > 0 && reverse) {
        if (allowHalf) {
          state.value -= 0.5;
        } else {
          state.value -= 1;
        }
        changeValue(state.value);
        event.preventDefault();
      } else if (keyCode === KeyCode$1.LEFT && state.value < count && reverse) {
        if (allowHalf) {
          state.value += 0.5;
        } else {
          state.value += 1;
        }
        changeValue(state.value);
        event.preventDefault();
      }
      emit("keydown", event);
    };
    var focus27 = function focus28() {
      if (!props2.disabled) {
        rateRef.value.focus();
      }
    };
    var blur24 = function blur25() {
      if (!props2.disabled) {
        rateRef.value.blur();
      }
    };
    expose({
      focus: focus27,
      blur: blur24
    });
    onMounted$5(function() {
      var autofocus = props2.autofocus, disabled = props2.disabled;
      if (autofocus && !disabled) {
        focus27();
      }
    });
    var characterRender = function characterRender2(node, _ref2) {
      var index2 = _ref2.index;
      var tooltips = props2.tooltips;
      if (!tooltips) return node;
      return _createVNode$1x(Tooltip, {
        "title": tooltips[index2]
      }, {
        default: function _default8() {
          return [node];
        }
      });
    };
    var character = getPropsSlot(slots, props2, "character") || _createVNode$1x(StarFilled, null, null);
    return function() {
      var count = props2.count, allowHalf = props2.allowHalf, disabled = props2.disabled, tabindex = props2.tabindex;
      var className = attrs.class, style3 = attrs.style;
      var stars = [];
      var disabledClass = disabled ? "".concat(prefixCls2.value, "-disabled") : "";
      var _loop = function _loop2(index3) {
        stars.push(_createVNode$1x(Star, {
          "ref": function ref2(r2) {
            return setRef(r2, index3);
          },
          "key": index3,
          "index": index3,
          "count": count,
          "disabled": disabled,
          "prefixCls": "".concat(prefixCls2.value, "-star"),
          "allowHalf": allowHalf,
          "value": state.hoverValue === void 0 ? state.value : state.hoverValue,
          "onClick": onClick7,
          "onHover": onHover,
          "character": character,
          "characterRender": characterRender,
          "focused": state.focused
        }, null));
      };
      for (var index2 = 0; index2 < count; index2++) {
        _loop(index2);
      }
      var rateClassName = classNames(prefixCls2.value, disabledClass, className, _defineProperty$U({}, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"));
      return _createVNode$1x("ul", _objectSpread2$2(_objectSpread2$2({}, attrs), {}, {
        "class": rateClassName,
        "style": style3,
        "onMouseleave": disabled ? null : onMouseLeave5,
        "tabindex": disabled ? -1 : tabindex,
        "onFocus": disabled ? null : onFocus6,
        "onBlur": disabled ? null : onBlur7,
        "onKeydown": disabled ? null : onKeyDown14,
        "ref": rateRef,
        "role": "radiogroup"
      }), [stars]);
    };
  }
});
const index$5 = withInstall(Rate);
var WarningFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 010-96 48.01 48.01 0 010 96z" } }] }, "name": "warning", "theme": "filled" };
const { createVNode: _createVNode$1w } = await importShared("vue");
function _objectSpread$g(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$h(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$h(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var WarningFilled = function WarningFilled2(props2, context2) {
  var p = _objectSpread$g({}, props2, context2.attrs);
  return _createVNode$1w(Icon, _objectSpread$g({}, p, {
    "icon": WarningFilled$1
  }), null);
};
WarningFilled.displayName = "WarningFilled";
WarningFilled.inheritAttrs = false;
const { createVNode: _createVNode$1v } = await importShared("vue");
var NoFound = function NoFound2() {
  return _createVNode$1v("svg", {
    "width": "252",
    "height": "294"
  }, [_createVNode$1v("defs", null, [_createVNode$1v("path", {
    "d": "M0 .387h251.772v251.772H0z"
  }, null)]), _createVNode$1v("g", {
    "fill": "none",
    "fill-rule": "evenodd"
  }, [_createVNode$1v("g", {
    "transform": "translate(0 .012)"
  }, [_createVNode$1v("mask", {
    "fill": "#fff"
  }, null), _createVNode$1v("path", {
    "d": "M0 127.32v-2.095C0 56.279 55.892.387 124.838.387h2.096c68.946 0 124.838 55.892 124.838 124.838v2.096c0 68.946-55.892 124.838-124.838 124.838h-2.096C55.892 252.16 0 196.267 0 127.321",
    "fill": "#E4EBF7",
    "mask": "url(#b)"
  }, null)]), _createVNode$1v("path", {
    "d": "M39.755 130.84a8.276 8.276 0 1 1-16.468-1.66 8.276 8.276 0 0 1 16.468 1.66",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M36.975 134.297l10.482 5.943M48.373 146.508l-12.648 10.788",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1v("path", {
    "d": "M39.875 159.352a5.667 5.667 0 1 1-11.277-1.136 5.667 5.667 0 0 1 11.277 1.136M57.588 143.247a5.708 5.708 0 1 1-11.358-1.145 5.708 5.708 0 0 1 11.358 1.145M99.018 26.875l29.82-.014a4.587 4.587 0 1 0-.003-9.175l-29.82.013a4.587 4.587 0 1 0 .003 9.176M110.424 45.211l29.82-.013a4.588 4.588 0 0 0-.004-9.175l-29.82.013a4.587 4.587 0 1 0 .004 9.175",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M112.798 26.861v-.002l15.784-.006a4.588 4.588 0 1 0 .003 9.175l-15.783.007v-.002a4.586 4.586 0 0 0-.004-9.172M184.523 135.668c-.553 5.485-5.447 9.483-10.931 8.93-5.485-.553-9.483-5.448-8.93-10.932.552-5.485 5.447-9.483 10.932-8.93 5.485.553 9.483 5.447 8.93 10.932",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M179.26 141.75l12.64 7.167M193.006 156.477l-15.255 13.011",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1v("path", {
    "d": "M184.668 170.057a6.835 6.835 0 1 1-13.6-1.372 6.835 6.835 0 0 1 13.6 1.372M203.34 153.325a6.885 6.885 0 1 1-13.7-1.382 6.885 6.885 0 0 1 13.7 1.382",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M151.931 192.324a2.222 2.222 0 1 1-4.444 0 2.222 2.222 0 0 1 4.444 0zM225.27 116.056a2.222 2.222 0 1 1-4.445 0 2.222 2.222 0 0 1 4.444 0zM216.38 151.08a2.223 2.223 0 1 1-4.446-.001 2.223 2.223 0 0 1 4.446 0zM176.917 107.636a2.223 2.223 0 1 1-4.445 0 2.223 2.223 0 0 1 4.445 0zM195.291 92.165a2.223 2.223 0 1 1-4.445 0 2.223 2.223 0 0 1 4.445 0zM202.058 180.711a2.223 2.223 0 1 1-4.446 0 2.223 2.223 0 0 1 4.446 0z",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1v("path", {
    "stroke": "#FFF",
    "stroke-width": "2",
    "d": "M214.404 153.302l-1.912 20.184-10.928 5.99M173.661 174.792l-6.356 9.814h-11.36l-4.508 6.484M174.941 125.168v-15.804M220.824 117.25l-12.84 7.901-15.31-7.902V94.39"
  }, null), _createVNode$1v("path", {
    "d": "M166.588 65.936h-3.951a4.756 4.756 0 0 1-4.743-4.742 4.756 4.756 0 0 1 4.743-4.743h3.951a4.756 4.756 0 0 1 4.743 4.743 4.756 4.756 0 0 1-4.743 4.742",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M174.823 30.03c0-16.281 13.198-29.48 29.48-29.48 16.28 0 29.48 13.199 29.48 29.48 0 16.28-13.2 29.48-29.48 29.48-16.282 0-29.48-13.2-29.48-29.48",
    "fill": "#1890FF"
  }, null), _createVNode$1v("path", {
    "d": "M205.952 38.387c.5.5.785 1.142.785 1.928s-.286 1.465-.785 1.964c-.572.5-1.214.75-2 .75-.785 0-1.429-.285-1.929-.785-.572-.5-.82-1.143-.82-1.929s.248-1.428.82-1.928c.5-.5 1.144-.75 1.93-.75.785 0 1.462.25 1.999.75m4.285-19.463c1.428 1.249 2.143 2.963 2.143 5.142 0 1.712-.427 3.13-1.219 4.25-.067.096-.137.18-.218.265-.416.429-1.41 1.346-2.956 2.699a5.07 5.07 0 0 0-1.428 1.75 5.207 5.207 0 0 0-.536 2.357v.5h-4.107v-.5c0-1.357.215-2.536.714-3.5.464-.964 1.857-2.464 4.178-4.536l.43-.5c.643-.785.964-1.643.964-2.535 0-1.18-.358-2.108-1-2.785-.678-.68-1.643-1.001-2.858-1.001-1.536 0-2.642.464-3.357 1.43-.37.5-.621 1.135-.76 1.904a1.999 1.999 0 0 1-1.971 1.63h-.004c-1.277 0-2.257-1.183-1.98-2.43.337-1.518 1.02-2.78 2.073-3.784 1.536-1.5 3.607-2.25 6.25-2.25 2.32 0 4.214.607 5.642 1.894",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M52.04 76.131s21.81 5.36 27.307 15.945c5.575 10.74-6.352 9.26-15.73 4.935-10.86-5.008-24.7-11.822-11.577-20.88",
    "fill": "#FFB594"
  }, null), _createVNode$1v("path", {
    "d": "M90.483 67.504l-.449 2.893c-.753.49-4.748-2.663-4.748-2.663l-1.645.748-1.346-5.684s6.815-4.589 8.917-5.018c2.452-.501 9.884.94 10.7 2.278 0 0 1.32.486-2.227.69-3.548.203-5.043.447-6.79 3.132-1.747 2.686-2.412 3.624-2.412 3.624",
    "fill": "#FFC6A0"
  }, null), _createVNode$1v("path", {
    "d": "M128.055 111.367c-2.627-7.724-6.15-13.18-8.917-15.478-3.5-2.906-9.34-2.225-11.366-4.187-1.27-1.231-3.215-1.197-3.215-1.197s-14.98-3.158-16.828-3.479c-2.37-.41-2.124-.714-6.054-1.405-1.57-1.907-2.917-1.122-2.917-1.122l-7.11-1.383c-.853-1.472-2.423-1.023-2.423-1.023l-2.468-.897c-1.645 9.976-7.74 13.796-7.74 13.796 1.795 1.122 15.703 8.3 15.703 8.3l5.107 37.11s-3.321 5.694 1.346 9.109c0 0 19.883-3.743 34.921-.329 0 0 3.047-2.546.972-8.806.523-3.01 1.394-8.263 1.736-11.622.385.772 2.019 1.918 3.14 3.477 0 0 9.407-7.365 11.052-14.012-.832-.723-1.598-1.585-2.267-2.453-.567-.736-.358-2.056-.765-2.717-.669-1.084-1.804-1.378-1.907-1.682",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M101.09 289.998s4.295 2.041 7.354 1.021c2.821-.94 4.53.668 7.08 1.178 2.55.51 6.874 1.1 11.686-1.26-.103-5.51-6.889-3.98-11.96-6.713-2.563-1.38-3.784-4.722-3.598-8.799h-9.402s-1.392 10.52-1.16 14.573",
    "fill": "#CBD1D1"
  }, null), _createVNode$1v("path", {
    "d": "M101.067 289.826s2.428 1.271 6.759.653c3.058-.437 3.712.481 7.423 1.031 3.712.55 10.724-.069 11.823-.894.413 1.1-.343 2.063-.343 2.063s-1.512.603-4.812.824c-2.03.136-5.8.291-7.607-.503-1.787-1.375-5.247-1.903-5.728-.241-3.918.95-7.355-.286-7.355-.286l-.16-2.647z",
    "fill": "#2B0849"
  }, null), _createVNode$1v("path", {
    "d": "M108.341 276.044h3.094s-.103 6.702 4.536 8.558c-4.64.618-8.558-2.303-7.63-8.558",
    "fill": "#A4AABA"
  }, null), _createVNode$1v("path", {
    "d": "M57.542 272.401s-2.107 7.416-4.485 12.306c-1.798 3.695-4.225 7.492 5.465 7.492 6.648 0 8.953-.48 7.423-6.599-1.53-6.12.266-13.199.266-13.199h-8.669z",
    "fill": "#CBD1D1"
  }, null), _createVNode$1v("path", {
    "d": "M51.476 289.793s2.097 1.169 6.633 1.169c6.083 0 8.249-1.65 8.249-1.65s.602 1.114-.619 2.165c-.993.855-3.597 1.591-7.39 1.546-4.145-.048-5.832-.566-6.736-1.168-.825-.55-.687-1.58-.137-2.062",
    "fill": "#2B0849"
  }, null), _createVNode$1v("path", {
    "d": "M58.419 274.304s.033 1.519-.314 2.93c-.349 1.42-1.078 3.104-1.13 4.139-.058 1.151 4.537 1.58 5.155.034.62-1.547 1.294-6.427 1.913-7.252.619-.825-4.903-2.119-5.624.15",
    "fill": "#A4AABA"
  }, null), _createVNode$1v("path", {
    "d": "M99.66 278.514l13.378.092s1.298-54.52 1.853-64.403c.554-9.882 3.776-43.364 1.002-63.128l-12.547-.644-22.849.78s-.434 3.966-1.195 9.976c-.063.496-.682.843-.749 1.365-.075.585.423 1.354.32 1.966-2.364 14.08-6.377 33.104-8.744 46.677-.116.666-1.234 1.009-1.458 2.691-.04.302.211 1.525.112 1.795-6.873 18.744-10.949 47.842-14.277 61.885l14.607-.014s2.197-8.57 4.03-16.97c2.811-12.886 23.111-85.01 23.111-85.01l3.016-.521 1.043 46.35s-.224 1.234.337 2.02c.56.785-.56 1.123-.392 2.244l.392 1.794s-.449 7.178-.898 11.89c-.448 4.71-.092 39.165-.092 39.165",
    "fill": "#7BB2F9"
  }, null), _createVNode$1v("path", {
    "d": "M76.085 221.626c1.153.094 4.038-2.019 6.955-4.935M106.36 225.142s2.774-1.11 6.103-3.883",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M107.275 222.1s2.773-1.11 6.102-3.884",
    "stroke": "#648BD8",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M74.74 224.767s2.622-.591 6.505-3.365M86.03 151.634c-.27 3.106.3 8.525-4.336 9.123M103.625 149.88s.11 14.012-1.293 15.065c-2.219 1.664-2.99 1.944-2.99 1.944M99.79 150.438s.035 12.88-1.196 24.377M93.673 175.911s7.212-1.664 9.431-1.664M74.31 205.861a212.013 212.013 0 0 1-.979 4.56s-1.458 1.832-1.009 3.776c.449 1.944-.947 2.045-4.985 15.355-1.696 5.59-4.49 18.591-6.348 27.597l-.231 1.12M75.689 197.807a320.934 320.934 0 0 1-.882 4.754M82.591 152.233L81.395 162.7s-1.097.15-.5 2.244c.113 1.346-2.674 15.775-5.18 30.43M56.12 274.418h13.31",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M116.241 148.22s-17.047-3.104-35.893.2c.158 2.514-.003 4.15-.003 4.15s14.687-2.818 35.67-.312c.252-2.355.226-4.038.226-4.038",
    "fill": "#192064"
  }, null), _createVNode$1v("path", {
    "d": "M106.322 151.165l.003-4.911a.81.81 0 0 0-.778-.815c-2.44-.091-5.066-.108-7.836-.014a.818.818 0 0 0-.789.815l-.003 4.906a.81.81 0 0 0 .831.813c2.385-.06 4.973-.064 7.73.017a.815.815 0 0 0 .842-.81",
    "fill": "#FFF"
  }, null), _createVNode$1v("path", {
    "d": "M105.207 150.233l.002-3.076a.642.642 0 0 0-.619-.646 94.321 94.321 0 0 0-5.866-.01.65.65 0 0 0-.63.647v3.072a.64.64 0 0 0 .654.644 121.12 121.12 0 0 1 5.794.011c.362.01.665-.28.665-.642",
    "fill": "#192064"
  }, null), _createVNode$1v("path", {
    "d": "M100.263 275.415h12.338M101.436 270.53c.006 3.387.042 5.79.111 6.506M101.451 264.548a915.75 915.75 0 0 0-.015 4.337M100.986 174.965l.898 44.642s.673 1.57-.225 2.692c-.897 1.122 2.468.673.898 2.243-1.57 1.57.897 1.122 0 3.365-.596 1.489-.994 21.1-1.096 35.146",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M46.876 83.427s-.516 6.045 7.223 5.552c11.2-.712 9.218-9.345 31.54-21.655-.786-2.708-2.447-4.744-2.447-4.744s-11.068 3.11-22.584 8.046c-6.766 2.9-13.395 6.352-13.732 12.801M104.46 91.057l.941-5.372-8.884-11.43-5.037 5.372-1.74 7.834a.321.321 0 0 0 .108.32c.965.8 6.5 5.013 14.347 3.544a.332.332 0 0 0 .264-.268",
    "fill": "#FFC6A0"
  }, null), _createVNode$1v("path", {
    "d": "M93.942 79.387s-4.533-2.853-2.432-6.855c1.623-3.09 4.513 1.133 4.513 1.133s.52-3.642 3.121-3.642c.52-1.04 1.561-4.162 1.561-4.162s11.445 2.601 13.526 3.121c0 5.203-2.304 19.424-7.84 19.861-8.892.703-12.449-9.456-12.449-9.456",
    "fill": "#FFC6A0"
  }, null), _createVNode$1v("path", {
    "d": "M113.874 73.446c2.601-2.081 3.47-9.722 3.47-9.722s-2.479-.49-6.64-2.05c-4.683-2.081-12.798-4.747-17.48.976-9.668 3.223-2.05 19.823-2.05 19.823l2.713-3.021s-3.935-3.287-2.08-6.243c2.17-3.462 3.92 1.073 3.92 1.073s.637-2.387 3.581-3.342c.355-.71 1.036-2.674 1.432-3.85a1.073 1.073 0 0 1 1.263-.704c2.4.558 8.677 2.019 11.356 2.662.522.125.871.615.82 1.15l-.305 3.248z",
    "fill": "#520038"
  }, null), _createVNode$1v("path", {
    "d": "M104.977 76.064c-.103.61-.582 1.038-1.07.956-.489-.083-.801-.644-.698-1.254.103-.61.582-1.038 1.07-.956.488.082.8.644.698 1.254M112.132 77.694c-.103.61-.582 1.038-1.07.956-.488-.083-.8-.644-.698-1.254.103-.61.582-1.038 1.07-.956.488.082.8.643.698 1.254",
    "fill": "#552950"
  }, null), _createVNode$1v("path", {
    "stroke": "#DB836E",
    "stroke-width": "1.118",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "d": "M110.13 74.84l-.896 1.61-.298 4.357h-2.228"
  }, null), _createVNode$1v("path", {
    "d": "M110.846 74.481s1.79-.716 2.506.537",
    "stroke": "#5C2552",
    "stroke-width": "1.118",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M92.386 74.282s.477-1.114 1.113-.716c.637.398 1.274 1.433.558 1.99-.717.556.159 1.67.159 1.67",
    "stroke": "#DB836E",
    "stroke-width": "1.118",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M103.287 72.93s1.83 1.113 4.137.954",
    "stroke": "#5C2552",
    "stroke-width": "1.118",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M103.685 81.762s2.227 1.193 4.376 1.193M104.64 84.308s.954.398 1.511.318M94.693 81.205s2.308 7.4 10.424 7.639",
    "stroke": "#DB836E",
    "stroke-width": "1.118",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M81.45 89.384s.45 5.647-4.935 12.787M69 82.654s-.726 9.282-8.204 14.206",
    "stroke": "#E4EBF7",
    "stroke-width": "1.101",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M129.405 122.865s-5.272 7.403-9.422 10.768",
    "stroke": "#E4EBF7",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M119.306 107.329s.452 4.366-2.127 32.062",
    "stroke": "#E4EBF7",
    "stroke-width": "1.101",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M150.028 151.232h-49.837a1.01 1.01 0 0 1-1.01-1.01v-31.688c0-.557.452-1.01 1.01-1.01h49.837c.558 0 1.01.453 1.01 1.01v31.688a1.01 1.01 0 0 1-1.01 1.01",
    "fill": "#F2D7AD"
  }, null), _createVNode$1v("path", {
    "d": "M150.29 151.232h-19.863v-33.707h20.784v32.786a.92.92 0 0 1-.92.92",
    "fill": "#F4D19D"
  }, null), _createVNode$1v("path", {
    "d": "M123.554 127.896H92.917a.518.518 0 0 1-.425-.816l6.38-9.113c.193-.277.51-.442.85-.442h31.092l-7.26 10.371z",
    "fill": "#F2D7AD"
  }, null), _createVNode$1v("path", {
    "fill": "#CC9B6E",
    "d": "M123.689 128.447H99.25v-.519h24.169l7.183-10.26.424.298z"
  }, null), _createVNode$1v("path", {
    "d": "M158.298 127.896h-18.669a2.073 2.073 0 0 1-1.659-.83l-7.156-9.541h19.965c.49 0 .95.23 1.244.622l6.69 8.92a.519.519 0 0 1-.415.83",
    "fill": "#F4D19D"
  }, null), _createVNode$1v("path", {
    "fill": "#CC9B6E",
    "d": "M157.847 128.479h-19.384l-7.857-10.475.415-.31 7.7 10.266h19.126zM130.554 150.685l-.032-8.177.519-.002.032 8.177z"
  }, null), _createVNode$1v("path", {
    "fill": "#CC9B6E",
    "d": "M130.511 139.783l-.08-21.414.519-.002.08 21.414zM111.876 140.932l-.498-.143 1.479-5.167.498.143zM108.437 141.06l-2.679-2.935 2.665-3.434.41.318-2.397 3.089 2.384 2.612zM116.607 141.06l-.383-.35 2.383-2.612-2.397-3.089.41-.318 2.665 3.434z"
  }, null), _createVNode$1v("path", {
    "d": "M154.316 131.892l-3.114-1.96.038 3.514-1.043.092c-1.682.115-3.634.23-4.789.23-1.902 0-2.693 2.258 2.23 2.648l-2.645-.596s-2.168 1.317.504 2.3c0 0-1.58 1.217.561 2.58-.584 3.504 5.247 4.058 7.122 3.59 1.876-.47 4.233-2.359 4.487-5.16.28-3.085-.89-5.432-3.35-7.238",
    "fill": "#FFC6A0"
  }, null), _createVNode$1v("path", {
    "d": "M153.686 133.577s-6.522.47-8.36.372c-1.836-.098-1.904 2.19 2.359 2.264 3.739.15 5.451-.044 5.451-.044",
    "stroke": "#DB836E",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M145.16 135.877c-1.85 1.346.561 2.355.561 2.355s3.478.898 6.73.617",
    "stroke": "#DB836E",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M151.89 141.71s-6.28.111-6.73-2.132c-.223-1.346.45-1.402.45-1.402M146.114 140.868s-1.103 3.16 5.44 3.533M151.202 129.932v3.477M52.838 89.286c3.533-.337 8.423-1.248 13.582-7.754",
    "stroke": "#DB836E",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1v("path", {
    "d": "M168.567 248.318a6.647 6.647 0 0 1-6.647-6.647v-66.466a6.647 6.647 0 1 1 13.294 0v66.466a6.647 6.647 0 0 1-6.647 6.647",
    "fill": "#5BA02E"
  }, null), _createVNode$1v("path", {
    "d": "M176.543 247.653a6.647 6.647 0 0 1-6.646-6.647v-33.232a6.647 6.647 0 1 1 13.293 0v33.232a6.647 6.647 0 0 1-6.647 6.647",
    "fill": "#92C110"
  }, null), _createVNode$1v("path", {
    "d": "M186.443 293.613H158.92a3.187 3.187 0 0 1-3.187-3.187v-46.134a3.187 3.187 0 0 1 3.187-3.187h27.524a3.187 3.187 0 0 1 3.187 3.187v46.134a3.187 3.187 0 0 1-3.187 3.187",
    "fill": "#F2D7AD"
  }, null), _createVNode$1v("path", {
    "d": "M88.979 89.48s7.776 5.384 16.6 2.842",
    "stroke": "#E4EBF7",
    "stroke-width": "1.101",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null)])]);
};
const { createVNode: _createVNode$1u } = await importShared("vue");
var ServerError = function ServerError2() {
  return _createVNode$1u("svg", {
    "width": "254",
    "height": "294"
  }, [_createVNode$1u("defs", null, [_createVNode$1u("path", {
    "d": "M0 .335h253.49v253.49H0z"
  }, null), _createVNode$1u("path", {
    "d": "M0 293.665h253.49V.401H0z"
  }, null)]), _createVNode$1u("g", {
    "fill": "none",
    "fill-rule": "evenodd"
  }, [_createVNode$1u("g", {
    "transform": "translate(0 .067)"
  }, [_createVNode$1u("mask", {
    "fill": "#fff"
  }, null), _createVNode$1u("path", {
    "d": "M0 128.134v-2.11C0 56.608 56.273.334 125.69.334h2.11c69.416 0 125.69 56.274 125.69 125.69v2.11c0 69.417-56.274 125.69-125.69 125.69h-2.11C56.273 253.824 0 197.551 0 128.134",
    "fill": "#E4EBF7",
    "mask": "url(#b)"
  }, null)]), _createVNode$1u("path", {
    "d": "M39.989 132.108a8.332 8.332 0 1 1-16.581-1.671 8.332 8.332 0 0 1 16.58 1.671",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M37.19 135.59l10.553 5.983M48.665 147.884l-12.734 10.861",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1u("path", {
    "d": "M40.11 160.816a5.706 5.706 0 1 1-11.354-1.145 5.706 5.706 0 0 1 11.354 1.145M57.943 144.6a5.747 5.747 0 1 1-11.436-1.152 5.747 5.747 0 0 1 11.436 1.153M99.656 27.434l30.024-.013a4.619 4.619 0 1 0-.004-9.238l-30.024.013a4.62 4.62 0 0 0 .004 9.238M111.14 45.896l30.023-.013a4.62 4.62 0 1 0-.004-9.238l-30.024.013a4.619 4.619 0 1 0 .004 9.238",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M113.53 27.421v-.002l15.89-.007a4.619 4.619 0 1 0 .005 9.238l-15.892.007v-.002a4.618 4.618 0 0 0-.004-9.234M150.167 70.091h-3.979a4.789 4.789 0 0 1-4.774-4.775 4.788 4.788 0 0 1 4.774-4.774h3.979a4.789 4.789 0 0 1 4.775 4.774 4.789 4.789 0 0 1-4.775 4.775",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M171.687 30.234c0-16.392 13.289-29.68 29.681-29.68 16.392 0 29.68 13.288 29.68 29.68 0 16.393-13.288 29.681-29.68 29.681s-29.68-13.288-29.68-29.68",
    "fill": "#FF603B"
  }, null), _createVNode$1u("path", {
    "d": "M203.557 19.435l-.676 15.035a1.514 1.514 0 0 1-3.026 0l-.675-15.035a2.19 2.19 0 1 1 4.377 0m-.264 19.378c.513.477.77 1.1.77 1.87s-.257 1.393-.77 1.907c-.55.476-1.21.733-1.943.733a2.545 2.545 0 0 1-1.87-.77c-.55-.514-.806-1.136-.806-1.87 0-.77.256-1.393.806-1.87.513-.513 1.137-.733 1.87-.733.77 0 1.43.22 1.943.733",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M119.3 133.275c4.426-.598 3.612-1.204 4.079-4.778.675-5.18-3.108-16.935-8.262-25.118-1.088-10.72-12.598-11.24-12.598-11.24s4.312 4.895 4.196 16.199c1.398 5.243.804 14.45.804 14.45s5.255 11.369 11.78 10.487",
    "fill": "#FFB594"
  }, null), _createVNode$1u("path", {
    "d": "M100.944 91.61s1.463-.583 3.211.582c8.08 1.398 10.368 6.706 11.3 11.368 1.864 1.282 1.864 2.33 1.864 3.496.365.777 1.515 3.03 1.515 3.03s-7.225 1.748-10.954 6.758c-1.399-6.41-6.936-25.235-6.936-25.235",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M94.008 90.5l1.019-5.815-9.23-11.874-5.233 5.581-2.593 9.863s8.39 5.128 16.037 2.246",
    "fill": "#FFB594"
  }, null), _createVNode$1u("path", {
    "d": "M82.931 78.216s-4.557-2.868-2.445-6.892c1.632-3.107 4.537 1.139 4.537 1.139s.524-3.662 3.139-3.662c.523-1.046 1.569-4.184 1.569-4.184s11.507 2.615 13.6 3.138c-.001 5.23-2.317 19.529-7.884 19.969-8.94.706-12.516-9.508-12.516-9.508",
    "fill": "#FFC6A0"
  }, null), _createVNode$1u("path", {
    "d": "M102.971 72.243c2.616-2.093 3.489-9.775 3.489-9.775s-2.492-.492-6.676-2.062c-4.708-2.092-12.867-4.771-17.575.982-9.54 4.41-2.062 19.93-2.062 19.93l2.729-3.037s-3.956-3.304-2.092-6.277c2.183-3.48 3.943 1.08 3.943 1.08s.64-2.4 3.6-3.36c.356-.714 1.04-2.69 1.44-3.872a1.08 1.08 0 0 1 1.27-.707c2.41.56 8.723 2.03 11.417 2.676.524.126.876.619.825 1.156l-.308 3.266z",
    "fill": "#520038"
  }, null), _createVNode$1u("path", {
    "d": "M101.22 76.514c-.104.613-.585 1.044-1.076.96-.49-.082-.805-.646-.702-1.26.104-.613.585-1.044 1.076-.961.491.083.805.647.702 1.26M94.26 75.074c-.104.613-.585 1.044-1.076.96-.49-.082-.805-.646-.702-1.26.104-.613.585-1.044 1.076-.96.491.082.805.646.702 1.26",
    "fill": "#552950"
  }, null), _createVNode$1u("path", {
    "stroke": "#DB836E",
    "stroke-width": "1.063",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "d": "M99.206 73.644l-.9 1.62-.3 4.38h-2.24"
  }, null), _createVNode$1u("path", {
    "d": "M99.926 73.284s1.8-.72 2.52.54",
    "stroke": "#5C2552",
    "stroke-width": "1.117",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M81.367 73.084s.48-1.12 1.12-.72c.64.4 1.28 1.44.56 2s.16 1.68.16 1.68",
    "stroke": "#DB836E",
    "stroke-width": "1.117",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M92.326 71.724s1.84 1.12 4.16.96",
    "stroke": "#5C2552",
    "stroke-width": "1.117",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M92.726 80.604s2.24 1.2 4.4 1.2M93.686 83.164s.96.4 1.52.32M83.687 80.044s1.786 6.547 9.262 7.954",
    "stroke": "#DB836E",
    "stroke-width": "1.063",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M95.548 91.663s-1.068 2.821-8.298 2.105c-7.23-.717-10.29-5.044-10.29-5.044",
    "stroke": "#E4EBF7",
    "stroke-width": "1.136",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M78.126 87.478s6.526 4.972 16.47 2.486c0 0 9.577 1.02 11.536 5.322 5.36 11.77.543 36.835 0 39.962 3.496 4.055-.466 8.483-.466 8.483-15.624-3.548-35.81-.6-35.81-.6-4.849-3.546-1.223-9.044-1.223-9.044L62.38 110.32c-2.485-15.227.833-19.803 3.549-20.743 3.03-1.049 8.04-1.282 8.04-1.282.496-.058 1.08-.076 1.37-.233 2.36-1.282 2.787-.583 2.787-.583",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M65.828 89.81s-6.875.465-7.59 8.156c-.466 8.857 3.03 10.954 3.03 10.954s6.075 22.102 16.796 22.957c8.39-2.176 4.758-6.702 4.661-11.42-.233-11.304-7.108-16.897-7.108-16.897s-4.212-13.75-9.789-13.75",
    "fill": "#FFC6A0"
  }, null), _createVNode$1u("path", {
    "d": "M71.716 124.225s.855 11.264 9.828 6.486c4.765-2.536 7.581-13.828 9.789-22.568 1.456-5.768 2.58-12.197 2.58-12.197l-4.973-1.709s-2.408 5.516-7.769 12.275c-4.335 5.467-9.144 11.11-9.455 17.713",
    "fill": "#FFC6A0"
  }, null), _createVNode$1u("path", {
    "d": "M108.463 105.191s1.747 2.724-2.331 30.535c2.376 2.216 1.053 6.012-.233 7.51",
    "stroke": "#E4EBF7",
    "stroke-width": "1.085",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M123.262 131.527s-.427 2.732-11.77 1.981c-15.187-1.006-25.326-3.25-25.326-3.25l.933-5.8s.723.215 9.71-.068c11.887-.373 18.714-6.07 24.964-1.022 4.039 3.263 1.489 8.16 1.489 8.16",
    "fill": "#FFC6A0"
  }, null), _createVNode$1u("path", {
    "d": "M70.24 90.974s-5.593-4.739-11.054 2.68c-3.318 7.223.517 15.284 2.664 19.578-.31 3.729 2.33 4.311 2.33 4.311s.108.895 1.516 2.68c4.078-7.03 6.72-9.166 13.711-12.546-.328-.656-1.877-3.265-1.825-3.767.175-1.69-1.282-2.623-1.282-2.623s-.286-.156-1.165-2.738c-.788-2.313-2.036-5.177-4.895-7.575",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M90.232 288.027s4.855 2.308 8.313 1.155c3.188-1.063 5.12.755 8.002 1.331 2.881.577 7.769 1.243 13.207-1.424-.117-6.228-7.786-4.499-13.518-7.588-2.895-1.56-4.276-5.336-4.066-9.944H91.544s-1.573 11.89-1.312 16.47",
    "fill": "#CBD1D1"
  }, null), _createVNode$1u("path", {
    "d": "M90.207 287.833s2.745 1.437 7.639.738c3.456-.494 3.223.66 7.418 1.282 4.195.621 13.092-.194 14.334-1.126.466 1.242-.388 2.33-.388 2.33s-1.709.682-5.438.932c-2.295.154-8.098.276-10.14-.621-2.02-1.554-4.894-1.515-6.06-.234-4.427 1.075-7.184-.31-7.184-.31l-.181-2.991z",
    "fill": "#2B0849"
  }, null), _createVNode$1u("path", {
    "d": "M98.429 272.257h3.496s-.117 7.574 5.127 9.671c-5.244.7-9.672-2.602-8.623-9.671",
    "fill": "#A4AABA"
  }, null), _createVNode$1u("path", {
    "d": "M44.425 272.046s-2.208 7.774-4.702 12.899c-1.884 3.874-4.428 7.854 5.729 7.854 6.97 0 9.385-.503 7.782-6.917-1.604-6.415.279-13.836.279-13.836h-9.088z",
    "fill": "#CBD1D1"
  }, null), _createVNode$1u("path", {
    "d": "M38.066 290.277s2.198 1.225 6.954 1.225c6.376 0 8.646-1.73 8.646-1.73s.63 1.168-.649 2.27c-1.04.897-3.77 1.668-7.745 1.621-4.347-.05-6.115-.593-7.062-1.224-.864-.577-.72-1.657-.144-2.162",
    "fill": "#2B0849"
  }, null), _createVNode$1u("path", {
    "d": "M45.344 274.041s.035 1.592-.329 3.07c-.365 1.49-1.13 3.255-1.184 4.34-.061 1.206 4.755 1.657 5.403.036.65-1.622 1.357-6.737 2.006-7.602.648-.865-5.14-2.222-5.896.156",
    "fill": "#A4AABA"
  }, null), _createVNode$1u("path", {
    "d": "M89.476 277.57l13.899.095s1.349-56.643 1.925-66.909c.576-10.267 3.923-45.052 1.042-65.585l-13.037-.669-23.737.81s-.452 4.12-1.243 10.365c-.065.515-.708.874-.777 1.417-.078.608.439 1.407.332 2.044-2.455 14.627-5.797 32.736-8.256 46.837-.121.693-1.282 1.048-1.515 2.796-.042.314.22 1.584.116 1.865-7.14 19.473-12.202 52.601-15.66 67.19l15.176-.015s2.282-10.145 4.185-18.871c2.922-13.389 24.012-88.32 24.012-88.32l3.133-.954-.158 48.568s-.233 1.282.35 2.098c.583.815-.581 1.167-.408 2.331l.408 1.864s-.466 7.458-.932 12.352c-.467 4.895 1.145 40.69 1.145 40.69",
    "fill": "#7BB2F9"
  }, null), _createVNode$1u("path", {
    "d": "M64.57 218.881c1.197.099 4.195-2.097 7.225-5.127M96.024 222.534s2.881-1.152 6.34-4.034",
    "stroke": "#648BD8",
    "stroke-width": "1.085",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M96.973 219.373s2.882-1.153 6.34-4.034",
    "stroke": "#648BD8",
    "stroke-width": "1.032",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M63.172 222.144s2.724-.614 6.759-3.496M74.903 146.166c-.281 3.226.31 8.856-4.506 9.478M93.182 144.344s.115 14.557-1.344 15.65c-2.305 1.73-3.107 2.02-3.107 2.02M89.197 144.923s.269 13.144-1.01 25.088M83.525 170.71s6.81-1.051 9.116-1.051M46.026 270.045l-.892 4.538M46.937 263.289l-.815 4.157M62.725 202.503c-.33 1.618-.102 1.904-.449 3.438 0 0-2.756 1.903-2.29 3.923.466 2.02-.31 3.424-4.505 17.252-1.762 5.807-4.233 18.922-6.165 28.278-.03.144-.521 2.646-1.14 5.8M64.158 194.136c-.295 1.658-.6 3.31-.917 4.938M71.33 146.787l-1.244 10.877s-1.14.155-.519 2.33c.117 1.399-2.778 16.39-5.382 31.615M44.242 273.727H58.07",
    "stroke": "#648BD8",
    "stroke-width": "1.085",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M106.18 142.117c-3.028-.489-18.825-2.744-36.219.2a.625.625 0 0 0-.518.644c.063 1.307.044 2.343.015 2.995a.617.617 0 0 0 .716.636c3.303-.534 17.037-2.412 35.664-.266.347.04.66-.214.692-.56.124-1.347.16-2.425.17-3.029a.616.616 0 0 0-.52-.62",
    "fill": "#192064"
  }, null), _createVNode$1u("path", {
    "d": "M96.398 145.264l.003-5.102a.843.843 0 0 0-.809-.847 114.104 114.104 0 0 0-8.141-.014.85.85 0 0 0-.82.847l-.003 5.097c0 .476.388.857.864.845 2.478-.064 5.166-.067 8.03.017a.848.848 0 0 0 .876-.843",
    "fill": "#FFF"
  }, null), _createVNode$1u("path", {
    "d": "M95.239 144.296l.002-3.195a.667.667 0 0 0-.643-.672c-1.9-.061-3.941-.073-6.094-.01a.675.675 0 0 0-.654.672l-.002 3.192c0 .376.305.677.68.669 1.859-.042 3.874-.043 6.02.012.376.01.69-.291.691-.668",
    "fill": "#192064"
  }, null), _createVNode$1u("path", {
    "d": "M90.102 273.522h12.819M91.216 269.761c.006 3.519-.072 5.55 0 6.292M90.923 263.474c-.009 1.599-.016 2.558-.016 4.505M90.44 170.404l.932 46.38s.7 1.631-.233 2.796c-.932 1.166 2.564.7.932 2.33-1.63 1.633.933 1.166 0 3.497-.618 1.546-1.031 21.921-1.138 36.513",
    "stroke": "#648BD8",
    "stroke-width": "1.085",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M73.736 98.665l2.214 4.312s2.098.816 1.865 2.68l.816 2.214M64.297 116.611c.233-.932 2.176-7.147 12.585-10.488M77.598 90.042s7.691 6.137 16.547 2.72",
    "stroke": "#E4EBF7",
    "stroke-width": "1.085",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M91.974 86.954s5.476-.816 7.574-4.545c1.297-.345.72 2.212-.33 3.671-.7.971-1.01 1.554-1.01 1.554s.194.31.155.816c-.053.697-.175.653-.272 1.048-.081.335.108.657 0 1.049-.046.17-.198.5-.382.878-.12.249-.072.687-.2.948-.231.469-1.562 1.87-2.622 2.855-3.826 3.554-5.018 1.644-6.001-.408-.894-1.865-.661-5.127-.874-6.875-.35-2.914-2.622-3.03-1.923-4.429.343-.685 2.87.69 3.263 1.748.757 2.04 2.952 1.807 2.622 1.69",
    "fill": "#FFC6A0"
  }, null), _createVNode$1u("path", {
    "d": "M99.8 82.429c-.465.077-.35.272-.97 1.243-.622.971-4.817 2.932-6.39 3.224-2.589.48-2.278-1.56-4.254-2.855-1.69-1.107-3.562-.638-1.398 1.398.99.932.932 1.107 1.398 3.205.335 1.506-.64 3.67.7 5.593",
    "stroke": "#DB836E",
    "stroke-width": ".774",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M79.543 108.673c-2.1 2.926-4.266 6.175-5.557 8.762",
    "stroke": "#E59788",
    "stroke-width": ".774",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M87.72 124.768s-2.098-1.942-5.127-2.719c-3.03-.777-3.574-.155-5.516.078-1.942.233-3.885-.932-3.652.7.233 1.63 5.05 1.01 5.206 2.097.155 1.087-6.37 2.796-8.313 2.175-.777.777.466 1.864 2.02 2.175.233 1.554 2.253 1.554 2.253 1.554s.699 1.01 2.641 1.088c2.486 1.32 8.934-.7 10.954-1.554 2.02-.855-.466-5.594-.466-5.594",
    "fill": "#FFC6A0"
  }, null), _createVNode$1u("path", {
    "d": "M73.425 122.826s.66 1.127 3.167 1.418c2.315.27 2.563.583 2.563.583s-2.545 2.894-9.07 2.272M72.416 129.274s3.826.097 4.933-.718M74.98 130.75s1.961.136 3.36-.505M77.232 131.916s1.748.019 2.914-.505M73.328 122.321s-.595-1.032 1.262-.427c1.671.544 2.833.055 5.128.155 1.389.061 3.067-.297 3.982.15 1.606.784 3.632 2.181 3.632 2.181s10.526 1.204 19.033-1.127M78.864 108.104s-8.39 2.758-13.168 12.12",
    "stroke": "#E59788",
    "stroke-width": ".774",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M109.278 112.533s3.38-3.613 7.575-4.662",
    "stroke": "#E4EBF7",
    "stroke-width": "1.085",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M107.375 123.006s9.697-2.745 11.445-.88",
    "stroke": "#E59788",
    "stroke-width": ".774",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M194.605 83.656l3.971-3.886M187.166 90.933l3.736-3.655M191.752 84.207l-4.462-4.56M198.453 91.057l-4.133-4.225M129.256 163.074l3.718-3.718M122.291 170.039l3.498-3.498M126.561 163.626l-4.27-4.27M132.975 170.039l-3.955-3.955",
    "stroke": "#BFCDDD",
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1u("path", {
    "d": "M190.156 211.779h-1.604a4.023 4.023 0 0 1-4.011-4.011V175.68a4.023 4.023 0 0 1 4.01-4.01h1.605a4.023 4.023 0 0 1 4.011 4.01v32.088a4.023 4.023 0 0 1-4.01 4.01",
    "fill": "#A3B4C6"
  }, null), _createVNode$1u("path", {
    "d": "M237.824 212.977a4.813 4.813 0 0 1-4.813 4.813h-86.636a4.813 4.813 0 0 1 0-9.626h86.636a4.813 4.813 0 0 1 4.813 4.813",
    "fill": "#A3B4C6"
  }, null), _createVNode$1u("mask", {
    "fill": "#fff"
  }, null), _createVNode$1u("path", {
    "fill": "#A3B4C6",
    "mask": "url(#d)",
    "d": "M154.098 190.096h70.513v-84.617h-70.513z"
  }, null), _createVNode$1u("path", {
    "d": "M224.928 190.096H153.78a3.219 3.219 0 0 1-3.208-3.209V167.92a3.219 3.219 0 0 1 3.208-3.21h71.148a3.219 3.219 0 0 1 3.209 3.21v18.967a3.219 3.219 0 0 1-3.21 3.209M224.928 130.832H153.78a3.218 3.218 0 0 1-3.208-3.208v-18.968a3.219 3.219 0 0 1 3.208-3.209h71.148a3.219 3.219 0 0 1 3.209 3.21v18.967a3.218 3.218 0 0 1-3.21 3.208",
    "fill": "#BFCDDD",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M159.563 120.546a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M166.98 120.546a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M174.397 120.546a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M222.539 120.546h-22.461a.802.802 0 0 1-.802-.802v-3.208c0-.443.359-.803.802-.803h22.46c.444 0 .803.36.803.803v3.208c0 .443-.36.802-.802.802",
    "fill": "#FFF",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M224.928 160.464H153.78a3.218 3.218 0 0 1-3.208-3.209v-18.967a3.219 3.219 0 0 1 3.208-3.209h71.148a3.219 3.219 0 0 1 3.209 3.209v18.967a3.218 3.218 0 0 1-3.21 3.209",
    "fill": "#BFCDDD",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M173.455 130.832h49.301M164.984 130.832h6.089M155.952 130.832h6.75M173.837 160.613h49.3M165.365 160.613h6.089M155.57 160.613h6.751",
    "stroke": "#7C90A5",
    "stroke-width": "1.124",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M159.563 151.038a2.407 2.407 0 1 1 0-4.814 2.407 2.407 0 0 1 0 4.814M166.98 151.038a2.407 2.407 0 1 1 0-4.814 2.407 2.407 0 0 1 0 4.814M174.397 151.038a2.407 2.407 0 1 1 .001-4.814 2.407 2.407 0 0 1 0 4.814M222.539 151.038h-22.461a.802.802 0 0 1-.802-.802v-3.209c0-.443.359-.802.802-.802h22.46c.444 0 .803.36.803.802v3.209c0 .443-.36.802-.802.802M159.563 179.987a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M166.98 179.987a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M174.397 179.987a2.407 2.407 0 1 1 0-4.813 2.407 2.407 0 0 1 0 4.813M222.539 179.987h-22.461a.802.802 0 0 1-.802-.802v-3.209c0-.443.359-.802.802-.802h22.46c.444 0 .803.36.803.802v3.209c0 .443-.36.802-.802.802",
    "fill": "#FFF",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M203.04 221.108h-27.372a2.413 2.413 0 0 1-2.406-2.407v-11.448a2.414 2.414 0 0 1 2.406-2.407h27.372a2.414 2.414 0 0 1 2.407 2.407V218.7a2.413 2.413 0 0 1-2.407 2.407",
    "fill": "#BFCDDD",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M177.259 207.217v11.52M201.05 207.217v11.52",
    "stroke": "#A3B4C6",
    "stroke-width": "1.124",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M162.873 267.894a9.422 9.422 0 0 1-9.422-9.422v-14.82a9.423 9.423 0 0 1 18.845 0v14.82a9.423 9.423 0 0 1-9.423 9.422",
    "fill": "#5BA02E",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M171.22 267.83a9.422 9.422 0 0 1-9.422-9.423v-3.438a9.423 9.423 0 0 1 18.845 0v3.438a9.423 9.423 0 0 1-9.422 9.423",
    "fill": "#92C110",
    "mask": "url(#d)"
  }, null), _createVNode$1u("path", {
    "d": "M181.31 293.666h-27.712a3.209 3.209 0 0 1-3.209-3.21V269.79a3.209 3.209 0 0 1 3.209-3.21h27.711a3.209 3.209 0 0 1 3.209 3.21v20.668a3.209 3.209 0 0 1-3.209 3.209",
    "fill": "#F2D7AD",
    "mask": "url(#d)"
  }, null)])]);
};
const { createVNode: _createVNode$1t } = await importShared("vue");
var Unauthorized = function Unauthorized2() {
  return _createVNode$1t("svg", {
    "width": "251",
    "height": "294"
  }, [_createVNode$1t("g", {
    "fill": "none",
    "fill-rule": "evenodd"
  }, [_createVNode$1t("path", {
    "d": "M0 129.023v-2.084C0 58.364 55.591 2.774 124.165 2.774h2.085c68.574 0 124.165 55.59 124.165 124.165v2.084c0 68.575-55.59 124.166-124.165 124.166h-2.085C55.591 253.189 0 197.598 0 129.023",
    "fill": "#E4EBF7"
  }, null), _createVNode$1t("path", {
    "d": "M41.417 132.92a8.231 8.231 0 1 1-16.38-1.65 8.231 8.231 0 0 1 16.38 1.65",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M38.652 136.36l10.425 5.91M49.989 148.505l-12.58 10.73",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1t("path", {
    "d": "M41.536 161.28a5.636 5.636 0 1 1-11.216-1.13 5.636 5.636 0 0 1 11.216 1.13M59.154 145.261a5.677 5.677 0 1 1-11.297-1.138 5.677 5.677 0 0 1 11.297 1.138M100.36 29.516l29.66-.013a4.562 4.562 0 1 0-.004-9.126l-29.66.013a4.563 4.563 0 0 0 .005 9.126M111.705 47.754l29.659-.013a4.563 4.563 0 1 0-.004-9.126l-29.66.013a4.563 4.563 0 1 0 .005 9.126",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M114.066 29.503V29.5l15.698-.007a4.563 4.563 0 1 0 .004 9.126l-15.698.007v-.002a4.562 4.562 0 0 0-.004-9.122M185.405 137.723c-.55 5.455-5.418 9.432-10.873 8.882-5.456-.55-9.432-5.418-8.882-10.873.55-5.455 5.418-9.432 10.873-8.882 5.455.55 9.432 5.418 8.882 10.873",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M180.17 143.772l12.572 7.129M193.841 158.42L178.67 171.36",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1t("path", {
    "d": "M185.55 171.926a6.798 6.798 0 1 1-13.528-1.363 6.798 6.798 0 0 1 13.527 1.363M204.12 155.285a6.848 6.848 0 1 1-13.627-1.375 6.848 6.848 0 0 1 13.626 1.375",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M152.988 194.074a2.21 2.21 0 1 1-4.42 0 2.21 2.21 0 0 1 4.42 0zM225.931 118.217a2.21 2.21 0 1 1-4.421 0 2.21 2.21 0 0 1 4.421 0zM217.09 153.051a2.21 2.21 0 1 1-4.421 0 2.21 2.21 0 0 1 4.42 0zM177.84 109.842a2.21 2.21 0 1 1-4.422 0 2.21 2.21 0 0 1 4.421 0zM196.114 94.454a2.21 2.21 0 1 1-4.421 0 2.21 2.21 0 0 1 4.421 0zM202.844 182.523a2.21 2.21 0 1 1-4.42 0 2.21 2.21 0 0 1 4.42 0z",
    "stroke": "#FFF",
    "stroke-width": "2"
  }, null), _createVNode$1t("path", {
    "stroke": "#FFF",
    "stroke-width": "2",
    "d": "M215.125 155.262l-1.902 20.075-10.87 5.958M174.601 176.636l-6.322 9.761H156.98l-4.484 6.449M175.874 127.28V111.56M221.51 119.404l-12.77 7.859-15.228-7.86V96.668"
  }, null), _createVNode$1t("path", {
    "d": "M180.68 29.32C180.68 13.128 193.806 0 210 0c16.193 0 29.32 13.127 29.32 29.32 0 16.194-13.127 29.322-29.32 29.322-16.193 0-29.32-13.128-29.32-29.321",
    "fill": "#A26EF4"
  }, null), _createVNode$1t("path", {
    "d": "M221.45 41.706l-21.563-.125a1.744 1.744 0 0 1-1.734-1.754l.071-12.23a1.744 1.744 0 0 1 1.754-1.734l21.562.125c.964.006 1.74.791 1.735 1.755l-.071 12.229a1.744 1.744 0 0 1-1.754 1.734",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M215.106 29.192c-.015 2.577-2.049 4.654-4.543 4.64-2.494-.014-4.504-2.115-4.489-4.693l.04-6.925c.016-2.577 2.05-4.654 4.543-4.64 2.494.015 4.504 2.116 4.49 4.693l-.04 6.925zm-4.53-14.074a6.877 6.877 0 0 0-6.916 6.837l-.043 7.368a6.877 6.877 0 0 0 13.754.08l.042-7.368a6.878 6.878 0 0 0-6.837-6.917zM167.566 68.367h-3.93a4.73 4.73 0 0 1-4.717-4.717 4.73 4.73 0 0 1 4.717-4.717h3.93a4.73 4.73 0 0 1 4.717 4.717 4.73 4.73 0 0 1-4.717 4.717",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M168.214 248.838a6.611 6.611 0 0 1-6.61-6.611v-66.108a6.611 6.611 0 0 1 13.221 0v66.108a6.611 6.611 0 0 1-6.61 6.61",
    "fill": "#5BA02E"
  }, null), _createVNode$1t("path", {
    "d": "M176.147 248.176a6.611 6.611 0 0 1-6.61-6.61v-33.054a6.611 6.611 0 1 1 13.221 0v33.053a6.611 6.611 0 0 1-6.61 6.611",
    "fill": "#92C110"
  }, null), _createVNode$1t("path", {
    "d": "M185.994 293.89h-27.376a3.17 3.17 0 0 1-3.17-3.17v-45.887a3.17 3.17 0 0 1 3.17-3.17h27.376a3.17 3.17 0 0 1 3.17 3.17v45.886a3.17 3.17 0 0 1-3.17 3.17",
    "fill": "#F2D7AD"
  }, null), _createVNode$1t("path", {
    "d": "M81.972 147.673s6.377-.927 17.566-1.28c11.729-.371 17.57 1.086 17.57 1.086s3.697-3.855.968-8.424c1.278-12.077 5.982-32.827.335-48.273-1.116-1.339-3.743-1.512-7.536-.62-1.337.315-7.147-.149-7.983-.1l-15.311-.347s-3.487-.17-8.035-.508c-1.512-.113-4.227-1.683-5.458-.338-.406.443-2.425 5.669-1.97 16.077l8.635 35.642s-3.141 3.61 1.219 7.085",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M75.768 73.325l-.9-6.397 11.982-6.52s7.302-.118 8.038 1.205c.737 1.324-5.616.993-5.616.993s-1.836 1.388-2.615 2.5c-1.654 2.363-.986 6.471-8.318 5.986-1.708.284-2.57 2.233-2.57 2.233",
    "fill": "#FFC6A0"
  }, null), _createVNode$1t("path", {
    "d": "M52.44 77.672s14.217 9.406 24.973 14.444c1.061.497-2.094 16.183-11.892 11.811-7.436-3.318-20.162-8.44-21.482-14.496-.71-3.258 2.543-7.643 8.401-11.76M141.862 80.113s-6.693 2.999-13.844 6.876c-3.894 2.11-10.137 4.704-12.33 7.988-6.224 9.314 3.536 11.22 12.947 7.503 6.71-2.651 28.999-12.127 13.227-22.367",
    "fill": "#FFB594"
  }, null), _createVNode$1t("path", {
    "d": "M76.166 66.36l3.06 3.881s-2.783 2.67-6.31 5.747c-7.103 6.195-12.803 14.296-15.995 16.44-3.966 2.662-9.754 3.314-12.177-.118-3.553-5.032.464-14.628 31.422-25.95",
    "fill": "#FFC6A0"
  }, null), _createVNode$1t("path", {
    "d": "M64.674 85.116s-2.34 8.413-8.912 14.447c.652.548 18.586 10.51 22.144 10.056 5.238-.669 6.417-18.968 1.145-20.531-.702-.208-5.901-1.286-8.853-2.167-.87-.26-1.611-1.71-3.545-.936l-1.98-.869zM128.362 85.826s5.318 1.956 7.325 13.734c-.546.274-17.55 12.35-21.829 7.805-6.534-6.94-.766-17.393 4.275-18.61 4.646-1.121 5.03-1.37 10.23-2.929",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M78.18 94.656s.911 7.41-4.914 13.078",
    "stroke": "#E4EBF7",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M87.397 94.68s3.124 2.572 10.263 2.572c7.14 0 9.074-3.437 9.074-3.437",
    "stroke": "#E4EBF7",
    "stroke-width": ".932",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M117.184 68.639l-6.781-6.177s-5.355-4.314-9.223-.893c-3.867 3.422 4.463 2.083 5.653 4.165 1.19 2.082.848 1.143-2.083.446-5.603-1.331-2.082.893 2.975 5.355 2.091 1.845 6.992.955 6.992.955l2.467-3.851z",
    "fill": "#FFC6A0"
  }, null), _createVNode$1t("path", {
    "d": "M105.282 91.315l-.297-10.937-15.918-.027-.53 10.45c-.026.403.17.788.515.999 2.049 1.251 9.387 5.093 15.799.424.287-.21.443-.554.431-.91",
    "fill": "#FFB594"
  }, null), _createVNode$1t("path", {
    "d": "M107.573 74.24c.817-1.147.982-9.118 1.015-11.928a1.046 1.046 0 0 0-.965-1.055l-4.62-.365c-7.71-1.044-17.071.624-18.253 6.346-5.482 5.813-.421 13.244-.421 13.244s1.963 3.566 4.305 6.791c.756 1.041.398-3.731 3.04-5.929 5.524-4.594 15.899-7.103 15.899-7.103",
    "fill": "#5C2552"
  }, null), _createVNode$1t("path", {
    "d": "M88.426 83.206s2.685 6.202 11.602 6.522c7.82.28 8.973-7.008 7.434-17.505l-.909-5.483c-6.118-2.897-15.478.54-15.478.54s-.576 2.044-.19 5.504c-2.276 2.066-1.824 5.618-1.824 5.618s-.905-1.922-1.98-2.321c-.86-.32-1.897.089-2.322 1.98-1.04 4.632 3.667 5.145 3.667 5.145",
    "fill": "#FFC6A0"
  }, null), _createVNode$1t("path", {
    "stroke": "#DB836E",
    "stroke-width": "1.145",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    "d": "M100.843 77.099l1.701-.928-1.015-4.324.674-1.406"
  }, null), _createVNode$1t("path", {
    "d": "M105.546 74.092c-.022.713-.452 1.279-.96 1.263-.51-.016-.904-.607-.882-1.32.021-.713.452-1.278.96-1.263.51.016.904.607.882 1.32M97.592 74.349c-.022.713-.452 1.278-.961 1.263-.509-.016-.904-.607-.882-1.32.022-.713.452-1.279.961-1.263.51.016.904.606.882 1.32",
    "fill": "#552950"
  }, null), _createVNode$1t("path", {
    "d": "M91.132 86.786s5.269 4.957 12.679 2.327",
    "stroke": "#DB836E",
    "stroke-width": "1.145",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M99.776 81.903s-3.592.232-1.44-2.79c1.59-1.496 4.897-.46 4.897-.46s1.156 3.906-3.457 3.25",
    "fill": "#DB836E"
  }, null), _createVNode$1t("path", {
    "d": "M102.88 70.6s2.483.84 3.402.715M93.883 71.975s2.492-1.144 4.778-1.073",
    "stroke": "#5C2552",
    "stroke-width": "1.526",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M86.32 77.374s.961.879 1.458 2.106c-.377.48-1.033 1.152-.236 1.809M99.337 83.719s1.911.151 2.509-.254",
    "stroke": "#DB836E",
    "stroke-width": "1.145",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M87.782 115.821l15.73-3.012M100.165 115.821l10.04-2.008",
    "stroke": "#E4EBF7",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M66.508 86.763s-1.598 8.83-6.697 14.078",
    "stroke": "#E4EBF7",
    "stroke-width": "1.114",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M128.31 87.934s3.013 4.121 4.06 11.785",
    "stroke": "#E4EBF7",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M64.09 84.816s-6.03 9.912-13.607 9.903",
    "stroke": "#DB836E",
    "stroke-width": ".795",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M112.366 65.909l-.142 5.32s5.993 4.472 11.945 9.202c4.482 3.562 8.888 7.455 10.985 8.662 4.804 2.766 8.9 3.355 11.076 1.808 4.071-2.894 4.373-9.878-8.136-15.263-4.271-1.838-16.144-6.36-25.728-9.73",
    "fill": "#FFC6A0"
  }, null), _createVNode$1t("path", {
    "d": "M130.532 85.488s4.588 5.757 11.619 6.214",
    "stroke": "#DB836E",
    "stroke-width": ".75",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M121.708 105.73s-.393 8.564-1.34 13.612",
    "stroke": "#E4EBF7",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M115.784 161.512s-3.57-1.488-2.678-7.14",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M101.52 290.246s4.326 2.057 7.408 1.03c2.842-.948 4.564.673 7.132 1.186 2.57.514 6.925 1.108 11.772-1.269-.104-5.551-6.939-4.01-12.048-6.763-2.582-1.39-3.812-4.757-3.625-8.863h-9.471s-1.402 10.596-1.169 14.68",
    "fill": "#CBD1D1"
  }, null), _createVNode$1t("path", {
    "d": "M101.496 290.073s2.447 1.281 6.809.658c3.081-.44 3.74.485 7.479 1.039 3.739.554 10.802-.07 11.91-.9.415 1.108-.347 2.077-.347 2.077s-1.523.608-4.847.831c-2.045.137-5.843.293-7.663-.507-1.8-1.385-5.286-1.917-5.77-.243-3.947.958-7.41-.288-7.41-.288l-.16-2.667z",
    "fill": "#2B0849"
  }, null), _createVNode$1t("path", {
    "d": "M108.824 276.19h3.116s-.103 6.751 4.57 8.62c-4.673.624-8.62-2.32-7.686-8.62",
    "fill": "#A4AABA"
  }, null), _createVNode$1t("path", {
    "d": "M57.65 272.52s-2.122 7.47-4.518 12.396c-1.811 3.724-4.255 7.548 5.505 7.548 6.698 0 9.02-.483 7.479-6.648-1.541-6.164.268-13.296.268-13.296H57.65z",
    "fill": "#CBD1D1"
  }, null), _createVNode$1t("path", {
    "d": "M51.54 290.04s2.111 1.178 6.682 1.178c6.128 0 8.31-1.662 8.31-1.662s.605 1.122-.624 2.18c-1 .862-3.624 1.603-7.444 1.559-4.177-.049-5.876-.57-6.786-1.177-.831-.554-.692-1.593-.138-2.078",
    "fill": "#2B0849"
  }, null), _createVNode$1t("path", {
    "d": "M58.533 274.438s.034 1.529-.315 2.95c-.352 1.431-1.087 3.127-1.139 4.17-.058 1.16 4.57 1.592 5.194.035.623-1.559 1.303-6.475 1.927-7.306.622-.831-4.94-2.135-5.667.15",
    "fill": "#A4AABA"
  }, null), _createVNode$1t("path", {
    "d": "M100.885 277.015l13.306.092s1.291-54.228 1.843-64.056c.552-9.828 3.756-43.13.997-62.788l-12.48-.64-22.725.776s-.433 3.944-1.19 9.921c-.062.493-.677.838-.744 1.358-.075.582.42 1.347.318 1.956-2.35 14.003-6.343 32.926-8.697 46.425-.116.663-1.227 1.004-1.45 2.677-.04.3.21 1.516.112 1.785-6.836 18.643-10.89 47.584-14.2 61.551l14.528-.014s2.185-8.524 4.008-16.878c2.796-12.817 22.987-84.553 22.987-84.553l3-.517 1.037 46.1s-.223 1.228.334 2.008c.558.782-.556 1.117-.39 2.233l.39 1.784s-.446 7.14-.892 11.826c-.446 4.685-.092 38.954-.092 38.954",
    "fill": "#7BB2F9"
  }, null), _createVNode$1t("path", {
    "d": "M77.438 220.434c1.146.094 4.016-2.008 6.916-4.91M107.55 223.931s2.758-1.103 6.069-3.862",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M108.459 220.905s2.759-1.104 6.07-3.863",
    "stroke": "#648BD8",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M76.099 223.557s2.608-.587 6.47-3.346M87.33 150.82c-.27 3.088.297 8.478-4.315 9.073M104.829 149.075s.11 13.936-1.286 14.983c-2.207 1.655-2.975 1.934-2.975 1.934M101.014 149.63s.035 12.81-1.19 24.245M94.93 174.965s7.174-1.655 9.38-1.655M75.671 204.754c-.316 1.55-.64 3.067-.973 4.535 0 0-1.45 1.822-1.003 3.756.446 1.934-.943 2.034-4.96 15.273-1.686 5.559-4.464 18.49-6.313 27.447-.078.38-4.018 18.06-4.093 18.423M77.043 196.743a313.269 313.269 0 0 1-.877 4.729M83.908 151.414l-1.19 10.413s-1.091.148-.496 2.23c.111 1.34-2.66 15.692-5.153 30.267M57.58 272.94h13.238",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null), _createVNode$1t("path", {
    "d": "M117.377 147.423s-16.955-3.087-35.7.199c.157 2.501-.002 4.128-.002 4.128s14.607-2.802 35.476-.31c.251-2.342.226-4.017.226-4.017",
    "fill": "#192064"
  }, null), _createVNode$1t("path", {
    "d": "M107.511 150.353l.004-4.885a.807.807 0 0 0-.774-.81c-2.428-.092-5.04-.108-7.795-.014a.814.814 0 0 0-.784.81l-.003 4.88c0 .456.371.82.827.808a140.76 140.76 0 0 1 7.688.017.81.81 0 0 0 .837-.806",
    "fill": "#FFF"
  }, null), _createVNode$1t("path", {
    "d": "M106.402 149.426l.002-3.06a.64.64 0 0 0-.616-.643 94.135 94.135 0 0 0-5.834-.009.647.647 0 0 0-.626.643l-.001 3.056c0 .36.291.648.651.64 1.78-.04 3.708-.041 5.762.012.36.009.662-.279.662-.64",
    "fill": "#192064"
  }, null), _createVNode$1t("path", {
    "d": "M101.485 273.933h12.272M102.652 269.075c.006 3.368.04 5.759.11 6.47M102.667 263.125c-.009 1.53-.015 2.98-.016 4.313M102.204 174.024l.893 44.402s.669 1.561-.224 2.677c-.892 1.116 2.455.67.893 2.231-1.562 1.562.893 1.116 0 3.347-.592 1.48-.988 20.987-1.09 34.956",
    "stroke": "#648BD8",
    "stroke-width": "1.051",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, null)])]);
};
const { createVNode: _createVNode$1s } = await importShared("vue");
const { defineComponent: defineComponent$H, computed: computed$g } = await importShared("vue");
var IconMap = {
  success: CheckCircleFilled,
  error: CloseCircleFilled,
  info: ExclamationCircleFilled,
  warning: WarningFilled
};
var ExceptionMap = {
  "404": NoFound,
  "500": ServerError,
  "403": Unauthorized
};
var ExceptionStatus = Object.keys(ExceptionMap);
var resultProps = {
  prefixCls: PropTypes.string,
  icon: PropTypes.any,
  status: PropTypes.oneOf(tuple("success", "error", "info", "warning", "404", "403", "500")).def("info"),
  title: PropTypes.any,
  subTitle: PropTypes.any,
  extra: PropTypes.any
};
var renderIcon = function renderIcon2(prefixCls2, _ref) {
  var status = _ref.status, icon = _ref.icon;
  if (ExceptionStatus.includes("".concat(status))) {
    var SVGComponent = ExceptionMap[status];
    return _createVNode$1s("div", {
      "class": "".concat(prefixCls2, "-icon ").concat(prefixCls2, "-image")
    }, [_createVNode$1s(SVGComponent, null, null)]);
  }
  var IconComponent = IconMap[status];
  var iconNode = icon || _createVNode$1s(IconComponent, null, null);
  return _createVNode$1s("div", {
    "class": "".concat(prefixCls2, "-icon")
  }, [iconNode]);
};
var renderExtra = function renderExtra2(prefixCls2, extra) {
  return extra && _createVNode$1s("div", {
    "class": "".concat(prefixCls2, "-extra")
  }, [extra]);
};
var Result = defineComponent$H({
  name: "AResult",
  props: resultProps,
  slots: ["title", "subTitle", "icon", "extra"],
  setup: function setup120(props2, _ref2) {
    var slots = _ref2.slots;
    var _useConfigInject = useConfigInject("result", props2), prefixCls2 = _useConfigInject.prefixCls, direction = _useConfigInject.direction;
    var className = computed$g(function() {
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-").concat(props2.status), _defineProperty$U({}, "".concat(prefixCls2.value, "-rtl"), direction.value === "rtl"));
    });
    return function() {
      var _a, _b, _c, _d, _e, _f, _g, _h;
      var title = (_a = props2.title) !== null && _a !== void 0 ? _a : (_b = slots.title) === null || _b === void 0 ? void 0 : _b.call(slots);
      var subTitle = (_c = props2.subTitle) !== null && _c !== void 0 ? _c : (_d = slots.subTitle) === null || _d === void 0 ? void 0 : _d.call(slots);
      var icon = (_e = props2.icon) !== null && _e !== void 0 ? _e : (_f = slots.icon) === null || _f === void 0 ? void 0 : _f.call(slots);
      var extra = (_g = props2.extra) !== null && _g !== void 0 ? _g : (_h = slots.extra) === null || _h === void 0 ? void 0 : _h.call(slots);
      var pre = prefixCls2.value;
      return _createVNode$1s("div", {
        "class": className.value
      }, [renderIcon(pre, {
        status: props2.status,
        icon
      }), _createVNode$1s("div", {
        "class": "".concat(pre, "-title")
      }, [title]), subTitle && _createVNode$1s("div", {
        "class": "".concat(pre, "-subtitle")
      }, [subTitle]), renderExtra(pre, extra), slots.default && _createVNode$1s("div", {
        "class": "".concat(pre, "-content")
      }, [slots.default()])]);
    };
  }
});
Result.PRESENTED_IMAGE_403 = ExceptionMap[403];
Result.PRESENTED_IMAGE_404 = ExceptionMap[404];
Result.PRESENTED_IMAGE_500 = ExceptionMap[500];
Result.install = function(app) {
  app.component(Result.name, Result);
  return app;
};
const { createVNode: _createVNode$1r } = await importShared("vue");
const { computed: computed$f, defineComponent: defineComponent$G } = await importShared("vue");
var SkeletonButton = defineComponent$G({
  name: "ASkeletonButton",
  props: _extends$1(_extends$1({}, skeletonElementProps()), {
    size: PropTypes.oneOf(tuple("large", "small", "default"))
  }),
  setup: function setup121(props2) {
    var _useConfigInject = useConfigInject("skeleton", props2), prefixCls2 = _useConfigInject.prefixCls;
    var cls = computed$f(function() {
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-element"), _defineProperty$U({}, "".concat(prefixCls2.value, "-active"), props2.active));
    });
    return function() {
      return _createVNode$1r("div", {
        "class": cls.value
      }, [_createVNode$1r(Element$1, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
        "prefixCls": "".concat(prefixCls2.value, "-button")
      }), null)]);
    };
  }
});
const { createVNode: _createVNode$1q } = await importShared("vue");
const { computed: computed$e, defineComponent: defineComponent$F } = await importShared("vue");
var SkeletonInput = defineComponent$F({
  name: "ASkeletonInput",
  props: _extends$1(_extends$1({}, omit$1(skeletonElementProps(), "shape")), {
    size: PropTypes.oneOf(tuple("large", "small", "default"))
  }),
  setup: function setup122(props2) {
    var _useConfigInject = useConfigInject("skeleton", props2), prefixCls2 = _useConfigInject.prefixCls;
    var cls = computed$e(function() {
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-element"), _defineProperty$U({}, "".concat(prefixCls2.value, "-active"), props2.active));
    });
    return function() {
      return _createVNode$1q("div", {
        "class": cls.value
      }, [_createVNode$1q(Element$1, _objectSpread2$2(_objectSpread2$2({}, props2), {}, {
        "prefixCls": "".concat(prefixCls2.value, "-input")
      }), null)]);
    };
  }
});
const { createVNode: _createVNode$1p } = await importShared("vue");
const { computed: computed$d, defineComponent: defineComponent$E } = await importShared("vue");
var path = "M365.714286 329.142857q0 45.714286-32.036571 77.677714t-77.677714 32.036571-77.677714-32.036571-32.036571-77.677714 32.036571-77.677714 77.677714-32.036571 77.677714 32.036571 32.036571 77.677714zM950.857143 548.571429l0 256-804.571429 0 0-109.714286 182.857143-182.857143 91.428571 91.428571 292.571429-292.571429zM1005.714286 146.285714l-914.285714 0q-7.460571 0-12.873143 5.412571t-5.412571 12.873143l0 694.857143q0 7.460571 5.412571 12.873143t12.873143 5.412571l914.285714 0q7.460571 0 12.873143-5.412571t5.412571-12.873143l0-694.857143q0-7.460571-5.412571-12.873143t-12.873143-5.412571zM1097.142857 164.571429l0 694.857143q0 37.741714-26.843429 64.585143t-64.585143 26.843429l-914.285714 0q-37.741714 0-64.585143-26.843429t-26.843429-64.585143l0-694.857143q0-37.741714 26.843429-64.585143t64.585143-26.843429l914.285714 0q37.741714 0 64.585143 26.843429t26.843429 64.585143z";
var SkeletonImage = defineComponent$E({
  name: "ASkeletonImage",
  props: skeletonElementProps(),
  setup: function setup123(props2) {
    var _useConfigInject = useConfigInject("skeleton", props2), prefixCls2 = _useConfigInject.prefixCls;
    var cls = computed$d(function() {
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-element"));
    });
    return function() {
      return _createVNode$1p("div", {
        "class": cls.value
      }, [_createVNode$1p("div", {
        "class": "".concat(prefixCls2.value, "-image")
      }, [_createVNode$1p("svg", {
        "viewBox": "0 0 1098 1024",
        "xmlns": "http://www.w3.org/2000/svg",
        "class": "".concat(prefixCls2.value, "-image-svg")
      }, [_createVNode$1p("path", {
        "d": path,
        "class": "".concat(prefixCls2.value, "-image-path")
      }, null)])])]);
    };
  }
});
Skeleton.Button = SkeletonButton;
Skeleton.Avatar = SkeletonAvatar;
Skeleton.Input = SkeletonInput;
Skeleton.Image = SkeletonImage;
Skeleton.install = function(app) {
  app.component(Skeleton.name, Skeleton);
  app.component(Skeleton.Button.name, SkeletonButton);
  app.component(Skeleton.Avatar.name, SkeletonAvatar);
  app.component(Skeleton.Input.name, SkeletonInput);
  app.component(Skeleton.Image.name, SkeletonImage);
  return app;
};
const { createVNode: _createVNode$1o } = await importShared("vue");
var Track2 = function Track3(_2, _ref) {
  var _ref2, _ref3;
  var attrs = _ref.attrs;
  var included = attrs.included, vertical = attrs.vertical, offset4 = attrs.offset, length = attrs.length, reverse = attrs.reverse, style3 = attrs.style, className = attrs.class;
  var positonStyle = vertical ? (_ref2 = {}, _defineProperty$U(_ref2, reverse ? "top" : "bottom", "".concat(offset4, "%")), _defineProperty$U(_ref2, reverse ? "bottom" : "top", "auto"), _defineProperty$U(_ref2, "height", "".concat(length, "%")), _ref2) : (_ref3 = {}, _defineProperty$U(_ref3, reverse ? "right" : "left", "".concat(offset4, "%")), _defineProperty$U(_ref3, reverse ? "left" : "right", "auto"), _defineProperty$U(_ref3, "width", "".concat(length, "%")), _ref3);
  var elStyle = _extends$1(_extends$1({}, style3), positonStyle);
  return included ? _createVNode$1o("div", {
    "class": className,
    "style": elStyle
  }, null) : null;
};
Track2.inheritAttrs = false;
const { createVNode: _createVNode$1n } = await importShared("vue");
var calcPoints = function calcPoints2(vertical, marks, dots, step, min4, max4) {
  warning$5(dots ? step > 0 : true, "Slider", "`Slider[step]` should be a positive number in order to make Slider[dots] work.");
  var points = Object.keys(marks).map(parseFloat).sort(function(a2, b2) {
    return a2 - b2;
  });
  if (dots && step) {
    for (var i2 = min4; i2 <= max4; i2 += step) {
      if (points.indexOf(i2) === -1) {
        points.push(i2);
      }
    }
  }
  return points;
};
var Steps$2 = function Steps(_2, _ref) {
  var attrs = _ref.attrs;
  var prefixCls2 = attrs.prefixCls, vertical = attrs.vertical, reverse = attrs.reverse, marks = attrs.marks, dots = attrs.dots, step = attrs.step, included = attrs.included, lowerBound = attrs.lowerBound, upperBound = attrs.upperBound, max4 = attrs.max, min4 = attrs.min, dotStyle = attrs.dotStyle, activeDotStyle = attrs.activeDotStyle;
  var range2 = max4 - min4;
  var elements = calcPoints(vertical, marks, dots, step, min4, max4).map(function(point) {
    var _classNames;
    var offset4 = "".concat(Math.abs(point - min4) / range2 * 100, "%");
    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
    var style3 = vertical ? _extends$1(_extends$1({}, dotStyle), _defineProperty$U({}, reverse ? "top" : "bottom", offset4)) : _extends$1(_extends$1({}, dotStyle), _defineProperty$U({}, reverse ? "right" : "left", offset4));
    if (isActived) {
      style3 = _extends$1(_extends$1({}, style3), activeDotStyle);
    }
    var pointClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-dot"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-dot-active"), isActived), _defineProperty$U(_classNames, "".concat(prefixCls2, "-dot-reverse"), reverse), _classNames));
    return _createVNode$1n("span", {
      "class": pointClassName,
      "style": style3,
      "key": point
    }, null);
  });
  return _createVNode$1n("div", {
    "class": "".concat(prefixCls2, "-step")
  }, [elements]);
};
Steps$2.inheritAttrs = false;
const { createVNode: _createVNode$1m } = await importShared("vue");
var Marks = function Marks2(_2, _ref) {
  var attrs = _ref.attrs;
  var className = attrs.class, vertical = attrs.vertical, reverse = attrs.reverse, marks = attrs.marks, included = attrs.included, upperBound = attrs.upperBound, lowerBound = attrs.lowerBound, max4 = attrs.max, min4 = attrs.min, onClickLabel = attrs.onClickLabel;
  var marksKeys = Object.keys(marks);
  var range2 = max4 - min4;
  var elements = marksKeys.map(parseFloat).sort(function(a2, b2) {
    return a2 - b2;
  }).map(function(point) {
    var _classNames;
    var markPoint = typeof marks[point] === "function" ? marks[point](h) : marks[point];
    var markPointIsObject = _typeof$3(markPoint) === "object" && !isValidElement(markPoint);
    var markLabel = markPointIsObject ? markPoint.label : markPoint;
    if (!markLabel && markLabel !== 0) {
      return null;
    }
    var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
    var markClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(className, "-text"), true), _defineProperty$U(_classNames, "".concat(className, "-text-active"), isActive), _classNames));
    var bottomStyle = _defineProperty$U({
      marginBottom: "-50%"
    }, reverse ? "top" : "bottom", "".concat((point - min4) / range2 * 100, "%"));
    var leftStyle = _defineProperty$U({
      transform: "translateX(-50%)",
      msTransform: "translateX(-50%)"
    }, reverse ? "right" : "left", reverse ? "".concat((point - min4 / 4) / range2 * 100, "%") : "".concat((point - min4) / range2 * 100, "%"));
    var style3 = vertical ? bottomStyle : leftStyle;
    var markStyle = markPointIsObject ? _extends$1(_extends$1({}, style3), markPoint.style) : style3;
    var touchEvents = _defineProperty$U({}, supportsPassive ? "onTouchstartPassive" : "onTouchstart", function(e2) {
      return onClickLabel(e2, point);
    });
    return _createVNode$1m("span", _objectSpread2$2({
      "class": markClassName,
      "style": markStyle,
      "key": point,
      "onMousedown": function onMousedown2(e2) {
        return onClickLabel(e2, point);
      }
    }, touchEvents), [markLabel]);
  });
  return _createVNode$1m("div", {
    "class": className
  }, [elements]);
};
Marks.inheritAttrs = false;
const { createVNode: _createVNode$1l } = await importShared("vue");
const { defineComponent: defineComponent$D } = await importShared("vue");
const VcHandle = defineComponent$D({
  name: "Handle",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    vertical: PropTypes.looseBool,
    offset: PropTypes.number,
    disabled: PropTypes.looseBool,
    min: PropTypes.number,
    max: PropTypes.number,
    value: PropTypes.number,
    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    reverse: PropTypes.looseBool
    // handleFocus: PropTypes.func.def(noop),
    // handleBlur: PropTypes.func.def(noop),
  },
  data: function data57() {
    return {
      clickFocused: false
    };
  },
  mounted: function mounted31() {
    this.onMouseUpListener = addEventListenerWrap(document, "mouseup", this.handleMouseUp);
  },
  beforeUnmount: function beforeUnmount22() {
    if (this.onMouseUpListener) {
      this.onMouseUpListener.remove();
    }
  },
  methods: {
    setHandleRef: function setHandleRef(node) {
      this.handle = node;
    },
    setClickFocus: function setClickFocus(focused) {
      this.setState({
        clickFocused: focused
      });
    },
    handleMouseUp: function handleMouseUp() {
      if (document.activeElement === this.handle) {
        this.setClickFocus(true);
      }
    },
    handleBlur: function handleBlur3(e2) {
      this.setClickFocus(false);
      this.__emit("blur", e2);
    },
    handleKeyDown: function handleKeyDown6() {
      this.setClickFocus(false);
    },
    clickFocus: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    },
    focus: function focus20() {
      this.handle.focus();
    },
    blur: function blur17() {
      this.handle.blur();
    },
    // when click can not focus in vue, use mousedown trigger focus
    handleMousedown: function handleMousedown(e2) {
      this.focus();
      this.__emit("mousedown", e2);
    }
  },
  render: function render113() {
    var _ref, _ref2;
    var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, vertical = _getOptionProps.vertical, reverse = _getOptionProps.reverse, offset4 = _getOptionProps.offset, disabled = _getOptionProps.disabled, min4 = _getOptionProps.min, max4 = _getOptionProps.max, value26 = _getOptionProps.value, tabindex = _getOptionProps.tabindex;
    var className = classNames(this.$attrs.class, _defineProperty$U({}, "".concat(prefixCls2, "-handle-click-focused"), this.clickFocused));
    var positionStyle = vertical ? (_ref = {}, _defineProperty$U(_ref, reverse ? "top" : "bottom", "".concat(offset4, "%")), _defineProperty$U(_ref, reverse ? "bottom" : "top", "auto"), _defineProperty$U(_ref, "transform", "translateY(+50%)"), _ref) : (_ref2 = {}, _defineProperty$U(_ref2, reverse ? "right" : "left", "".concat(offset4, "%")), _defineProperty$U(_ref2, reverse ? "left" : "right", "auto"), _defineProperty$U(_ref2, "transform", "translateX(".concat(reverse ? "+" : "-", "50%)")), _ref2);
    var ariaProps = {
      "aria-valuemin": min4,
      "aria-valuemax": max4,
      "aria-valuenow": value26,
      "aria-disabled": !!disabled
    };
    var elStyle = _extends$1(_extends$1({}, this.$attrs.style), positionStyle);
    var _tabIndex = tabindex || 0;
    if (disabled || tabindex === null) {
      _tabIndex = null;
    }
    var handleProps = _extends$1(_extends$1(_extends$1(_extends$1({}, this.$attrs), {
      role: "slider",
      tabindex: _tabIndex
    }), ariaProps), {
      class: className,
      onBlur: this.handleBlur,
      onKeydown: this.handleKeyDown,
      onMousedown: this.handleMousedown,
      ref: this.setHandleRef,
      style: elStyle
    });
    return _createVNode$1l("div", handleProps, null);
  }
});
function isEventFromHandle(e2, handles) {
  try {
    return Object.keys(handles).some(function(key2) {
      return e2.target === findDOMNode(handles[key2]) || e2.target === handles[key2];
    });
  } catch (error3) {
    return false;
  }
}
function isValueOutOfRange(value26, _ref) {
  var min4 = _ref.min, max4 = _ref.max;
  return value26 < min4 || value26 > max4;
}
function isNotTouchEvent(e2) {
  return e2.touches.length > 1 || e2.type.toLowerCase() === "touchend" && e2.touches.length > 0;
}
function getClosestPoint(val, _ref2) {
  var marks = _ref2.marks, step = _ref2.step, min4 = _ref2.min, max4 = _ref2.max;
  var points = Object.keys(marks).map(parseFloat);
  if (step !== null) {
    var base = Math.pow(10, getPrecision2(step));
    var maxSteps = Math.floor((max4 * base - min4 * base) / (step * base));
    var steps = Math.min((val - min4) / step, maxSteps);
    var closestStep = Math.round(steps) * step + min4;
    points.push(closestStep);
  }
  var diffs = points.map(function(point) {
    return Math.abs(val - point);
  });
  return points[diffs.indexOf(Math.min.apply(Math, _toConsumableArray(diffs)))];
}
function getPrecision2(step) {
  var stepString = step.toString();
  var precision = 0;
  if (stepString.indexOf(".") >= 0) {
    precision = stepString.length - stepString.indexOf(".") - 1;
  }
  return precision;
}
function getMousePosition(vertical, e2) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical ? e2.clientY : e2.pageX) / zoom;
}
function getTouchPosition(vertical, e2) {
  var zoom = 1;
  if (window.visualViewport) {
    zoom = +(window.visualViewport.width / document.body.getBoundingClientRect().width).toFixed(2);
  }
  return (vertical ? e2.touches[0].clientY : e2.touches[0].pageX) / zoom;
}
function getHandleCenterPosition(vertical, handle) {
  var coords = handle.getBoundingClientRect();
  return vertical ? coords.top + coords.height * 0.5 : window.pageXOffset + coords.left + coords.width * 0.5;
}
function ensureValueInRange(val, _ref3) {
  var max4 = _ref3.max, min4 = _ref3.min;
  if (val <= min4) {
    return min4;
  }
  if (val >= max4) {
    return max4;
  }
  return val;
}
function ensureValuePrecision(val, props2) {
  var step = props2.step;
  var closestPoint = isFinite(getClosestPoint(val, props2)) ? getClosestPoint(val, props2) : 0;
  return step === null ? closestPoint : parseFloat(closestPoint.toFixed(getPrecision2(step)));
}
function pauseEvent(e2) {
  e2.stopPropagation();
  e2.preventDefault();
}
function calculateNextValue(func, value26, props2) {
  var operations = {
    increase: function increase(a2, b2) {
      return a2 + b2;
    },
    decrease: function decrease(a2, b2) {
      return a2 - b2;
    }
  };
  var indexToGet = operations[func](Object.keys(props2.marks).indexOf(JSON.stringify(value26)), 1);
  var keyToGet = Object.keys(props2.marks)[indexToGet];
  if (props2.step) {
    return operations[func](value26, props2.step);
  } else if (!!Object.keys(props2.marks).length && !!props2.marks[keyToGet]) {
    return props2.marks[keyToGet];
  }
  return value26;
}
function getKeyboardValueMutator(e2, vertical, reverse) {
  var increase = "increase";
  var decrease = "decrease";
  var method3 = increase;
  switch (e2.keyCode) {
    case KeyCode$1.UP:
      method3 = vertical && reverse ? decrease : increase;
      break;
    case KeyCode$1.RIGHT:
      method3 = !vertical && reverse ? decrease : increase;
      break;
    case KeyCode$1.DOWN:
      method3 = vertical && reverse ? increase : decrease;
      break;
    case KeyCode$1.LEFT:
      method3 = !vertical && reverse ? increase : decrease;
      break;
    case KeyCode$1.END:
      return function(value26, props2) {
        return props2.max;
      };
    case KeyCode$1.HOME:
      return function(value26, props2) {
        return props2.min;
      };
    case KeyCode$1.PAGE_UP:
      return function(value26, props2) {
        return value26 + props2.step * 2;
      };
    case KeyCode$1.PAGE_DOWN:
      return function(value26, props2) {
        return value26 - props2.step * 2;
      };
    default:
      return void 0;
  }
  return function(value26, props2) {
    return calculateNextValue(method3, value26, props2);
  };
}
const { createVNode: _createVNode$1k } = await importShared("vue");
var __rest$g = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$C } = await importShared("vue");
function noop$8() {
}
function createSlider(Component) {
  var propTypes2 = {
    min: PropTypes.number,
    max: PropTypes.number,
    step: PropTypes.number,
    marks: PropTypes.object,
    included: PropTypes.looseBool,
    prefixCls: PropTypes.string,
    disabled: PropTypes.looseBool,
    handle: PropTypes.func,
    dots: PropTypes.looseBool,
    vertical: PropTypes.looseBool,
    reverse: PropTypes.looseBool,
    minimumTrackStyle: PropTypes.object,
    maximumTrackStyle: PropTypes.object,
    handleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),
    trackStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.arrayOf(PropTypes.object)]),
    railStyle: PropTypes.object,
    dotStyle: PropTypes.object,
    activeDotStyle: PropTypes.object,
    autofocus: PropTypes.looseBool
  };
  return defineComponent$C({
    name: "CreateSlider",
    mixins: [BaseMixin, Component],
    inheritAttrs: false,
    // model: {
    //   prop: 'value',
    //   event: 'change',
    // },
    props: initDefaultProps$1(propTypes2, {
      prefixCls: "rc-slider",
      min: 0,
      max: 100,
      step: 1,
      marks: {},
      included: true,
      disabled: false,
      dots: false,
      vertical: false,
      reverse: false,
      trackStyle: [{}],
      handleStyle: [{}],
      railStyle: {},
      dotStyle: {},
      activeDotStyle: {}
    }),
    data: function data79() {
      var step = this.step, max4 = this.max, min4 = this.min;
      var isPointDiffEven = isFinite(max4 - min4) ? (max4 - min4) % step === 0 : true;
      warning$5(step && Math.floor(step) === step ? isPointDiffEven : true, "Slider", "Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)", max4 - min4, step);
      this.handlesRefs = {};
      return {};
    },
    mounted: function mounted45() {
      var _this = this;
      this.$nextTick(function() {
        _this.document = _this.sliderRef && _this.sliderRef.ownerDocument;
        var autofocus = _this.autofocus, disabled = _this.disabled;
        if (autofocus && !disabled) {
          _this.focus();
        }
      });
    },
    beforeUnmount: function beforeUnmount32() {
      var _this2 = this;
      this.$nextTick(function() {
        _this2.removeDocumentEvents();
      });
    },
    methods: {
      defaultHandle: function defaultHandle(_a) {
        var index2 = _a.index;
        _a.directives;
        var className = _a.className, style3 = _a.style, restProps = __rest$g(_a, ["index", "directives", "className", "style"]);
        delete restProps.dragging;
        if (restProps.value === null) {
          return null;
        }
        var handleProps = _extends$1(_extends$1({}, restProps), {
          class: className,
          style: style3,
          key: index2
        });
        return _createVNode$1k(VcHandle, handleProps, null);
      },
      onMouseDown: function onMouseDown3(e2) {
        if (e2.button !== 0) {
          return;
        }
        var isVertical2 = this.vertical;
        var position = getMousePosition(isVertical2, e2);
        if (!isEventFromHandle(e2, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical2, e2.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.removeDocumentEvents();
        this.onStart(position);
        this.addDocumentMouseEvents();
        pauseEvent(e2);
      },
      onTouchStart: function onTouchStart2(e2) {
        if (isNotTouchEvent(e2)) return;
        var isVertical2 = this.vertical;
        var position = getTouchPosition(isVertical2, e2);
        if (!isEventFromHandle(e2, this.handlesRefs)) {
          this.dragOffset = 0;
        } else {
          var handlePosition = getHandleCenterPosition(isVertical2, e2.target);
          this.dragOffset = position - handlePosition;
          position = handlePosition;
        }
        this.onStart(position);
        this.addDocumentTouchEvents();
        pauseEvent(e2);
      },
      onFocus: function onFocus6(e2) {
        var vertical = this.vertical;
        if (isEventFromHandle(e2, this.handlesRefs)) {
          var handlePosition = getHandleCenterPosition(vertical, e2.target);
          this.dragOffset = 0;
          this.onStart(handlePosition);
          pauseEvent(e2);
          this.__emit("focus", e2);
        }
      },
      onBlur: function onBlur7(e2) {
        this.onEnd();
        this.__emit("blur", e2);
      },
      onMouseUp: function onMouseUp3() {
        if (this.handlesRefs[this.prevMovedHandleIndex]) {
          this.handlesRefs[this.prevMovedHandleIndex].clickFocus();
        }
      },
      onMouseMove: function onMouseMove3(e2) {
        if (!this.sliderRef) {
          this.onEnd();
          return;
        }
        var position = getMousePosition(this.vertical, e2);
        this.onMove(e2, position - this.dragOffset);
      },
      onTouchMove: function onTouchMove2(e2) {
        if (isNotTouchEvent(e2) || !this.sliderRef) {
          this.onEnd();
          return;
        }
        var position = getTouchPosition(this.vertical, e2);
        this.onMove(e2, position - this.dragOffset);
      },
      onKeyDown: function onKeyDown14(e2) {
        if (this.sliderRef && isEventFromHandle(e2, this.handlesRefs)) {
          this.onKeyboard(e2);
        }
      },
      onClickMarkLabel: function onClickMarkLabel(e2, value26) {
        var _this3 = this;
        e2.stopPropagation();
        this.onChange({
          sValue: value26
        });
        this.setState({
          sValue: value26
        }, function() {
          return _this3.onEnd(true);
        });
      },
      getSliderStart: function getSliderStart() {
        var slider = this.sliderRef;
        var vertical = this.vertical, reverse = this.reverse;
        var rect = slider.getBoundingClientRect();
        if (vertical) {
          return reverse ? rect.bottom : rect.top;
        }
        return window.pageXOffset + (reverse ? rect.right : rect.left);
      },
      getSliderLength: function getSliderLength() {
        var slider = this.sliderRef;
        if (!slider) {
          return 0;
        }
        var coords = slider.getBoundingClientRect();
        return this.vertical ? coords.height : coords.width;
      },
      addDocumentTouchEvents: function addDocumentTouchEvents() {
        this.onTouchMoveListener = addEventListenerWrap(this.document, "touchmove", this.onTouchMove);
        this.onTouchUpListener = addEventListenerWrap(this.document, "touchend", this.onEnd);
      },
      addDocumentMouseEvents: function addDocumentMouseEvents() {
        this.onMouseMoveListener = addEventListenerWrap(this.document, "mousemove", this.onMouseMove);
        this.onMouseUpListener = addEventListenerWrap(this.document, "mouseup", this.onEnd);
      },
      removeDocumentEvents: function removeDocumentEvents() {
        this.onTouchMoveListener && this.onTouchMoveListener.remove();
        this.onTouchUpListener && this.onTouchUpListener.remove();
        this.onMouseMoveListener && this.onMouseMoveListener.remove();
        this.onMouseUpListener && this.onMouseUpListener.remove();
      },
      focus: function focus27() {
        if (!this.disabled) {
          this.handlesRefs[0].focus();
        }
      },
      blur: function blur24() {
        var _this4 = this;
        if (!this.disabled) {
          Object.keys(this.handlesRefs).forEach(function(key2) {
            if (_this4.handlesRefs[key2] && _this4.handlesRefs[key2].blur) {
              _this4.handlesRefs[key2].blur();
            }
          });
        }
      },
      calcValue: function calcValue(offset4) {
        var vertical = this.vertical, min4 = this.min, max4 = this.max;
        var ratio = Math.abs(Math.max(offset4, 0) / this.getSliderLength());
        var value26 = vertical ? (1 - ratio) * (max4 - min4) + min4 : ratio * (max4 - min4) + min4;
        return value26;
      },
      calcValueByPos: function calcValueByPos(position) {
        var sign2 = this.reverse ? -1 : 1;
        var pixelOffset = sign2 * (position - this.getSliderStart());
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
      },
      calcOffset: function calcOffset(value26) {
        var min4 = this.min, max4 = this.max;
        var ratio = (value26 - min4) / (max4 - min4);
        return ratio * 100;
      },
      saveSlider: function saveSlider2(slider) {
        this.sliderRef = slider;
      },
      saveHandle: function saveHandle(index2, handle) {
        this.handlesRefs[index2] = handle;
      }
    },
    render: function render165() {
      var _classNames;
      var prefixCls2 = this.prefixCls, marks = this.marks, dots = this.dots, step = this.step, included = this.included, disabled = this.disabled, vertical = this.vertical, reverse = this.reverse, min4 = this.min, max4 = this.max, maximumTrackStyle = this.maximumTrackStyle, railStyle = this.railStyle, dotStyle = this.dotStyle, activeDotStyle = this.activeDotStyle;
      var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style, id2 = _this$$attrs.id;
      var _this$renderSlider = this.renderSlider(), tracks = _this$renderSlider.tracks, handles = _this$renderSlider.handles;
      var sliderClassName = classNames(prefixCls2, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-with-marks"), Object.keys(marks).length), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, "".concat(prefixCls2, "-vertical"), vertical), _classNames));
      var markProps = {
        vertical,
        marks,
        included,
        lowerBound: this.getLowerBound(),
        upperBound: this.getUpperBound(),
        max: max4,
        min: min4,
        reverse,
        class: "".concat(prefixCls2, "-mark"),
        onClickLabel: disabled ? noop$8 : this.onClickMarkLabel
      };
      var touchEvents = _defineProperty$U({}, supportsPassive ? "onTouchstartPassive" : "onTouchstart", disabled ? noop$8 : this.onTouchStart);
      return _createVNode$1k("div", _objectSpread2$2(_objectSpread2$2({
        "id": id2,
        "ref": this.saveSlider,
        "tabindex": "-1",
        "class": sliderClassName
      }, touchEvents), {}, {
        "onMousedown": disabled ? noop$8 : this.onMouseDown,
        "onMouseup": disabled ? noop$8 : this.onMouseUp,
        "onKeydown": disabled ? noop$8 : this.onKeyDown,
        "onFocus": disabled ? noop$8 : this.onFocus,
        "onBlur": disabled ? noop$8 : this.onBlur,
        "style": style3
      }), [_createVNode$1k("div", {
        "class": "".concat(prefixCls2, "-rail"),
        "style": _extends$1(_extends$1({}, maximumTrackStyle), railStyle)
      }, null), tracks, _createVNode$1k(Steps$2, {
        "prefixCls": prefixCls2,
        "vertical": vertical,
        "reverse": reverse,
        "marks": marks,
        "dots": dots,
        "step": step,
        "included": included,
        "lowerBound": this.getLowerBound(),
        "upperBound": this.getUpperBound(),
        "max": max4,
        "min": min4,
        "dotStyle": dotStyle,
        "activeDotStyle": activeDotStyle
      }, null), handles, _createVNode$1k(Marks, markProps, null), getSlot(this)]);
    }
  });
}
const { createVNode: _createVNode$1j } = await importShared("vue");
const { defineComponent: defineComponent$B } = await importShared("vue");
var Slider$1 = defineComponent$B({
  name: "Slider",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    defaultValue: PropTypes.number,
    value: PropTypes.number,
    disabled: PropTypes.looseBool,
    autofocus: PropTypes.looseBool,
    tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),
    reverse: PropTypes.looseBool,
    min: PropTypes.number,
    max: PropTypes.number
  },
  data: function data58() {
    var defaultValue = this.defaultValue !== void 0 ? this.defaultValue : this.min;
    var value26 = this.value !== void 0 ? this.value : defaultValue;
    return {
      sValue: this.trimAlignValue(value26),
      dragging: false
    };
  },
  watch: {
    value: {
      handler: function handler3(val) {
        this.setChangeValue(val);
      },
      deep: true
    },
    min: function min2() {
      var sValue = this.sValue;
      this.setChangeValue(sValue);
    },
    max: function max2() {
      var sValue = this.sValue;
      this.setChangeValue(sValue);
    }
  },
  methods: {
    setChangeValue: function setChangeValue(value26) {
      var newValue = value26 !== void 0 ? value26 : this.sValue;
      var nextValue = this.trimAlignValue(newValue, this.$props);
      if (nextValue === this.sValue) return;
      this.setState({
        sValue: nextValue
      });
      if (isValueOutOfRange(newValue, this.$props)) {
        this.__emit("change", nextValue);
      }
    },
    onChange: function onChange5(state) {
      var isNotControlled = !hasProp(this, "value");
      var nextState = state.sValue > this.max ? _extends$1(_extends$1({}, state), {
        sValue: this.max
      }) : state;
      if (isNotControlled) {
        this.setState(nextState);
      }
      var changedValue = nextState.sValue;
      this.__emit("change", changedValue);
    },
    onStart: function onStart(position) {
      this.setState({
        dragging: true
      });
      var sValue = this.sValue;
      this.__emit("beforeChange", sValue);
      var value26 = this.calcValueByPos(position);
      this.startValue = value26;
      this.startPosition = position;
      if (value26 === sValue) return;
      this.prevMovedHandleIndex = 0;
      this.onChange({
        sValue: value26
      });
    },
    onEnd: function onEnd(force) {
      var dragging = this.dragging;
      this.removeDocumentEvents();
      if (dragging || force) {
        this.__emit("afterChange", this.sValue);
      }
      this.setState({
        dragging: false
      });
    },
    onMove: function onMove(e2, position) {
      pauseEvent(e2);
      var sValue = this.sValue;
      var value26 = this.calcValueByPos(position);
      if (value26 === sValue) return;
      this.onChange({
        sValue: value26
      });
    },
    onKeyboard: function onKeyboard(e2) {
      var _this$$props = this.$props, reverse = _this$$props.reverse, vertical = _this$$props.vertical;
      var valueMutator = getKeyboardValueMutator(e2, vertical, reverse);
      if (valueMutator) {
        pauseEvent(e2);
        var sValue = this.sValue;
        var mutatedValue = valueMutator(sValue, this.$props);
        var value26 = this.trimAlignValue(mutatedValue);
        if (value26 === sValue) return;
        this.onChange({
          sValue: value26
        });
        this.__emit("afterChange", value26);
        this.onEnd();
      }
    },
    getLowerBound: function getLowerBound() {
      return this.min;
    },
    getUpperBound: function getUpperBound() {
      return this.sValue;
    },
    trimAlignValue: function trimAlignValue(v2) {
      var nextProps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      if (v2 === null) {
        return null;
      }
      var mergedProps = _extends$1(_extends$1({}, this.$props), nextProps);
      var val = ensureValueInRange(v2, mergedProps);
      return ensureValuePrecision(val, mergedProps);
    },
    getTrack: function getTrack(_ref) {
      var prefixCls2 = _ref.prefixCls, reverse = _ref.reverse, vertical = _ref.vertical, included = _ref.included, offset4 = _ref.offset, minimumTrackStyle = _ref.minimumTrackStyle, _trackStyle = _ref._trackStyle;
      return _createVNode$1j(Track2, {
        "class": "".concat(prefixCls2, "-track"),
        "vertical": vertical,
        "included": included,
        "offset": 0,
        "reverse": reverse,
        "length": offset4,
        "style": _extends$1(_extends$1({}, minimumTrackStyle), _trackStyle)
      }, null);
    },
    renderSlider: function renderSlider() {
      var _this = this;
      var prefixCls2 = this.prefixCls, vertical = this.vertical, included = this.included, disabled = this.disabled, minimumTrackStyle = this.minimumTrackStyle, trackStyle = this.trackStyle, handleStyle = this.handleStyle, tabindex = this.tabindex, min4 = this.min, max4 = this.max, reverse = this.reverse, handle = this.handle, defaultHandle = this.defaultHandle;
      var handleGenerator = handle || defaultHandle;
      var sValue = this.sValue, dragging = this.dragging;
      var offset4 = this.calcOffset(sValue);
      var handles = handleGenerator({
        class: "".concat(prefixCls2, "-handle"),
        prefixCls: prefixCls2,
        vertical,
        offset: offset4,
        value: sValue,
        dragging,
        disabled,
        min: min4,
        max: max4,
        reverse,
        index: 0,
        tabindex,
        style: handleStyle[0] || handleStyle,
        ref: function ref2(h2) {
          return _this.saveHandle(0, h2);
        },
        onFocus: this.onFocus,
        onBlur: this.onBlur
      });
      var _trackStyle = trackStyle[0] || trackStyle;
      return {
        tracks: this.getTrack({
          prefixCls: prefixCls2,
          reverse,
          vertical,
          included,
          offset: offset4,
          minimumTrackStyle,
          _trackStyle
        }),
        handles
      };
    }
  }
});
const VcSlider = createSlider(Slider$1);
const { createVNode: _createVNode$1i } = await importShared("vue");
var _trimAlignValue = function trimAlignValue2(_ref) {
  var value26 = _ref.value, handle = _ref.handle, bounds = _ref.bounds, props2 = _ref.props;
  var allowCross = props2.allowCross, pushable = props2.pushable;
  var thershold = Number(pushable);
  var valInRange = ensureValueInRange(value26, props2);
  var valNotConflict = valInRange;
  if (!allowCross && handle != null && bounds !== void 0) {
    if (handle > 0 && valInRange <= bounds[handle - 1] + thershold) {
      valNotConflict = bounds[handle - 1] + thershold;
    }
    if (handle < bounds.length - 1 && valInRange >= bounds[handle + 1] - thershold) {
      valNotConflict = bounds[handle + 1] - thershold;
    }
  }
  return ensureValuePrecision(valNotConflict, props2);
};
var rangeProps = {
  defaultValue: PropTypes.arrayOf(PropTypes.number),
  value: PropTypes.arrayOf(PropTypes.number),
  count: PropTypes.number,
  pushable: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.number])),
  allowCross: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  reverse: PropTypes.looseBool,
  tabindex: PropTypes.arrayOf(PropTypes.number),
  prefixCls: PropTypes.string,
  min: PropTypes.number,
  max: PropTypes.number,
  autofocus: PropTypes.looseBool
};
var Range = {
  name: "Range",
  inheritAttrs: false,
  displayName: "Range",
  mixins: [BaseMixin],
  props: initDefaultProps$1(rangeProps, {
    count: 1,
    allowCross: true,
    pushable: false,
    tabindex: []
  }),
  data: function data59() {
    var _this = this;
    var count = this.count, min4 = this.min, max4 = this.max;
    var initialValue = Array.apply(void 0, _toConsumableArray(Array(count + 1))).map(function() {
      return min4;
    });
    var defaultValue = hasProp(this, "defaultValue") ? this.defaultValue : initialValue;
    var value26 = this.value;
    if (value26 === void 0) {
      value26 = defaultValue;
    }
    var bounds = value26.map(function(v2, i2) {
      return _trimAlignValue({
        value: v2,
        handle: i2,
        props: _this.$props
      });
    });
    var recent = bounds[0] === max4 ? 0 : bounds.length - 1;
    return {
      sHandle: null,
      recent,
      bounds
    };
  },
  watch: {
    value: {
      handler: function handler4(val) {
        var bounds = this.bounds;
        this.setChangeValue(val || bounds);
      },
      deep: true
    },
    min: function min3() {
      var value26 = this.value;
      this.setChangeValue(value26 || this.bounds);
    },
    max: function max3() {
      var value26 = this.value;
      this.setChangeValue(value26 || this.bounds);
    }
  },
  methods: {
    setChangeValue: function setChangeValue2(value26) {
      var _this2 = this;
      var bounds = this.bounds;
      var nextBounds = value26.map(function(v2, i2) {
        return _trimAlignValue({
          value: v2,
          handle: i2,
          bounds,
          props: _this2.$props
        });
      });
      if (nextBounds.length === bounds.length && nextBounds.every(function(v2, i2) {
        return v2 === bounds[i2];
      })) return;
      this.setState({
        bounds: nextBounds
      });
      if (value26.some(function(v2) {
        return isValueOutOfRange(v2, _this2.$props);
      })) {
        var newValues = value26.map(function(v2) {
          return ensureValueInRange(v2, _this2.$props);
        });
        this.__emit("change", newValues);
      }
    },
    onChange: function onChange6(state) {
      var isNotControlled = !hasProp(this, "value");
      if (isNotControlled) {
        this.setState(state);
      } else {
        var controlledState = {};
        ["sHandle", "recent"].forEach(function(item) {
          if (state[item] !== void 0) {
            controlledState[item] = state[item];
          }
        });
        if (Object.keys(controlledState).length) {
          this.setState(controlledState);
        }
      }
      var data79 = _extends$1(_extends$1({}, this.$data), state);
      var changedValue = data79.bounds;
      this.__emit("change", changedValue);
    },
    onStart: function onStart2(position) {
      var bounds = this.bounds;
      this.__emit("beforeChange", bounds);
      var value26 = this.calcValueByPos(position);
      this.startValue = value26;
      this.startPosition = position;
      var closestBound = this.getClosestBound(value26);
      this.prevMovedHandleIndex = this.getBoundNeedMoving(value26, closestBound);
      this.setState({
        sHandle: this.prevMovedHandleIndex,
        recent: this.prevMovedHandleIndex
      });
      var prevValue = bounds[this.prevMovedHandleIndex];
      if (value26 === prevValue) return;
      var nextBounds = _toConsumableArray(bounds);
      nextBounds[this.prevMovedHandleIndex] = value26;
      this.onChange({
        bounds: nextBounds
      });
    },
    onEnd: function onEnd2(force) {
      var sHandle = this.sHandle;
      this.removeDocumentEvents();
      if (sHandle !== null || force) {
        this.__emit("afterChange", this.bounds);
      }
      this.setState({
        sHandle: null
      });
    },
    onMove: function onMove2(e2, position) {
      pauseEvent(e2);
      var bounds = this.bounds, sHandle = this.sHandle;
      var value26 = this.calcValueByPos(position);
      var oldValue = bounds[sHandle];
      if (value26 === oldValue) return;
      this.moveTo(value26);
    },
    onKeyboard: function onKeyboard2(e2) {
      var _this$$props = this.$props, reverse = _this$$props.reverse, vertical = _this$$props.vertical;
      var valueMutator = getKeyboardValueMutator(e2, vertical, reverse);
      if (valueMutator) {
        pauseEvent(e2);
        var bounds = this.bounds, sHandle = this.sHandle;
        var oldValue = bounds[sHandle === null ? this.recent : sHandle];
        var mutatedValue = valueMutator(oldValue, this.$props);
        var value26 = _trimAlignValue({
          value: mutatedValue,
          handle: sHandle,
          bounds,
          props: this.$props
        });
        if (value26 === oldValue) return;
        var isFromKeyboardEvent = true;
        this.moveTo(value26, isFromKeyboardEvent);
      }
    },
    getClosestBound: function getClosestBound(value26) {
      var bounds = this.bounds;
      var closestBound = 0;
      for (var i2 = 1; i2 < bounds.length - 1; ++i2) {
        if (value26 > bounds[i2]) {
          closestBound = i2;
        }
      }
      if (Math.abs(bounds[closestBound + 1] - value26) < Math.abs(bounds[closestBound] - value26)) {
        closestBound += 1;
      }
      return closestBound;
    },
    getBoundNeedMoving: function getBoundNeedMoving(value26, closestBound) {
      var bounds = this.bounds, recent = this.recent;
      var boundNeedMoving = closestBound;
      var isAtTheSamePoint = bounds[closestBound + 1] === bounds[closestBound];
      if (isAtTheSamePoint && bounds[recent] === bounds[closestBound]) {
        boundNeedMoving = recent;
      }
      if (isAtTheSamePoint && value26 !== bounds[closestBound + 1]) {
        boundNeedMoving = value26 < bounds[closestBound + 1] ? closestBound : closestBound + 1;
      }
      return boundNeedMoving;
    },
    getLowerBound: function getLowerBound2() {
      return this.bounds[0];
    },
    getUpperBound: function getUpperBound2() {
      var bounds = this.bounds;
      return bounds[bounds.length - 1];
    },
    /**
     * Returns an array of possible slider points, taking into account both
     * `marks` and `step`. The result is cached.
     */
    getPoints: function getPoints() {
      var marks = this.marks, step = this.step, min4 = this.min, max4 = this.max;
      var cache = this._getPointsCache;
      if (!cache || cache.marks !== marks || cache.step !== step) {
        var pointsObject = _extends$1({}, marks);
        if (step !== null) {
          for (var point = min4; point <= max4; point += step) {
            pointsObject[point] = point;
          }
        }
        var points = Object.keys(pointsObject).map(parseFloat);
        points.sort(function(a2, b2) {
          return a2 - b2;
        });
        this._getPointsCache = {
          marks,
          step,
          points
        };
      }
      return this._getPointsCache.points;
    },
    moveTo: function moveTo(value26, isFromKeyboardEvent) {
      var _this3 = this;
      var nextBounds = _toConsumableArray(this.bounds);
      var sHandle = this.sHandle, recent = this.recent;
      var handle = sHandle === null ? recent : sHandle;
      nextBounds[handle] = value26;
      var nextHandle = handle;
      if (this.$props.pushable !== false) {
        this.pushSurroundingHandles(nextBounds, nextHandle);
      } else if (this.$props.allowCross) {
        nextBounds.sort(function(a2, b2) {
          return a2 - b2;
        });
        nextHandle = nextBounds.indexOf(value26);
      }
      this.onChange({
        recent: nextHandle,
        sHandle: nextHandle,
        bounds: nextBounds
      });
      if (isFromKeyboardEvent) {
        this.__emit("afterChange", nextBounds);
        this.setState({}, function() {
          _this3.handlesRefs[nextHandle].focus();
        });
        this.onEnd();
      }
    },
    pushSurroundingHandles: function pushSurroundingHandles(bounds, handle) {
      var value26 = bounds[handle];
      var threshold = this.pushable;
      threshold = Number(threshold);
      var direction = 0;
      if (bounds[handle + 1] - value26 < threshold) {
        direction = 1;
      }
      if (value26 - bounds[handle - 1] < threshold) {
        direction = -1;
      }
      if (direction === 0) {
        return;
      }
      var nextHandle = handle + direction;
      var diffToNext = direction * (bounds[nextHandle] - value26);
      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        bounds[handle] = bounds[nextHandle] - direction * threshold;
      }
    },
    pushHandle: function pushHandle(bounds, handle, direction, amount) {
      var originalValue = bounds[handle];
      var currentValue = bounds[handle];
      while (direction * (currentValue - originalValue) < amount) {
        if (!this.pushHandleOnePoint(bounds, handle, direction)) {
          bounds[handle] = originalValue;
          return false;
        }
        currentValue = bounds[handle];
      }
      return true;
    },
    pushHandleOnePoint: function pushHandleOnePoint(bounds, handle, direction) {
      var points = this.getPoints();
      var pointIndex = points.indexOf(bounds[handle]);
      var nextPointIndex = pointIndex + direction;
      if (nextPointIndex >= points.length || nextPointIndex < 0) {
        return false;
      }
      var nextHandle = handle + direction;
      var nextValue = points[nextPointIndex];
      var threshold = this.pushable;
      var diffToNext = direction * (bounds[nextHandle] - nextValue);
      if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
        return false;
      }
      bounds[handle] = nextValue;
      return true;
    },
    trimAlignValue: function trimAlignValue3(value26) {
      var sHandle = this.sHandle, bounds = this.bounds;
      return _trimAlignValue({
        value: value26,
        handle: sHandle,
        bounds,
        props: this.$props
      });
    },
    ensureValueNotConflict: function ensureValueNotConflict(handle, val, _ref2) {
      var allowCross = _ref2.allowCross, thershold = _ref2.pushable;
      var state = this.$data || {};
      var bounds = state.bounds;
      handle = handle === void 0 ? state.sHandle : handle;
      thershold = Number(thershold);
      if (!allowCross && handle != null && bounds !== void 0) {
        if (handle > 0 && val <= bounds[handle - 1] + thershold) {
          return bounds[handle - 1] + thershold;
        }
        if (handle < bounds.length - 1 && val >= bounds[handle + 1] - thershold) {
          return bounds[handle + 1] - thershold;
        }
      }
      return val;
    },
    getTrack: function getTrack2(_ref3) {
      var bounds = _ref3.bounds, prefixCls2 = _ref3.prefixCls, reverse = _ref3.reverse, vertical = _ref3.vertical, included = _ref3.included, offsets = _ref3.offsets, trackStyle = _ref3.trackStyle;
      return bounds.slice(0, -1).map(function(_2, index2) {
        var _classNames;
        var i2 = index2 + 1;
        var trackClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-track"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-track-").concat(i2), true), _classNames));
        return _createVNode$1i(Track2, {
          "class": trackClassName,
          "vertical": vertical,
          "reverse": reverse,
          "included": included,
          "offset": offsets[i2 - 1],
          "length": offsets[i2] - offsets[i2 - 1],
          "style": trackStyle[index2],
          "key": i2
        }, null);
      });
    },
    renderSlider: function renderSlider2() {
      var _this4 = this;
      var sHandle = this.sHandle, bounds = this.bounds, prefixCls2 = this.prefixCls, vertical = this.vertical, included = this.included, disabled = this.disabled, min4 = this.min, max4 = this.max, reverse = this.reverse, handle = this.handle, defaultHandle = this.defaultHandle, trackStyle = this.trackStyle, handleStyle = this.handleStyle, tabindex = this.tabindex;
      var handleGenerator = handle || defaultHandle;
      var offsets = bounds.map(function(v2) {
        return _this4.calcOffset(v2);
      });
      var handleClassName = "".concat(prefixCls2, "-handle");
      var handles = bounds.map(function(v2, i2) {
        var _classNames2;
        var _tabIndex = tabindex[i2] || 0;
        if (disabled || tabindex[i2] === null) {
          _tabIndex = null;
        }
        return handleGenerator({
          class: classNames((_classNames2 = {}, _defineProperty$U(_classNames2, handleClassName, true), _defineProperty$U(_classNames2, "".concat(handleClassName, "-").concat(i2 + 1), true), _classNames2)),
          prefixCls: prefixCls2,
          vertical,
          offset: offsets[i2],
          value: v2,
          dragging: sHandle === i2,
          index: i2,
          tabindex: _tabIndex,
          min: min4,
          max: max4,
          reverse,
          disabled,
          style: handleStyle[i2],
          ref: function ref2(h2) {
            return _this4.saveHandle(i2, h2);
          },
          onFocus: _this4.onFocus,
          onBlur: _this4.onBlur
        });
      });
      return {
        tracks: this.getTrack({
          bounds,
          prefixCls: prefixCls2,
          reverse,
          vertical,
          included,
          offsets,
          trackStyle
        }),
        handles
      };
    }
  }
};
const VcRange = createSlider(Range);
const { createVNode: _createVNode$1h } = await importShared("vue");
var __rest$f = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$A, inject: inject$p } = await importShared("vue");
var tooltipProps = abstractTooltipProps();
var SliderProps = function SliderProps2() {
  return {
    prefixCls: PropTypes.string,
    tooltipPrefixCls: PropTypes.string,
    range: PropTypes.looseBool,
    reverse: PropTypes.looseBool,
    min: PropTypes.number,
    max: PropTypes.number,
    step: PropTypes.any,
    marks: PropTypes.object,
    dots: PropTypes.looseBool,
    value: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),
    defaultValue: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),
    included: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    vertical: PropTypes.looseBool,
    tipFormatter: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
    tooltipVisible: PropTypes.looseBool,
    tooltipPlacement: tooltipProps.placement,
    getTooltipPopupContainer: PropTypes.func,
    onChange: PropTypes.func,
    onAfterChange: PropTypes.func
  };
};
var defaultTipFormatter = function defaultTipFormatter2(value26) {
  return value26.toString();
};
var Slider = defineComponent$A({
  name: "ASlider",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: _extends$1({}, SliderProps()),
  emits: ["update:value", "change"],
  setup: function setup124() {
    return {
      vcSlider: null,
      configProvider: inject$p("configProvider", defaultConfigProvider)
    };
  },
  data: function data60() {
    return {
      visibles: {}
    };
  },
  methods: {
    toggleTooltipVisible: function toggleTooltipVisible(index2, visible9) {
      this.setState(function(_ref) {
        var visibles = _ref.visibles;
        return {
          visibles: _extends$1(_extends$1({}, visibles), _defineProperty$U({}, index2, visible9))
        };
      });
    },
    handleWithTooltip: function handleWithTooltip(tooltipPrefixCls, prefixCls2, _a) {
      var _this = this;
      var value26 = _a.value, dragging = _a.dragging, index2 = _a.index, restProps = __rest$f(_a, ["value", "dragging", "index"]);
      var _this$$props = this.$props, _this$$props$tipForma = _this$$props.tipFormatter, tipFormatter = _this$$props$tipForma === void 0 ? defaultTipFormatter : _this$$props$tipForma, tooltipVisible = _this$$props.tooltipVisible, tooltipPlacement = _this$$props.tooltipPlacement, getTooltipPopupContainer = _this$$props.getTooltipPopupContainer;
      var visibles = this.visibles;
      var isTipFormatter = tipFormatter ? visibles[index2] || dragging : false;
      var visible9 = tooltipVisible || tooltipVisible === void 0 && isTipFormatter;
      var tooltipProps2 = {
        prefixCls: tooltipPrefixCls,
        title: tipFormatter ? tipFormatter(value26) : "",
        visible: visible9,
        placement: tooltipPlacement || "top",
        transitionName: "zoom-down",
        overlayClassName: "".concat(prefixCls2, "-tooltip"),
        getPopupContainer: getTooltipPopupContainer || function() {
          return document.body;
        },
        key: index2
      };
      var handleProps = _extends$1(_extends$1({
        value: value26
      }, restProps), {
        onMouseenter: function onMouseenter2() {
          return _this.toggleTooltipVisible(index2, true);
        },
        onMouseleave: function onMouseleave2() {
          return _this.toggleTooltipVisible(index2, false);
        }
      });
      return _createVNode$1h(Tooltip, tooltipProps2, {
        default: function _default8() {
          return [_createVNode$1h(VcHandle, handleProps, null)];
        }
      });
    },
    saveSlider: function saveSlider(node) {
      this.vcSlider = node;
    },
    focus: function focus21() {
      this.vcSlider.focus();
    },
    blur: function blur18() {
      this.vcSlider.blur();
    },
    handleChange: function handleChange17(val) {
      this.$emit("update:value", val);
      this.$emit("change", val);
    }
  },
  render: function render114() {
    var _this2 = this;
    var _a = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), range2 = _a.range, customizePrefixCls = _a.prefixCls, customizeTooltipPrefixCls = _a.tooltipPrefixCls, restProps = __rest$f(_a, ["range", "prefixCls", "tooltipPrefixCls"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("slider", customizePrefixCls);
    var tooltipPrefixCls = getPrefixCls2("tooltip", customizeTooltipPrefixCls);
    if (range2) {
      var vcRangeProps = _extends$1(_extends$1({}, restProps), {
        prefixCls: prefixCls2,
        tooltipPrefixCls,
        handle: function handle(info3) {
          return _this2.handleWithTooltip(tooltipPrefixCls, prefixCls2, info3);
        },
        ref: this.saveSlider,
        onChange: this.handleChange
      });
      return _createVNode$1h(VcRange, vcRangeProps, null);
    }
    var vcSliderProps = _extends$1(_extends$1({}, restProps), {
      prefixCls: prefixCls2,
      tooltipPrefixCls,
      handle: function handle(info3) {
        return _this2.handleWithTooltip(tooltipPrefixCls, prefixCls2, info3);
      },
      ref: this.saveSlider,
      onChange: this.handleChange
    });
    return _createVNode$1h(VcSlider, vcSliderProps, null);
  }
});
const index$4 = withInstall(Slider);
const { createVNode: _createVNode$1g, Fragment: _Fragment$5 } = await importShared("vue");
const { defineComponent: defineComponent$z, computed: computed$c, ref: ref$8, watch: watch$6 } = await importShared("vue");
var spaceSize = {
  small: 8,
  middle: 16,
  large: 24
};
var spaceProps = {
  prefixCls: PropTypes.string,
  size: {
    type: [String, Number, Array]
  },
  direction: PropTypes.oneOf(tuple("horizontal", "vertical")).def("horizontal"),
  align: PropTypes.oneOf(tuple("start", "end", "center", "baseline")),
  wrap: PropTypes.looseBool
};
function getNumberSize(size) {
  return typeof size === "string" ? spaceSize[size] : size || 0;
}
var Space = defineComponent$z({
  name: "ASpace",
  props: spaceProps,
  slots: ["split"],
  setup: function setup125(props2, _ref) {
    var slots = _ref.slots;
    var _useConfigInject = useConfigInject("space", props2), prefixCls2 = _useConfigInject.prefixCls, space = _useConfigInject.space, directionConfig = _useConfigInject.direction;
    var supportFlexGap = useFlexGapSupport();
    var size = computed$c(function() {
      var _a;
      return props2.size || ((_a = space.value) === null || _a === void 0 ? void 0 : _a.size) || "small";
    });
    var horizontalSize = ref$8();
    var verticalSize = ref$8();
    watch$6(size, function() {
      var _map = (Array.isArray(size.value) ? size.value : [size.value, size.value]).map(function(item) {
        return getNumberSize(item);
      });
      var _map2 = _slicedToArray$2(_map, 2);
      horizontalSize.value = _map2[0];
      verticalSize.value = _map2[1];
    }, {
      immediate: true
    });
    var mergedAlign = computed$c(function() {
      return props2.align === void 0 && props2.direction === "horizontal" ? "center" : props2.align;
    });
    var cn = computed$c(function() {
      var _classNames;
      return classNames(prefixCls2.value, "".concat(prefixCls2.value, "-").concat(props2.direction), (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-rtl"), directionConfig.value === "rtl"), _defineProperty$U(_classNames, "".concat(prefixCls2.value, "-align-").concat(mergedAlign.value), mergedAlign.value), _classNames));
    });
    var marginDirection = computed$c(function() {
      return directionConfig.value === "rtl" ? "marginLeft" : "marginRight";
    });
    var style3 = computed$c(function() {
      var gapStyle = {};
      if (supportFlexGap.value) {
        gapStyle.columnGap = "".concat(horizontalSize.value, "px");
        gapStyle.rowGap = "".concat(verticalSize.value, "px");
      }
      return _extends$1(_extends$1({}, gapStyle), props2.wrap && {
        flexWrap: "wrap",
        marginBottom: "".concat(-verticalSize.value, "px")
      });
    });
    return function() {
      var _a, _b;
      var wrap = props2.wrap, _props$direction = props2.direction, direction = _props$direction === void 0 ? "horizontal" : _props$direction;
      var items = filterEmpty((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));
      var len = items.length;
      if (len === 0) {
        return null;
      }
      var split = (_b = slots.split) === null || _b === void 0 ? void 0 : _b.call(slots);
      var itemClassName = "".concat(prefixCls2.value, "-item");
      var horizontalSizeVal = horizontalSize.value;
      var latestIndex = len - 1;
      return _createVNode$1g("div", {
        "class": cn.value,
        "style": style3.value
      }, [items.map(function(child, index2) {
        var itemStyle = {};
        if (!supportFlexGap.value) {
          if (direction === "vertical") {
            if (index2 < latestIndex) {
              itemStyle = {
                marginBottom: "".concat(horizontalSizeVal / (split ? 2 : 1), "px")
              };
            }
          } else {
            itemStyle = _extends$1(_extends$1({}, index2 < latestIndex && _defineProperty$U({}, marginDirection.value, "".concat(horizontalSizeVal / (split ? 2 : 1), "px"))), wrap && {
              paddingBottom: "".concat(verticalSize.value, "px")
            });
          }
        }
        return _createVNode$1g(_Fragment$5, null, [_createVNode$1g("div", {
          "class": itemClassName,
          "style": itemStyle
        }, [child]), index2 < latestIndex && split && _createVNode$1g("span", {
          "class": "".concat(itemClassName, "-split"),
          "style": itemStyle
        }, [split])]);
      })]);
    };
  }
});
const index$3 = withInstall(Space);
function isFlexSupported() {
  if (typeof window !== "undefined" && window.document && window.document.documentElement) {
    var documentElement = window.document.documentElement;
    return "flex" in documentElement.style || "webkitFlex" in documentElement.style || "Flex" in documentElement.style || "msFlex" in documentElement.style;
  }
  return false;
}
const { createVNode: _createVNode$1f } = await importShared("vue");
const { defineComponent: defineComponent$y } = await importShared("vue");
const Steps$1 = defineComponent$y({
  name: "Steps",
  mixins: [BaseMixin],
  props: {
    type: PropTypes.string.def("default"),
    prefixCls: PropTypes.string.def("rc-steps"),
    iconPrefix: PropTypes.string.def("rc"),
    direction: PropTypes.string.def("horizontal"),
    labelPlacement: PropTypes.string.def("horizontal"),
    status: PropTypes.string.def("process"),
    size: PropTypes.string.def(""),
    progressDot: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.func])),
    initial: PropTypes.number.def(0),
    current: PropTypes.number.def(0),
    icons: PropTypes.shape({
      finish: PropTypes.any,
      error: PropTypes.any
    }).loose,
    canClick: PropTypes.looseBool
  },
  data: function data61() {
    this.calcStepOffsetWidth = debounce$1(this.calcStepOffsetWidth, 150);
    return {
      flexSupported: true,
      lastStepOffsetWidth: 0
    };
  },
  mounted: function mounted32() {
    var _this = this;
    this.$nextTick(function() {
      _this.calcStepOffsetWidth();
      if (!isFlexSupported()) {
        _this.setState({
          flexSupported: false
        });
      }
    });
  },
  updated: function updated18() {
    var _this2 = this;
    this.$nextTick(function() {
      _this2.calcStepOffsetWidth();
    });
  },
  beforeUnmount: function beforeUnmount23() {
    if (this.calcTimeout) {
      clearTimeout(this.calcTimeout);
    }
    if (this.calcStepOffsetWidth && this.calcStepOffsetWidth.cancel) {
      this.calcStepOffsetWidth.cancel();
    }
  },
  methods: {
    onStepClick: function onStepClick(next3) {
      var current2 = this.$props.current;
      if (current2 !== next3) {
        this.__emit("change", next3);
      }
    },
    calcStepOffsetWidth: function calcStepOffsetWidth() {
      var _this3 = this;
      if (isFlexSupported()) {
        return;
      }
      var lastStepOffsetWidth = this.$data.lastStepOffsetWidth;
      var domNode = this.$refs.vcStepsRef;
      if (domNode.children.length > 0) {
        if (this.calcTimeout) {
          clearTimeout(this.calcTimeout);
        }
        this.calcTimeout = setTimeout(function() {
          var offsetWidth = (domNode.lastChild.offsetWidth || 0) + 1;
          if (lastStepOffsetWidth === offsetWidth || Math.abs(lastStepOffsetWidth - offsetWidth) <= 3) {
            return;
          }
          _this3.setState({
            lastStepOffsetWidth: offsetWidth
          });
        });
      }
    }
  },
  render: function render115() {
    var _classString, _this4 = this;
    var prefixCls2 = this.prefixCls, direction = this.direction, type3 = this.type, labelPlacement = this.labelPlacement, iconPrefix = this.iconPrefix, status = this.status, size = this.size, current2 = this.current, progressDot = this.progressDot, initial = this.initial, icons = this.icons, canClick = this.canClick;
    var isNav = type3 === "navigation";
    var lastStepOffsetWidth = this.lastStepOffsetWidth, flexSupported = this.flexSupported;
    var filteredChildren = getSlot(this);
    var lastIndex = filteredChildren.length - 1;
    var adjustedlabelPlacement = progressDot ? "vertical" : labelPlacement;
    var classString = (_classString = {}, _defineProperty$U(_classString, prefixCls2, true), _defineProperty$U(_classString, "".concat(prefixCls2, "-").concat(direction), true), _defineProperty$U(_classString, "".concat(prefixCls2, "-").concat(size), size), _defineProperty$U(_classString, "".concat(prefixCls2, "-label-").concat(adjustedlabelPlacement), direction === "horizontal"), _defineProperty$U(_classString, "".concat(prefixCls2, "-dot"), !!progressDot), _defineProperty$U(_classString, "".concat(prefixCls2, "-navigation"), isNav), _defineProperty$U(_classString, "".concat(prefixCls2, "-flex-not-supported"), !flexSupported), _classString);
    var stepsProps2 = {
      class: classString,
      ref: "vcStepsRef"
    };
    return _createVNode$1f("div", stepsProps2, [filteredChildren.map(function(child, index2) {
      var childProps = getPropsData(child);
      var stepNumber = initial + index2;
      var stepProps = _extends$1({
        stepNumber: "".concat(stepNumber + 1),
        stepIndex: stepNumber,
        prefixCls: prefixCls2,
        iconPrefix,
        progressDot,
        icons
      }, childProps);
      if (canClick) {
        stepProps.onStepClick = _this4.onStepClick;
      }
      if (!flexSupported && direction !== "vertical") {
        if (isNav) {
          stepProps.itemWidth = "".concat(100 / (lastIndex + 1), "%");
          stepProps.adjustMarginRight = 0;
        } else if (index2 !== lastIndex) {
          stepProps.itemWidth = "".concat(100 / lastIndex, "%");
          stepProps.adjustMarginRight = "".concat(-Math.round(lastStepOffsetWidth / lastIndex + 1), "px");
        }
      }
      if (status === "error" && index2 === current2 - 1) {
        stepProps.class = "".concat(prefixCls2, "-next-error");
      }
      if (!childProps.status) {
        if (stepNumber === current2) {
          stepProps.status = status;
        } else if (stepNumber < current2) {
          stepProps.status = "finish";
        } else {
          stepProps.status = "wait";
        }
      }
      stepProps.active = stepNumber === current2;
      return cloneElement(child, stepProps);
    })]);
  }
});
const { createVNode: _createVNode$1e } = await importShared("vue");
const { defineComponent: defineComponent$x } = await importShared("vue");
function isString2(str) {
  return typeof str === "string";
}
function noop$7() {
}
const Step$1 = defineComponent$x({
  name: "Step",
  mixins: [BaseMixin],
  props: {
    prefixCls: PropTypes.string,
    wrapperStyle: PropTypes.object,
    itemWidth: PropTypes.string,
    active: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    status: PropTypes.string,
    iconPrefix: PropTypes.string,
    icon: PropTypes.any,
    adjustMarginRight: PropTypes.string,
    stepNumber: PropTypes.string,
    stepIndex: PropTypes.number,
    description: PropTypes.any,
    title: PropTypes.any,
    subTitle: PropTypes.any,
    progressDot: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.func])),
    tailContent: PropTypes.any,
    icons: PropTypes.shape({
      finish: PropTypes.any,
      error: PropTypes.any
    }).loose,
    onClick: PropTypes.func,
    onStepClick: PropTypes.func
  },
  methods: {
    onItemClick: function onItemClick() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.__emit.apply(this, ["click"].concat(args));
      this.__emit("stepClick", this.stepIndex);
    },
    renderIconNode: function renderIconNode() {
      var _iconClassName;
      var _getOptionProps = getOptionProps(this), prefixCls2 = _getOptionProps.prefixCls, stepNumber = _getOptionProps.stepNumber, status = _getOptionProps.status, iconPrefix = _getOptionProps.iconPrefix, icons = _getOptionProps.icons, progressDot = _getOptionProps.progressDot;
      var icon = getComponent(this, "icon");
      var title = getComponent(this, "title");
      var description = getComponent(this, "description");
      var iconNode;
      var iconClassName = (_iconClassName = {}, _defineProperty$U(_iconClassName, "".concat(prefixCls2, "-icon"), true), _defineProperty$U(_iconClassName, "".concat(iconPrefix, "icon"), true), _defineProperty$U(_iconClassName, "".concat(iconPrefix, "icon-").concat(icon), icon && isString2(icon)), _defineProperty$U(_iconClassName, "".concat(iconPrefix, "icon-check"), !icon && status === "finish" && icons && !icons.finish), _defineProperty$U(_iconClassName, "".concat(iconPrefix, "icon-close"), !icon && status === "error" && icons && !icons.error), _iconClassName);
      var iconDot = _createVNode$1e("span", {
        "class": "".concat(prefixCls2, "-icon-dot")
      }, null);
      if (progressDot) {
        if (typeof progressDot === "function") {
          iconNode = _createVNode$1e("span", {
            "class": "".concat(prefixCls2, "-icon")
          }, [progressDot({
            index: stepNumber - 1,
            status,
            title,
            description,
            prefixCls: prefixCls2
          })]);
        } else {
          iconNode = _createVNode$1e("span", {
            "class": "".concat(prefixCls2, "-icon")
          }, [iconDot]);
        }
      } else if (icon && !isString2(icon)) {
        iconNode = _createVNode$1e("span", {
          "class": "".concat(prefixCls2, "-icon")
        }, [icon]);
      } else if (icons && icons.finish && status === "finish") {
        iconNode = _createVNode$1e("span", {
          "class": "".concat(prefixCls2, "-icon")
        }, [icons.finish]);
      } else if (icons && icons.error && status === "error") {
        iconNode = _createVNode$1e("span", {
          "class": "".concat(prefixCls2, "-icon")
        }, [icons.error]);
      } else if (icon || status === "finish" || status === "error") {
        iconNode = _createVNode$1e("span", {
          "class": iconClassName
        }, null);
      } else {
        iconNode = _createVNode$1e("span", {
          "class": "".concat(prefixCls2, "-icon")
        }, [stepNumber]);
      }
      return iconNode;
    }
  },
  render: function render116() {
    var _classString;
    var _getOptionProps2 = getOptionProps(this), prefixCls2 = _getOptionProps2.prefixCls, itemWidth = _getOptionProps2.itemWidth, active = _getOptionProps2.active, _getOptionProps2$stat = _getOptionProps2.status, status = _getOptionProps2$stat === void 0 ? "wait" : _getOptionProps2$stat, tailContent = _getOptionProps2.tailContent, adjustMarginRight = _getOptionProps2.adjustMarginRight, disabled = _getOptionProps2.disabled, onClick7 = _getOptionProps2.onClick, onStepClick2 = _getOptionProps2.onStepClick;
    var title = getComponent(this, "title");
    var subTitle = getComponent(this, "subTitle");
    var description = getComponent(this, "description");
    var classString = (_classString = {}, _defineProperty$U(_classString, "".concat(prefixCls2, "-item"), true), _defineProperty$U(_classString, "".concat(prefixCls2, "-item-").concat(status), true), _defineProperty$U(_classString, "".concat(prefixCls2, "-item-custom"), getComponent(this, "icon")), _defineProperty$U(_classString, "".concat(prefixCls2, "-item-active"), active), _defineProperty$U(_classString, "".concat(prefixCls2, "-item-disabled"), disabled === true), _classString);
    var stepProps = {
      class: classString
    };
    var stepItemStyle = {};
    if (itemWidth) {
      stepItemStyle.width = itemWidth;
    }
    if (adjustMarginRight) {
      stepItemStyle.marginRight = adjustMarginRight;
    }
    var accessibilityProps = {
      onClick: onClick7 || noop$7
    };
    if (onStepClick2 && !disabled) {
      accessibilityProps.role = "button";
      accessibilityProps.tabindex = 0;
      accessibilityProps.onClick = this.onItemClick;
    }
    return _createVNode$1e("div", _objectSpread2$2(_objectSpread2$2({}, stepProps), {}, {
      "style": stepItemStyle
    }), [_createVNode$1e("div", _objectSpread2$2(_objectSpread2$2({}, accessibilityProps), {}, {
      "class": "".concat(prefixCls2, "-item-container")
    }), [_createVNode$1e("div", {
      "class": "".concat(prefixCls2, "-item-tail")
    }, [tailContent]), _createVNode$1e("div", {
      "class": "".concat(prefixCls2, "-item-icon")
    }, [this.renderIconNode()]), _createVNode$1e("div", {
      "class": "".concat(prefixCls2, "-item-content")
    }, [_createVNode$1e("div", {
      "class": "".concat(prefixCls2, "-item-title")
    }, [title, subTitle && _createVNode$1e("div", {
      "title": subTitle,
      "class": "".concat(prefixCls2, "-item-subtitle")
    }, [subTitle])]), description && _createVNode$1e("div", {
      "class": "".concat(prefixCls2, "-item-description")
    }, [description])])])]);
  }
});
Steps$1.Step = Step$1;
const { createVNode: _createVNode$1d } = await importShared("vue");
const { defineComponent: defineComponent$w, inject: inject$o } = await importShared("vue");
var stepsProps = {
  prefixCls: PropTypes.string,
  iconPrefix: PropTypes.string,
  current: PropTypes.number,
  initial: PropTypes.number,
  labelPlacement: PropTypes.oneOf(tuple("horizontal", "vertical")).def("horizontal"),
  status: PropTypes.oneOf(tuple("wait", "process", "finish", "error")),
  size: PropTypes.oneOf(tuple("default", "small")),
  direction: PropTypes.oneOf(tuple("horizontal", "vertical")),
  progressDot: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.func])),
  type: PropTypes.oneOf(tuple("default", "navigation")),
  onChange: PropTypes.func,
  "onUpdate:current": PropTypes.func
};
var Steps2 = defineComponent$w({
  name: "ASteps",
  inheritAttrs: false,
  props: initDefaultProps2(stepsProps, {
    current: 0
  }),
  emits: ["update:current", "change"],
  setup: function setup126() {
    return {
      configProvider: inject$o("configProvider", defaultConfigProvider)
    };
  },
  Step: _extends$1(_extends$1({}, Steps$1.Step), {
    name: "AStep"
  }),
  methods: {
    handleChange: function handleChange18(current2) {
      this.$emit("update:current", current2);
      this.$emit("change", current2);
    }
  },
  render: function render117() {
    var _this = this;
    var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
    var customizePrefixCls = props2.prefixCls, customizeIconPrefixCls = props2.iconPrefix;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("steps", customizePrefixCls);
    var iconPrefix = getPrefixCls2("", customizeIconPrefixCls);
    var progressDot = getComponent(this, "progressDot", this, false);
    var icons = {
      finish: _createVNode$1d(CheckOutlined, {
        "class": "".concat(prefixCls2, "-finish-icon")
      }, null),
      error: _createVNode$1d(CloseOutlined, {
        "class": "".concat(prefixCls2, "-error-icon")
      }, null)
    };
    var stepsProps2 = _extends$1(_extends$1({
      icons,
      iconPrefix,
      prefixCls: prefixCls2,
      progressDot
    }, props2), {
      canClick: !!(this.onChange || this["onUpdate:current"]),
      onChange: this.handleChange
    });
    return _createVNode$1d(Steps$1, stepsProps2, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
Steps2.install = function(app) {
  app.component(Steps2.name, Steps2);
  app.component(Steps2.Step.name, Steps2.Step);
  return app;
};
var Step = Steps2.Step;
const { createVNode: _createVNode$1c } = await importShared("vue");
const { defineComponent: defineComponent$v, onBeforeMount, ref: ref$7, computed: computed$b, onMounted: onMounted$4, nextTick: nextTick$8, watch: watch$5 } = await importShared("vue");
var SwitchSizes = tuple("small", "default");
var switchProps = {
  prefixCls: PropTypes.string,
  size: PropTypes.oneOf(SwitchSizes),
  disabled: PropTypes.looseBool,
  checkedChildren: PropTypes.VNodeChild,
  unCheckedChildren: PropTypes.VNodeChild,
  tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  autofocus: PropTypes.looseBool,
  loading: PropTypes.looseBool,
  checked: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.looseBool]),
  checkedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.looseBool]).def(true),
  unCheckedValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.looseBool]).def(false),
  onChange: {
    type: Function
  },
  onClick: {
    type: Function
  },
  onKeydown: {
    type: Function
  },
  onMouseup: {
    type: Function
  },
  "onUpdate:checked": {
    type: Function
  }
};
var Switch = defineComponent$v({
  name: "ASwitch",
  __ANT_SWITCH: true,
  inheritAttrs: false,
  props: switchProps,
  slots: ["checkedChildren", "unCheckedChildren"],
  emits: ["update:checked", "mouseup", "change", "click", "keydown"],
  setup: function setup127(props2, _ref) {
    var attrs = _ref.attrs, slots = _ref.slots, expose = _ref.expose, emit = _ref.emit;
    onBeforeMount(function() {
      warning$5(!("defaultChecked" in attrs), "Switch", "'defaultChecked' is deprecated, please use 'v-model:checked'");
      warning$5(!("value" in attrs), "Switch", "`value` is not validate prop, do you mean `checked`?");
    });
    var checked2 = ref$7(props2.checked !== void 0 ? props2.checked : attrs.defaultChecked);
    var checkedStatus = computed$b(function() {
      return checked2.value === props2.checkedValue;
    });
    watch$5(function() {
      return props2.checked;
    }, function() {
      checked2.value = props2.checked;
    });
    var _useConfigInject = useConfigInject("switch", props2), prefixCls2 = _useConfigInject.prefixCls;
    var refSwitchNode = ref$7();
    var focus27 = function focus28() {
      var _a;
      (_a = refSwitchNode.value) === null || _a === void 0 ? void 0 : _a.focus();
    };
    var blur24 = function blur25() {
      var _a;
      (_a = refSwitchNode.value) === null || _a === void 0 ? void 0 : _a.blur();
    };
    expose({
      focus: focus27,
      blur: blur24
    });
    onMounted$4(function() {
      nextTick$8(function() {
        if (props2.autofocus && !props2.disabled) {
          refSwitchNode.value.focus();
        }
      });
    });
    var setChecked = function setChecked2(check, e2) {
      if (props2.disabled) {
        return;
      }
      emit("update:checked", check);
      emit("change", check, e2);
    };
    var handleClick5 = function handleClick6(e2) {
      focus27();
      var newChecked = checkedStatus.value ? props2.unCheckedValue : props2.checkedValue;
      setChecked(newChecked, e2);
      emit("click", newChecked, e2);
    };
    var handleKeyDown7 = function handleKeyDown8(e2) {
      if (e2.keyCode === KeyCode$1.LEFT) {
        setChecked(props2.unCheckedValue, e2);
      } else if (e2.keyCode === KeyCode$1.RIGHT) {
        setChecked(props2.checkedValue, e2);
      }
      emit("keydown", e2);
    };
    var handleMouseUp2 = function handleMouseUp3(e2) {
      var _a;
      (_a = refSwitchNode.value) === null || _a === void 0 ? void 0 : _a.blur();
      emit("mouseup", e2);
    };
    var classNames2 = computed$b(function() {
      var _ref2;
      return _ref2 = {}, _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-small"), props2.size === "small"), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-loading"), props2.loading), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-checked"), checkedStatus.value), _defineProperty$U(_ref2, "".concat(prefixCls2.value, "-disabled"), props2.disabled), _defineProperty$U(_ref2, prefixCls2.value, true), _ref2;
    });
    return function() {
      return _createVNode$1c(Wave, {
        "insertExtraNode": true
      }, {
        default: function _default8() {
          return [_createVNode$1c("button", _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({}, omit$1(props2, ["prefixCls", "checkedChildren", "unCheckedChildren", "checked", "autofocus", "defaultChecked", "checkedValue", "unCheckedValue"])), attrs), {}, {
            "onKeydown": handleKeyDown7,
            "onClick": handleClick5,
            "onMouseup": handleMouseUp2,
            "type": "button",
            "role": "switch",
            "aria-checked": checked2.value,
            "disabled": props2.disabled || props2.loading,
            "class": [attrs.class, classNames2.value],
            "ref": refSwitchNode
          }), [props2.loading ? _createVNode$1c(LoadingOutlined, {
            "class": "".concat(prefixCls2.value, "-loading-icon")
          }, null) : null, _createVNode$1c("span", {
            "class": "".concat(prefixCls2.value, "-inner")
          }, [checkedStatus.value ? getPropsSlot(slots, props2, "checkedChildren") : getPropsSlot(slots, props2, "unCheckedChildren")])])];
        }
      });
    };
  }
});
const index$2 = withInstall(Switch);
var CaretUpFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z" } }] }, "name": "caret-up", "theme": "filled" };
const { createVNode: _createVNode$1b } = await importShared("vue");
function _objectSpread$f(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$g(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$g(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CaretUpFilled = function CaretUpFilled2(props2, context2) {
  var p = _objectSpread$f({}, props2, context2.attrs);
  return _createVNode$1b(Icon, _objectSpread$f({}, p, {
    "icon": CaretUpFilled$1
  }), null);
};
CaretUpFilled.displayName = "CaretUpFilled";
CaretUpFilled.inheritAttrs = false;
var CaretDownFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z" } }] }, "name": "caret-down", "theme": "filled" };
const { createVNode: _createVNode$1a } = await importShared("vue");
function _objectSpread$e(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$f(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$f(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CaretDownFilled = function CaretDownFilled2(props2, context2) {
  var p = _objectSpread$e({}, props2, context2.attrs);
  return _createVNode$1a(Icon, _objectSpread$e({}, p, {
    "icon": CaretDownFilled$1
  }), null);
};
CaretDownFilled.displayName = "CaretDownFilled";
CaretDownFilled.inheritAttrs = false;
function assignMergeValue(object3, key2, value26) {
  if (value26 !== void 0 && !eq(object3[key2], value26) || value26 === void 0 && !(key2 in object3)) {
    baseAssignValue(object3, key2, value26);
  }
}
function createBaseFor(fromRight) {
  return function(object3, iteratee, keysFunc) {
    var index2 = -1, iterable = Object(object3), props2 = keysFunc(object3), length = props2.length;
    while (length--) {
      var key2 = props2[++index2];
      if (iteratee(iterable[key2], key2, iterable) === false) {
        break;
      }
    }
    return object3;
  };
}
var baseFor = createBaseFor();
function safeGet(object3, key2) {
  if (key2 === "constructor" && typeof object3[key2] === "function") {
    return;
  }
  if (key2 == "__proto__") {
    return;
  }
  return object3[key2];
}
function toPlainObject(value26) {
  return copyObject(value26, keysIn(value26));
}
function baseMergeDeep(object3, source, key2, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object3, key2), srcValue = safeGet(source, key2), stacked = stack.get(srcValue);
  if (stacked) {
    assignMergeValue(object3, key2, stacked);
    return;
  }
  var newValue = customizer ? customizer(objValue, srcValue, key2 + "", object3, source, stack) : void 0;
  var isCommon = newValue === void 0;
  if (isCommon) {
    var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      } else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      } else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      } else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      } else {
        newValue = [];
      }
    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      } else if (!isObject$1(objValue) || isFunction2(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    } else {
      isCommon = false;
    }
  }
  if (isCommon) {
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack["delete"](srcValue);
  }
  assignMergeValue(object3, key2, newValue);
}
function baseMerge(object3, source, srcIndex, customizer, stack) {
  if (object3 === source) {
    return;
  }
  baseFor(source, function(srcValue, key2) {
    stack || (stack = new Stack());
    if (isObject$1(srcValue)) {
      baseMergeDeep(object3, source, key2, srcIndex, baseMerge, customizer, stack);
    } else {
      var newValue = customizer ? customizer(safeGet(object3, key2), srcValue, key2 + "", object3, source, stack) : void 0;
      if (newValue === void 0) {
        newValue = srcValue;
      }
      assignMergeValue(object3, key2, newValue);
    }
  }, keysIn);
}
function isIterateeCall(value26, index2, object3) {
  if (!isObject$1(object3)) {
    return false;
  }
  var type3 = typeof index2;
  if (type3 == "number" ? isArrayLike(object3) && isIndex(index2, object3.length) : type3 == "string" && index2 in object3) {
    return eq(object3[index2], value26);
  }
  return false;
}
function createAssigner(assigner) {
  return baseRest(function(object3, sources) {
    var index2 = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
    customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? void 0 : customizer;
      length = 1;
    }
    object3 = Object(object3);
    while (++index2 < length) {
      var source = sources[index2];
      if (source) {
        assigner(object3, source, index2, customizer);
      }
    }
    return object3;
  });
}
var merge2 = createAssigner(function(object3, source, srcIndex) {
  baseMerge(object3, source, srcIndex);
});
var scrollbarVerticalSize;
var scrollbarHorizontalSize;
var scrollbarMeasure = {
  position: "absolute",
  top: "-9999px",
  width: "50px",
  height: "50px"
};
var INTERNAL_COL_DEFINE = "RC_TABLE_INTERNAL_COL_DEFINE";
function measureScrollbar(_ref) {
  var _ref$direction = _ref.direction, direction = _ref$direction === void 0 ? "vertical" : _ref$direction, prefixCls2 = _ref.prefixCls;
  if (typeof document === "undefined" || typeof window === "undefined") {
    return 0;
  }
  var isVertical2 = direction === "vertical";
  if (isVertical2 && scrollbarVerticalSize) {
    return scrollbarVerticalSize;
  }
  if (!isVertical2 && scrollbarHorizontalSize) {
    return scrollbarHorizontalSize;
  }
  var scrollDiv = document.createElement("div");
  Object.keys(scrollbarMeasure).forEach(function(scrollProp) {
    scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];
  });
  scrollDiv.className = "".concat(prefixCls2, "-hide-scrollbar scroll-div-append-to-body");
  if (isVertical2) {
    scrollDiv.style.overflowY = "scroll";
  } else {
    scrollDiv.style.overflowX = "scroll";
  }
  document.body.appendChild(scrollDiv);
  var size = 0;
  if (isVertical2) {
    size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    scrollbarVerticalSize = size;
  } else {
    size = scrollDiv.offsetHeight - scrollDiv.clientHeight;
    scrollbarHorizontalSize = size;
  }
  document.body.removeChild(scrollDiv);
  return size;
}
function debounce(func, wait, immediate) {
  var timeout;
  function debounceFunc() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var context2 = this;
    if (args[0] && args[0].persist) {
      args[0].persist();
    }
    var later = function later2() {
      timeout = null;
      {
        func.apply(context2, args);
      }
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounceFunc.cancel = function cancel2() {
    if (timeout) {
      clearTimeout(timeout);
      timeout = null;
    }
  };
  return debounceFunc;
}
function remove2(array3, item) {
  var index2 = array3.indexOf(item);
  var front = array3.slice(0, index2);
  var last2 = array3.slice(index2 + 1, array3.length);
  return front.concat(last2);
}
function getDataAndAriaProps(props2) {
  return Object.keys(props2).reduce(function(memo, key2) {
    if (key2.substr(0, 5) === "data-" || key2.substr(0, 5) === "aria-") {
      memo[key2] = props2[key2];
    }
    return memo;
  }, {});
}
function getColumnsKey(columns2) {
  var columnKeys = [];
  columns2.forEach(function(column) {
    var _ref2 = column || {}, key2 = _ref2.key, dataIndex = _ref2.dataIndex;
    columnKeys.push(key2 !== void 0 ? key2 : dataIndex);
  });
  return columnKeys;
}
function validateValue(val) {
  return val !== null && val !== void 0;
}
const { createVNode: _createVNode$19 } = await importShared("vue");
const { inject: inject$n } = await importShared("vue");
const ColGroup = {
  name: "ColGroup",
  inheritAttrs: false,
  props: {
    fixed: PropTypes.string,
    columns: PropTypes.array
  },
  setup: function setup128() {
    return {
      table: inject$n("table", {}),
      store: inject$n("table-store", function() {
        return {};
      })
    };
  },
  render: function render118() {
    var fixed = this.fixed, table = this.table;
    var prefixCls2 = table.prefixCls, expandIconAsCell = table.expandIconAsCell, onColumnResize = table.onColumnResize;
    var cols = [];
    if (expandIconAsCell && fixed !== "right") {
      cols.push(_createVNode$19("col", {
        "class": "".concat(prefixCls2, "-expand-icon-col"),
        "key": "rc-table-expand-icon-col"
      }, null));
    }
    var leafColumns;
    var columnManager = this.store.columnManager;
    if (fixed === "left") {
      leafColumns = columnManager.leftLeafColumns;
    } else if (fixed === "right") {
      leafColumns = columnManager.rightLeafColumns;
    } else {
      leafColumns = columnManager.leafColumns;
    }
    cols = cols.concat(leafColumns.map(function(_ref) {
      var key2 = _ref.key, dataIndex = _ref.dataIndex, width = _ref.width, additionalProps = _ref[INTERNAL_COL_DEFINE];
      var mergedKey = key2 !== void 0 ? key2 : dataIndex;
      var w2 = typeof width === "number" ? "".concat(width, "px") : width;
      return _createVNode$19(ResizeObserver, {
        "onResize": function onResize(_ref2) {
          var offsetWidth = _ref2.offsetWidth;
          onColumnResize(mergedKey, offsetWidth);
        }
      }, {
        default: function _default8() {
          return [_createVNode$19("col", _objectSpread2$2({
            "data-key": mergedKey,
            "key": mergedKey,
            "style": {
              width: w2,
              minWidth: w2
            }
          }, additionalProps), null)];
        }
      });
    }));
    return _createVNode$19("colgroup", null, [cols]);
  }
};
function getCellFixedInfo(colStart, colEnd, columns2, stickyOffsets, direction) {
  var startColumn = columns2[colStart] || {};
  var endColumn = columns2[colEnd] || {};
  var fixLeft;
  var fixRight;
  if (startColumn.fixed === "left") {
    fixLeft = stickyOffsets.left[colStart];
  } else if (endColumn.fixed === "right") {
    fixRight = stickyOffsets.right[colEnd];
  }
  var lastFixLeft = false;
  var firstFixRight = false;
  var lastFixRight = false;
  var firstFixLeft = false;
  var nextColumn = columns2[colEnd + 1];
  var prevColumn = columns2[colStart - 1];
  if (fixLeft !== void 0) {
    var nextFixLeft = nextColumn && nextColumn.fixed === "left";
    lastFixLeft = !nextFixLeft;
  } else if (fixRight !== void 0) {
    var prevFixRight = prevColumn && prevColumn.fixed === "right";
    firstFixRight = !prevFixRight;
  }
  return {
    fixLeft,
    fixRight,
    lastFixLeft,
    firstFixRight,
    lastFixRight,
    firstFixLeft,
    isSticky: stickyOffsets.isSticky
  };
}
const { createVNode: _createVNode$18 } = await importShared("vue");
var __rest$e = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$a, inject: inject$m } = await importShared("vue");
var TableHeaderRow = {
  name: "TableHeaderRow",
  inheritAttrs: false,
  props: {
    index: PropTypes.number,
    fixed: PropTypes.string,
    columns: PropTypes.array,
    rows: PropTypes.array,
    row: PropTypes.array,
    components: PropTypes.object,
    customHeaderRow: PropTypes.func,
    prefixCls: PropTypes.prefixCls
  },
  setup: function setup129(props2) {
    var store = inject$m("table-store", function() {
      return {};
    });
    return {
      height: computed$a(function() {
        var fixedColumnsHeadRowsHeight = store.fixedColumnsHeadRowsHeight;
        var columns2 = props2.columns, rows = props2.rows, fixed = props2.fixed;
        var headerHeight = fixedColumnsHeadRowsHeight[0];
        if (!fixed) {
          return null;
        }
        if (headerHeight && columns2) {
          if (headerHeight === "auto") {
            return "auto";
          }
          return "".concat(headerHeight / rows.length, "px");
        }
        return null;
      }),
      store
    };
  },
  render: function render119() {
    var row = this.row, index2 = this.index, height = this.height, components3 = this.components, customHeaderRow2 = this.customHeaderRow, prefixCls2 = this.prefixCls;
    var HeaderRow = components3.header.row;
    var HeaderCell = components3.header.cell;
    var rowProps2 = customHeaderRow2(row.map(function(cell) {
      return cell.column;
    }), index2);
    var customStyle = rowProps2 ? rowProps2.style : {};
    var style3 = _extends$1({
      height
    }, customStyle);
    if (style3.height === null) {
      delete style3.height;
    }
    var _this$store = this.store, stickyOffsets = _this$store.stickyOffsets, columnManager = _this$store.columnManager;
    return _createVNode$18(HeaderRow, _objectSpread2$2(_objectSpread2$2({}, rowProps2), {}, {
      "style": style3
    }), {
      default: function _default8() {
        return [row.map(function(cell, i2) {
          var _classNames;
          var column = cell.column, isLast = cell.isLast, children = cell.children;
          cell.className;
          var cellProps = __rest$e(cell, ["column", "isLast", "children", "className"]);
          var fixedInfo = getCellFixedInfo(cell.colStart, cell.colEnd, columnManager.leafColumns, stickyOffsets);
          var customProps = column.customHeaderCell ? column.customHeaderCell(column) : {};
          var headerCellProps = _extends$1(_extends$1(_extends$1({}, cellProps), customProps), {
            key: column.key || column.dataIndex || i2
          });
          if (headerCellProps.colSpan === 0) {
            return null;
          }
          if (column.align) {
            headerCellProps.style = _extends$1(_extends$1({}, customProps.style), {
              textAlign: column.align
            });
          }
          var fixLeft = fixedInfo.fixLeft, fixRight = fixedInfo.fixRight, firstFixLeft = fixedInfo.firstFixLeft, lastFixLeft = fixedInfo.lastFixLeft, firstFixRight = fixedInfo.firstFixRight, lastFixRight = fixedInfo.lastFixRight;
          var fixedStyle = {};
          var isFixLeft = typeof fixLeft === "number";
          var isFixRight = typeof fixRight === "number";
          if (isFixLeft) {
            fixedStyle.position = "sticky";
            fixedStyle.left = "".concat(fixLeft, "px");
          }
          if (isFixRight) {
            fixedStyle.position = "sticky";
            fixedStyle.right = "".concat(fixRight, "px");
          }
          headerCellProps.class = classNames(customProps.class, customProps.className, column.class, column.className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-align-").concat(column.align), !!column.align), _defineProperty$U(_classNames, "".concat(prefixCls2, "-row-cell-ellipsis"), !!column.ellipsis), _defineProperty$U(_classNames, "".concat(prefixCls2, "-row-cell-break-word"), !!column.width), _defineProperty$U(_classNames, "".concat(prefixCls2, "-row-cell-last"), isLast), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-fix-left"), isFixLeft), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-fix-left-first"), firstFixLeft), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-fix-left-last"), lastFixLeft), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-fix-right"), isFixRight), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-fix-right-first"), firstFixRight), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-fix-right-last"), lastFixRight), _classNames));
          headerCellProps.style = _extends$1(_extends$1({}, headerCellProps.style || {}), fixedStyle);
          if (typeof HeaderCell === "function") {
            return HeaderCell(headerCellProps, children);
          }
          return _createVNode$18(HeaderCell, headerCellProps, {
            default: function _default9() {
              return [children];
            }
          });
        })];
      }
    });
  }
};
const { createVNode: _createVNode$17 } = await importShared("vue");
const { inject: inject$l } = await importShared("vue");
function parseHeaderRows(rootColumns) {
  var rows = [];
  function fillRowCells(columns2, colIndex) {
    var rowIndex2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
    rows[rowIndex2] = rows[rowIndex2] || [];
    var currentColIndex = colIndex;
    var colSpans = columns2.filter(Boolean).map(function(column) {
      var cell = {
        key: column.key,
        className: column.className || column.class || "",
        children: column.title,
        column,
        colStart: currentColIndex
      };
      var colSpan = 1;
      var subColumns = column.children;
      if (subColumns && subColumns.length > 0) {
        colSpan = fillRowCells(subColumns, currentColIndex, rowIndex2 + 1).reduce(function(total2, count) {
          return total2 + count;
        }, 0);
        cell.hasSubColumns = true;
      }
      if ("colSpan" in column) {
        colSpan = column.colSpan;
      }
      if ("rowSpan" in column) {
        cell.rowSpan = column.rowSpan;
      }
      cell.colSpan = colSpan;
      cell.colEnd = cell.colStart + colSpan - 1;
      rows[rowIndex2].push(cell);
      currentColIndex += colSpan;
      return colSpan;
    });
    return colSpans;
  }
  fillRowCells(rootColumns, 0);
  var rowCount = rows.length;
  var _loop = function _loop2(rowIndex2) {
    rows[rowIndex2].forEach(function(cell) {
      if (!("rowSpan" in cell) && !cell.hasSubColumns) {
        cell.rowSpan = rowCount - rowIndex2;
      }
    });
  };
  for (var rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {
    _loop(rowIndex);
  }
  return rows;
}
const TableHeader = {
  name: "TableHeader",
  inheritAttrs: false,
  props: {
    fixed: PropTypes.string,
    columns: PropTypes.array.isRequired,
    expander: PropTypes.object.isRequired
  },
  setup: function setup130() {
    return {
      table: inject$l("table", {})
    };
  },
  render: function render120() {
    var _this$table = this.table, components3 = _this$table.sComponents, prefixCls2 = _this$table.prefixCls, showHeader = _this$table.showHeader, customHeaderRow2 = _this$table.customHeaderRow;
    var expander = this.expander, columns2 = this.columns, fixed = this.fixed;
    if (!showHeader) {
      return null;
    }
    var rows = parseHeaderRows(this.columns);
    expander.renderExpandIndentCell(rows, fixed);
    var HeaderWrapper = components3.header.wrapper;
    return _createVNode$17(HeaderWrapper, {
      "class": "".concat(prefixCls2, "-thead")
    }, {
      default: function _default8() {
        return [rows.map(function(row, index2) {
          return _createVNode$17(TableHeaderRow, {
            "prefixCls": prefixCls2,
            "key": index2,
            "index": index2,
            "fixed": fixed,
            "columns": columns2,
            "rows": rows,
            "row": row,
            "components": components3,
            "customHeaderRow": customHeaderRow2
          }, null);
        })];
      }
    });
  }
};
const { createVNode: _createVNode$16 } = await importShared("vue");
const { inject: inject$k, toRaw: toRaw$1 } = await importShared("vue");
function isInvalidRenderCellText(text) {
  return text && !isValidElement(text) && Object.prototype.toString.call(text) === "[object Object]";
}
const TableCell = {
  name: "TableCell",
  inheritAttrs: false,
  props: {
    record: PropTypes.object,
    prefixCls: PropTypes.string,
    index: PropTypes.number,
    indent: PropTypes.number,
    indentSize: PropTypes.number,
    column: PropTypes.object,
    expandIcon: PropTypes.any,
    component: PropTypes.any,
    colIndex: PropTypes.number
  },
  setup: function setup131() {
    return {
      table: inject$k("table", {}),
      store: inject$k("table-store", {})
    };
  },
  methods: {
    handleClick: function handleClick3(e2) {
      var record = this.record, onCellClick = this.column.onCellClick;
      if (onCellClick) {
        onCellClick(record, e2);
      }
    }
  },
  render: function render121() {
    var _classNames;
    var record = this.record, indentSize = this.indentSize, prefixCls2 = this.prefixCls, indent = this.indent, index2 = this.index, expandIcon = this.expandIcon, column = this.column, BodyCell = this.component;
    var fixedInfoList = this.store.fixedInfoList || [];
    var fixedInfo = fixedInfoList[this.colIndex] || {};
    var fixLeft = fixedInfo.fixLeft, fixRight = fixedInfo.fixRight, firstFixLeft = fixedInfo.firstFixLeft, lastFixLeft = fixedInfo.lastFixLeft, firstFixRight = fixedInfo.firstFixRight, lastFixRight = fixedInfo.lastFixRight;
    var fixedStyle = {};
    var isFixLeft = typeof fixLeft === "number";
    var isFixRight = typeof fixRight === "number";
    if (isFixLeft) {
      fixedStyle.position = "sticky";
      fixedStyle.left = "".concat(fixLeft, "px");
    }
    if (isFixRight) {
      fixedStyle.position = "sticky";
      fixedStyle.right = "".concat(fixRight, "px");
    }
    var dataIndex = column.dataIndex, customRender = column.customRender, _column$className = column.className, className = _column$className === void 0 ? "" : _column$className;
    var _this$table = this.table, transformCellText = _this$table.transformCellText, rootPrefixCls = _this$table.prefixCls;
    var text;
    if (typeof dataIndex === "number") {
      text = get(record, dataIndex);
    } else if (!dataIndex || dataIndex.length === 0) {
      text = record;
    } else {
      text = get(record, dataIndex);
    }
    var tdProps = {
      onClick: this.handleClick
    };
    var colSpan;
    var rowSpan;
    if (customRender) {
      text = customRender({
        text,
        record,
        index: index2,
        column
      });
      if (isInvalidRenderCellText(text)) {
        tdProps = text.props || text.attrs || tdProps;
        var _tdProps = tdProps;
        colSpan = _tdProps.colSpan;
        rowSpan = _tdProps.rowSpan;
        text = text.children;
      }
    }
    if (column.customCell) {
      tdProps = _extends$1(_extends$1({}, tdProps), column.customCell(record, index2));
    }
    if (isInvalidRenderCellText(text)) {
      text = null;
    }
    if (transformCellText) {
      text = transformCellText({
        text,
        column,
        record,
        index: index2
      });
    }
    var indentText = expandIcon ? _createVNode$16("span", {
      "style": {
        paddingLeft: "".concat(indentSize * indent, "px")
      },
      "class": "".concat(prefixCls2, "-indent indent-level-").concat(indent)
    }, null) : null;
    if (rowSpan === 0 || colSpan === 0) {
      return null;
    }
    if (column.align) {
      tdProps.style = _extends$1({
        textAlign: column.align
      }, tdProps.style);
    }
    var cellClassName = classNames(className, column.class, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-ellipsis"), !!column.ellipsis), _defineProperty$U(_classNames, "".concat(prefixCls2, "-cell-break-word"), !!column.width), _defineProperty$U(_classNames, "".concat(rootPrefixCls, "-cell-fix-left"), isFixLeft), _defineProperty$U(_classNames, "".concat(rootPrefixCls, "-cell-fix-left-first"), firstFixLeft), _defineProperty$U(_classNames, "".concat(rootPrefixCls, "-cell-fix-left-last"), lastFixLeft), _defineProperty$U(_classNames, "".concat(rootPrefixCls, "-cell-fix-right"), isFixRight), _defineProperty$U(_classNames, "".concat(rootPrefixCls, "-cell-fix-right-first"), firstFixRight), _defineProperty$U(_classNames, "".concat(rootPrefixCls, "-cell-fix-right-last"), lastFixRight), _classNames));
    if (column.ellipsis) {
      if (typeof text === "string") {
        tdProps.title = text;
      }
    }
    return _createVNode$16(BodyCell, _objectSpread2$2(_objectSpread2$2({
      "class": cellClassName
    }, tdProps), {}, {
      style: _extends$1(_extends$1({}, tdProps.style || {}), fixedStyle)
    }), {
      default: function _default8() {
        return [indentText, expandIcon, toRaw$1(text)];
      }
    });
  }
};
const { createVNode: _createVNode$15 } = await importShared("vue");
var __rest$d = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$9, inject: inject$j } = await importShared("vue");
function noop$6() {
}
var TableRow = {
  name: "TableRow",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: initDefaultProps$1({
    customRow: PropTypes.func,
    // onRowClick: PropTypes.func,
    // onRowDoubleClick: PropTypes.func,
    // onRowContextMenu: PropTypes.func,
    // onRowMouseEnter: PropTypes.func,
    // onRowMouseLeave: PropTypes.func,
    record: PropTypes.object,
    prefixCls: PropTypes.string,
    // onHover: PropTypes.func,
    columns: PropTypes.array,
    index: PropTypes.number,
    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    className: PropTypes.string,
    indent: PropTypes.number,
    indentSize: PropTypes.number,
    hasExpandIcon: PropTypes.func,
    fixed: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.looseBool])),
    renderExpandIcon: PropTypes.func,
    renderExpandIconCell: PropTypes.func,
    components: PropTypes.any,
    expandedRow: PropTypes.looseBool,
    isAnyColumnsFixed: PropTypes.looseBool,
    ancestorKeys: PropTypes.array.isRequired,
    expandIconColumnIndex: PropTypes.number,
    expandRowByClick: PropTypes.looseBool
    // visible: PropTypes.looseBool,
    // hovered: PropTypes.looseBool,
    // height: PropTypes.any,
  }, {
    // expandIconColumnIndex: 0,
    // expandRowByClick: false,
    hasExpandIcon: function hasExpandIcon() {
    },
    renderExpandIcon: function renderExpandIcon2() {
    },
    renderExpandIconCell: function renderExpandIconCell() {
    }
  }),
  setup: function setup132(props2) {
    var store = inject$j("table-store", function() {
      return {};
    });
    var visible9 = computed$9(function() {
      var expandedRowKeys2 = store.expandedRowKeys;
      var ancestorKeys = props2.ancestorKeys;
      return !!(ancestorKeys.length === 0 || ancestorKeys.every(function(k2) {
        return expandedRowKeys2.includes(k2);
      }));
    });
    var height = computed$9(function() {
      var expandedRowsHeight = store.expandedRowsHeight, fixedColumnsBodyRowsHeight = store.fixedColumnsBodyRowsHeight;
      var fixed = props2.fixed, rowKey = props2.rowKey;
      if (!fixed) {
        return null;
      }
      if (expandedRowsHeight[rowKey]) {
        return expandedRowsHeight[rowKey];
      }
      if (fixedColumnsBodyRowsHeight[rowKey]) {
        return fixedColumnsBodyRowsHeight[rowKey];
      }
      return null;
    });
    var hovered = computed$9(function() {
      var currentHoverKey = store.currentHoverKey;
      var rowKey = props2.rowKey;
      return currentHoverKey === rowKey;
    });
    return {
      store,
      visible: visible9,
      hovered,
      height
    };
  },
  data: function data62() {
    this.rowRef = null;
    return {
      shouldRender: this.visible
    };
  },
  mounted: function mounted33() {
    var _this = this;
    if (this.shouldRender) {
      this.$nextTick(function() {
        _this.saveRowRef();
      });
    }
  },
  watch: {
    visible: function visible8(val) {
      if (val) {
        this.shouldRender = true;
      }
    }
  },
  updated: function updated19() {
    var _this2 = this;
    if (this.shouldRender && !this.rowRef) {
      this.$nextTick(function() {
        _this2.saveRowRef();
      });
    }
  },
  methods: {
    onRowClick: function onRowClick(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$6;
      var record = this.record, index2 = this.index;
      this.__emit("rowClick", record, index2, event);
      rowPropFunc(event);
    },
    onRowDoubleClick: function onRowDoubleClick(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$6;
      var record = this.record, index2 = this.index;
      this.__emit("rowDoubleClick", record, index2, event);
      rowPropFunc(event);
    },
    onContextMenu: function onContextMenu(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$6;
      var record = this.record, index2 = this.index;
      this.__emit("rowContextmenu", record, index2, event);
      rowPropFunc(event);
    },
    onMouseEnter: function onMouseEnter2(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$6;
      var record = this.record, index2 = this.index, rowKey = this.rowKey;
      this.__emit("hover", true, rowKey);
      this.__emit("rowMouseenter", record, index2, event);
      rowPropFunc(event);
    },
    onMouseLeave: function onMouseLeave3(event) {
      var rowPropFunc = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : noop$6;
      var record = this.record, index2 = this.index, rowKey = this.rowKey;
      this.__emit("hover", false, rowKey);
      this.__emit("rowMouseleave", record, index2, event);
      rowPropFunc(event);
    },
    setExpandedRowHeight: function setExpandedRowHeight() {
      var store = this.store, rowKey = this.rowKey;
      var expandedRowsHeight = store.expandedRowsHeight;
      var height = this.rowRef.getBoundingClientRect().height;
      expandedRowsHeight = _extends$1(_extends$1({}, expandedRowsHeight), _defineProperty$U({}, rowKey, height));
      store.expandedRowsHeight = expandedRowsHeight;
    },
    setRowHeight: function setRowHeight() {
      var store = this.store, rowKey = this.rowKey;
      var fixedColumnsBodyRowsHeight = store.fixedColumnsBodyRowsHeight;
      var height = this.rowRef.getBoundingClientRect().height;
      store.fixedColumnsBodyRowsHeight = _extends$1(_extends$1({}, fixedColumnsBodyRowsHeight), _defineProperty$U({}, rowKey, height));
    },
    getStyle: function getStyle2() {
      var height = this.height, visible9 = this.visible;
      var style3 = this.$attrs.style || {};
      if (height) {
        style3 = _extends$1(_extends$1({}, style3), {
          height
        });
      }
      if (!visible9 && !style3.display) {
        style3 = _extends$1(_extends$1({}, style3), {
          display: "none"
        });
      }
      return style3;
    },
    saveRowRef: function saveRowRef() {
      this.rowRef = findDOMNode(this);
      var isAnyColumnsFixed = this.isAnyColumnsFixed, fixed = this.fixed, expandedRow = this.expandedRow, ancestorKeys = this.ancestorKeys;
      if (!isAnyColumnsFixed) {
        return;
      }
      if (!fixed && expandedRow) {
        this.setExpandedRowHeight();
      }
      if (!fixed && ancestorKeys.length >= 0) {
        this.setRowHeight();
      }
    }
  },
  render: function render122() {
    var _this3 = this;
    if (!this.shouldRender) {
      return null;
    }
    var prefixCls2 = this.prefixCls, columns2 = this.columns, record = this.record, rowKey = this.rowKey, index2 = this.index, _this$customRow = this.customRow, customRow = _this$customRow === void 0 ? noop$6 : _this$customRow, indent = this.indent, indentSize = this.indentSize, hovered = this.hovered, height = this.height, visible9 = this.visible, components3 = this.components, hasExpandIcon3 = this.hasExpandIcon, renderExpandIcon5 = this.renderExpandIcon, renderExpandIconCell3 = this.renderExpandIconCell;
    var BodyRow = components3.body.row;
    var BodyCell = components3.body.cell;
    var className = this.$attrs.class || "";
    if (hovered) {
      className += " ".concat(prefixCls2, "-hover");
    }
    var cells = [];
    renderExpandIconCell3(cells);
    for (var i2 = 0; i2 < columns2.length; i2 += 1) {
      var column = columns2[i2];
      warning$5(column.onCellClick === void 0, "column[onCellClick] is deprecated, please use column[customCell] instead.");
      cells.push(_createVNode$15(TableCell, {
        "prefixCls": prefixCls2,
        "record": record,
        "indentSize": indentSize,
        "indent": indent,
        "index": index2,
        "colIndex": i2,
        "column": column,
        "key": column.key || column.dataIndex,
        "expandIcon": hasExpandIcon3(i2) && renderExpandIcon5(),
        "component": BodyCell
      }, null));
    }
    var _a = customRow(record, index2) || {}, customClass = _a.class, customClassName = _a.className, customStyle = _a.style, rowProps2 = __rest$d(_a, ["class", "className", "style"]);
    var style3 = {
      height: typeof height === "number" ? "".concat(height, "px") : height
    };
    if (!visible9) {
      style3.display = "none";
    }
    style3 = _extends$1(_extends$1({}, style3), customStyle);
    var rowClassName2 = classNames(prefixCls2, className, "".concat(prefixCls2, "-level-").concat(indent), customClassName, customClass);
    var bodyRowProps = _extends$1(_extends$1({}, rowProps2), {
      style: style3,
      onClick: function onClick7(e2) {
        _this3.onRowClick(e2, rowProps2.onClick);
      },
      onDblclick: function onDblclick(e2) {
        _this3.onRowDoubleClick(e2, rowProps2.onDblclick);
      },
      onMouseenter: function onMouseenter2(e2) {
        _this3.onMouseEnter(e2, rowProps2.onMouseenter);
      },
      onMouseleave: function onMouseleave2(e2) {
        _this3.onMouseLeave(e2, rowProps2.onMouseleave);
      },
      onContextmenu: function onContextmenu2(e2) {
        _this3.onContextMenu(e2, rowProps2.onContextmenu);
      },
      class: rowClassName2,
      "data-row-key": rowKey
    });
    return _createVNode$15(BodyRow, bodyRowProps, {
      default: function _default8() {
        return [cells];
      }
    });
  }
};
const { createVNode: _createVNode$14 } = await importShared("vue");
const ExpandIcon = {
  name: "ExpandIcon",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    record: PropTypes.object,
    prefixCls: PropTypes.string,
    expandable: PropTypes.any,
    expanded: PropTypes.looseBool,
    needIndentSpaced: PropTypes.looseBool
  },
  methods: {
    onExpand: function onExpand(e2) {
      this.__emit("expand", this.record, e2);
    }
  },
  render: function render123() {
    var expandable = this.expandable, prefixCls2 = this.prefixCls, onExpand3 = this.onExpand, needIndentSpaced = this.needIndentSpaced, expanded = this.expanded;
    if (expandable) {
      var expandClassName = expanded ? "expanded" : "collapsed";
      return _createVNode$14("span", {
        "class": "".concat(prefixCls2, "-expand-icon ").concat(prefixCls2, "-").concat(expandClassName),
        "onClick": onExpand3
      }, null);
    }
    if (needIndentSpaced) {
      return _createVNode$14("span", {
        "class": "".concat(prefixCls2, "-expand-icon ").concat(prefixCls2, "-spaced")
      }, null);
    }
    return null;
  }
};
const { createVNode: _createVNode$13 } = await importShared("vue");
const { computed: computed$8, inject: inject$i } = await importShared("vue");
var ExpandableRow = {
  mixins: [BaseMixin],
  name: "ExpandableRow",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string.isRequired,
    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,
    fixed: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.looseBool])),
    record: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,
    indentSize: PropTypes.number,
    needIndentSpaced: PropTypes.looseBool.isRequired,
    expandRowByClick: PropTypes.looseBool,
    expandIconAsCell: PropTypes.looseBool,
    expandIconColumnIndex: PropTypes.number,
    childrenColumnName: PropTypes.string,
    expandedRowRender: PropTypes.func,
    expandIcon: PropTypes.func
    // onExpandedChange: PropTypes.func.isRequired,
    // onRowClick: PropTypes.func,
    // children: PropTypes.func.isRequired,
  },
  setup: function setup133(props2) {
    var store = inject$i("table-store", function() {
      return {};
    });
    return {
      expanded: computed$8(function() {
        return store.expandedRowKeys.includes(props2.rowKey);
      })
    };
  },
  beforeUnmount: function beforeUnmount24() {
    this.handleDestroy();
  },
  methods: {
    hasExpandIcon: function hasExpandIcon2(columnIndex) {
      var _this$$props = this.$props, expandRowByClick = _this$$props.expandRowByClick, expandIcon = _this$$props.expandIcon;
      if (this.tempExpandIconAsCell || columnIndex !== this.tempExpandIconColumnIndex) {
        return false;
      }
      return !!expandIcon || !expandRowByClick;
    },
    handleExpandChange: function handleExpandChange(record, event) {
      var expanded = this.expanded, rowKey = this.rowKey;
      this.__emit("expandedChange", !expanded, record, event, rowKey);
    },
    handleDestroy: function handleDestroy() {
      var rowKey = this.rowKey, record = this.record;
      this.__emit("expandedChange", false, record, null, rowKey, true);
    },
    handleRowClick: function handleRowClick(record, index2, event) {
      var expandRowByClick = this.expandRowByClick;
      if (expandRowByClick) {
        this.handleExpandChange(record, event);
      }
      this.__emit("rowClick", record, index2, event);
    },
    renderExpandIcon: function renderExpandIcon3() {
      var prefixCls2 = this.prefixCls, expanded = this.expanded, record = this.record, needIndentSpaced = this.needIndentSpaced, expandIcon = this.expandIcon;
      if (expandIcon) {
        return expandIcon({
          prefixCls: prefixCls2,
          expanded,
          record,
          needIndentSpaced,
          expandable: this.expandable,
          onExpand: this.handleExpandChange
        });
      }
      return _createVNode$13(ExpandIcon, {
        "expandable": this.expandable,
        "prefixCls": prefixCls2,
        "onExpand": this.handleExpandChange,
        "needIndentSpaced": needIndentSpaced,
        "expanded": expanded,
        "record": record
      }, null);
    },
    renderExpandIconCell: function renderExpandIconCell2(cells) {
      if (!this.tempExpandIconAsCell) {
        return;
      }
      var prefixCls2 = this.prefixCls;
      cells.push(_createVNode$13("td", {
        "class": "".concat(prefixCls2, "-expand-icon-cell"),
        "key": "rc-table-expand-icon-cell"
      }, [this.renderExpandIcon()]));
    }
  },
  render: function render124() {
    var childrenColumnName = this.childrenColumnName, expandedRowRender = this.expandedRowRender, indentSize = this.indentSize, record = this.record, fixed = this.fixed, expanded = this.expanded;
    this.tempExpandIconAsCell = fixed !== "right" ? this.expandIconAsCell : false;
    this.tempExpandIconColumnIndex = fixed !== "right" ? this.expandIconColumnIndex : -1;
    var childrenData = record[childrenColumnName];
    this.expandable = !!(childrenData || expandedRowRender);
    var expandableRowProps = {
      indentSize,
      expanded,
      hasExpandIcon: this.hasExpandIcon,
      renderExpandIcon: this.renderExpandIcon,
      renderExpandIconCell: this.renderExpandIconCell,
      onRowClick: this.handleRowClick
    };
    return getSlot(this, "default", expandableRowProps);
  }
};
const { resolveDirective: _resolveDirective$8, createVNode: _createVNode$12 } = await importShared("vue");
const { inject: inject$h } = await importShared("vue");
function noop$5() {
}
var BaseTable = {
  name: "BaseTable",
  inheritAttrs: false,
  props: {
    fixed: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.looseBool])),
    columns: PropTypes.array.isRequired,
    tableClassName: PropTypes.string.isRequired,
    hasHead: PropTypes.looseBool.isRequired,
    hasBody: PropTypes.looseBool.isRequired,
    expander: PropTypes.object.isRequired,
    getRowKey: PropTypes.func,
    isAnyColumnsFixed: PropTypes.looseBool
  },
  setup: function setup134() {
    return {
      table: inject$h("table", function() {
        return {};
      }),
      store: inject$h("table-store", function() {
        return {};
      })
    };
  },
  methods: {
    getColumns: function getColumns2(cols) {
      var _this$$props$columns = this.$props.columns, columns2 = _this$$props$columns === void 0 ? [] : _this$$props$columns;
      return (cols || columns2).map(function(column) {
        return _extends$1(_extends$1({}, column), {
          className: classNames(column.className, column.class)
        });
      });
    },
    handleRowHover: function handleRowHover(isHover, key2) {
      this.store.currentHoverKey = isHover ? key2 : null;
    },
    renderRows: function renderRows(renderData, indent) {
      var _this = this;
      var ancestorKeys = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
      var _Object$assign = _extends$1(_extends$1(_extends$1({}, this.table.$attrs), this.table.$props), this.table.$data), components3 = _Object$assign.sComponents, prefixCls2 = _Object$assign.prefixCls, childrenColumnName = _Object$assign.childrenColumnName, rowClassName2 = _Object$assign.rowClassName, _Object$assign$custom = _Object$assign.customRow, customRow = _Object$assign$custom === void 0 ? noop$5 : _Object$assign$custom, _Object$assign$onRowC = _Object$assign.onRowClick, onRowClick2 = _Object$assign$onRowC === void 0 ? noop$5 : _Object$assign$onRowC, _Object$assign$onRowD = _Object$assign.onRowDoubleClick, onRowDoubleClick2 = _Object$assign$onRowD === void 0 ? noop$5 : _Object$assign$onRowD, _Object$assign$onRowC2 = _Object$assign.onRowContextMenu, onRowContextMenu = _Object$assign$onRowC2 === void 0 ? noop$5 : _Object$assign$onRowC2, _Object$assign$onRowM = _Object$assign.onRowMouseEnter, onRowMouseEnter = _Object$assign$onRowM === void 0 ? noop$5 : _Object$assign$onRowM, _Object$assign$onRowM2 = _Object$assign.onRowMouseLeave, onRowMouseLeave = _Object$assign$onRowM2 === void 0 ? noop$5 : _Object$assign$onRowM2, rowRef2 = _Object$assign.rowRef;
      var columnManager = this.store.columnManager;
      var getRowKey2 = this.getRowKey, fixed = this.fixed, expander = this.expander, isAnyColumnsFixed = this.isAnyColumnsFixed;
      var rows = [];
      var _loop = function _loop2(i3) {
        var record = renderData[i3];
        var key2 = getRowKey2(record, i3);
        var className = typeof rowClassName2 === "string" ? rowClassName2 : rowClassName2(record, i3, indent);
        var onHoverProps = {};
        if (columnManager.isAnyColumnsFixed) {
          onHoverProps.onHover = _this.handleRowHover;
        }
        var leafColumns = void 0;
        if (fixed === "left") {
          leafColumns = columnManager.leftLeafColumns;
        } else if (fixed === "right") {
          leafColumns = columnManager.rightLeafColumns;
        } else {
          leafColumns = _this.getColumns(columnManager.leafColumns);
        }
        var rowPrefixCls = "".concat(prefixCls2, "-row");
        var expandableRowProps = _extends$1(_extends$1({}, expander.props), {
          fixed,
          index: i3,
          prefixCls: rowPrefixCls,
          record,
          rowKey: key2,
          needIndentSpaced: expander.needIndentSpaced,
          key: key2,
          onRowClick: onRowClick2,
          onExpandedChange: expander.handleExpandChange
        });
        var row = _createVNode$12(ExpandableRow, expandableRowProps, {
          default: function _default8(expandableRow) {
            var tableRowProps = _extends$1(_extends$1(_extends$1({
              fixed,
              indent,
              record,
              index: i3,
              prefixCls: rowPrefixCls,
              childrenColumnName,
              columns: leafColumns,
              rowKey: key2,
              ancestorKeys,
              components: components3,
              isAnyColumnsFixed,
              customRow,
              onRowDoubleClick: onRowDoubleClick2,
              onRowContextMenu,
              onRowMouseEnter,
              onRowMouseLeave
            }, onHoverProps), {
              class: className,
              ref: rowRef2(record, i3, indent)
            }), expandableRow);
            return _createVNode$12(TableRow, tableRowProps, null);
          }
        });
        rows.push(row);
        expander.renderRows(_this.renderRows, rows, record, i3, indent, fixed, key2, ancestorKeys);
      };
      for (var i2 = 0; i2 < renderData.length; i2 += 1) {
        _loop(i2);
      }
      return rows;
    }
  },
  render: function render125() {
    var _this2 = this;
    var _this$table = this.table, components3 = _this$table.sComponents, prefixCls2 = _this$table.prefixCls, scroll = _this$table.scroll, data79 = _this$table.data;
    var _this$$props = this.$props, expander = _this$$props.expander, tableClassName = _this$$props.tableClassName, hasHead = _this$$props.hasHead, hasBody = _this$$props.hasBody, fixed = _this$$props.fixed;
    var columns2 = this.getColumns();
    var tableStyle = {};
    if (!fixed && scroll.x) {
      tableStyle.width = scroll.x === true ? "auto" : scroll.x;
      tableStyle.width = typeof tableStyle.width === "number" ? "".concat(tableStyle.width, "px") : tableStyle.width;
    }
    if (fixed) {
      var width = columns2.reduce(function(sum, _ref) {
        var w2 = _ref.width;
        return sum + parseFloat(w2, 10);
      }, 0);
      if (width > 0) {
        tableStyle.width = width + "px";
      }
    }
    var Table2 = hasBody ? components3.table : "table";
    var BodyWrapper = components3.body.wrapper;
    var body;
    if (hasBody) {
      body = _createVNode$12(BodyWrapper, {
        "class": "".concat(prefixCls2, "-tbody")
      }, {
        default: function _default8() {
          return [_this2.renderRows(data79, 0)];
        }
      });
    }
    return _createVNode$12(Table2, {
      "class": tableClassName,
      "style": tableStyle,
      "key": "table"
    }, {
      default: function _default8() {
        return [_createVNode$12(ColGroup, {
          "columns": columns2,
          "fixed": fixed
        }, null), hasHead && _createVNode$12(TableHeader, {
          "expander": expander,
          "columns": columns2,
          "fixed": fixed
        }, null), body];
      }
    });
  }
};
const { createVNode: _createVNode$11 } = await importShared("vue");
const { inject: inject$g } = await importShared("vue");
const HeadTable = {
  name: "HeadTable",
  inheritAttrs: false,
  props: {
    fixed: withUndefined(PropTypes.oneOfType([PropTypes.string, PropTypes.looseBool])),
    columns: PropTypes.array.isRequired,
    tableClassName: PropTypes.string.isRequired,
    handleBodyScrollLeft: PropTypes.func.isRequired,
    expander: PropTypes.object.isRequired
  },
  setup: function setup135() {
    return {
      table: inject$g("table", {})
    };
  },
  render: function render126() {
    var columns2 = this.columns, fixed = this.fixed, tableClassName = this.tableClassName, handleBodyScrollLeft2 = this.handleBodyScrollLeft, expander = this.expander, table = this.table;
    var prefixCls2 = table.prefixCls, scroll = table.scroll, showHeader = table.showHeader, saveRef4 = table.saveRef;
    var useFixedHeader = table.useFixedHeader;
    var headStyle = {};
    var scrollbarWidth = measureScrollbar({
      direction: "vertical"
    });
    if (scroll.y) {
      useFixedHeader = true;
      var scrollbarWidthOfHeader = measureScrollbar({
        direction: "horizontal",
        prefixCls: prefixCls2
      });
      if (scrollbarWidthOfHeader > 0 && !fixed) {
        headStyle.marginBottom = "-".concat(scrollbarWidthOfHeader, "px");
        headStyle.paddingBottom = "0px";
        headStyle.minWidth = "".concat(scrollbarWidth, "px");
        headStyle.overflowX = "scroll";
        headStyle.overflowY = scrollbarWidth === 0 ? "hidden" : "scroll";
      }
    }
    if (!useFixedHeader || !showHeader) {
      return null;
    }
    return _createVNode$11("div", {
      "key": "headTable",
      "ref": fixed ? function() {
      } : saveRef4("headTable"),
      "class": classNames("".concat(prefixCls2, "-header"), _defineProperty$U({}, "".concat(prefixCls2, "-hide-scrollbar"), scrollbarWidth > 0)),
      "style": headStyle,
      "onScroll": handleBodyScrollLeft2
    }, [_createVNode$11(BaseTable, {
      "tableClassName": tableClassName,
      "hasHead": true,
      "hasBody": false,
      "fixed": fixed,
      "columns": columns2,
      "expander": expander
    }, null)]);
  }
};
const { createVNode: _createVNode$10 } = await importShared("vue");
const { inject: inject$f } = await importShared("vue");
const BodyTable = {
  name: "BodyTable",
  inheritAttrs: false,
  props: {
    columns: PropTypes.array.isRequired,
    tableClassName: PropTypes.string.isRequired,
    handleBodyScroll: PropTypes.func.isRequired,
    handleWheel: PropTypes.func.isRequired,
    getRowKey: PropTypes.func.isRequired,
    expander: PropTypes.object.isRequired,
    isAnyColumnsFixed: PropTypes.looseBool
  },
  setup: function setup136() {
    return {
      table: inject$f("table", {})
    };
  },
  render: function render127() {
    var _this$table = this.table, prefixCls2 = _this$table.prefixCls, scroll = _this$table.scroll;
    var columns2 = this.columns, tableClassName = this.tableClassName, getRowKey2 = this.getRowKey, handleBodyScroll2 = this.handleBodyScroll, handleWheel2 = this.handleWheel, expander = this.expander, isAnyColumnsFixed = this.isAnyColumnsFixed;
    var _this$table2 = this.table, useFixedHeader = _this$table2.useFixedHeader, saveRef4 = _this$table2.saveRef;
    var bodyStyle = _extends$1({}, this.table.bodyStyle);
    if (scroll.y) {
      var maxHeight = bodyStyle.maxHeight || scroll.y;
      maxHeight = typeof maxHeight === "number" ? "".concat(maxHeight, "px") : maxHeight;
      bodyStyle.maxHeight = maxHeight;
      bodyStyle.overflowY = bodyStyle.overflowY || "scroll";
      useFixedHeader = true;
    }
    if (scroll.x) {
      bodyStyle.overflowX = bodyStyle.overflowX || "auto";
      bodyStyle.WebkitTransform = "translate3d (0, 0, 0)";
      if (!scroll.y) {
        bodyStyle.overflowY = "hidden";
      }
    }
    var baseTable = _createVNode$10(BaseTable, {
      "tableClassName": tableClassName,
      "hasHead": !useFixedHeader,
      "hasBody": true,
      "columns": columns2,
      "expander": expander,
      "getRowKey": getRowKey2,
      "isAnyColumnsFixed": isAnyColumnsFixed
    }, null);
    var useTabIndex = scroll && (scroll.x || scroll.y);
    return _createVNode$10("div", {
      "tabindex": useTabIndex ? -1 : void 0,
      "key": "bodyTable",
      "class": "".concat(prefixCls2, "-body"),
      "style": bodyStyle,
      "ref": saveRef4("bodyTable"),
      "onWheel": handleWheel2,
      "onScroll": handleBodyScroll2
    }, [baseTable]);
  }
};
const { createVNode: _createVNode$$ } = await importShared("vue");
const { inject: inject$e } = await importShared("vue");
var ExpandableTableProps = function ExpandableTableProps2() {
  return {
    expandIconAsCell: PropTypes.looseBool,
    expandRowByClick: PropTypes.looseBool,
    expandedRowKeys: PropTypes.array,
    expandedRowClassName: PropTypes.func,
    defaultExpandAllRows: PropTypes.looseBool,
    defaultExpandedRowKeys: PropTypes.array,
    expandIconColumnIndex: PropTypes.number,
    expandedRowRender: PropTypes.func,
    expandIcon: PropTypes.func,
    childrenColumnName: PropTypes.string,
    indentSize: PropTypes.number,
    // onExpand: PropTypes.func,
    // onExpandedRowsChange: PropTypes.func,
    columnManager: PropTypes.object.isRequired,
    prefixCls: PropTypes.string.isRequired,
    data: PropTypes.array,
    getRowKey: PropTypes.func
  };
};
var ExpandableTable = {
  name: "ExpandableTable",
  inheritAttrs: false,
  mixins: [BaseMixin],
  props: initDefaultProps$1(ExpandableTableProps(), {
    expandIconAsCell: false,
    expandedRowClassName: function expandedRowClassName() {
      return "";
    },
    expandIconColumnIndex: 0,
    defaultExpandAllRows: false,
    defaultExpandedRowKeys: [],
    childrenColumnName: "children",
    indentSize: 15
  }),
  setup: function setup137(props2) {
    var store = inject$e("table-store", function() {
      return {};
    });
    var data79 = props2.data, childrenColumnName = props2.childrenColumnName, defaultExpandAllRows = props2.defaultExpandAllRows, expandedRowKeys2 = props2.expandedRowKeys, defaultExpandedRowKeys = props2.defaultExpandedRowKeys, getRowKey2 = props2.getRowKey;
    var finalExpandedRowKeys = [];
    var rows = _toConsumableArray(data79);
    if (defaultExpandAllRows) {
      for (var i2 = 0; i2 < rows.length; i2 += 1) {
        var row = rows[i2];
        finalExpandedRowKeys.push(getRowKey2(row, i2));
        rows = rows.concat(row[childrenColumnName] || []);
      }
    } else {
      finalExpandedRowKeys = expandedRowKeys2 || defaultExpandedRowKeys;
    }
    _extends$1(store, {
      expandedRowsHeight: {},
      expandedRowKeys: finalExpandedRowKeys
    });
    return {
      store
    };
  },
  mounted: function mounted34() {
    this.handleUpdated();
  },
  updated: function updated20() {
    this.handleUpdated();
  },
  watch: {
    expandedRowKeys: function expandedRowKeys(val) {
      var _this = this;
      this.$nextTick(function() {
        _this.store.expandedRowKeys = val;
      });
    }
  },
  methods: {
    handleUpdated: function handleUpdated() {
      this.latestExpandedRows = null;
    },
    handleExpandChange: function handleExpandChange2(expanded, record, event, rowKey) {
      var destroy3 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }
      var expandedRowKeys2 = this.store.expandedRowKeys;
      if (expanded) {
        expandedRowKeys2 = [].concat(_toConsumableArray(expandedRowKeys2), [rowKey]);
      } else {
        var expandedRowIndex = expandedRowKeys2.indexOf(rowKey);
        if (expandedRowIndex !== -1) {
          expandedRowKeys2 = remove2(expandedRowKeys2, rowKey);
        }
      }
      if (!this.expandedRowKeys) {
        this.store.expandedRowKeys = expandedRowKeys2;
      }
      if (!this.latestExpandedRows || !shallowEqual$1(this.latestExpandedRows, expandedRowKeys2)) {
        this.latestExpandedRows = expandedRowKeys2;
        this.__emit("expandedRowsChange", expandedRowKeys2);
      }
      if (!destroy3) {
        this.__emit("expand", expanded, record);
      }
    },
    renderExpandIndentCell: function renderExpandIndentCell(rows, fixed) {
      var prefixCls2 = this.prefixCls, expandIconAsCell = this.expandIconAsCell;
      if (!expandIconAsCell || fixed === "right" || !rows.length) {
        return;
      }
      var iconColumn = {
        key: "rc-table-expand-icon-cell",
        className: "".concat(prefixCls2, "-expand-icon-th"),
        title: "",
        rowSpan: rows.length
      };
      rows[0].unshift(_extends$1(_extends$1({}, iconColumn), {
        column: iconColumn
      }));
    },
    renderExpandedRow: function renderExpandedRow(record, index2, expandedRowRender, className, ancestorKeys, indent, fixed) {
      var _this2 = this;
      var prefixCls2 = this.prefixCls, expandIconAsCell = this.expandIconAsCell, indentSize = this.indentSize;
      var parentKey = ancestorKeys[ancestorKeys.length - 1];
      var rowKey = "".concat(parentKey, "-extra-row");
      var components3 = {
        body: {
          row: "tr",
          cell: "td"
        }
      };
      var colCount;
      if (fixed === "left") {
        colCount = this.columnManager.leftLeafColumns.value.length;
      } else if (fixed === "right") {
        colCount = this.columnManager.rightLeafColumns.value.length;
      } else {
        colCount = this.columnManager.leafColumns.value.length;
      }
      var columns2 = [{
        key: "extra-row",
        customRender: function customRender() {
          var expandedRowKeys2 = _this2.store.expandedRowKeys;
          var expanded = expandedRowKeys2.includes(parentKey);
          return {
            props: {
              colSpan: colCount
            },
            children: fixed !== "right" ? expandedRowRender({
              record,
              index: index2,
              indent,
              expanded
            }) : "&nbsp;"
          };
        }
      }];
      if (expandIconAsCell && fixed !== "right") {
        columns2.unshift({
          key: "expand-icon-placeholder",
          customRender: function customRender() {
            return null;
          }
        });
      }
      return _createVNode$$(TableRow, {
        "key": rowKey,
        "columns": columns2,
        "class": className,
        "rowKey": rowKey,
        "ancestorKeys": ancestorKeys,
        "prefixCls": "".concat(prefixCls2, "-expanded-row"),
        "indentSize": indentSize,
        "indent": indent,
        "fixed": fixed,
        "components": components3,
        "expandedRow": true,
        "hasExpandIcon": function hasExpandIcon3() {
        }
      }, null);
    },
    renderRows: function renderRows2(_renderRows, rows, record, index2, indent, fixed, parentKey, ancestorKeys) {
      var expandedRowClassName2 = this.expandedRowClassName, expandedRowRender = this.expandedRowRender, childrenColumnName = this.childrenColumnName;
      var childrenData = record[childrenColumnName];
      var nextAncestorKeys = [].concat(_toConsumableArray(ancestorKeys), [parentKey]);
      var nextIndent = indent + 1;
      if (expandedRowRender) {
        rows.push(this.renderExpandedRow(record, index2, expandedRowRender, expandedRowClassName2(record, index2, indent), nextAncestorKeys, nextIndent, fixed));
      }
      if (childrenData) {
        rows.push.apply(rows, _toConsumableArray(_renderRows(childrenData, nextIndent, nextAncestorKeys)));
      }
    }
  },
  render: function render128() {
    var data79 = this.data, childrenColumnName = this.childrenColumnName;
    var props2 = getOptionProps(this);
    var needIndentSpaced = data79.some(function(record) {
      return record[childrenColumnName];
    });
    return getSlot(this, "default", {
      props: _extends$1(_extends$1({}, props2), this.$attrs),
      needIndentSpaced,
      renderRows: this.renderRows,
      handleExpandChange: this.handleExpandChange,
      renderExpandIndentCell: this.renderExpandIndentCell
    });
  }
};
const { onBeforeUnmount: onBeforeUnmount$1, ref: ref$6 } = await importShared("vue");
function useLayoutState(defaultState) {
  var stateRef = ref$6(defaultState);
  var tempState = stateRef.value;
  var updateBatchRef = [];
  var rafRef = ref$6();
  function setFrameState(updater) {
    wrapperRaf.cancel(rafRef.value);
    updateBatchRef.push(updater);
    rafRef.value = wrapperRaf(function() {
      var prevBatch = updateBatchRef;
      updateBatchRef = [];
      prevBatch.forEach(function(batchUpdater) {
        tempState = batchUpdater(tempState);
      });
      stateRef.value = tempState;
    });
  }
  onBeforeUnmount$1(function() {
    wrapperRaf.cancel(rafRef.value);
  });
  return [stateRef, setFrameState];
}
const { computed: computed$7 } = await importShared("vue");
function useColumnManager(columns2) {
  var _leafColumns = function _leafColumns2(cls) {
    var fixed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    var leafColumns2 = [];
    cls.forEach(function(column) {
      column.fixed = fixed || column.fixed;
      if (!column.children) {
        leafColumns2.push(column);
      } else {
        leafColumns2.push.apply(leafColumns2, _toConsumableArray(_leafColumns2(column.children, column.fixed)));
      }
    });
    return leafColumns2;
  };
  var groupedColumns = computed$7(function() {
    var _groupColumns = function _groupColumns2(cls) {
      var currentRow = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
      var parentColumn = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var rows = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [];
      var fixed = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
      rows[currentRow] = rows[currentRow] || [];
      var grouped = [];
      var setRowSpan = function setRowSpan2(column) {
        var rowSpan = rows.length - currentRow;
        if (column && !column.children && // parent columns.value are supposed to be one row
        rowSpan > 1 && (!column.rowSpan || column.rowSpan < rowSpan)) {
          column.rowSpan = rowSpan;
        }
      };
      cls.forEach(function(column, index2) {
        var newColumn = _extends$1({}, column);
        newColumn.fixed = fixed || column.fixed;
        rows[currentRow].push(newColumn);
        parentColumn.colSpan = parentColumn.colSpan || 0;
        if (newColumn.children && newColumn.children.length > 0) {
          newColumn.children = _groupColumns2(newColumn.children, currentRow + 1, newColumn, rows, newColumn.fixed);
          parentColumn.colSpan += newColumn.colSpan;
        } else {
          parentColumn.colSpan += 1;
        }
        for (var i2 = 0; i2 < rows[currentRow].length - 1; i2 += 1) {
          setRowSpan(rows[currentRow][i2]);
        }
        if (index2 + 1 === cls.length) {
          setRowSpan(newColumn);
        }
        grouped.push(newColumn);
      });
      return grouped;
    };
    return _groupColumns(columns2.value);
  });
  var isAnyColumnsFixed = computed$7(function() {
    return columns2.value.some(function(column) {
      return !!column.fixed;
    });
  });
  var isAnyColumnsLeftFixed = computed$7(function() {
    return columns2.value.some(function(column) {
      return column.fixed === "left" || column.fixed === true;
    });
  });
  var isAnyColumnsRightFixed = computed$7(function() {
    return columns2.value.some(function(column) {
      return column.fixed === "right";
    });
  });
  var leftColumns = computed$7(function() {
    return groupedColumns.value.filter(function(column) {
      return column.fixed === "left" || column.fixed === true;
    });
  });
  var rightColumns = computed$7(function() {
    return groupedColumns.value.filter(function(column) {
      return column.fixed === "right";
    });
  });
  var leafColumns = computed$7(function() {
    return _leafColumns(columns2.value);
  });
  var leftLeafColumns = computed$7(function() {
    return _leafColumns(leftColumns.value);
  });
  var rightLeafColumns = computed$7(function() {
    return _leafColumns(rightColumns.value);
  });
  return {
    groupedColumns,
    isAnyColumnsFixed,
    isAnyColumnsLeftFixed,
    isAnyColumnsRightFixed,
    leftColumns,
    rightColumns,
    leafColumns,
    leftLeafColumns,
    rightLeafColumns
  };
}
const { ref: ref$5, watch: watch$4 } = await importShared("vue");
function useStickyOffsets(colWidths, columns2) {
  var stickyOffsets = ref$5({
    left: [],
    right: []
  });
  var columnCount = ref$5();
  watch$4(columns2, function() {
    columnCount.value = columns2.value.length;
  }, {
    immediate: true
  });
  watch$4([colWidths, columnCount], function() {
    var leftOffsets = [];
    var rightOffsets = [];
    var left = 0;
    var right = 0;
    for (var start = 0; start < columnCount.value; start += 1) {
      leftOffsets[start] = left;
      left += colWidths.value[start] || 0;
      var end = columnCount.value - start - 1;
      rightOffsets[end] = right;
      right += colWidths.value[end] || 0;
    }
    stickyOffsets.value = {
      left: leftOffsets,
      right: rightOffsets
    };
  });
  return stickyOffsets;
}
const { resolveDirective: _resolveDirective$7, createVNode: _createVNode$_ } = await importShared("vue");
const { provide: provide$2, markRaw: markRaw$1, defineComponent: defineComponent$u, nextTick: nextTick$7, reactive: reactive$4, computed: computed$6, ref: ref$4, onUpdated, onMounted: onMounted$3, toRef } = await importShared("vue");
const Table$1 = defineComponent$u({
  name: "Table",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1({
    data: PropTypes.array,
    useFixedHeader: PropTypes.looseBool,
    columns: PropTypes.array,
    prefixCls: PropTypes.string,
    bodyStyle: PropTypes.object,
    rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    customRow: PropTypes.func,
    customHeaderRow: PropTypes.func,
    // onRowClick: PropTypes.func,
    // onRowDoubleClick: PropTypes.func,
    // onRowContextMenu: PropTypes.func,
    // onRowMouseEnter: PropTypes.func,
    // onRowMouseLeave: PropTypes.func,
    showHeader: PropTypes.looseBool,
    title: PropTypes.func,
    id: PropTypes.string,
    footer: PropTypes.func,
    emptyText: PropTypes.any,
    scroll: PropTypes.object,
    rowRef: PropTypes.func,
    // getBodyWrapper: PropTypes.func,
    components: PropTypes.shape({
      table: PropTypes.any,
      header: PropTypes.shape({
        wrapper: PropTypes.any,
        row: PropTypes.any,
        cell: PropTypes.any
      }).loose,
      body: PropTypes.shape({
        wrapper: PropTypes.any,
        row: PropTypes.any,
        cell: PropTypes.any
      }).loose
    }).loose,
    expandIconAsCell: PropTypes.looseBool,
    expandedRowKeys: PropTypes.array,
    expandedRowClassName: PropTypes.func,
    defaultExpandAllRows: PropTypes.looseBool,
    defaultExpandedRowKeys: PropTypes.array,
    expandIconColumnIndex: PropTypes.number,
    expandedRowRender: PropTypes.func,
    childrenColumnName: PropTypes.string,
    indentSize: PropTypes.number,
    expandRowByClick: PropTypes.looseBool,
    expandIcon: PropTypes.func,
    tableLayout: PropTypes.string,
    transformCellText: PropTypes.func
  }, {
    data: [],
    useFixedHeader: false,
    rowKey: "key",
    rowClassName: function rowClassName() {
      return "";
    },
    prefixCls: "rc-table",
    bodyStyle: {},
    showHeader: true,
    scroll: {},
    rowRef: function rowRef() {
      return null;
    },
    emptyText: function emptyText() {
      return "No Data";
    },
    customHeaderRow: function customHeaderRow() {
    }
  }),
  setup: function setup138(props2) {
    var columnManager = useColumnManager(toRef(props2, "columns"));
    var colsKeys = computed$6(function() {
      return getColumnsKey(columnManager.leafColumns.value);
    });
    var _useLayoutState = useLayoutState(/* @__PURE__ */ new Map()), _useLayoutState2 = _slicedToArray$2(_useLayoutState, 2), colsWidths = _useLayoutState2[0], updateColsWidths = _useLayoutState2[1];
    var pureColWidths = computed$6(function() {
      return colsKeys.value.map(function(columnKey) {
        return colsWidths.value.get(columnKey);
      });
    });
    var stickyOffsets = useStickyOffsets(pureColWidths, columnManager.leafColumns);
    var onColumnResize = function onColumnResize2(columnKey, width) {
      updateColsWidths(function(widths) {
        if (widths.get(columnKey) !== width) {
          var newWidths = new Map(widths);
          newWidths.set(columnKey, width);
          return newWidths;
        }
        return widths;
      });
    };
    var fixedInfoList = computed$6(function() {
      return columnManager.leafColumns.value.map(function(_2, colIndex) {
        return getCellFixedInfo(colIndex, colIndex, columnManager.leafColumns.value, stickyOffsets.value);
      });
    });
    var store = reactive$4({
      currentHoverKey: null,
      fixedColumnsHeadRowsHeight: [],
      fixedColumnsBodyRowsHeight: {},
      expandedRowsHeight: {},
      expandedRowKeys: [],
      columnManager,
      fixedInfoList,
      stickyOffsets
    });
    provide$2("table-store", store);
    var bodyRef = ref$4();
    var pingedLeft = ref$4(false);
    var pingedRight = ref$4(false);
    var horizonScroll = computed$6(function() {
      return props2.scroll && validateValue(props2.scroll.x);
    });
    var onScroll2 = function onScroll3(currentTarget) {
      var scrollWidth = currentTarget.scrollWidth, clientWidth = currentTarget.clientWidth, scrollLeft2 = currentTarget.scrollLeft;
      pingedLeft.value = scrollLeft2 > 0;
      pingedRight.value = scrollLeft2 < scrollWidth - clientWidth;
    };
    onUpdated(function() {
      nextTick$7(function() {
        horizonScroll.value && onScroll2(bodyRef.value.$el);
      });
    });
    onMounted$3(function() {
      nextTick$7(function() {
        horizonScroll.value && onScroll2(bodyRef.value.$el);
      });
    });
    var onFullTableResize = function onFullTableResize2() {
      horizonScroll.value && onScroll2(bodyRef.value.$el);
    };
    return {
      bodyRef,
      store,
      onColumnResize,
      columnManager,
      onScroll: onScroll2,
      pingedLeft,
      pingedRight,
      onFullTableResize
    };
  },
  data: function data63() {
    this.preData = _toConsumableArray(this.data);
    return {
      sComponents: markRaw$1(merge2({
        table: "table",
        header: {
          wrapper: "thead",
          row: "tr",
          cell: "th"
        },
        body: {
          wrapper: "tbody",
          row: "tr",
          cell: "td"
        }
      }, this.components))
    };
  },
  computed: {
    dataLen: function dataLen() {
      return this.$props.data.length;
    }
  },
  watch: {
    components: function components() {
      this._components = merge2({
        table: "table",
        header: {
          wrapper: "thead",
          row: "tr",
          cell: "th"
        },
        body: {
          wrapper: "tbody",
          row: "tr",
          cell: "td"
        }
      }, this.components);
    },
    dataLen: function dataLen2(val, preVal) {
      var _this = this;
      if ((val === 0 || preVal === 0) && this.hasScrollX()) {
        nextTick$7(function() {
          _this.resetScrollX();
        });
      }
    }
  },
  created: function created16() {
    provide$2("table", this);
    this.setScrollPosition("left");
    this.debouncedWindowResize = debounce(this.handleWindowResize, 150);
  },
  mounted: function mounted35() {
    var _this2 = this;
    this.$nextTick(function() {
      if (_this2.columnManager.isAnyColumnsFixed.value) {
        _this2.handleWindowResize();
        _this2.resizeEvent = addEventListenerWrap(window, "resize", _this2.debouncedWindowResize);
      }
      if (_this2.ref_headTable) {
        _this2.ref_headTable.scrollLeft = 0;
      }
      if (_this2.ref_bodyTable) {
        _this2.ref_bodyTable.scrollLeft = 0;
      }
    });
  },
  updated: function updated21() {
    var _this3 = this;
    this.$nextTick(function() {
      if (_this3.columnManager.isAnyColumnsFixed.value) {
        _this3.handleWindowResize();
        if (!_this3.resizeEvent) {
          _this3.resizeEvent = addEventListenerWrap(window, "resize", _this3.debouncedWindowResize);
        }
      }
    });
  },
  beforeUnmount: function beforeUnmount25() {
    if (this.resizeEvent) {
      this.resizeEvent.remove();
    }
    if (this.debouncedWindowResize) {
      this.debouncedWindowResize.cancel();
    }
  },
  methods: {
    getRowKey: function getRowKey(record, index2) {
      var rowKey = this.rowKey;
      var key2 = typeof rowKey === "function" ? rowKey(record, index2) : record[rowKey];
      warning$5(key2 !== void 0, "Each record in table should have a unique `key` prop,or set `rowKey` to an unique primary key.");
      return key2 === void 0 ? index2 : key2;
    },
    setScrollPosition: function setScrollPosition(position) {
      this.scrollPosition = position;
      if (this.tableNode) {
        var prefixCls2 = this.prefixCls;
        if (position === "both") {
          classes3(this.tableNode).remove(new RegExp("^".concat(prefixCls2, "-scroll-position-.+$"))).add("".concat(prefixCls2, "-scroll-position-left")).add("".concat(prefixCls2, "-scroll-position-right"));
        } else {
          classes3(this.tableNode).remove(new RegExp("^".concat(prefixCls2, "-scroll-position-.+$"))).add("".concat(prefixCls2, "-scroll-position-").concat(position));
        }
      }
    },
    setScrollPositionClassName: function setScrollPositionClassName() {
      var node = this.ref_bodyTable;
      var scrollToLeft = node.scrollLeft === 0;
      var scrollToRight = node.scrollLeft + 1 >= node.children[0].getBoundingClientRect().width - node.getBoundingClientRect().width;
      if (scrollToLeft && scrollToRight) {
        this.setScrollPosition("both");
      } else if (scrollToLeft) {
        this.setScrollPosition("left");
      } else if (scrollToRight) {
        this.setScrollPosition("right");
      } else if (this.scrollPosition !== "middle") {
        this.setScrollPosition("middle");
      }
    },
    isTableLayoutFixed: function isTableLayoutFixed() {
      var _this$$props = this.$props, tableLayout = _this$$props.tableLayout, _this$$props$columns = _this$$props.columns, columns2 = _this$$props$columns === void 0 ? [] : _this$$props$columns, useFixedHeader = _this$$props.useFixedHeader, _this$$props$scroll = _this$$props.scroll, scroll = _this$$props$scroll === void 0 ? {} : _this$$props$scroll;
      if (typeof tableLayout !== "undefined") {
        return tableLayout === "fixed";
      }
      if (columns2.some(function(_ref) {
        var ellipsis = _ref.ellipsis;
        return !!ellipsis;
      })) {
        return true;
      }
      if (useFixedHeader || scroll.y) {
        return true;
      }
      if (scroll.x && scroll.x !== true && scroll.x !== "max-content") {
        return true;
      }
      return false;
    },
    handleWindowResize: function handleWindowResize() {
      this.syncFixedTableRowHeight();
      this.setScrollPositionClassName();
    },
    syncFixedTableRowHeight: function syncFixedTableRowHeight() {
      var tableRect = this.tableNode.getBoundingClientRect();
      if (tableRect.height !== void 0 && tableRect.height <= 0) {
        return;
      }
      var prefixCls2 = this.prefixCls;
      var headRows = this.ref_headTable ? this.ref_headTable.querySelectorAll("thead") : this.ref_bodyTable.querySelectorAll("thead");
      var bodyRows = this.ref_bodyTable.querySelectorAll(".".concat(prefixCls2, "-row")) || [];
      var fixedColumnsHeadRowsHeight = [].map.call(headRows, function(row) {
        return row.getBoundingClientRect().height ? row.getBoundingClientRect().height - 0.5 : "auto";
      });
      var state = this.store;
      var fixedColumnsBodyRowsHeight = [].reduce.call(bodyRows, function(acc, row) {
        var rowKey = row.getAttribute("data-row-key");
        var height = row.getBoundingClientRect().height || state.fixedColumnsBodyRowsHeight[rowKey] || "auto";
        acc[rowKey] = height;
        return acc;
      }, {});
      if (shallowEqual$1(state.fixedColumnsHeadRowsHeight, fixedColumnsHeadRowsHeight) && shallowEqual$1(state.fixedColumnsBodyRowsHeight, fixedColumnsBodyRowsHeight)) {
        return;
      }
      this.store.fixedColumnsHeadRowsHeight = fixedColumnsHeadRowsHeight;
      this.store.fixedColumnsBodyRowsHeight = fixedColumnsBodyRowsHeight;
    },
    resetScrollX: function resetScrollX() {
      if (this.ref_headTable) {
        this.ref_headTable.scrollLeft = 0;
      }
      if (this.ref_bodyTable) {
        this.ref_bodyTable.scrollLeft = 0;
      }
    },
    hasScrollX: function hasScrollX() {
      var _this$scroll = this.scroll, scroll = _this$scroll === void 0 ? {} : _this$scroll;
      return "x" in scroll;
    },
    handleBodyScrollLeft: function handleBodyScrollLeft(e2) {
      var target = e2.target;
      var _this$scroll2 = this.scroll, scroll = _this$scroll2 === void 0 ? {} : _this$scroll2;
      var ref_headTable = this.ref_headTable, ref_bodyTable = this.ref_bodyTable;
      if (target.scrollLeft !== this.lastScrollLeft && scroll.x) {
        if (target === ref_bodyTable && ref_headTable) {
          ref_headTable.scrollLeft = target.scrollLeft;
        } else if (target === ref_headTable && ref_bodyTable) {
          ref_bodyTable.scrollLeft = target.scrollLeft;
        }
        this.setScrollPositionClassName();
      }
      this.lastScrollLeft = target.scrollLeft;
    },
    handleBodyScrollTop: function handleBodyScrollTop(e2) {
      var target = e2.target;
      if (e2.currentTarget !== target) {
        return;
      }
      var _this$scroll3 = this.scroll, scroll = _this$scroll3 === void 0 ? {} : _this$scroll3;
      var ref_headTable = this.ref_headTable, ref_bodyTable = this.ref_bodyTable, ref_fixedColumnsBodyLeft = this.ref_fixedColumnsBodyLeft, ref_fixedColumnsBodyRight = this.ref_fixedColumnsBodyRight;
      if (target.scrollTop !== this.lastScrollTop && scroll.y && target !== ref_headTable) {
        var scrollTop2 = target.scrollTop;
        if (ref_fixedColumnsBodyLeft && target !== ref_fixedColumnsBodyLeft) {
          ref_fixedColumnsBodyLeft.scrollTop = scrollTop2;
        }
        if (ref_fixedColumnsBodyRight && target !== ref_fixedColumnsBodyRight) {
          ref_fixedColumnsBodyRight.scrollTop = scrollTop2;
        }
        if (ref_bodyTable && target !== ref_bodyTable) {
          ref_bodyTable.scrollTop = scrollTop2;
        }
      }
      this.lastScrollTop = target.scrollTop;
    },
    handleBodyScroll: function handleBodyScroll(e2) {
      this.onScroll(e2.target);
      this.handleBodyScrollLeft(e2);
      this.handleBodyScrollTop(e2);
    },
    handleWheel: function handleWheel(event) {
      var _this$$props$scroll2 = this.$props.scroll, scroll = _this$$props$scroll2 === void 0 ? {} : _this$$props$scroll2;
      if (window.navigator.userAgent.match(/Trident\/7\./) && scroll.y) {
        event.preventDefault();
        var wd = event.deltaY;
        var target = event.target;
        var bodyTable = this.ref_bodyTable, fixedColumnsBodyLeft = this.ref_fixedColumnsBodyLeft, fixedColumnsBodyRight = this.ref_fixedColumnsBodyRight;
        var scrollTop2 = 0;
        if (this.lastScrollTop) {
          scrollTop2 = this.lastScrollTop + wd;
        } else {
          scrollTop2 = wd;
        }
        if (fixedColumnsBodyLeft && target !== fixedColumnsBodyLeft) {
          fixedColumnsBodyLeft.scrollTop = scrollTop2;
        }
        if (fixedColumnsBodyRight && target !== fixedColumnsBodyRight) {
          fixedColumnsBodyRight.scrollTop = scrollTop2;
        }
        if (bodyTable && target !== bodyTable) {
          bodyTable.scrollTop = scrollTop2;
        }
      }
    },
    // saveChildrenRef(name, node) {
    //   this[`ref_${name}`] = node;
    // },
    saveRef: function saveRef3(name) {
      var _this4 = this;
      return function(node) {
        _this4["ref_".concat(name)] = node;
      };
    },
    saveTableNodeRef: function saveTableNodeRef(node) {
      this.tableNode = node;
    },
    renderMainTable: function renderMainTable() {
      var scroll = this.scroll, prefixCls2 = this.prefixCls;
      var isAnyColumnsFixed = this.columnManager.isAnyColumnsFixed.value;
      var scrollable = isAnyColumnsFixed || scroll.x || scroll.y;
      var table = [this.renderTable({
        columns: this.columnManager.groupedColumns.value,
        isAnyColumnsFixed
      }), this.renderEmptyText(), this.renderFooter()];
      return scrollable ? _createVNode$_(ResizeObserver, {
        "onResize": this.onFullTableResize
      }, {
        default: function _default8() {
          return [_createVNode$_("div", {
            "class": "".concat(prefixCls2, "-scroll")
          }, [table])];
        }
      }) : table;
    },
    renderTable: function renderTable(options2) {
      var columns2 = options2.columns, isAnyColumnsFixed = options2.isAnyColumnsFixed;
      var prefixCls2 = this.prefixCls, _this$scroll4 = this.scroll, scroll = _this$scroll4 === void 0 ? {} : _this$scroll4;
      var tableClassName = scroll.x ? "".concat(prefixCls2, "-fixed") : "";
      var headTable = _createVNode$_(HeadTable, {
        "key": "head",
        "columns": columns2,
        "tableClassName": tableClassName,
        "handleBodyScrollLeft": this.handleBodyScrollLeft,
        "expander": this.expander
      }, null);
      var bodyTable = _createVNode$_(BodyTable, {
        "key": "body",
        "columns": columns2,
        "tableClassName": tableClassName,
        "getRowKey": this.getRowKey,
        "handleWheel": this.handleWheel,
        "handleBodyScroll": this.handleBodyScroll,
        "expander": this.expander,
        "isAnyColumnsFixed": isAnyColumnsFixed,
        "ref": "bodyRef"
      }, null);
      return [headTable, bodyTable];
    },
    renderTitle: function renderTitle() {
      var title = this.title, prefixCls2 = this.prefixCls, data79 = this.data;
      return title ? _createVNode$_("div", {
        "class": "".concat(prefixCls2, "-title"),
        "key": "title"
      }, [title(data79)]) : null;
    },
    renderFooter: function renderFooter4() {
      var footer = this.footer, prefixCls2 = this.prefixCls, data79 = this.data;
      return footer ? _createVNode$_("div", {
        "class": "".concat(prefixCls2, "-footer"),
        "key": "footer"
      }, [footer(data79)]) : null;
    },
    renderEmptyText: function renderEmptyText() {
      var emptyText2 = this.emptyText, prefixCls2 = this.prefixCls, data79 = this.data;
      if (data79.length) {
        return null;
      }
      var emptyClassName = "".concat(prefixCls2, "-placeholder");
      return _createVNode$_("div", {
        "class": emptyClassName,
        "key": "emptyText"
      }, [typeof emptyText2 === "function" ? emptyText2() : emptyText2]);
    }
  },
  render: function render129() {
    var _classNames, _this5 = this;
    var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
    var columnManager = this.columnManager, getRowKey2 = this.getRowKey;
    var prefixCls2 = props2.prefixCls;
    var tableClassName = classNames(props2.prefixCls, props2.class, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-fixed-header"), props2.useFixedHeader || props2.scroll && props2.scroll.y), _defineProperty$U(_classNames, "".concat(prefixCls2, "-scroll-position-left ").concat(prefixCls2, "-scroll-position-right"), this.scrollPosition === "both"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-scroll-position-").concat(this.scrollPosition), this.scrollPosition !== "both"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-layout-fixed"), this.isTableLayoutFixed()), _defineProperty$U(_classNames, "".concat(prefixCls2, "-ping-left"), this.pingedLeft), _defineProperty$U(_classNames, "".concat(prefixCls2, "-ping-right"), this.pingedRight), _classNames));
    var dataAndAriaProps = getDataAndAriaProps(props2);
    var expandableTableProps = _extends$1(_extends$1({}, props2), {
      columnManager,
      getRowKey: getRowKey2
    });
    return _createVNode$_(ExpandableTable, expandableTableProps, {
      default: function _default8(expander) {
        _this5.expander = expander;
        return _createVNode$_("div", _objectSpread2$2({
          "ref": _this5.saveTableNodeRef,
          "class": tableClassName,
          "style": props2.style,
          "id": props2.id
        }, dataAndAriaProps), [_this5.renderTitle(), _createVNode$_("div", {
          "class": "".concat(prefixCls2, "-content")
        }, [_this5.renderMainTable()])]);
      }
    });
  }
});
var FilterFilled$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M349 838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V642H349v196zm531.1-684H143.9c-24.5 0-39.8 26.7-27.5 48l221.3 376h348.8l221.3-376c12.1-21.3-3.2-48-27.7-48z" } }] }, "name": "filter", "theme": "filled" };
const { createVNode: _createVNode$Z } = await importShared("vue");
function _objectSpread$d(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$e(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$e(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var FilterFilled = function FilterFilled2(props2, context2) {
  var p = _objectSpread$d({}, props2, context2.attrs);
  return _createVNode$Z(Icon, _objectSpread$d({}, p, {
    "icon": FilterFilled$1
  }), null);
};
FilterFilled.displayName = "FilterFilled";
FilterFilled.inheritAttrs = false;
const { createVNode: _createVNode$Y } = await importShared("vue");
var FilterDropdownMenuWrapper = function FilterDropdownMenuWrapper2(props2, _ref) {
  var slots = _ref.slots;
  var _a;
  return _createVNode$Y("div", {
    "class": props2.class,
    "onClick": function onClick7(e2) {
      return e2.stopPropagation();
    }
  }, [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]);
};
FilterDropdownMenuWrapper.inheritAttrs = false;
paginationProps$1();
var ColumnFilterItem = PropTypes.shape({
  text: PropTypes.string,
  value: PropTypes.string,
  children: PropTypes.array
}).loose;
var columnProps = {
  title: PropTypes.VNodeChild,
  key: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  dataIndex: PropTypes.string,
  customRender: PropTypes.func,
  customCell: PropTypes.func,
  customHeaderCell: PropTypes.func,
  align: PropTypes.oneOf(tuple("left", "right", "center")),
  ellipsis: PropTypes.looseBool,
  filters: PropTypes.arrayOf(ColumnFilterItem),
  onFilter: {
    type: Function
  },
  filterMultiple: PropTypes.looseBool,
  filterDropdown: PropTypes.any,
  filterDropdownVisible: PropTypes.looseBool,
  onFilterDropdownVisibleChange: {
    type: Function
  },
  sorter: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.func]),
  defaultSortOrder: PropTypes.oneOf(tuple("ascend", "descend")),
  colSpan: PropTypes.number,
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  className: PropTypes.string,
  fixed: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.oneOf(tuple("left", "right"))])),
  filterIcon: PropTypes.any,
  filteredValue: PropTypes.array,
  filtered: PropTypes.looseBool,
  defaultFilteredValue: PropTypes.array,
  sortOrder: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.oneOf(tuple("ascend", "descend"))])),
  sortDirections: PropTypes.array
  // children?: ColumnProps<T>[];
  // onCellClick?: (record: T, event: any) => void;
  // onCell?: (record: T) => any;
  // onHeaderCell?: (props: ColumnProps<T>) => any;
};
var TableLocale = PropTypes.shape({
  filterTitle: PropTypes.string,
  filterConfirm: PropTypes.any,
  filterReset: PropTypes.any,
  emptyText: PropTypes.any,
  selectAll: PropTypes.any,
  selectInvert: PropTypes.any,
  sortTitle: PropTypes.string,
  expand: PropTypes.string,
  collapse: PropTypes.string
}).loose;
var RowSelectionType = PropTypes.oneOf(tuple("checkbox", "radio"));
var tableRowSelection = {
  type: RowSelectionType,
  selectedRowKeys: PropTypes.array,
  // onChange?: (selectedRowKeys: string[] | number[], selectedRows: Object[]) => any;
  getCheckboxProps: PropTypes.func,
  // onSelect?: SelectionSelectFn<T>;
  // onSelectAll?: (selected: boolean, selectedRows: Object[], changeRows: Object[]) => any;
  // onSelectInvert?: (selectedRows: Object[]) => any;
  selections: withUndefined(PropTypes.oneOfType([PropTypes.array, PropTypes.looseBool])),
  hideDefaultSelections: PropTypes.looseBool,
  fixed: PropTypes.looseBool,
  columnWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  selectWay: PropTypes.oneOf(tuple("onSelect", "onSelectMultiple", "onSelectAll", "onSelectInvert")),
  columnTitle: PropTypes.any
};
var paginationProps2 = paginationConfig();
var tableProps = {
  prefixCls: PropTypes.string,
  dropdownPrefixCls: PropTypes.string,
  rowSelection: PropTypes.oneOfType([PropTypes.shape(tableRowSelection).loose, Object]),
  pagination: withUndefined(PropTypes.oneOfType([PropTypes.shape(paginationProps2).loose, PropTypes.looseBool])),
  size: PropTypes.oneOf(tuple("default", "middle", "small", "large")),
  dataSource: PropTypes.array,
  components: PropTypes.object,
  columns: {
    type: Array
  },
  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  rowClassName: PropTypes.func,
  expandedRowRender: PropTypes.any,
  defaultExpandAllRows: PropTypes.looseBool,
  defaultExpandedRowKeys: PropTypes.array,
  expandedRowKeys: PropTypes.array,
  expandIconAsCell: PropTypes.looseBool,
  expandIconColumnIndex: PropTypes.number,
  expandRowByClick: PropTypes.looseBool,
  loading: PropTypes.oneOfType([PropTypes.shape(getSpinProps()).loose, PropTypes.looseBool]),
  locale: TableLocale,
  indentSize: PropTypes.number,
  customRow: PropTypes.func,
  customHeaderRow: PropTypes.func,
  useFixedHeader: PropTypes.looseBool,
  bordered: PropTypes.looseBool,
  showHeader: PropTypes.looseBool,
  footer: PropTypes.func,
  title: PropTypes.func,
  scroll: {
    type: Object
  },
  childrenColumnName: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),
  bodyStyle: PropTypes.style,
  sortDirections: {
    type: Array
  },
  tableLayout: PropTypes.string,
  getPopupContainer: PropTypes.func,
  expandIcon: PropTypes.func,
  transformCellText: PropTypes.func,
  onExpandedRowsChange: PropTypes.func,
  onExpand: PropTypes.func,
  onChange: PropTypes.func,
  onRowClick: PropTypes.func
  // style?: React.CSSProperties;
  // children?: React.ReactNode;
};
var SelectionCheckboxAllProps = {
  propsSymbol: PropTypes.any,
  store: PropTypes.any,
  locale: PropTypes.any,
  disabled: PropTypes.looseBool,
  getCheckboxPropsByItem: PropTypes.func,
  getRecordKey: PropTypes.func,
  data: PropTypes.array,
  prefixCls: PropTypes.string,
  hideDefaultSelections: PropTypes.looseBool,
  selections: PropTypes.oneOfType([PropTypes.array, PropTypes.looseBool]),
  getPopupContainer: PropTypes.func,
  onSelect: PropTypes.func
};
var SelectionBoxProps = {
  store: PropTypes.any,
  type: RowSelectionType,
  defaultSelection: PropTypes.array,
  rowIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  name: PropTypes.string,
  disabled: PropTypes.looseBool,
  id: PropTypes.string
  // onChange: React.ChangeEventHandler<HTMLInputElement>;
};
var FilterMenuProps = {
  locale: TableLocale,
  selectedKeys: PropTypes.array,
  column: PropTypes.object,
  confirmFilter: PropTypes.func,
  prefixCls: PropTypes.string,
  dropdownPrefixCls: PropTypes.string,
  getPopupContainer: PropTypes.func,
  handleFilter: PropTypes.func
};
const { nextTick: nextTick$6 } = await importShared("vue");
const BaseMixin2 = {
  methods: {
    setState: function setState2() {
      var state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var callback = arguments.length > 1 ? arguments[1] : void 0;
      var newState = typeof state === "function" ? state(this, this.$props) : state;
      if (this.getDerivedStateFromProps) {
        var s2 = this.getDerivedStateFromProps(getOptionProps(this), _extends$1(_extends$1({}, this), newState));
        if (s2 === null) {
          return;
        } else {
          newState = _extends$1(_extends$1({}, newState), s2 || {});
        }
      }
      _extends$1(this, newState);
      if (this._.isMounted) {
        this.$forceUpdate();
      }
      nextTick$6(function() {
        callback && callback();
      });
    },
    __emit: function __emit2() {
      var args = [].slice.call(arguments, 0);
      var eventName = args[0];
      eventName = "on".concat(eventName[0].toUpperCase()).concat(eventName.substring(1));
      var event = this.$props[eventName] || this.$attrs[eventName];
      if (args.length && event) {
        if (Array.isArray(event)) {
          for (var i2 = 0, l2 = event.length; i2 < l2; i2++) {
            event[i2].apply(event, _toConsumableArray(args.slice(1)));
          }
        } else {
          event.apply(void 0, _toConsumableArray(args.slice(1)));
        }
      }
    }
  }
};
function flatArray() {
  var data79 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var childrenName = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "children";
  var result = [];
  var loop = function loop2(array3) {
    array3.forEach(function(item) {
      if (item[childrenName]) {
        var newItem = _extends$1({}, item);
        delete newItem[childrenName];
        result.push(newItem);
        if (item[childrenName].length > 0) {
          loop2(item[childrenName]);
        }
      } else {
        result.push(item);
      }
    });
  };
  loop(data79);
  return result;
}
function treeMap(tree, mapper) {
  var childrenName = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "children";
  return tree.map(function(node, index2) {
    var extra = {};
    if (node[childrenName]) {
      extra[childrenName] = treeMap(node[childrenName], mapper, childrenName);
    }
    return _extends$1(_extends$1({}, mapper(node, index2)), extra);
  });
}
function flatFilter(tree, callback) {
  return tree.reduce(function(acc, node) {
    if (callback(node)) {
      acc.push(node);
    }
    if (node.children) {
      var children = flatFilter(node.children, callback);
      acc.push.apply(acc, _toConsumableArray(children));
    }
    return acc;
  }, []);
}
function generateValueMaps(items) {
  var maps = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  (items || []).forEach(function(_ref) {
    var value26 = _ref.value, children = _ref.children;
    maps[value26.toString()] = value26;
    generateValueMaps(children, maps);
  });
  return maps;
}
const { createVNode: _createVNode$X } = await importShared("vue");
const { reactive: reactive$3, defineComponent: defineComponent$t, nextTick: nextTick$5, computed: computed$5, watch: watch$3 } = await importShared("vue");
function stopPropagation$1(e2) {
  e2.stopPropagation();
}
const FilterDropdown = defineComponent$t({
  name: "FilterMenu",
  mixins: [BaseMixin2],
  inheritAttrs: false,
  props: initDefaultProps2(FilterMenuProps, {
    column: {}
  }),
  setup: function setup139(props2) {
    var sSelectedKeys = computed$5(function() {
      return props2.selectedKeys;
    });
    var sVisible = computed$5(function() {
      return "filterDropdownVisible" in props2.column ? props2.column.filterDropdownVisible : false;
    });
    var sValueKeys = computed$5(function() {
      return generateValueMaps(props2.column.filters);
    });
    var state = reactive$3({
      neverShown: false,
      sSelectedKeys: sSelectedKeys.value,
      sKeyPathOfSelectedItem: {},
      sVisible: sVisible.value,
      sValueKeys: sValueKeys.value
    });
    watch$3(sSelectedKeys, function() {
      state.sSelectedKeys = sSelectedKeys.value;
    });
    watch$3(sVisible, function() {
      state.sVisible = sVisible.value;
    });
    watch$3(sValueKeys, function() {
      state.sValueKeys = sValueKeys.value;
    });
    return state;
  },
  methods: {
    getDropdownVisible: function getDropdownVisible() {
      return !!this.sVisible;
    },
    setSelectedKeys: function setSelectedKeys(_ref) {
      var selectedKeys3 = _ref.selectedKeys;
      this.setState({
        sSelectedKeys: selectedKeys3
      });
    },
    setVisible: function setVisible2(visible9) {
      var column = this.column;
      if (!("filterDropdownVisible" in column)) {
        this.setState({
          sVisible: visible9
        });
      }
      if (column.onFilterDropdownVisibleChange) {
        column.onFilterDropdownVisibleChange(visible9);
      }
    },
    handleClearFilters: function handleClearFilters() {
      this.setState({
        sSelectedKeys: []
      }, this.handleConfirm);
    },
    handleConfirm: function handleConfirm() {
      this.setVisible(false);
      this.$forceUpdate();
      nextTick$5(this.confirmFilter2);
    },
    onVisibleChange: function onVisibleChange5(visible9) {
      this.setVisible(visible9);
      var column = this.$props.column;
      if (!visible9 && !(column.filterDropdown instanceof Function)) {
        this.confirmFilter2();
      }
    },
    handleMenuItemClick: function handleMenuItemClick(info3) {
      var selectedKeys3 = this.sSelectedKeys;
      if (!info3.keyPath || info3.keyPath.length <= 1) {
        return;
      }
      var keyPathOfSelectedItem = this.sKeyPathOfSelectedItem;
      if (selectedKeys3 && selectedKeys3.indexOf(info3.key) >= 0) {
        delete keyPathOfSelectedItem[info3.key];
      } else {
        keyPathOfSelectedItem[info3.key] = info3.keyPath;
      }
      this.setState({
        sKeyPathOfSelectedItem: keyPathOfSelectedItem
      });
    },
    hasSubMenu: function hasSubMenu() {
      var _this$column$filters = this.column.filters, filters = _this$column$filters === void 0 ? [] : _this$column$filters;
      return filters.some(function(item) {
        return !!(item.children && item.children.length > 0);
      });
    },
    confirmFilter2: function confirmFilter2() {
      var _this$$props = this.$props, column = _this$$props.column, propSelectedKeys = _this$$props.selectedKeys, confirmFilter = _this$$props.confirmFilter;
      var selectedKeys3 = this.sSelectedKeys, valueKeys = this.sValueKeys;
      var filterDropdown = column.filterDropdown;
      if (!shallowEqual$1(selectedKeys3, propSelectedKeys)) {
        confirmFilter(column, filterDropdown ? selectedKeys3 : selectedKeys3.map(function(key2) {
          return valueKeys[key2];
        }).filter(function(key2) {
          return key2 !== void 0;
        }));
      }
    },
    renderMenus: function renderMenus(items) {
      var _this = this;
      var _this$$props2 = this.$props, dropdownPrefixCls = _this$$props2.dropdownPrefixCls, prefixCls2 = _this$$props2.prefixCls;
      return items.map(function(item) {
        if (item.children && item.children.length > 0) {
          var sKeyPathOfSelectedItem = _this.sKeyPathOfSelectedItem;
          var containSelected = Object.keys(sKeyPathOfSelectedItem).some(function(key2) {
            return sKeyPathOfSelectedItem[key2].indexOf(item.value) >= 0;
          });
          var subMenuCls = classNames("".concat(prefixCls2, "-dropdown-submenu"), _defineProperty$U({}, "".concat(dropdownPrefixCls, "-submenu-contain-selected"), containSelected));
          return _createVNode$X(SubMenu, {
            "title": item.text,
            "popupClassName": subMenuCls,
            "key": item.value
          }, {
            default: function _default8() {
              return [_this.renderMenus(item.children)];
            }
          });
        }
        return _this.renderMenuItem(item);
      });
    },
    renderFilterIcon: function renderFilterIcon() {
      var _classNames2;
      var _a, _b;
      var column = this.column, locale2 = this.locale, prefixCls2 = this.prefixCls, selectedKeys3 = this.selectedKeys;
      var filtered = selectedKeys3 && selectedKeys3.length > 0;
      var filterIcon = column.filterIcon;
      if (typeof filterIcon === "function") {
        filterIcon = filterIcon({
          filtered,
          column
        });
      }
      var dropdownIconClass = classNames((_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-selected"), "filtered" in column ? column.filtered : filtered), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-open"), this.getDropdownVisible()), _classNames2));
      if (!filterIcon) {
        return _createVNode$X(FilterFilled, {
          "title": locale2.filterTitle,
          "class": dropdownIconClass,
          "onClick": stopPropagation$1
        }, null);
      }
      if (filterIcon.length === 1 && isValidElement(filterIcon[0])) {
        return cloneElement(filterIcon[0], {
          title: ((_a = filterIcon.props) === null || _a === void 0 ? void 0 : _a.title) || locale2.filterTitle,
          onClick: stopPropagation$1,
          class: classNames("".concat(prefixCls2, "-icon"), dropdownIconClass, (_b = filterIcon.props) === null || _b === void 0 ? void 0 : _b.class)
        });
      }
      return _createVNode$X("span", {
        "class": classNames("".concat(prefixCls2, "-icon"), dropdownIconClass),
        "onClick": stopPropagation$1
      }, [filterIcon]);
    },
    renderMenuItem: function renderMenuItem(item) {
      var column = this.column;
      var selectedKeys3 = this.sSelectedKeys;
      var multiple = "filterMultiple" in column ? column.filterMultiple : true;
      var input = multiple ? _createVNode$X(Checkbox, {
        "checked": selectedKeys3 && selectedKeys3.indexOf(item.value) >= 0
      }, null) : _createVNode$X(Radio, {
        "checked": selectedKeys3 && selectedKeys3.indexOf(item.value) >= 0
      }, null);
      return _createVNode$X(MenuItem, {
        "key": item.value
      }, {
        default: function _default8() {
          return [input, _createVNode$X("span", null, [item.text])];
        }
      });
    }
  },
  render: function render130() {
    var _this2 = this;
    var originSelectedKeys = this.sSelectedKeys;
    var column = this.column, locale2 = this.locale, prefixCls2 = this.prefixCls, dropdownPrefixCls = this.dropdownPrefixCls, getPopupContainer = this.getPopupContainer;
    var multiple = "filterMultiple" in column ? column.filterMultiple : true;
    var dropdownMenuClass = classNames(_defineProperty$U({}, "".concat(dropdownPrefixCls, "-menu-without-submenu"), !this.hasSubMenu()));
    var filterDropdown = column.filterDropdown;
    if (filterDropdown instanceof Function) {
      filterDropdown = filterDropdown({
        prefixCls: "".concat(dropdownPrefixCls, "-custom"),
        setSelectedKeys: function setSelectedKeys2(selectedKeys3) {
          return _this2.setSelectedKeys({
            selectedKeys: selectedKeys3
          });
        },
        selectedKeys: originSelectedKeys,
        confirm: this.handleConfirm,
        clearFilters: this.handleClearFilters,
        filters: column.filters,
        visible: this.getDropdownVisible(),
        column
      });
    }
    var menus = filterDropdown ? _createVNode$X(FilterDropdownMenuWrapper, {
      "class": "".concat(prefixCls2, "-dropdown")
    }, {
      default: function _default8() {
        return [filterDropdown];
      }
    }) : _createVNode$X(FilterDropdownMenuWrapper, {
      "class": "".concat(prefixCls2, "-dropdown")
    }, {
      default: function _default8() {
        return [_createVNode$X(Menu, {
          "multiple": multiple,
          "onClick": _this2.handleMenuItemClick,
          "prefixCls": "".concat(dropdownPrefixCls, "-menu"),
          "class": dropdownMenuClass,
          "onSelect": _this2.setSelectedKeys,
          "onDeselect": _this2.setSelectedKeys,
          "selectedKeys": originSelectedKeys,
          "getPopupContainer": getPopupContainer
        }, {
          default: function _default9() {
            return [_this2.renderMenus(column.filters)];
          }
        }), _createVNode$X("div", {
          "class": "".concat(prefixCls2, "-dropdown-btns")
        }, [_createVNode$X("a", {
          "class": "".concat(prefixCls2, "-dropdown-link confirm"),
          "onClick": _this2.handleConfirm
        }, [locale2.filterConfirm]), _createVNode$X("a", {
          "class": "".concat(prefixCls2, "-dropdown-link clear"),
          "onClick": _this2.handleClearFilters
        }, [locale2.filterReset])])];
      }
    });
    return _createVNode$X(Dropdown, {
      "trigger": ["click"],
      "placement": "bottomRight",
      "visible": this.getDropdownVisible(),
      "onVisibleChange": this.onVisibleChange,
      "getPopupContainer": getPopupContainer,
      "forceRender": true,
      "overlay": menus
    }, {
      default: function _default8() {
        return [_this2.renderFilterIcon()];
      }
    });
  }
});
const { createVNode: _createVNode$W } = await importShared("vue");
var __rest$c = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { computed: computed$4, defineComponent: defineComponent$s } = await importShared("vue");
const SelectionBox = defineComponent$s({
  name: "SelectionBox",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: SelectionBoxProps,
  setup: function setup140(props2) {
    return {
      checked: computed$4(function() {
        var store = props2.store, defaultSelection = props2.defaultSelection, rowIndex = props2.rowIndex;
        var checked2 = false;
        if (store.selectionDirty) {
          checked2 = store.selectedRowKeys.indexOf(rowIndex) >= 0;
        } else {
          checked2 = store.selectedRowKeys.indexOf(rowIndex) >= 0 || defaultSelection.indexOf(rowIndex) >= 0;
        }
        return checked2;
      })
    };
  },
  render: function render131() {
    var _a = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), type3 = _a.type, rowIndex = _a.rowIndex, rest = __rest$c(_a, ["type", "rowIndex"]);
    var checked2 = this.checked;
    var checkboxProps = _extends$1({
      checked: checked2
    }, rest);
    if (type3 === "radio") {
      checkboxProps.value = rowIndex;
      return _createVNode$W(Radio, checkboxProps, null);
    }
    return _createVNode$W(Checkbox, checkboxProps, null);
  }
});
const { createVNode: _createVNode$V } = await importShared("vue");
const { computed: computed$3, defineComponent: defineComponent$r } = await importShared("vue");
function checkSelection(_ref) {
  var store = _ref.store, getCheckboxPropsByItem2 = _ref.getCheckboxPropsByItem, getRecordKey2 = _ref.getRecordKey, data79 = _ref.data, type3 = _ref.type, byDefaultChecked = _ref.byDefaultChecked;
  return byDefaultChecked ? data79[type3](function(item, i2) {
    return getCheckboxPropsByItem2(item, i2).defaultChecked;
  }) : data79[type3](function(item, i2) {
    return store.selectedRowKeys.indexOf(getRecordKey2(item, i2)) >= 0;
  });
}
function getIndeterminateState(props2) {
  var store = props2.store, data79 = props2.data;
  if (!data79.length) {
    return false;
  }
  var someCheckedNotByDefaultChecked = checkSelection(_extends$1(_extends$1({}, props2), {
    data: data79,
    type: "some",
    byDefaultChecked: false
  })) && !checkSelection(_extends$1(_extends$1({}, props2), {
    data: data79,
    type: "every",
    byDefaultChecked: false
  }));
  var someCheckedByDefaultChecked = checkSelection(_extends$1(_extends$1({}, props2), {
    data: data79,
    type: "some",
    byDefaultChecked: true
  })) && !checkSelection(_extends$1(_extends$1({}, props2), {
    data: data79,
    type: "every",
    byDefaultChecked: true
  }));
  if (store.selectionDirty) {
    return someCheckedNotByDefaultChecked;
  }
  return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;
}
function getCheckState(props2) {
  var store = props2.store, data79 = props2.data;
  if (!data79.length) {
    return false;
  }
  if (store.selectionDirty) {
    return checkSelection(_extends$1(_extends$1({}, props2), {
      data: data79,
      type: "every",
      byDefaultChecked: false
    }));
  }
  return checkSelection(_extends$1(_extends$1({}, props2), {
    data: data79,
    type: "every",
    byDefaultChecked: false
  })) || checkSelection(_extends$1(_extends$1({}, props2), {
    data: data79,
    type: "every",
    byDefaultChecked: true
  }));
}
const SelectionCheckboxAll = defineComponent$r({
  name: "SelectionCheckboxAll",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: SelectionCheckboxAllProps,
  setup: function setup141(props2) {
    return {
      defaultSelections: [],
      checked: computed$3(function() {
        return getCheckState(props2);
      }),
      indeterminate: computed$3(function() {
        return getIndeterminateState(props2);
      })
    };
  },
  created: function created17() {
    var props2 = this.$props;
    this.defaultSelections = props2.hideDefaultSelections ? [] : [{
      key: "all",
      text: props2.locale.selectAll
    }, {
      key: "invert",
      text: props2.locale.selectInvert
    }];
  },
  methods: {
    handleSelectAllChange: function handleSelectAllChange(e2) {
      var checked2 = e2.target.checked;
      this.$emit("select", checked2 ? "all" : "removeAll", 0, null);
    },
    renderMenus: function renderMenus2(selections) {
      var _this = this;
      return selections.map(function(selection, index2) {
        return _createVNode$V(Menu.Item, {
          "key": selection.key || index2
        }, {
          default: function _default8() {
            return [_createVNode$V("div", {
              "onClick": function onClick7() {
                _this.$emit("select", selection.key, index2, selection.onSelect);
              }
            }, [selection.text])];
          }
        });
      });
    }
  },
  render: function render132() {
    var _this2 = this;
    var disabled = this.disabled, prefixCls2 = this.prefixCls, selections = this.selections, getPopupContainer = this.getPopupContainer, checked2 = this.checked, indeterminate = this.indeterminate;
    var selectionPrefixCls = "".concat(prefixCls2, "-selection");
    var customSelections = null;
    if (selections) {
      var newSelections = Array.isArray(selections) ? this.defaultSelections.concat(selections) : this.defaultSelections;
      var menu = _createVNode$V(Menu, {
        "class": "".concat(selectionPrefixCls, "-menu"),
        "selectedKeys": []
      }, {
        default: function _default8() {
          return [_this2.renderMenus(newSelections)];
        }
      });
      customSelections = newSelections.length > 0 ? _createVNode$V(Dropdown, {
        "getPopupContainer": getPopupContainer,
        "overlay": menu
      }, {
        default: function _default8() {
          return [_createVNode$V("div", {
            "class": "".concat(selectionPrefixCls, "-down")
          }, [_createVNode$V(DownOutlined, null, null)])];
        }
      }) : null;
    }
    return _createVNode$V("div", {
      "class": selectionPrefixCls
    }, [_createVNode$V(Checkbox, {
      "class": classNames(_defineProperty$U({}, "".concat(selectionPrefixCls, "-select-all-custom"), customSelections)),
      "checked": checked2,
      "indeterminate": indeterminate,
      "disabled": disabled,
      "onChange": this.handleSelectAllChange
    }, null), customSelections]);
  }
});
const { defineComponent: defineComponent$q } = await importShared("vue");
const Column = defineComponent$q({
  name: "ATableColumn",
  props: columnProps,
  render: function render133() {
    return null;
  }
});
const { defineComponent: defineComponent$p } = await importShared("vue");
const ColumnGroup = defineComponent$p({
  name: "ATableColumnGroup",
  props: {
    fixed: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.oneOf(tuple("left", "right"))])),
    title: PropTypes.any
  },
  __ANT_TABLE_COLUMN_GROUP: true,
  render: function render134() {
    return null;
  }
});
const { createVNode: _createVNode$U } = await importShared("vue");
const { computed: computed$2, defineComponent: defineComponent$o } = await importShared("vue");
var BodyRowProps = {
  store: PropTypes.object,
  rowKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  prefixCls: PropTypes.string
};
function createBodyRow() {
  var Component = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "tr";
  var BodyRow = defineComponent$o({
    name: "BodyRow",
    inheritAttrs: false,
    props: BodyRowProps,
    setup: function setup161(props2) {
      return {
        selected: computed$2(function() {
          var _a;
          return ((_a = props2.store) === null || _a === void 0 ? void 0 : _a.selectedRowKeys.indexOf(props2.rowKey)) >= 0;
        })
      };
    },
    render: function render165() {
      var _className, _this = this;
      var rowProps2 = omit$1(_extends$1(_extends$1({}, this.$props), this.$attrs), ["prefixCls", "rowKey", "store", "class"]);
      var className = (_className = {}, _defineProperty$U(_className, "".concat(this.prefixCls, "-row-selected"), this.selected), _defineProperty$U(_className, this.$attrs.class, !!this.$attrs.class), _className);
      return _createVNode$U(Component, _objectSpread2$2({
        "class": className
      }, rowProps2), {
        default: function _default8() {
          return [getSlot(_this)];
        }
      });
    }
  });
  return BodyRow;
}
const { createVNode: _createVNode$T } = await importShared("vue");
var __rest$b = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$n, inject: inject$d, markRaw, reactive: reactive$2 } = await importShared("vue");
function noop$4() {
}
function stopPropagation(e2) {
  e2.stopPropagation();
}
function getRowSelection(props2) {
  return props2.rowSelection || {};
}
function getColumnKey(column, index2) {
  return column.key || column.dataIndex || index2;
}
function isSameColumn(a2, b2) {
  if (a2 && b2 && a2.key && a2.key === b2.key) {
    return true;
  }
  return a2 === b2 || shallowEqual$1(a2, b2, function(value26, other) {
    if (typeof value26 === "function" && typeof other === "function") {
      return value26 === other || value26.toString() === other.toString();
    }
    if (Array.isArray(value26) && Array.isArray(other)) {
      return value26 === other || shallowEqual$1(value26, other);
    }
  });
}
var defaultPagination = {
  onChange: noop$4,
  onShowSizeChange: noop$4
};
var emptyObject = {};
var createComponents = function createComponents2() {
  var components3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var bodyRow = components3 && components3.body && components3.body.row;
  return _extends$1(_extends$1({}, components3), {
    body: _extends$1(_extends$1({}, components3.body), {
      row: createBodyRow(bodyRow)
    })
  });
};
function isTheSameComponents() {
  var components1 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var components22 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return components1 === components22 || ["table", "header", "body"].every(function(key2) {
    return shallowEqual$1(components1[key2], components22[key2]);
  });
}
function getFilteredValueColumns(state, columns2) {
  return flatFilter(columns2 || (state || {}).columns || [], function(column) {
    return typeof column.filteredValue !== "undefined";
  });
}
function getFiltersFromColumns(state, columns2) {
  var filters = {};
  getFilteredValueColumns(state, columns2).forEach(function(col) {
    var colKey = getColumnKey(col);
    filters[colKey] = col.filteredValue;
  });
  return filters;
}
function isFiltersChanged(state, filters) {
  if (Object.keys(filters).length !== Object.keys(state.filters).length) {
    return true;
  }
  return Object.keys(filters).some(function(columnKey) {
    return filters[columnKey] !== state.filters[columnKey];
  });
}
var defaultTableProps = initDefaultProps2(tableProps, {
  dataSource: [],
  useFixedHeader: false,
  // rowSelection: null,
  size: "default",
  loading: false,
  bordered: false,
  indentSize: 20,
  locale: {},
  rowKey: "key",
  showHeader: true,
  sortDirections: ["ascend", "descend"],
  childrenColumnName: "children"
});
const T$1 = defineComponent$n({
  name: "Table",
  mixins: [BaseMixin],
  inheritAttrs: false,
  Column,
  ColumnGroup,
  props: defaultTableProps,
  setup: function setup142(props2) {
    var store = reactive$2({
      selectedRowKeys: getRowSelection(props2).selectedRowKeys || [],
      selectionDirty: false
    });
    return {
      vcTable: null,
      checkboxPropsCache: {},
      store,
      configProvider: inject$d("configProvider", defaultConfigProvider)
    };
  },
  data: function data64() {
    var props2 = getOptionProps(this);
    warning$5(!props2.expandedRowRender || !("scroll" in props2), "`expandedRowRender` and `scroll` are not compatible. Please use one of them at one time.");
    var getDefaultSortOrder2 = this.getDefaultSortOrder, getDefaultFilters2 = this.getDefaultFilters, getDefaultPagination2 = this.getDefaultPagination;
    return _extends$1(_extends$1({}, getDefaultSortOrder2(props2.columns || [])), {
      // 减少状态
      sFilters: getDefaultFilters2(props2.columns),
      sPagination: getDefaultPagination2(this.$props),
      pivot: void 0,
      sComponents: markRaw(createComponents(this.components)),
      filterDataCnt: 0
    });
  },
  watch: {
    pagination: {
      handler: function handler5(val) {
        this.setState(function(previousState) {
          var newPagination = _extends$1(_extends$1(_extends$1({}, defaultPagination), previousState.sPagination), val);
          newPagination.current = newPagination.current || 1;
          newPagination.pageSize = newPagination.pageSize || 10;
          return {
            sPagination: val !== false ? newPagination : emptyObject
          };
        });
      },
      deep: true
    },
    rowSelection: {
      handler: function handler6(val, oldVal) {
        if (val && "selectedRowKeys" in val) {
          this.store.selectedRowKeys = val.selectedRowKeys || [];
          var rowSelection = this.rowSelection;
          if (rowSelection && val.getCheckboxProps !== rowSelection.getCheckboxProps) {
            this.checkboxPropsCache = {};
          }
        } else if (oldVal && !val) {
          this.store.selectedRowKeys = [];
        }
      },
      deep: true
    },
    dataSource: function dataSource() {
      this.store.selectionDirty = false;
      this.checkboxPropsCache = {};
    },
    columns: function columns(val) {
      var filteredValueColumns = getFilteredValueColumns({
        columns: val
      }, val);
      if (filteredValueColumns.length > 0) {
        var filtersFromColumns = getFiltersFromColumns({
          columns: val
        }, val);
        var newFilters = _extends$1({}, this.sFilters);
        Object.keys(filtersFromColumns).forEach(function(key2) {
          newFilters[key2] = filtersFromColumns[key2];
        });
        if (isFiltersChanged({
          filters: this.sFilters
        }, newFilters)) {
          this.setState({
            sFilters: newFilters
          });
        }
      }
    },
    components: {
      handler: function handler7(val, oldVal) {
        if (!isTheSameComponents(val, oldVal)) {
          var components3 = createComponents(val);
          this.setState({
            sComponents: components3
          });
        }
      },
      deep: true
    }
  },
  updated: function updated22() {
    var columns2 = this.columns, sortColumn = this.sSortColumn, sortOrder = this.sSortOrder;
    if (this.getSortOrderColumns(columns2).length > 0) {
      var sortState = this.getSortStateFromColumns(columns2);
      if (!isSameColumn(sortState.sSortColumn, sortColumn) || sortState.sSortOrder !== sortOrder) {
        this.setState(sortState);
      }
    }
  },
  methods: {
    setTableRef: function setTableRef(table) {
      this.vcTable = table;
    },
    getCheckboxPropsByItem: function getCheckboxPropsByItem(item, index2) {
      var rowSelection = getRowSelection(this.$props);
      if (!rowSelection.getCheckboxProps) {
        return {};
      }
      var key2 = this.getRecordKey(item, index2);
      if (!this.checkboxPropsCache[key2]) {
        this.checkboxPropsCache[key2] = rowSelection.getCheckboxProps(item) || {};
      }
      return this.checkboxPropsCache[key2];
    },
    getDefaultSelection: function getDefaultSelection() {
      var _this = this;
      var rowSelection = getRowSelection(this.$props);
      if (!rowSelection.getCheckboxProps) {
        return [];
      }
      return this.getFlatData().filter(function(item, rowIndex) {
        return _this.getCheckboxPropsByItem(item, rowIndex).defaultChecked;
      }).map(function(record, rowIndex) {
        return _this.getRecordKey(record, rowIndex);
      });
    },
    getDefaultPagination: function getDefaultPagination(props2) {
      var pagination = _typeof$3(props2.pagination) === "object" ? props2.pagination : {};
      var current2;
      if ("current" in pagination) {
        current2 = pagination.current;
      } else if ("defaultCurrent" in pagination) {
        current2 = pagination.defaultCurrent;
      }
      var pageSize2;
      if ("pageSize" in pagination) {
        pageSize2 = pagination.pageSize;
      } else if ("defaultPageSize" in pagination) {
        pageSize2 = pagination.defaultPageSize;
      }
      return this.hasPagination(props2) ? _extends$1(_extends$1(_extends$1({}, defaultPagination), pagination), {
        current: current2 || 1,
        pageSize: pageSize2 || 10
      }) : {};
    },
    getSortOrderColumns: function getSortOrderColumns(columns2) {
      return flatFilter(columns2 || this.columns || [], function(column) {
        return "sortOrder" in column;
      });
    },
    getDefaultFilters: function getDefaultFilters(columns2) {
      var definedFilters = getFiltersFromColumns({
        columns: this.columns
      }, columns2);
      var defaultFilteredValueColumns = flatFilter(columns2 || [], function(column) {
        return typeof column.defaultFilteredValue !== "undefined";
      });
      var defaultFilters = defaultFilteredValueColumns.reduce(function(soFar, col) {
        var colKey = getColumnKey(col);
        soFar[colKey] = col.defaultFilteredValue;
        return soFar;
      }, {});
      return _extends$1(_extends$1({}, defaultFilters), definedFilters);
    },
    getDefaultSortOrder: function getDefaultSortOrder(columns2) {
      var definedSortState = this.getSortStateFromColumns(columns2);
      var defaultSortedColumn = flatFilter(columns2 || [], function(column) {
        return column.defaultSortOrder != null;
      })[0];
      if (defaultSortedColumn && !definedSortState.sortColumn) {
        return {
          sSortColumn: defaultSortedColumn,
          sSortOrder: defaultSortedColumn.defaultSortOrder
        };
      }
      return definedSortState;
    },
    getSortStateFromColumns: function getSortStateFromColumns(columns2) {
      var sortedColumn = this.getSortOrderColumns(columns2).filter(function(col) {
        return col.sortOrder;
      })[0];
      if (sortedColumn) {
        return {
          sSortColumn: sortedColumn,
          sSortOrder: sortedColumn.sortOrder
        };
      }
      return {
        sSortColumn: null,
        sSortOrder: null
      };
    },
    getMaxCurrent: function getMaxCurrent(total2) {
      var _this$sPagination = this.sPagination, current2 = _this$sPagination.current, pageSize2 = _this$sPagination.pageSize;
      if ((current2 - 1) * pageSize2 >= total2) {
        return Math.floor((total2 - 1) / pageSize2) + 1;
      }
      return current2;
    },
    getRecordKey: function getRecordKey(record, index2) {
      var rowKey = this.rowKey;
      var recordKey = typeof rowKey === "function" ? rowKey(record, index2) : record[rowKey];
      warning$5(recordKey !== void 0, "Table", "Each record in dataSource of table should have a unique `key` prop, or set `rowKey` of Table to an unique primary key, ");
      return recordKey === void 0 ? index2 : recordKey;
    },
    getSorterFn: function getSorterFn(state) {
      var _ref = state || this.$data, sortOrder = _ref.sSortOrder, sortColumn = _ref.sSortColumn;
      if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== "function") {
        return;
      }
      return function(a2, b2) {
        var result = sortColumn.sorter(a2, b2, sortOrder);
        if (result !== 0) {
          return sortOrder === "descend" ? -result : result;
        }
        return 0;
      };
    },
    getCurrentPageData: function getCurrentPageData() {
      var data79 = this.getLocalData();
      this.filterDataCnt = data79.length;
      var current2;
      var pageSize2;
      var sPagination = this.sPagination;
      if (!this.hasPagination()) {
        pageSize2 = Number.MAX_VALUE;
        current2 = 1;
      } else {
        pageSize2 = sPagination.pageSize;
        current2 = this.getMaxCurrent(sPagination.total || data79.length);
      }
      if (data79.length > pageSize2 || pageSize2 === Number.MAX_VALUE) {
        data79 = data79.slice((current2 - 1) * pageSize2, current2 * pageSize2);
      }
      return data79;
    },
    getFlatData: function getFlatData() {
      var childrenColumnName = this.$props.childrenColumnName;
      return flatArray(this.getLocalData(null, false), childrenColumnName);
    },
    getFlatCurrentPageData: function getFlatCurrentPageData() {
      var childrenColumnName = this.$props.childrenColumnName;
      return flatArray(this.getCurrentPageData(), childrenColumnName);
    },
    getLocalData: function getLocalData(state) {
      var _this2 = this;
      var filter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
      var currentState = state || this.$data;
      var filters = currentState.sFilters;
      var dataSource3 = this.$props.dataSource;
      var data79 = dataSource3 || [];
      data79 = data79.slice(0);
      var sorterFn = this.getSorterFn(currentState);
      if (sorterFn) {
        data79 = this.recursiveSort(_toConsumableArray(data79), sorterFn);
      }
      if (filter && filters) {
        Object.keys(filters).forEach(function(columnKey) {
          var col = _this2.findColumn(columnKey);
          if (!col) {
            return;
          }
          var values = filters[columnKey] || [];
          if (values.length === 0) {
            return;
          }
          var onFilter = col.onFilter;
          data79 = onFilter ? data79.filter(function(record) {
            return values.some(function(v2) {
              return onFilter(v2, record);
            });
          }) : data79;
        });
      }
      return data79;
    },
    onRow: function onRow(prefixCls2, record, index2) {
      var customRow = this.customRow;
      var custom = customRow ? customRow(record, index2) : {};
      return _extends$1(_extends$1({}, custom), {
        prefixCls: prefixCls2,
        store: this.store,
        rowKey: this.getRecordKey(record, index2)
      });
    },
    setSelectedRowKeys: function setSelectedRowKeys(selectedRowKeys, selectionInfo) {
      var _this3 = this;
      var selectWay = selectionInfo.selectWay, record = selectionInfo.record, checked2 = selectionInfo.checked, changeRowKeys = selectionInfo.changeRowKeys, nativeEvent = selectionInfo.nativeEvent;
      var rowSelection = getRowSelection(this.$props);
      if (rowSelection && !("selectedRowKeys" in rowSelection)) {
        this.store.selectedRowKeys = selectedRowKeys;
      }
      var data79 = this.getFlatData();
      if (!rowSelection.onChange && !rowSelection[selectWay]) {
        return;
      }
      var selectedRows = data79.filter(function(row, i2) {
        return selectedRowKeys.indexOf(_this3.getRecordKey(row, i2)) >= 0;
      });
      if (rowSelection.onChange) {
        rowSelection.onChange(selectedRowKeys, selectedRows);
      }
      if (selectWay === "onSelect" && rowSelection.onSelect) {
        rowSelection.onSelect(record, checked2, selectedRows, nativeEvent);
      } else if (selectWay === "onSelectMultiple" && rowSelection.onSelectMultiple) {
        var changeRows = data79.filter(function(row, i2) {
          return changeRowKeys.indexOf(_this3.getRecordKey(row, i2)) >= 0;
        });
        rowSelection.onSelectMultiple(checked2, selectedRows, changeRows);
      } else if (selectWay === "onSelectAll" && rowSelection.onSelectAll) {
        var _changeRows = data79.filter(function(row, i2) {
          return changeRowKeys.indexOf(_this3.getRecordKey(row, i2)) >= 0;
        });
        rowSelection.onSelectAll(checked2, selectedRows, _changeRows);
      } else if (selectWay === "onSelectInvert" && rowSelection.onSelectInvert) {
        rowSelection.onSelectInvert(selectedRowKeys);
      }
    },
    generatePopupContainerFunc: function generatePopupContainerFunc(getPopupContainer) {
      var scroll = this.$props.scroll;
      var table = this.vcTable;
      if (getPopupContainer) {
        return getPopupContainer;
      }
      return scroll && table ? function() {
        return table.tableNode;
      } : void 0;
    },
    scrollToFirstRow: function scrollToFirstRow() {
      var _this4 = this;
      var scroll = this.$props.scroll;
      if (scroll && scroll.scrollToFirstRowOnChange !== false) {
        scrollTo$1(0, {
          getContainer: function getContainer5() {
            return _this4.vcTable.ref_bodyTable;
          }
        });
      }
    },
    isSameColumn: function isSameColumn2(a2, b2) {
      if (a2 && b2 && a2.key && a2.key === b2.key) {
        return true;
      }
      return a2 === b2 || shallowEqual$1(a2, b2, function(value26, other) {
        if (typeof value26 === "function" && typeof other === "function") {
          return value26 === other || value26.toString() === other.toString();
        }
      });
    },
    handleFilter: function handleFilter(column, nextFilters) {
      var _this5 = this;
      var props2 = this.$props;
      var pagination = _extends$1({}, this.sPagination);
      var filters = _extends$1(_extends$1({}, this.sFilters), _defineProperty$U({}, getColumnKey(column), nextFilters));
      var currentColumnKeys = [];
      treeMap(this.columns, function(c2) {
        if (!c2.children) {
          currentColumnKeys.push(getColumnKey(c2));
        }
      });
      Object.keys(filters).forEach(function(columnKey) {
        if (currentColumnKeys.indexOf(columnKey) < 0) {
          delete filters[columnKey];
        }
      });
      if (props2.pagination) {
        pagination.current = 1;
        pagination.onChange(pagination.current);
      }
      var newState = {
        sPagination: pagination,
        sFilters: {}
      };
      var filtersToSetState = _extends$1({}, filters);
      getFilteredValueColumns({
        columns: props2.columns
      }).forEach(function(col) {
        var columnKey = getColumnKey(col);
        if (columnKey) {
          delete filtersToSetState[columnKey];
        }
      });
      if (Object.keys(filtersToSetState).length > 0) {
        newState.sFilters = filtersToSetState;
      }
      if (_typeof$3(props2.pagination) === "object" && "current" in props2.pagination) {
        newState.sPagination = _extends$1(_extends$1({}, pagination), {
          current: this.sPagination.current
        });
      }
      this.setState(newState, function() {
        _this5.scrollToFirstRow();
        _this5.store.selectionDirty = false;
        _this5.$emit.apply(_this5, ["change"].concat(_toConsumableArray(_this5.prepareParamsArguments(_extends$1(_extends$1({}, _this5.$data), {
          sSelectionDirty: false,
          sFilters: filters,
          sPagination: pagination
        })))));
      });
    },
    handleSelect: function handleSelect2(record, rowIndex, e2) {
      var _this6 = this;
      var checked2 = e2.target.checked;
      var nativeEvent = e2.nativeEvent;
      var defaultSelection = this.store.selectionDirty ? [] : this.getDefaultSelection();
      var selectedRowKeys = this.store.selectedRowKeys.concat(defaultSelection);
      var key2 = this.getRecordKey(record, rowIndex);
      var pivot = this.$data.pivot;
      var rows = this.getFlatCurrentPageData();
      var realIndex = rowIndex;
      if (this.$props.expandedRowRender) {
        realIndex = rows.findIndex(function(row) {
          return _this6.getRecordKey(row, rowIndex) === key2;
        });
      }
      if (nativeEvent.shiftKey && pivot !== void 0 && realIndex !== pivot) {
        var changeRowKeys = [];
        var direction = Math.sign(pivot - realIndex);
        var dist = Math.abs(pivot - realIndex);
        var step = 0;
        var _loop = function _loop2() {
          var i2 = realIndex + step * direction;
          step += 1;
          var row = rows[i2];
          var rowKey = _this6.getRecordKey(row, i2);
          var checkboxProps = _this6.getCheckboxPropsByItem(row, i2);
          if (!checkboxProps.disabled) {
            if (selectedRowKeys.includes(rowKey)) {
              if (!checked2) {
                selectedRowKeys = selectedRowKeys.filter(function(j2) {
                  return rowKey !== j2;
                });
                changeRowKeys.push(rowKey);
              }
            } else if (checked2) {
              selectedRowKeys.push(rowKey);
              changeRowKeys.push(rowKey);
            }
          }
        };
        while (step <= dist) {
          _loop();
        }
        this.setState({
          pivot: realIndex
        });
        this.store.selectionDirty = true;
        this.setSelectedRowKeys(selectedRowKeys, {
          selectWay: "onSelectMultiple",
          record,
          checked: checked2,
          changeRowKeys,
          nativeEvent
        });
      } else {
        if (checked2) {
          selectedRowKeys.push(this.getRecordKey(record, realIndex));
        } else {
          selectedRowKeys = selectedRowKeys.filter(function(i2) {
            return key2 !== i2;
          });
        }
        this.setState({
          pivot: realIndex
        });
        this.store.selectionDirty = true;
        this.setSelectedRowKeys(selectedRowKeys, {
          selectWay: "onSelect",
          record,
          checked: checked2,
          changeRowKeys: void 0,
          nativeEvent
        });
      }
    },
    handleRadioSelect: function handleRadioSelect(record, rowIndex, e2) {
      var checked2 = e2.target.checked;
      var nativeEvent = e2.nativeEvent;
      var key2 = this.getRecordKey(record, rowIndex);
      var selectedRowKeys = [key2];
      this.store.selectionDirty = true;
      this.setSelectedRowKeys(selectedRowKeys, {
        selectWay: "onSelect",
        record,
        checked: checked2,
        changeRowKeys: void 0,
        nativeEvent
      });
    },
    handleSelectRow: function handleSelectRow(selectionKey, index2, onSelectFunc) {
      var _this7 = this;
      var data79 = this.getFlatCurrentPageData();
      var defaultSelection = this.store.selectionDirty ? [] : this.getDefaultSelection();
      var selectedRowKeys = this.store.selectedRowKeys.concat(defaultSelection);
      var changeableRowKeys = data79.filter(function(item, i2) {
        return !_this7.getCheckboxPropsByItem(item, i2).disabled;
      }).map(function(item, i2) {
        return _this7.getRecordKey(item, i2);
      });
      var changeRowKeys = [];
      var selectWay = "onSelectAll";
      var checked2;
      switch (selectionKey) {
        case "all":
          changeableRowKeys.forEach(function(key2) {
            if (selectedRowKeys.indexOf(key2) < 0) {
              selectedRowKeys.push(key2);
              changeRowKeys.push(key2);
            }
          });
          selectWay = "onSelectAll";
          checked2 = true;
          break;
        case "removeAll":
          changeableRowKeys.forEach(function(key2) {
            if (selectedRowKeys.indexOf(key2) >= 0) {
              selectedRowKeys.splice(selectedRowKeys.indexOf(key2), 1);
              changeRowKeys.push(key2);
            }
          });
          selectWay = "onSelectAll";
          checked2 = false;
          break;
        case "invert":
          changeableRowKeys.forEach(function(key2) {
            if (selectedRowKeys.indexOf(key2) < 0) {
              selectedRowKeys.push(key2);
            } else {
              selectedRowKeys.splice(selectedRowKeys.indexOf(key2), 1);
            }
            changeRowKeys.push(key2);
            selectWay = "onSelectInvert";
          });
          break;
      }
      this.store.selectionDirty = true;
      var rowSelection = this.rowSelection;
      var customSelectionStartIndex = 2;
      if (rowSelection && rowSelection.hideDefaultSelections) {
        customSelectionStartIndex = 0;
      }
      if (index2 >= customSelectionStartIndex && typeof onSelectFunc === "function") {
        return onSelectFunc(changeableRowKeys);
      }
      this.setSelectedRowKeys(selectedRowKeys, {
        selectWay,
        checked: checked2,
        changeRowKeys
      });
    },
    handlePageChange: function handlePageChange(current2) {
      var props2 = this.$props;
      var pagination = _extends$1({}, this.sPagination);
      if (current2) {
        pagination.current = current2;
      } else {
        pagination.current = pagination.current || 1;
      }
      for (var _len = arguments.length, otherArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        otherArguments[_key - 1] = arguments[_key];
      }
      pagination.onChange.apply(pagination, [pagination.current].concat(otherArguments));
      var newState = {
        sPagination: pagination
      };
      if (props2.pagination && _typeof$3(props2.pagination) === "object" && "current" in props2.pagination) {
        newState.sPagination = _extends$1(_extends$1({}, pagination), {
          current: this.sPagination.current
        });
      }
      this.setState(newState, this.scrollToFirstRow);
      this.store.selectionDirty = false;
      this.$emit.apply(this, ["change"].concat(_toConsumableArray(this.prepareParamsArguments(_extends$1(_extends$1({}, this.$data), {
        sSelectionDirty: false,
        sPagination: pagination
      })))));
    },
    handleShowSizeChange: function handleShowSizeChange(current2, pageSize2) {
      var pagination = this.sPagination;
      pagination.onShowSizeChange(current2, pageSize2);
      var nextPagination = _extends$1(_extends$1({}, pagination), {
        pageSize: pageSize2,
        current: current2
      });
      this.setState({
        sPagination: nextPagination
      }, this.scrollToFirstRow);
      this.$emit.apply(this, ["change"].concat(_toConsumableArray(this.prepareParamsArguments(_extends$1(_extends$1({}, this.$data), {
        sPagination: nextPagination
      })))));
    },
    toggleSortOrder: function toggleSortOrder(column) {
      var sortDirections = column.sortDirections || this.sortDirections;
      var sortOrder = this.sSortOrder, sortColumn = this.sSortColumn;
      var newSortOrder;
      if (isSameColumn(sortColumn, column) && sortOrder !== void 0) {
        var methodIndex = sortDirections.indexOf(sortOrder) + 1;
        newSortOrder = methodIndex === sortDirections.length ? void 0 : sortDirections[methodIndex];
      } else {
        newSortOrder = sortDirections[0];
      }
      var newState = {
        sSortOrder: newSortOrder,
        sSortColumn: newSortOrder ? column : null
      };
      if (this.getSortOrderColumns().length === 0) {
        this.setState(newState, this.scrollToFirstRow);
      }
      this.$emit.apply(this, ["change"].concat(_toConsumableArray(this.prepareParamsArguments(_extends$1(_extends$1({}, this.$data), newState), column))));
    },
    hasPagination: function hasPagination(props2) {
      return (props2 || this.$props).pagination !== false;
    },
    isSortColumn: function isSortColumn(column) {
      var sortColumn = this.sSortColumn;
      if (!column || !sortColumn) {
        return false;
      }
      return getColumnKey(sortColumn) === getColumnKey(column);
    },
    // Get pagination, filters, sorter
    prepareParamsArguments: function prepareParamsArguments(state, column) {
      var pagination = _extends$1({}, state.sPagination);
      delete pagination.onChange;
      delete pagination.onShowSizeChange;
      var filters = state.sFilters;
      var sorter = {};
      var currentColumn = column;
      if (state.sSortColumn && state.sSortOrder) {
        currentColumn = state.sSortColumn;
        sorter.column = state.sSortColumn;
        sorter.order = state.sSortOrder;
      }
      if (currentColumn) {
        sorter.field = currentColumn.dataIndex;
        sorter.columnKey = getColumnKey(currentColumn);
      }
      var extra = {
        currentDataSource: this.getLocalData(state)
      };
      return [pagination, filters, sorter, extra];
    },
    findColumn: function findColumn(myKey) {
      var column;
      treeMap(this.columns, function(c2) {
        if (getColumnKey(c2) === myKey) {
          column = c2;
        }
      });
      return column;
    },
    recursiveSort: function recursiveSort(data79, sorterFn) {
      var _this8 = this;
      var _this$childrenColumnN = this.childrenColumnName, childrenColumnName = _this$childrenColumnN === void 0 ? "children" : _this$childrenColumnN;
      return data79.sort(sorterFn).map(function(item) {
        return item[childrenColumnName] ? _extends$1(_extends$1({}, item), _defineProperty$U({}, childrenColumnName, _this8.recursiveSort(_toConsumableArray(item[childrenColumnName]), sorterFn))) : item;
      });
    },
    renderExpandIcon: function renderExpandIcon4(prefixCls2) {
      if (this.expandIcon) {
        return this.expandIcon;
      }
      return function(_ref2) {
        var expandable = _ref2.expandable, expanded = _ref2.expanded, needIndentSpaced = _ref2.needIndentSpaced, record = _ref2.record, onExpand3 = _ref2.onExpand;
        if (expandable) {
          return _createVNode$T(LocaleReceiver, {
            "componentName": "Table",
            "defaultLocale": defaultLocale.Table,
            "children": function children(locale2) {
              var _classNames;
              return _createVNode$T(TransButton, {
                "class": classNames("".concat(prefixCls2, "-row-expand-icon"), (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-row-collapsed"), !expanded), _defineProperty$U(_classNames, "".concat(prefixCls2, "-row-expanded"), expanded), _classNames)),
                "onClick": function onClick7(event) {
                  onExpand3(record, event);
                },
                "aria-label": expanded ? locale2.collapse : locale2.expand,
                "noStyle": true
              }, null);
            }
          }, null);
        }
        if (needIndentSpaced) {
          return _createVNode$T("span", {
            "class": "".concat(prefixCls2, "-row-expand-icon ").concat(prefixCls2, "-row-spaced")
          }, null);
        }
        return null;
      };
    },
    renderPagination: function renderPagination2(prefixCls2, paginationPosition) {
      if (!this.hasPagination()) {
        return null;
      }
      var size = "default";
      var pagination = this.sPagination;
      if (pagination.size) {
        size = pagination.size;
      } else if (this.size === "middle" || this.size === "small") {
        size = "small";
      }
      var position = pagination.position || "bottom";
      var total2 = pagination.total || this.filterDataCnt;
      var cls = pagination.class, style3 = pagination.style;
      pagination.onChange;
      pagination.onShowSizeChange;
      var restProps = __rest$b(pagination, ["class", "style", "onChange", "onShowSizeChange"]);
      var paginationProps3 = _extends$1(_extends$1({
        key: "pagination-".concat(paginationPosition),
        class: classNames(cls, "".concat(prefixCls2, "-pagination"))
      }, restProps), {
        total: total2,
        size,
        current: this.getMaxCurrent(total2),
        style: style3,
        onChange: this.handlePageChange,
        onShowSizeChange: this.handleShowSizeChange
      });
      return total2 > 0 && (position === paginationPosition || position === "both") ? _createVNode$T(Pagination, paginationProps3, null) : null;
    },
    renderSelectionBox: function renderSelectionBox(type3) {
      var _this9 = this;
      return function(_ref3) {
        var record = _ref3.record, index2 = _ref3.index;
        var rowKey = _this9.getRecordKey(record, index2);
        var props2 = _this9.getCheckboxPropsByItem(record, index2);
        var handleChange22 = function handleChange23(e2) {
          type3 === "radio" ? _this9.handleRadioSelect(record, index2, e2) : _this9.handleSelect(record, index2, e2);
        };
        var selectionBoxProps = _extends$1({
          type: type3,
          store: _this9.store,
          rowIndex: rowKey,
          defaultSelection: _this9.getDefaultSelection(),
          onChange: handleChange22
        }, props2);
        return _createVNode$T("span", {
          "onClick": stopPropagation
        }, [_createVNode$T(SelectionBox, selectionBoxProps, null)]);
      };
    },
    renderRowSelection: function renderRowSelection(_ref4) {
      var _this10 = this;
      var prefixCls2 = _ref4.prefixCls, locale2 = _ref4.locale, getPopupContainer = _ref4.getPopupContainer;
      var rowSelection = this.rowSelection;
      var columns2 = this.columns.concat();
      if (rowSelection) {
        var data79 = this.getFlatCurrentPageData().filter(function(item, index2) {
          if (rowSelection.getCheckboxProps) {
            return !_this10.getCheckboxPropsByItem(item, index2).disabled;
          }
          return true;
        });
        var selectionColumnClass = classNames("".concat(prefixCls2, "-selection-column"), _defineProperty$U({}, "".concat(prefixCls2, "-selection-column-custom"), rowSelection.selections));
        var selectionColumn = _defineProperty$U({
          key: "selection-column",
          customRender: this.renderSelectionBox(rowSelection.type),
          className: selectionColumnClass,
          fixed: rowSelection.fixed,
          width: rowSelection.columnWidth,
          title: rowSelection.columnTitle
        }, INTERNAL_COL_DEFINE, {
          class: "".concat(prefixCls2, "-selection-col")
        });
        if (rowSelection.type !== "radio") {
          var checkboxAllDisabled = data79.every(function(item, index2) {
            return _this10.getCheckboxPropsByItem(item, index2).disabled;
          });
          selectionColumn.title = selectionColumn.title || _createVNode$T(SelectionCheckboxAll, {
            "store": this.store,
            "locale": locale2,
            "data": data79,
            "getCheckboxPropsByItem": this.getCheckboxPropsByItem,
            "getRecordKey": this.getRecordKey,
            "disabled": checkboxAllDisabled,
            "prefixCls": prefixCls2,
            "onSelect": this.handleSelectRow,
            "selections": rowSelection.selections,
            "hideDefaultSelections": rowSelection.hideDefaultSelections,
            "getPopupContainer": this.generatePopupContainerFunc(getPopupContainer),
            "propsSymbol": Symbol()
          }, null);
        }
        if ("fixed" in rowSelection) {
          selectionColumn.fixed = rowSelection.fixed;
        } else if (columns2.some(function(column) {
          return column.fixed === "left" || column.fixed === true;
        })) {
          selectionColumn.fixed = "left";
        }
        if (columns2[0] && columns2[0].key === "selection-column") {
          columns2[0] = selectionColumn;
        } else {
          columns2.unshift(selectionColumn);
        }
      }
      return columns2;
    },
    renderColumnsDropdown: function renderColumnsDropdown(_ref5) {
      var _this11 = this;
      var prefixCls2 = _ref5.prefixCls, dropdownPrefixCls = _ref5.dropdownPrefixCls, columns2 = _ref5.columns, locale2 = _ref5.locale, getPopupContainer = _ref5.getPopupContainer;
      var sortOrder = this.sSortOrder, filters = this.sFilters;
      return treeMap(columns2, function(column, i2) {
        var _classNames3;
        var key2 = getColumnKey(column, i2);
        var filterDropdown;
        var sortButton;
        var customHeaderCell = column.customHeaderCell;
        var isSortColumn2 = _this11.isSortColumn(column);
        if (column.filters && column.filters.length > 0 || column.filterDropdown) {
          var colFilters = key2 in filters ? filters[key2] : [];
          filterDropdown = _createVNode$T(FilterDropdown, {
            "locale": locale2,
            "column": column,
            "selectedKeys": colFilters,
            "confirmFilter": _this11.handleFilter,
            "prefixCls": "".concat(prefixCls2, "-filter"),
            "dropdownPrefixCls": dropdownPrefixCls || "ant-dropdown",
            "getPopupContainer": _this11.generatePopupContainerFunc(getPopupContainer),
            "key": "filter-dropdown"
          }, null);
        }
        if (column.sorter) {
          var sortDirections = column.sortDirections || _this11.sortDirections;
          var isAscend = isSortColumn2 && sortOrder === "ascend";
          var isDescend = isSortColumn2 && sortOrder === "descend";
          var ascend = sortDirections.indexOf("ascend") !== -1 && _createVNode$T(CaretUpFilled, {
            "class": "".concat(prefixCls2, "-column-sorter-up ").concat(isAscend ? "on" : "off"),
            "key": "caret-up"
          }, null);
          var descend = sortDirections.indexOf("descend") !== -1 && _createVNode$T(CaretDownFilled, {
            "class": "".concat(prefixCls2, "-column-sorter-down ").concat(isDescend ? "on" : "off"),
            "key": "caret-down"
          }, null);
          sortButton = _createVNode$T("div", {
            "title": locale2.sortTitle,
            "class": classNames("".concat(prefixCls2, "-column-sorter-inner"), ascend && descend && "".concat(prefixCls2, "-column-sorter-inner-full")),
            "key": "sorter"
          }, [ascend, descend]);
          customHeaderCell = function customHeaderCell2(col) {
            var colProps2 = {};
            if (column.customHeaderCell) {
              colProps2 = _extends$1({}, column.customHeaderCell(col));
            }
            var onHeaderCellClick = colProps2.onClick;
            colProps2.onClick = function() {
              _this11.toggleSortOrder(column);
              if (onHeaderCellClick) {
                onHeaderCellClick.apply(void 0, arguments);
              }
            };
            return colProps2;
          };
        }
        return _extends$1(_extends$1({}, column), {
          className: classNames(column.className, (_classNames3 = {}, _defineProperty$U(_classNames3, "".concat(prefixCls2, "-column-has-actions"), sortButton || filterDropdown), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-column-has-filters"), filterDropdown), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-column-has-sorters"), sortButton), _defineProperty$U(_classNames3, "".concat(prefixCls2, "-column-sort"), isSortColumn2 && sortOrder), _classNames3)),
          title: [_createVNode$T("span", {
            "key": "title",
            "class": "".concat(prefixCls2, "-header-column")
          }, [_createVNode$T("div", {
            "class": sortButton ? "".concat(prefixCls2, "-column-sorters") : void 0
          }, [_createVNode$T("span", {
            "class": "".concat(prefixCls2, "-column-title")
          }, [_this11.renderColumnTitle(column.title)]), _createVNode$T("span", {
            "class": "".concat(prefixCls2, "-column-sorter")
          }, [sortButton])])]), filterDropdown],
          customHeaderCell
        });
      });
    },
    renderColumnTitle: function renderColumnTitle(title) {
      var _this$$data = this.$data, filters = _this$$data.sFilters, sortOrder = _this$$data.sSortOrder, sortColumn = _this$$data.sSortColumn;
      if (title instanceof Function) {
        return title({
          filters,
          sortOrder,
          sortColumn
        });
      }
      return title;
    },
    renderTable: function renderTable2(_ref6) {
      var _classNames4, _this12 = this;
      var prefixCls2 = _ref6.prefixCls, renderEmpty2 = _ref6.renderEmpty, dropdownPrefixCls = _ref6.dropdownPrefixCls, contextLocale = _ref6.contextLocale, contextGetPopupContainer = _ref6.getPopupContainer, transformCellText = _ref6.transformCellText;
      var _a = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), showHeader = _a.showHeader, locale2 = _a.locale, getPopupContainer = _a.getPopupContainer;
      _a.style;
      var restProps = __rest$b(_a, ["showHeader", "locale", "getPopupContainer", "style"]);
      var data79 = this.getCurrentPageData();
      var expandIconAsCell = this.expandedRowRender && this.expandIconAsCell !== false;
      var realGetPopupContainer = getPopupContainer || contextGetPopupContainer;
      var mergedLocale = _extends$1(_extends$1({}, contextLocale), locale2);
      if (!locale2 || !locale2.emptyText) {
        mergedLocale.emptyText = renderEmpty2("Table");
      }
      var classString = classNames((_classNames4 = {}, _defineProperty$U(_classNames4, "".concat(prefixCls2, "-").concat(this.size), true), _defineProperty$U(_classNames4, "".concat(prefixCls2, "-bordered"), this.bordered), _defineProperty$U(_classNames4, "".concat(prefixCls2, "-empty"), !data79.length), _defineProperty$U(_classNames4, "".concat(prefixCls2, "-without-column-header"), !showHeader), _classNames4));
      var columnsWithRowSelection = this.renderRowSelection({
        prefixCls: prefixCls2,
        locale: mergedLocale,
        getPopupContainer: realGetPopupContainer
      });
      var columns2 = this.renderColumnsDropdown({
        columns: columnsWithRowSelection,
        prefixCls: prefixCls2,
        dropdownPrefixCls,
        locale: mergedLocale,
        getPopupContainer: realGetPopupContainer
      }).map(function(column, i2) {
        var newColumn = _extends$1({}, column);
        newColumn.key = getColumnKey(newColumn, i2);
        return newColumn;
      });
      var expandIconColumnIndex = columns2[0] && columns2[0].key === "selection-column" ? 1 : 0;
      if ("expandIconColumnIndex" in restProps) {
        expandIconColumnIndex = restProps.expandIconColumnIndex;
      }
      var vcTableProps = _extends$1(_extends$1({
        key: "table",
        expandIcon: this.renderExpandIcon(prefixCls2)
      }, restProps), {
        customRow: function customRow(record, index2) {
          return _this12.onRow(prefixCls2, record, index2);
        },
        components: this.sComponents,
        prefixCls: prefixCls2,
        data: data79,
        columns: columns2,
        showHeader,
        expandIconColumnIndex,
        expandIconAsCell,
        emptyText: mergedLocale.emptyText,
        transformCellText,
        class: classString,
        ref: this.setTableRef
      });
      return _createVNode$T(Table$1, vcTableProps, null);
    }
  },
  render: function render135() {
    var _this13 = this;
    var customizePrefixCls = this.prefixCls, customizeDropdownPrefixCls = this.dropdownPrefixCls, customizeTransformCellText = this.transformCellText;
    var data79 = this.getCurrentPageData();
    var _this$configProvider = this.configProvider, getContextPopupContainer = _this$configProvider.getPopupContainer, tct = _this$configProvider.transformCellText;
    var getPopupContainer = this.getPopupContainer || getContextPopupContainer;
    var transformCellText = customizeTransformCellText || tct;
    var loading = this.loading;
    if (typeof loading === "boolean") {
      loading = {
        spinning: loading
      };
    }
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var renderEmpty2 = this.configProvider.renderEmpty;
    var prefixCls2 = getPrefixCls2("table", customizePrefixCls);
    var dropdownPrefixCls = getPrefixCls2("dropdown", customizeDropdownPrefixCls);
    var table = _createVNode$T(LocaleReceiver, {
      "componentName": "Table",
      "defaultLocale": defaultLocale.Table,
      "children": function children(locale2) {
        return _this13.renderTable({
          prefixCls: prefixCls2,
          renderEmpty: renderEmpty2,
          dropdownPrefixCls,
          contextLocale: locale2,
          getPopupContainer,
          transformCellText
        });
      }
    }, null);
    var paginationPatchClass = this.hasPagination() && data79 && data79.length !== 0 ? "".concat(prefixCls2, "-with-pagination") : "".concat(prefixCls2, "-without-pagination");
    var spinProps = _extends$1(_extends$1({}, loading), {
      class: loading && loading.spinning ? "".concat(paginationPatchClass, " ").concat(prefixCls2, "-spin-holder") : ""
    });
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    return _createVNode$T("div", {
      "class": classNames("".concat(prefixCls2, "-wrapper"), className),
      "style": style3
    }, [_createVNode$T(Spin, spinProps, {
      default: function _default8() {
        return [_this13.renderPagination(prefixCls2, "top"), table, _this13.renderPagination(prefixCls2, "bottom")];
      }
    })]);
  }
});
const { createVNode: _createVNode$S } = await importShared("vue");
var __rest$a = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$m } = await importShared("vue");
var Table = defineComponent$m({
  name: "ATable",
  Column: T$1.Column,
  ColumnGroup: T$1.ColumnGroup,
  inheritAttrs: false,
  props: defaultTableProps,
  methods: {
    normalize: function normalize() {
      var _this = this;
      var elements = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var flattenElements = flattenChildren(elements);
      var columns2 = [];
      flattenElements.forEach(function(element) {
        var _a, _b, _c, _d;
        if (!element) {
          return;
        }
        var key2 = getKey$2(element);
        var style3 = ((_a = element.props) === null || _a === void 0 ? void 0 : _a.style) || {};
        var cls = ((_b = element.props) === null || _b === void 0 ? void 0 : _b.class) || "";
        var props2 = getPropsData(element);
        var _e = element.children || {}, children = _e.default, restSlots = __rest$a(_e, ["default"]);
        var column = _extends$1(_extends$1(_extends$1({}, restSlots), props2), {
          style: style3,
          class: cls
        });
        if (key2) {
          column.key = key2;
        }
        if ((_c = element.type) === null || _c === void 0 ? void 0 : _c.__ANT_TABLE_COLUMN_GROUP) {
          column.children = _this.normalize(typeof children === "function" ? children() : children);
        } else {
          var customRender = (_d = element.children) === null || _d === void 0 ? void 0 : _d.default;
          column.customRender = column.customRender || customRender;
        }
        columns2.push(column);
      });
      return columns2;
    },
    updateColumns: function updateColumns() {
      var _this2 = this;
      var cols = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      var columns2 = [];
      var $slots = this.$slots;
      cols.forEach(function(col) {
        var _col$slots = col.slots, slots = _col$slots === void 0 ? {} : _col$slots, restProps = __rest$a(col, ["slots"]);
        var column = _extends$1({}, restProps);
        Object.keys(slots).forEach(function(key2) {
          var name = slots[key2];
          if (column[key2] === void 0 && $slots[name]) {
            column[key2] = $slots[name];
          }
        });
        if (col.children) {
          column.children = _this2.updateColumns(column.children);
        }
        columns2.push(column);
      });
      return columns2;
    }
  },
  render: function render136() {
    var normalize2 = this.normalize, $slots = this.$slots;
    var props2 = _extends$1(_extends$1({}, getOptionProps(this)), this.$attrs);
    var columns2 = props2.columns ? this.updateColumns(props2.columns) : normalize2(getSlot(this));
    var title = props2.title, footer = props2.footer;
    var slotTitle = $slots.title, slotFooter = $slots.footer, _$slots$expandedRowRe = $slots.expandedRowRender, expandedRowRender = _$slots$expandedRowRe === void 0 ? props2.expandedRowRender : _$slots$expandedRowRe, expandIcon = $slots.expandIcon;
    title = title || slotTitle;
    footer = footer || slotFooter;
    var tProps = _extends$1(_extends$1({}, props2), {
      columns: columns2,
      title,
      footer,
      expandedRowRender,
      expandIcon: this.$props.expandIcon || expandIcon
    });
    return _createVNode$S(T$1, _objectSpread2$2(_objectSpread2$2({}, tProps), {}, {
      "ref": "table"
    }), null);
  }
});
Table.install = function(app) {
  app.component(Table.name, Table);
  app.component(Table.Column.name, Table.Column);
  app.component(Table.ColumnGroup.name, Table.ColumnGroup);
  return app;
};
var TableColumn = Table.Column;
var TableColumnGroup = Table.ColumnGroup;
const { Fragment: _Fragment$4, createVNode: _createVNode$R } = await importShared("vue");
const { defineComponent: defineComponent$l } = await importShared("vue");
var TransferSearchProps = {
  prefixCls: PropTypes.string,
  placeholder: PropTypes.string,
  value: PropTypes.any,
  handleClear: PropTypes.func,
  disabled: PropTypes.looseBool,
  onChange: PropTypes.func
};
const Search = defineComponent$l({
  name: "Search",
  inheritAttrs: false,
  props: initDefaultProps2(TransferSearchProps, {
    placeholder: ""
  }),
  methods: {
    handleChange: function handleChange19(e2) {
      this.$emit("change", e2);
    },
    handleClear2: function handleClear2(e2) {
      e2.preventDefault();
      var _this$$props = this.$props, handleClear3 = _this$$props.handleClear, disabled = _this$$props.disabled;
      if (!disabled && handleClear3) {
        handleClear3(e2);
      }
    }
  },
  render: function render137() {
    var _getOptionProps = getOptionProps(this), placeholder = _getOptionProps.placeholder, value26 = _getOptionProps.value, prefixCls2 = _getOptionProps.prefixCls, disabled = _getOptionProps.disabled;
    var icon = value26 && value26.length > 0 ? _createVNode$R("a", {
      "href": "#",
      "class": "".concat(prefixCls2, "-action"),
      "onClick": this.handleClear2
    }, [_createVNode$R(CloseCircleFilled, null, null)]) : _createVNode$R("span", {
      "class": "".concat(prefixCls2, "-action")
    }, [_createVNode$R(SearchOutlined, null, null)]);
    return _createVNode$R(_Fragment$4, null, [_createVNode$R(Input, {
      "placeholder": placeholder,
      "class": prefixCls2,
      "value": value26,
      "onChange": this.handleChange,
      "disabled": disabled
    }, null), icon]);
  }
});
var FUNC_ERROR_TEXT = "Expected a function";
function throttle(func, wait, options2) {
  var leading = true, trailing = true;
  if (typeof func != "function") {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  if (isObject$1(options2)) {
    leading = "leading" in options2 ? !!options2.leading : leading;
    trailing = "trailing" in options2 ? !!options2.trailing : trailing;
  }
  return debounce$1(func, wait, {
    "leading": leading,
    "maxWait": wait,
    "trailing": trailing
  });
}
var style = function style2(element, prop) {
  var styleVal = "";
  if (typeof getComputedStyle !== "undefined") {
    styleVal = window.getComputedStyle(element, null).getPropertyValue(prop);
  } else {
    styleVal = element.style[prop];
  }
  return styleVal;
};
var overflow = function overflow2(element) {
  return style(element, "overflow") + style(element, "overflow-y") + style(element, "overflow-x");
};
var scrollParent = function scrollParent2(element) {
  if (!(element instanceof window.HTMLElement)) {
    return window;
  }
  var parent2 = element;
  while (parent2) {
    if (parent2 === document.body || parent2 === document.documentElement) {
      break;
    }
    if (!parent2.parentNode) {
      break;
    }
    if (/(scroll|auto)/.test(overflow(parent2))) {
      return parent2;
    }
    parent2 = parent2.parentNode;
  }
  return window;
};
function getElementPosition(element) {
  var rect = element.getBoundingClientRect();
  return {
    top: rect.top + window.pageYOffset,
    left: rect.left + window.pageXOffset
  };
}
var isHidden = function isHidden2(element) {
  return element.offsetParent === null;
};
function inViewport(element, container, customOffset) {
  if (isHidden(element)) {
    return false;
  }
  var top;
  var bottom;
  var left;
  var right;
  if (typeof container === "undefined" || container === window) {
    top = window.pageYOffset;
    left = window.pageXOffset;
    bottom = top + window.innerHeight;
    right = left + window.innerWidth;
  } else {
    var containerPosition = getElementPosition(container);
    top = containerPosition.top;
    left = containerPosition.left;
    bottom = top + container.offsetHeight;
    right = left + container.offsetWidth;
  }
  var elementPosition = getElementPosition(element);
  return top <= elementPosition.top + element.offsetHeight + customOffset.top && bottom >= elementPosition.top - customOffset.bottom && left <= elementPosition.left + element.offsetWidth + customOffset.left && right >= elementPosition.left - customOffset.right;
}
const { createVNode: _createVNode$Q } = await importShared("vue");
const { watchEffect: watchEffect$1, defineComponent: defineComponent$k } = await importShared("vue");
var lazyLoadProps = {
  debounce: PropTypes.looseBool,
  elementType: PropTypes.string,
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  offset: PropTypes.number,
  offsetBottom: PropTypes.number,
  offsetHorizontal: PropTypes.number,
  offsetLeft: PropTypes.number,
  offsetRight: PropTypes.number,
  offsetTop: PropTypes.number,
  offsetVertical: PropTypes.number,
  threshold: PropTypes.number,
  throttle: PropTypes.number,
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};
const LazyLoad = defineComponent$k({
  name: "LazyLoad",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(lazyLoadProps, {
    elementType: "div",
    debounce: true,
    offset: 0,
    offsetBottom: 0,
    offsetHorizontal: 0,
    offsetLeft: 0,
    offsetRight: 0,
    offsetTop: 0,
    offsetVertical: 0,
    throttle: 250
  }),
  data: function data65() {
    if (this.throttle > 0) {
      if (this.debounce) {
        this.lazyLoadHandler = debounce$1(this.lazyLoadHandler, this.throttle);
      } else {
        this.lazyLoadHandler = throttle(this.lazyLoadHandler, this.throttle);
      }
    }
    return {
      visible: false
    };
  },
  mounted: function mounted36() {
    var _this = this;
    this.$nextTick(function() {
      watchEffect$1(function() {
        if (!_this.visible) {
          _this.lazyLoadHandler(_this.$props);
        }
      });
      var eventNode = _this.getEventNode();
      if (_this.lazyLoadHandler.flush) {
        _this.lazyLoadHandler.flush();
      }
      _this.resizeHander = addEventListenerWrap(window, "resize", _this.lazyLoadHandler);
      _this.scrollHander = addEventListenerWrap(eventNode, "scroll", _this.lazyLoadHandler);
    });
  },
  beforeUnmount: function beforeUnmount26() {
    if (this.lazyLoadHandler.cancel) {
      this.lazyLoadHandler.cancel();
    }
    this.detachListeners();
  },
  methods: {
    getEventNode: function getEventNode() {
      return scrollParent(findDOMNode(this));
    },
    getOffset: function getOffset() {
      var _this$$props = this.$props, offset4 = _this$$props.offset, offsetVertical = _this$$props.offsetVertical, offsetHorizontal = _this$$props.offsetHorizontal, offsetTop = _this$$props.offsetTop, offsetBottom = _this$$props.offsetBottom, offsetLeft = _this$$props.offsetLeft, offsetRight = _this$$props.offsetRight, threshold = _this$$props.threshold;
      var _offsetAll = threshold || offset4;
      var _offsetVertical = offsetVertical || _offsetAll;
      var _offsetHorizontal = offsetHorizontal || _offsetAll;
      return {
        top: offsetTop || _offsetVertical,
        bottom: offsetBottom || _offsetVertical,
        left: offsetLeft || _offsetHorizontal,
        right: offsetRight || _offsetHorizontal
      };
    },
    lazyLoadHandler: function lazyLoadHandler() {
      var _this2 = this;
      if (!this._.isMounted) {
        return;
      }
      var offset4 = this.getOffset();
      var node = findDOMNode(this);
      var eventNode = this.getEventNode();
      if (inViewport(node, eventNode, offset4)) {
        this.setState({
          visible: true
        }, function() {
          _this2.__emit("contentVisible");
        });
        this.detachListeners();
      }
    },
    detachListeners: function detachListeners() {
      this.resizeHander && this.resizeHander.remove();
      this.scrollHander && this.scrollHander.remove();
    }
  },
  render: function render138() {
    var children = getSlot(this);
    if (children.length !== 1) {
      warning$5(false, "lazyLoad组件只能包含一个子元素");
      return null;
    }
    var _this$$props2 = this.$props, height = _this$$props2.height, width = _this$$props2.width, ElementType = _this$$props2.elementType;
    var visible9 = this.visible;
    var className = this.$attrs.class;
    var elStyles = {
      height: typeof height === "number" ? height + "px" : height,
      width: typeof width === "number" ? width + "px" : width
    };
    var elClasses = _defineProperty$U({
      LazyLoad: true,
      "is-visible": visible9
    }, className, className);
    return _createVNode$Q(ElementType, {
      "class": elClasses,
      "style": elStyles
    }, {
      default: function _default8() {
        return [visible9 ? children[0] : null];
      }
    });
  }
});
const { createVNode: _createVNode$P } = await importShared("vue");
const { defineComponent: defineComponent$j } = await importShared("vue");
function noop$3() {
}
const ListItem = defineComponent$j({
  name: "ListItem",
  inheritAttrs: false,
  props: {
    renderedText: PropTypes.any,
    renderedEl: PropTypes.any,
    item: PropTypes.any,
    lazy: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
    checked: PropTypes.looseBool,
    prefixCls: PropTypes.string,
    disabled: PropTypes.looseBool,
    onClick: PropTypes.func
  },
  render: function render139() {
    var _classNames, _this = this;
    var _this$$props = this.$props, renderedText = _this$$props.renderedText, renderedEl = _this$$props.renderedEl, item = _this$$props.item, lazy = _this$$props.lazy, checked2 = _this$$props.checked, disabled = _this$$props.disabled, prefixCls2 = _this$$props.prefixCls;
    var className = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-content-item"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-content-item-disabled"), disabled || item.disabled), _classNames));
    var title;
    if (typeof renderedText === "string" || typeof renderedText === "number") {
      title = String(renderedText);
    }
    var listItem = _createVNode$P("li", {
      "class": className,
      "title": title,
      "onClick": disabled || item.disabled ? noop$3 : function() {
        _this.$emit("click", item);
      }
    }, [_createVNode$P(Checkbox, {
      "checked": checked2,
      "disabled": disabled || item.disabled
    }, null), _createVNode$P("span", {
      "class": "".concat(prefixCls2, "-content-item-text")
    }, [renderedEl])]);
    var children = null;
    if (lazy) {
      var lazyProps = _extends$1({
        height: 32,
        offset: 500,
        throttle: 0,
        debounce: false
      }, lazy);
      children = _createVNode$P(LazyLoad, lazyProps, {
        default: function _default8() {
          return [listItem];
        }
      });
    } else {
      children = listItem;
    }
    return children;
  }
});
const { createVNode: _createVNode$O } = await importShared("vue");
const { defineComponent: defineComponent$i, nextTick: nextTick$4 } = await importShared("vue");
var ListBody = defineComponent$i({
  name: "ListBody",
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    filteredRenderItems: PropTypes.array.def([]),
    lazy: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
    selectedKeys: PropTypes.array,
    disabled: PropTypes.looseBool,
    onItemSelect: PropTypes.func,
    onItemSelectAll: PropTypes.func,
    onScroll: PropTypes.func
  },
  setup: function setup143() {
    return {
      mountId: null,
      lazyId: null
    };
  },
  data: function data66() {
    return {
      mounted: false
    };
  },
  computed: {
    itemsLength: function itemsLength() {
      return this.filteredRenderItems ? this.filteredRenderItems.length : 0;
    }
  },
  watch: {
    itemsLength: function itemsLength2() {
      var _this = this;
      nextTick$4(function() {
        var lazy = _this.$props.lazy;
        if (lazy !== false) {
          var container = findDOMNode(_this);
          wrapperRaf.cancel(_this.lazyId);
          _this.lazyId = wrapperRaf(function() {
            if (container) {
              var scrollEvent = new Event("scroll", {
                bubbles: true
              });
              container.dispatchEvent(scrollEvent);
            }
          });
        }
      });
    }
  },
  mounted: function mounted37() {
    var _this2 = this;
    this.mountId = wrapperRaf(function() {
      _this2.mounted = true;
    });
  },
  beforeUnmount: function beforeUnmount27() {
    wrapperRaf.cancel(this.mountId);
    wrapperRaf.cancel(this.lazyId);
  },
  methods: {
    handleItemSelect: function handleItemSelect(item) {
      var selectedKeys3 = this.$props.selectedKeys;
      var checked2 = selectedKeys3.indexOf(item.key) >= 0;
      this.$emit("itemSelect", item.key, !checked2);
    },
    handleScroll: function handleScroll(e2) {
      this.$emit("scroll", e2);
    }
  },
  render: function render140() {
    var _this3 = this;
    var mounted45 = this.$data.mounted;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, filteredRenderItems = _this$$props.filteredRenderItems, lazy = _this$$props.lazy, selectedKeys3 = _this$$props.selectedKeys, globalDisabled = _this$$props.disabled;
    var items = filteredRenderItems.map(function(_ref) {
      var renderedEl = _ref.renderedEl, renderedText = _ref.renderedText, item = _ref.item;
      var disabled = item.disabled;
      var checked2 = selectedKeys3.indexOf(item.key) >= 0;
      return _createVNode$O(ListItem, {
        "disabled": globalDisabled || disabled,
        "key": item.key,
        "item": item,
        "lazy": lazy,
        "renderedText": renderedText,
        "renderedEl": renderedEl,
        "checked": checked2,
        "prefixCls": prefixCls2,
        "onClick": _this3.handleItemSelect
      }, null);
    });
    var transitionProps = getTransitionGroupProps(mounted45 ? "".concat(prefixCls2, "-content-item-highlight") : "", {
      tag: "ul",
      class: "".concat(prefixCls2, "-content"),
      onScroll: this.handleScroll
    });
    return _createVNode$O(TransitionGroup, transitionProps, {
      default: function _default8() {
        return [items];
      }
    });
  }
});
const defaultRenderList = function(props2) {
  return _createVNode$O(ListBody, props2, null);
};
function triggerEvent2(el, type3) {
  if ("createEvent" in document) {
    var e2 = document.createEvent("HTMLEvents");
    e2.initEvent(type3, false, true);
    el.dispatchEvent(e2);
  }
}
const { createVNode: _createVNode$N } = await importShared("vue");
const { defineComponent: defineComponent$h, nextTick: nextTick$3 } = await importShared("vue");
var defaultRender = function defaultRender2() {
  return null;
};
var TransferItem$1 = {
  key: PropTypes.string,
  title: PropTypes.string,
  description: PropTypes.string,
  disabled: PropTypes.looseBool
};
function isRenderResultPlainObject(result) {
  return result && !isValidElement(result) && Object.prototype.toString.call(result) === "[object Object]";
}
var TransferListProps = {
  prefixCls: PropTypes.string,
  titleText: PropTypes.string,
  dataSource: PropTypes.arrayOf(PropTypes.shape(TransferItem$1).loose),
  filter: PropTypes.string,
  filterOption: PropTypes.func,
  checkedKeys: PropTypes.arrayOf(PropTypes.string),
  handleFilter: PropTypes.func,
  handleSelect: PropTypes.func,
  handleSelectAll: PropTypes.func,
  handleClear: PropTypes.func,
  renderItem: PropTypes.func,
  showSearch: PropTypes.looseBool,
  searchPlaceholder: PropTypes.string,
  notFoundContent: PropTypes.any,
  itemUnit: PropTypes.string,
  itemsUnit: PropTypes.string,
  body: PropTypes.any,
  renderList: PropTypes.any,
  footer: PropTypes.any,
  lazy: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
  disabled: PropTypes.looseBool,
  direction: PropTypes.string,
  showSelectAll: PropTypes.looseBool,
  onItemSelect: PropTypes.func,
  onItemSelectAll: PropTypes.func,
  onScroll: PropTypes.func
};
function renderListNode(renderList, props2) {
  var bodyContent = renderList ? renderList(props2) : null;
  var customize = !!bodyContent && filterEmpty(bodyContent).length > 0;
  if (!customize) {
    bodyContent = defaultRenderList(props2);
  }
  return {
    customize,
    bodyContent
  };
}
const List = defineComponent$h({
  name: "TransferList",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(TransferListProps, {
    dataSource: [],
    titleText: "",
    showSearch: false,
    lazy: {}
  }),
  setup: function setup144() {
    return {
      timer: null,
      triggerScrollTimer: null,
      scrollEvent: null
    };
  },
  data: function data67() {
    return {
      filterValue: ""
    };
  },
  beforeUnmount: function beforeUnmount28() {
    clearTimeout(this.triggerScrollTimer);
  },
  updated: function updated23() {
    var _this = this;
    nextTick$3(function() {
      if (_this.scrollEvent) {
        _this.scrollEvent.remove();
      }
    });
  },
  methods: {
    handleScroll: function handleScroll2(e2) {
      this.$emit("scroll", e2);
    },
    getCheckStatus: function getCheckStatus(filteredItems) {
      var checkedKeys = this.$props.checkedKeys;
      if (checkedKeys.length === 0) {
        return "none";
      }
      if (filteredItems.every(function(item) {
        return checkedKeys.indexOf(item.key) >= 0 || !!item.disabled;
      })) {
        return "all";
      }
      return "part";
    },
    getFilteredItems: function getFilteredItems(dataSource3, filterValue) {
      var _this2 = this;
      var filteredItems = [];
      var filteredRenderItems = [];
      dataSource3.forEach(function(item) {
        var renderedItem = _this2.renderItemHtml(item);
        var renderedText = renderedItem.renderedText;
        if (filterValue && filterValue.trim() && !_this2.matchFilter(renderedText, item)) {
          return null;
        }
        filteredItems.push(item);
        filteredRenderItems.push(renderedItem);
      });
      return {
        filteredItems,
        filteredRenderItems
      };
    },
    getListBody: function getListBody(prefixCls2, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {
      var search = showSearch ? _createVNode$N("div", {
        "class": "".concat(prefixCls2, "-body-search-wrapper")
      }, [_createVNode$N(Search, {
        "prefixCls": "".concat(prefixCls2, "-search"),
        "onChange": this._handleFilter,
        "handleClear": this._handleClear,
        "placeholder": searchPlaceholder,
        "value": filterValue,
        "disabled": disabled
      }, null)]) : null;
      var listBody = bodyDom;
      if (!listBody) {
        var bodyNode;
        var _splitAttrs = splitAttrs(this.$attrs), onEvents = _splitAttrs.onEvents;
        var _renderListNode = renderListNode(renderList, _extends$1(_extends$1(_extends$1({}, this.$props), {
          filteredItems,
          filteredRenderItems,
          selectedKeys: checkedKeys
        }), onEvents)), bodyContent = _renderListNode.bodyContent, customize = _renderListNode.customize;
        if (customize) {
          bodyNode = _createVNode$N("div", {
            "class": "".concat(prefixCls2, "-body-customize-wrapper")
          }, [bodyContent]);
        } else {
          bodyNode = filteredItems.length ? bodyContent : _createVNode$N("div", {
            "class": "".concat(prefixCls2, "-body-not-found")
          }, [notFoundContent]);
        }
        listBody = _createVNode$N("div", {
          "class": classNames(showSearch ? "".concat(prefixCls2, "-body ").concat(prefixCls2, "-body-with-search") : "".concat(prefixCls2, "-body"))
        }, [search, bodyNode]);
      }
      return listBody;
    },
    getCheckBox: function getCheckBox(filteredItems, showSelectAll, disabled) {
      var _this3 = this;
      var checkStatus = this.getCheckStatus(filteredItems);
      var checkedAll = checkStatus === "all";
      var checkAllCheckbox = showSelectAll !== false && _createVNode$N(Checkbox, {
        "disabled": disabled,
        "checked": checkedAll,
        "indeterminate": checkStatus === "part",
        "onChange": function onChange9() {
          _this3.$emit("itemSelectAll", filteredItems.filter(function(item) {
            return !item.disabled;
          }).map(function(_ref) {
            var key2 = _ref.key;
            return key2;
          }), !checkedAll);
        }
      }, null);
      return checkAllCheckbox;
    },
    _handleSelect: function _handleSelect(selectedItem) {
      var checkedKeys = this.$props.checkedKeys;
      var result = checkedKeys.some(function(key2) {
        return key2 === selectedItem.key;
      });
      this.handleSelect(selectedItem, !result);
    },
    _handleFilter: function _handleFilter(e2) {
      var _this4 = this;
      var handleFilter3 = this.$props.handleFilter;
      var filterValue = e2.target.value;
      this.setState({
        filterValue
      });
      handleFilter3(e2);
      if (!filterValue) {
        return;
      }
      this.triggerScrollTimer = setTimeout(function() {
        var transferNode = findDOMNode(_this4);
        var listNode = transferNode.querySelectorAll(".ant-transfer-list-content")[0];
        if (listNode) {
          triggerEvent2(listNode, "scroll");
        }
      }, 0);
    },
    _handleClear: function _handleClear(e2) {
      this.setState({
        filterValue: ""
      });
      this.handleClear(e2);
    },
    matchFilter: function matchFilter(text, item) {
      var filterValue = this.$data.filterValue;
      var filterOption2 = this.$props.filterOption;
      if (filterOption2) {
        return filterOption2(filterValue, item);
      }
      return text.indexOf(filterValue) >= 0;
    },
    renderItemHtml: function renderItemHtml(item) {
      var _this$$props$renderIt = this.$props.renderItem, renderItem = _this$$props$renderIt === void 0 ? defaultRender : _this$$props$renderIt;
      var renderResult = renderItem(item);
      var isRenderResultPlain = isRenderResultPlainObject(renderResult);
      return {
        renderedText: isRenderResultPlain ? renderResult.value : renderResult,
        renderedEl: isRenderResultPlain ? renderResult.label : renderResult,
        item
      };
    },
    filterNull: function filterNull(arr) {
      return arr.filter(function(item) {
        return item !== null;
      });
    }
  },
  render: function render141() {
    var filterValue = this.$data.filterValue;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, dataSource3 = _this$$props.dataSource, titleText = _this$$props.titleText, checkedKeys = _this$$props.checkedKeys, disabled = _this$$props.disabled, body = _this$$props.body, footer = _this$$props.footer, showSearch = _this$$props.showSearch, searchPlaceholder = _this$$props.searchPlaceholder, notFoundContent = _this$$props.notFoundContent, itemUnit = _this$$props.itemUnit, itemsUnit = _this$$props.itemsUnit, renderList = _this$$props.renderList, showSelectAll = _this$$props.showSelectAll;
    var footerDom = footer && footer(_extends$1({}, this.$props));
    var bodyDom = body && body(_extends$1({}, this.$props));
    var listCls = classNames(prefixCls2, _defineProperty$U({}, "".concat(prefixCls2, "-with-footer"), !!footerDom));
    var _this$getFilteredItem = this.getFilteredItems(dataSource3, filterValue), filteredItems = _this$getFilteredItem.filteredItems, filteredRenderItems = _this$getFilteredItem.filteredRenderItems;
    var unit = dataSource3.length > 1 ? itemsUnit : itemUnit;
    var listBody = this.getListBody(prefixCls2, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled);
    var listFooter = footerDom ? _createVNode$N("div", {
      "class": "".concat(prefixCls2, "-footer")
    }, [footerDom]) : null;
    var checkAllCheckbox = this.getCheckBox(filteredItems, showSelectAll, disabled);
    return _createVNode$N("div", {
      "class": listCls,
      "style": this.$attrs.style
    }, [_createVNode$N("div", {
      "class": "".concat(prefixCls2, "-header")
    }, [checkAllCheckbox, _createVNode$N("span", {
      "class": "".concat(prefixCls2, "-header-selected")
    }, [_createVNode$N("span", null, [(checkedKeys.length > 0 ? "".concat(checkedKeys.length, "/") : "") + filteredItems.length, " ", unit]), _createVNode$N("span", {
      "class": "".concat(prefixCls2, "-header-title")
    }, [titleText])])]), listBody, listFooter]);
  }
});
const { createVNode: _createVNode$M } = await importShared("vue");
function noop$2() {
}
var Operation = function Operation2(props2) {
  var disabled = props2.disabled, _props$moveToLeft = props2.moveToLeft, moveToLeft2 = _props$moveToLeft === void 0 ? noop$2 : _props$moveToLeft, _props$moveToRight = props2.moveToRight, moveToRight2 = _props$moveToRight === void 0 ? noop$2 : _props$moveToRight, _props$leftArrowText = props2.leftArrowText, leftArrowText = _props$leftArrowText === void 0 ? "" : _props$leftArrowText, _props$rightArrowText = props2.rightArrowText, rightArrowText = _props$rightArrowText === void 0 ? "" : _props$rightArrowText, leftActive = props2.leftActive, rightActive = props2.rightActive, className = props2.class, style3 = props2.style;
  return _createVNode$M("div", {
    "class": className,
    "style": style3
  }, [_createVNode$M(Button$1, {
    "type": "primary",
    "size": "small",
    "disabled": disabled || !rightActive,
    "onClick": moveToRight2,
    "icon": _createVNode$M(RightOutlined, null, null)
  }, {
    default: function _default8() {
      return [rightArrowText];
    }
  }), _createVNode$M(Button$1, {
    "type": "primary",
    "size": "small",
    "disabled": disabled || !leftActive,
    "onClick": moveToLeft2,
    "icon": _createVNode$M(LeftOutlined, null, null)
  }, {
    default: function _default8() {
      return [leftArrowText];
    }
  })]);
};
Operation.inheritAttrs = false;
const { createVNode: _createVNode$L } = await importShared("vue");
const { defineComponent: defineComponent$g, inject: inject$c } = await importShared("vue");
var TransferItem = {
  key: PropTypes.string,
  title: PropTypes.string,
  description: PropTypes.string,
  disabled: PropTypes.looseBool
};
var TransferProps = {
  prefixCls: PropTypes.string,
  dataSource: PropTypes.arrayOf(PropTypes.shape(TransferItem).loose),
  disabled: PropTypes.looseBool,
  targetKeys: PropTypes.arrayOf(PropTypes.string),
  selectedKeys: PropTypes.arrayOf(PropTypes.string),
  render: PropTypes.func,
  listStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),
  operationStyle: PropTypes.object,
  titles: PropTypes.arrayOf(PropTypes.string),
  operations: PropTypes.arrayOf(PropTypes.string),
  showSearch: PropTypes.looseBool,
  filterOption: PropTypes.func,
  searchPlaceholder: PropTypes.string,
  notFoundContent: PropTypes.any,
  locale: PropTypes.object,
  rowKey: PropTypes.func,
  lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.looseBool]),
  showSelectAll: PropTypes.looseBool,
  children: PropTypes.any,
  onChange: PropTypes.func,
  onSelectChange: PropTypes.func,
  onSearchChange: PropTypes.func,
  onSearch: PropTypes.func,
  onScroll: PropTypes.func
};
var Transfer = defineComponent$g({
  name: "ATransfer",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(TransferProps, {
    dataSource: [],
    locale: {},
    showSearch: false,
    listStyle: function listStyle() {
    }
  }),
  setup: function setup145() {
    return {
      separatedDataSource: null,
      configProvider: inject$c("configProvider", defaultConfigProvider)
    };
  },
  data: function data68() {
    var _this$selectedKeys = this.selectedKeys, selectedKeys3 = _this$selectedKeys === void 0 ? [] : _this$selectedKeys, _this$targetKeys = this.targetKeys, targetKeys2 = _this$targetKeys === void 0 ? [] : _this$targetKeys;
    return {
      leftFilter: "",
      rightFilter: "",
      sourceSelectedKeys: selectedKeys3.filter(function(key2) {
        return targetKeys2.indexOf(key2) === -1;
      }),
      targetSelectedKeys: selectedKeys3.filter(function(key2) {
        return targetKeys2.indexOf(key2) > -1;
      })
    };
  },
  watch: {
    targetKeys: function targetKeys() {
      this.updateState();
      if (this.selectedKeys) {
        var targetKeys2 = this.targetKeys || [];
        this.setState({
          sourceSelectedKeys: this.selectedKeys.filter(function(key2) {
            return !targetKeys2.includes(key2);
          }),
          targetSelectedKeys: this.selectedKeys.filter(function(key2) {
            return targetKeys2.includes(key2);
          })
        });
      }
    },
    dataSource: function dataSource2() {
      this.updateState();
    },
    selectedKeys: function selectedKeys() {
      if (this.selectedKeys) {
        var targetKeys2 = this.targetKeys || [];
        this.setState({
          sourceSelectedKeys: this.selectedKeys.filter(function(key2) {
            return !targetKeys2.includes(key2);
          }),
          targetSelectedKeys: this.selectedKeys.filter(function(key2) {
            return targetKeys2.includes(key2);
          })
        });
      }
    }
  },
  mounted: function mounted38() {
  },
  methods: {
    getSelectedKeysName: function getSelectedKeysName(direction) {
      return direction === "left" ? "sourceSelectedKeys" : "targetSelectedKeys";
    },
    getTitles: function getTitles(transferLocale) {
      if (this.titles) {
        return this.titles;
      }
      return transferLocale.titles || ["", ""];
    },
    getLocale: function getLocale2(transferLocale, renderEmpty2) {
      var oldLocale = {
        notFoundContent: renderEmpty2("Transfer")
      };
      var notFoundContent = getComponent(this, "notFoundContent");
      if (notFoundContent) {
        oldLocale.notFoundContent = notFoundContent;
      }
      if (hasProp(this, "searchPlaceholder")) {
        oldLocale.searchPlaceholder = this.$props.searchPlaceholder;
      }
      return _extends$1(_extends$1(_extends$1({}, transferLocale), oldLocale), this.$props.locale);
    },
    updateState: function updateState2() {
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      this.separatedDataSource = null;
      if (!this.selectedKeys) {
        var dataSource3 = this.dataSource, _this$targetKeys2 = this.targetKeys, targetKeys2 = _this$targetKeys2 === void 0 ? [] : _this$targetKeys2;
        var newSourceSelectedKeys = [];
        var newTargetSelectedKeys = [];
        dataSource3.forEach(function(_ref) {
          var key2 = _ref.key;
          if (sourceSelectedKeys.includes(key2) && !targetKeys2.includes(key2)) {
            newSourceSelectedKeys.push(key2);
          }
          if (targetSelectedKeys.includes(key2) && targetKeys2.includes(key2)) {
            newTargetSelectedKeys.push(key2);
          }
        });
        this.setState({
          sourceSelectedKeys: newSourceSelectedKeys,
          targetSelectedKeys: newTargetSelectedKeys
        });
      }
    },
    moveTo: function moveTo2(direction) {
      var _this$$props = this.$props, _this$$props$targetKe = _this$$props.targetKeys, targetKeys2 = _this$$props$targetKe === void 0 ? [] : _this$$props$targetKe, _this$$props$dataSour = _this$$props.dataSource, dataSource3 = _this$$props$dataSour === void 0 ? [] : _this$$props$dataSour;
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      var moveKeys = direction === "right" ? sourceSelectedKeys : targetSelectedKeys;
      var newMoveKeys = moveKeys.filter(function(key2) {
        return !dataSource3.some(function(data79) {
          return !!(key2 === data79.key && data79.disabled);
        });
      });
      var newTargetKeys = direction === "right" ? newMoveKeys.concat(targetKeys2) : targetKeys2.filter(function(targetKey) {
        return newMoveKeys.indexOf(targetKey) === -1;
      });
      var oppositeDirection = direction === "right" ? "left" : "right";
      this.setState(_defineProperty$U({}, this.getSelectedKeysName(oppositeDirection), []));
      this.handleSelectChange(oppositeDirection, []);
      this.$emit("change", newTargetKeys, direction, newMoveKeys);
    },
    moveToLeft: function moveToLeft() {
      this.moveTo("left");
    },
    moveToRight: function moveToRight() {
      this.moveTo("right");
    },
    onItemSelectAll: function onItemSelectAll(direction, selectedKeys3, checkAll) {
      var originalSelectedKeys = this.$data[this.getSelectedKeysName(direction)] || [];
      var mergedCheckedKeys = [];
      if (checkAll) {
        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(originalSelectedKeys), _toConsumableArray(selectedKeys3))));
      } else {
        mergedCheckedKeys = originalSelectedKeys.filter(function(key2) {
          return selectedKeys3.indexOf(key2) === -1;
        });
      }
      this.handleSelectChange(direction, mergedCheckedKeys);
      if (!this.$props.selectedKeys) {
        this.setState(_defineProperty$U({}, this.getSelectedKeysName(direction), mergedCheckedKeys));
      }
    },
    handleSelectAll: function handleSelectAll(direction, filteredDataSource, checkAll) {
      this.onItemSelectAll(direction, filteredDataSource.map(function(_ref2) {
        var key2 = _ref2.key;
        return key2;
      }), !checkAll);
    },
    // [Legacy] Old prop `body` pass origin check as arg. It's confusing.
    // TODO: Remove this in next version.
    handleLeftSelectAll: function handleLeftSelectAll(filteredDataSource, checkAll) {
      return this.handleSelectAll("left", filteredDataSource, !checkAll);
    },
    handleRightSelectAll: function handleRightSelectAll(filteredDataSource, checkAll) {
      return this.handleSelectAll("right", filteredDataSource, !checkAll);
    },
    onLeftItemSelectAll: function onLeftItemSelectAll(selectedKeys3, checkAll) {
      return this.onItemSelectAll("left", selectedKeys3, checkAll);
    },
    onRightItemSelectAll: function onRightItemSelectAll(selectedKeys3, checkAll) {
      return this.onItemSelectAll("right", selectedKeys3, checkAll);
    },
    handleFilter: function handleFilter2(direction, e2) {
      var value26 = e2.target.value;
      this.$emit("search", direction, value26);
    },
    handleLeftFilter: function handleLeftFilter(e2) {
      this.handleFilter("left", e2);
    },
    handleRightFilter: function handleRightFilter(e2) {
      this.handleFilter("right", e2);
    },
    handleClear: function handleClear(direction) {
      this.$emit("search", direction, "");
    },
    handleLeftClear: function handleLeftClear() {
      this.handleClear("left");
    },
    handleRightClear: function handleRightClear() {
      this.handleClear("right");
    },
    onItemSelect: function onItemSelect(direction, selectedKey, checked2) {
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      var holder = direction === "left" ? _toConsumableArray(sourceSelectedKeys) : _toConsumableArray(targetSelectedKeys);
      var index2 = holder.indexOf(selectedKey);
      if (index2 > -1) {
        holder.splice(index2, 1);
      }
      if (checked2) {
        holder.push(selectedKey);
      }
      this.handleSelectChange(direction, holder);
      if (!this.selectedKeys) {
        this.setState(_defineProperty$U({}, this.getSelectedKeysName(direction), holder));
      }
    },
    // handleSelect(direction, selectedItem, checked) {
    //   warning(false, 'Transfer', '`handleSelect` will be removed, please use `onSelect` instead.');
    //   this.onItemSelect(direction, selectedItem.key, checked);
    // },
    // handleLeftSelect(selectedItem, checked) {
    //   return this.handleSelect('left', selectedItem, checked);
    // },
    // handleRightSelect(selectedItem, checked) {
    //   return this.handleSelect('right', selectedItem, checked);
    // },
    onLeftItemSelect: function onLeftItemSelect(selectedKey, checked2) {
      return this.onItemSelect("left", selectedKey, checked2);
    },
    onRightItemSelect: function onRightItemSelect(selectedKey, checked2) {
      return this.onItemSelect("right", selectedKey, checked2);
    },
    handleScroll: function handleScroll3(direction, e2) {
      this.$emit("scroll", direction, e2);
    },
    handleLeftScroll: function handleLeftScroll(e2) {
      this.handleScroll("left", e2);
    },
    handleRightScroll: function handleRightScroll(e2) {
      this.handleScroll("right", e2);
    },
    handleSelectChange: function handleSelectChange(direction, holder) {
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys;
      if (direction === "left") {
        this.$emit("selectChange", holder, targetSelectedKeys);
      } else {
        this.$emit("selectChange", sourceSelectedKeys, holder);
      }
    },
    handleListStyle: function handleListStyle(listStyle2, direction) {
      if (typeof listStyle2 === "function") {
        return listStyle2({
          direction
        });
      }
      return listStyle2;
    },
    separateDataSource: function separateDataSource() {
      var _this$$props2 = this.$props, dataSource3 = _this$$props2.dataSource, rowKey = _this$$props2.rowKey, _this$$props2$targetK = _this$$props2.targetKeys, targetKeys2 = _this$$props2$targetK === void 0 ? [] : _this$$props2$targetK;
      var leftDataSource = [];
      var rightDataSource = new Array(targetKeys2.length);
      dataSource3.forEach(function(record) {
        if (rowKey) {
          record.key = rowKey(record);
        }
        var indexOfKey = targetKeys2.indexOf(record.key);
        if (indexOfKey !== -1) {
          rightDataSource[indexOfKey] = record;
        } else {
          leftDataSource.push(record);
        }
      });
      return {
        leftDataSource,
        rightDataSource
      };
    },
    renderTransfer: function renderTransfer(transferLocale) {
      var _classNames;
      var props2 = getOptionProps(this);
      var customizePrefixCls = props2.prefixCls, disabled = props2.disabled, _props$operations = props2.operations, operations = _props$operations === void 0 ? [] : _props$operations, showSearch = props2.showSearch, listStyle2 = props2.listStyle, operationStyle = props2.operationStyle, filterOption2 = props2.filterOption, lazy = props2.lazy, showSelectAll = props2.showSelectAll;
      var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
      var children = getComponent(this, "children", {}, false);
      var getPrefixCls2 = this.configProvider.getPrefixCls;
      var prefixCls2 = getPrefixCls2("transfer", customizePrefixCls);
      var renderEmpty2 = this.configProvider.renderEmpty;
      var locale2 = this.getLocale(transferLocale, renderEmpty2);
      var sourceSelectedKeys = this.sourceSelectedKeys, targetSelectedKeys = this.targetSelectedKeys, $slots = this.$slots;
      var body = $slots.body, footer = $slots.footer;
      var renderItem = props2.render || this.$slots.render;
      var _this$separateDataSou = this.separateDataSource(), leftDataSource = _this$separateDataSou.leftDataSource, rightDataSource = _this$separateDataSou.rightDataSource;
      var leftActive = targetSelectedKeys.length > 0;
      var rightActive = sourceSelectedKeys.length > 0;
      var cls = classNames(prefixCls2, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, "".concat(prefixCls2, "-customize-list"), !!children), _classNames));
      var titles = this.getTitles(locale2);
      return _createVNode$L("div", {
        "class": cls,
        "style": style3
      }, [_createVNode$L(List, {
        "key": "leftList",
        "prefixCls": "".concat(prefixCls2, "-list"),
        "titleText": titles[0],
        "dataSource": leftDataSource,
        "filterOption": filterOption2,
        "style": this.handleListStyle(listStyle2, "left"),
        "checkedKeys": sourceSelectedKeys,
        "handleFilter": this.handleLeftFilter,
        "handleClear": this.handleLeftClear,
        "handleSelectAll": this.handleLeftSelectAll,
        "onItemSelect": this.onLeftItemSelect,
        "onItemSelectAll": this.onLeftItemSelectAll,
        "renderItem": renderItem,
        "showSearch": showSearch,
        "body": body,
        "renderList": children,
        "footer": footer,
        "lazy": lazy,
        "onScroll": this.handleLeftScroll,
        "disabled": disabled,
        "direction": "left",
        "showSelectAll": showSelectAll,
        "itemUnit": locale2.itemUnit,
        "itemsUnit": locale2.itemsUnit,
        "notFoundContent": locale2.notFoundContent,
        "searchPlaceholder": locale2.searchPlaceholder
      }, null), _createVNode$L(Operation, {
        "key": "operation",
        "class": "".concat(prefixCls2, "-operation"),
        "rightActive": rightActive,
        "rightArrowText": operations[0],
        "moveToRight": this.moveToRight,
        "leftActive": leftActive,
        "leftArrowText": operations[1],
        "moveToLeft": this.moveToLeft,
        "style": operationStyle,
        "disabled": disabled
      }, null), _createVNode$L(List, {
        "key": "rightList",
        "prefixCls": "".concat(prefixCls2, "-list"),
        "titleText": titles[1],
        "dataSource": rightDataSource,
        "filterOption": filterOption2,
        "style": this.handleListStyle(listStyle2, "right"),
        "checkedKeys": targetSelectedKeys,
        "handleFilter": this.handleRightFilter,
        "handleClear": this.handleRightClear,
        "handleSelectAll": this.handleRightSelectAll,
        "onItemSelect": this.onRightItemSelect,
        "onItemSelectAll": this.onRightItemSelectAll,
        "renderItem": renderItem,
        "showSearch": showSearch,
        "body": body,
        "renderList": children,
        "footer": footer,
        "lazy": lazy,
        "onScroll": this.handleRightScroll,
        "disabled": disabled,
        "direction": "right",
        "showSelectAll": showSelectAll,
        "itemUnit": locale2.itemUnit,
        "itemsUnit": locale2.itemsUnit,
        "notFoundContent": locale2.notFoundContent,
        "searchPlaceholder": locale2.searchPlaceholder
      }, null)]);
    }
  },
  render: function render142() {
    return _createVNode$L(LocaleReceiver, {
      "componentName": "Transfer",
      "defaultLocale": defaultLocale.Transfer,
      "children": this.renderTransfer
    }, null);
  }
});
const index$1 = withInstall(Transfer);
var FileOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494z" } }] }, "name": "file", "theme": "outlined" };
const { createVNode: _createVNode$K } = await importShared("vue");
function _objectSpread$c(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$d(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$d(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var FileOutlined = function FileOutlined2(props2, context2) {
  var p = _objectSpread$c({}, props2, context2.attrs);
  return _createVNode$K(Icon, _objectSpread$c({}, p, {
    "icon": FileOutlined$1
  }), null);
};
FileOutlined.displayName = "FileOutlined";
FileOutlined.inheritAttrs = false;
var MinusSquareOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M328 544h368c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z" } }, { "tag": "path", "attrs": { "d": "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z" } }] }, "name": "minus-square", "theme": "outlined" };
const { createVNode: _createVNode$J } = await importShared("vue");
function _objectSpread$b(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$c(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$c(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var MinusSquareOutlined = function MinusSquareOutlined2(props2, context2) {
  var p = _objectSpread$b({}, props2, context2.attrs);
  return _createVNode$J(Icon, _objectSpread$b({}, p, {
    "icon": MinusSquareOutlined$1
  }), null);
};
MinusSquareOutlined.displayName = "MinusSquareOutlined";
MinusSquareOutlined.inheritAttrs = false;
var PlusSquareOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M328 544h152v152c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V544h152c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H544V328c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v152H328c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8z" } }, { "tag": "path", "attrs": { "d": "M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z" } }] }, "name": "plus-square", "theme": "outlined" };
const { createVNode: _createVNode$I } = await importShared("vue");
function _objectSpread$a(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$b(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$b(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var PlusSquareOutlined = function PlusSquareOutlined2(props2, context2) {
  var p = _objectSpread$a({}, props2, context2.attrs);
  return _createVNode$I(Icon, _objectSpread$a({}, p, {
    "icon": PlusSquareOutlined$1
  }), null);
};
PlusSquareOutlined.displayName = "PlusSquareOutlined";
PlusSquareOutlined.inheritAttrs = false;
function _createForOfIteratorHelper(r2, e2) {
  var t2 = "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
  if (!t2) {
    if (Array.isArray(r2) || (t2 = _unsupportedIterableToArray$2(r2)) || e2) {
      t2 && (r2 = t2);
      var _n = 0, F2 = function F3() {
      };
      return {
        s: F2,
        n: function n2() {
          return _n >= r2.length ? {
            done: true
          } : {
            done: false,
            value: r2[_n++]
          };
        },
        e: function e3(r3) {
          throw r3;
        },
        f: F2
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o2, a2 = true, u2 = false;
  return {
    s: function s2() {
      t2 = t2.call(r2);
    },
    n: function n2() {
      var r3 = t2.next();
      return a2 = r3.done, r3;
    },
    e: function e3(r3) {
      u2 = true, o2 = r3;
    },
    f: function f2() {
      try {
        a2 || null == t2["return"] || t2["return"]();
      } finally {
        if (u2) throw o2;
      }
    }
  };
}
const { createVNode: _createVNode$H } = await importShared("vue");
const { defineComponent: defineComponent$f, inject: inject$b, provide: provide$1 } = await importShared("vue");
function noop$1() {
}
var ICON_OPEN = "open";
var ICON_CLOSE = "close";
var defaultTitle = "---";
var TreeNode$4 = defineComponent$f({
  name: "TreeNode",
  mixins: [BaseMixin],
  inheritAttrs: false,
  __ANT_TREE_NODE: true,
  props: initDefaultProps$1({
    eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    prefixCls: PropTypes.string,
    // className: PropTypes.string,
    root: PropTypes.object,
    // onSelect: PropTypes.func,
    // By parent
    expanded: PropTypes.looseBool,
    selected: PropTypes.looseBool,
    checked: PropTypes.looseBool,
    loaded: PropTypes.looseBool,
    loading: PropTypes.looseBool,
    halfChecked: PropTypes.looseBool,
    title: PropTypes.any,
    pos: PropTypes.string,
    dragOver: PropTypes.looseBool,
    dragOverGapTop: PropTypes.looseBool,
    dragOverGapBottom: PropTypes.looseBool,
    // By user
    isLeaf: PropTypes.looseBool,
    checkable: PropTypes.looseBool,
    selectable: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    disableCheckbox: PropTypes.looseBool,
    icon: PropTypes.any,
    dataRef: PropTypes.object,
    switcherIcon: PropTypes.any,
    label: PropTypes.any,
    value: PropTypes.any
  }, {}),
  setup: function setup146() {
    return {
      vcTree: inject$b("vcTree", {}),
      vcTreeNode: inject$b("vcTreeNode", {})
    };
  },
  data: function data69() {
    this.children = null;
    return {
      dragNodeHighlight: false
    };
  },
  created: function created18() {
    provide$1("vcTreeNode", this);
  },
  // Isomorphic needn't load data in server side
  mounted: function mounted39() {
    var eventKey = this.eventKey, registerTreeNode2 = this.vcTree.registerTreeNode;
    this.syncLoadData(this.$props);
    registerTreeNode2 && registerTreeNode2(eventKey, this);
  },
  updated: function updated24() {
    this.syncLoadData(this.$props);
  },
  beforeUnmount: function beforeUnmount29() {
    var eventKey = this.eventKey, registerTreeNode2 = this.vcTree.registerTreeNode;
    registerTreeNode2 && registerTreeNode2(eventKey, null);
  },
  methods: {
    onSelectorClick: function onSelectorClick(e2) {
      var onNodeClick2 = this.vcTree.onNodeClick;
      onNodeClick2(e2, this);
      if (this.isSelectable()) {
        this.onSelect(e2);
      } else {
        this.onCheck(e2);
      }
    },
    onSelectorDoubleClick: function onSelectorDoubleClick(e2) {
      var onNodeDoubleClick2 = this.vcTree.onNodeDoubleClick;
      onNodeDoubleClick2(e2, this);
    },
    onSelect: function onSelect5(e2) {
      if (this.isDisabled()) return;
      var onNodeSelect2 = this.vcTree.onNodeSelect;
      e2.preventDefault();
      onNodeSelect2(e2, this);
    },
    onCheck: function onCheck(e2) {
      if (this.isDisabled()) return;
      var disableCheckbox = this.disableCheckbox, checked2 = this.checked;
      var onNodeCheck2 = this.vcTree.onNodeCheck;
      if (!this.isCheckable() || disableCheckbox) return;
      e2.preventDefault();
      var targetChecked = !checked2;
      onNodeCheck2(e2, this, targetChecked);
    },
    onMouseEnter: function onMouseEnter3(e2) {
      var onNodeMouseEnter2 = this.vcTree.onNodeMouseEnter;
      onNodeMouseEnter2(e2, this);
    },
    onMouseLeave: function onMouseLeave4(e2) {
      var onNodeMouseLeave2 = this.vcTree.onNodeMouseLeave;
      onNodeMouseLeave2(e2, this);
    },
    onContextMenu: function onContextMenu2(e2) {
      var onNodeContextMenu2 = this.vcTree.onNodeContextMenu;
      onNodeContextMenu2(e2, this);
    },
    onDragStart: function onDragStart(e2) {
      var onNodeDragStart2 = this.vcTree.onNodeDragStart;
      e2.stopPropagation();
      this.setState({
        dragNodeHighlight: true
      });
      onNodeDragStart2(e2, this);
      try {
        e2.dataTransfer.setData("text/plain", "");
      } catch (error3) {
      }
    },
    onDragEnter: function onDragEnter(e2) {
      var onNodeDragEnter2 = this.vcTree.onNodeDragEnter;
      e2.preventDefault();
      e2.stopPropagation();
      onNodeDragEnter2(e2, this);
    },
    onDragOver: function onDragOver(e2) {
      var onNodeDragOver2 = this.vcTree.onNodeDragOver;
      e2.preventDefault();
      e2.stopPropagation();
      onNodeDragOver2(e2, this);
    },
    onDragLeave: function onDragLeave(e2) {
      var onNodeDragLeave2 = this.vcTree.onNodeDragLeave;
      e2.stopPropagation();
      onNodeDragLeave2(e2, this);
    },
    onDragEnd: function onDragEnd(e2) {
      var onNodeDragEnd2 = this.vcTree.onNodeDragEnd;
      e2.stopPropagation();
      this.setState({
        dragNodeHighlight: false
      });
      onNodeDragEnd2(e2, this);
    },
    onDrop: function onDrop(e2) {
      var onNodeDrop2 = this.vcTree.onNodeDrop;
      e2.preventDefault();
      e2.stopPropagation();
      this.setState({
        dragNodeHighlight: false
      });
      onNodeDrop2(e2, this);
    },
    // Disabled item still can be switch
    onExpand: function onExpand2(e2) {
      var onNodeExpand2 = this.vcTree.onNodeExpand;
      onNodeExpand2(e2, this);
    },
    // Drag usage
    setSelectHandle: function setSelectHandle(node) {
      this.selectHandle = node;
    },
    getNodeChildren: function getNodeChildren$1() {
      var originList = this.children;
      var targetList = getNodeChildren(originList);
      if (originList.length !== targetList.length) {
        warnOnlyTreeNode();
      }
      return targetList;
    },
    getNodeState: function getNodeState() {
      var expanded = this.expanded;
      if (this.isLeaf2()) {
        return null;
      }
      return expanded ? ICON_OPEN : ICON_CLOSE;
    },
    isLeaf2: function isLeaf2() {
      var isLeaf = this.isLeaf, loaded = this.loaded;
      var loadData = this.vcTree.loadData;
      var hasChildren = this.getNodeChildren().length !== 0;
      if (isLeaf === false) {
        return false;
      }
      return isLeaf || !loadData && !hasChildren || loadData && loaded && !hasChildren;
    },
    isDisabled: function isDisabled() {
      var disabled = this.disabled;
      var treeDisabled = this.vcTree.disabled;
      if (disabled === false) {
        return false;
      }
      return !!(treeDisabled || disabled);
    },
    isCheckable: function isCheckable() {
      var checkable = this.$props.checkable;
      var treeCheckable = this.vcTree.checkable;
      if (!treeCheckable || checkable === false) return false;
      return treeCheckable;
    },
    // Load data to avoid default expanded tree without data
    syncLoadData: function syncLoadData(props2) {
      var expanded = props2.expanded, loading = props2.loading, loaded = props2.loaded;
      var _this$vcTree = this.vcTree, loadData = _this$vcTree.loadData, onNodeLoad2 = _this$vcTree.onNodeLoad;
      if (loading) return;
      if (loadData && expanded && !this.isLeaf2()) {
        var hasChildren = this.getNodeChildren().length !== 0;
        if (!hasChildren && !loaded) {
          onNodeLoad2(this);
        }
      }
    },
    isSelectable: function isSelectable() {
      var selectable = this.selectable;
      var treeSelectable = this.vcTree.selectable;
      if (typeof selectable === "boolean") {
        return selectable;
      }
      return treeSelectable;
    },
    // Switcher
    renderSwitcher: function renderSwitcher() {
      var expanded = this.expanded;
      var prefixCls2 = this.vcTree.prefixCls;
      var switcherIcon = getComponent(this, "switcherIcon", {}, false) || getComponent(this.vcTree, "switcherIcon", {}, false);
      if (this.isLeaf2()) {
        return _createVNode$H("span", {
          "key": "switcher",
          "class": classNames("".concat(prefixCls2, "-switcher"), "".concat(prefixCls2, "-switcher-noop"))
        }, [typeof switcherIcon === "function" ? switcherIcon(_extends$1(_extends$1(_extends$1({}, this.$props), this.$props.dataRef), {
          isLeaf: true
        })) : switcherIcon]);
      }
      var switcherCls = classNames("".concat(prefixCls2, "-switcher"), "".concat(prefixCls2, "-switcher_").concat(expanded ? ICON_OPEN : ICON_CLOSE));
      return _createVNode$H("span", {
        "key": "switcher",
        "onClick": this.onExpand,
        "class": switcherCls
      }, [typeof switcherIcon === "function" ? switcherIcon(_extends$1(_extends$1(_extends$1({}, this.$props), this.$props.dataRef), {
        isLeaf: false
      })) : switcherIcon]);
    },
    // Checkbox
    renderCheckbox: function renderCheckbox() {
      var checked2 = this.checked, halfChecked = this.halfChecked, disableCheckbox = this.disableCheckbox;
      var prefixCls2 = this.vcTree.prefixCls;
      var disabled = this.isDisabled();
      var checkable = this.isCheckable();
      if (!checkable) return null;
      var $custom = typeof checkable !== "boolean" ? checkable : null;
      return _createVNode$H("span", {
        "key": "checkbox",
        "class": classNames("".concat(prefixCls2, "-checkbox"), checked2 && "".concat(prefixCls2, "-checkbox-checked"), !checked2 && halfChecked && "".concat(prefixCls2, "-checkbox-indeterminate"), (disabled || disableCheckbox) && "".concat(prefixCls2, "-checkbox-disabled")),
        "onClick": this.onCheck
      }, [$custom]);
    },
    renderIcon: function renderIcon3() {
      var loading = this.loading;
      var prefixCls2 = this.vcTree.prefixCls;
      return _createVNode$H("span", {
        "key": "icon",
        "class": classNames("".concat(prefixCls2, "-iconEle"), "".concat(prefixCls2, "-icon__").concat(this.getNodeState() || "docu"), loading && "".concat(prefixCls2, "-icon_loading"))
      }, null);
    },
    // Icon + Title
    renderSelector: function renderSelector() {
      var selected = this.selected, loading = this.loading, dragNodeHighlight = this.dragNodeHighlight;
      var icon = getComponent(this, "icon", {}, false);
      var _this$vcTree2 = this.vcTree, prefixCls2 = _this$vcTree2.prefixCls, showIcon = _this$vcTree2.showIcon, treeIcon = _this$vcTree2.icon, draggable = _this$vcTree2.draggable, loadData = _this$vcTree2.loadData;
      var disabled = this.isDisabled();
      var title = getComponent(this, "title", {}, false);
      var wrapClass = "".concat(prefixCls2, "-node-content-wrapper");
      var $icon;
      if (showIcon) {
        var currentIcon = icon || treeIcon;
        $icon = currentIcon ? _createVNode$H("span", {
          "class": classNames("".concat(prefixCls2, "-iconEle"), "".concat(prefixCls2, "-icon__customize"))
        }, [typeof currentIcon === "function" ? currentIcon(_extends$1(_extends$1({}, this.$props), this.$props.dataRef)) : currentIcon]) : this.renderIcon();
      } else if (loadData && loading) {
        $icon = this.renderIcon();
      }
      var currentTitle = title;
      var $title = currentTitle ? _createVNode$H("span", {
        "class": "".concat(prefixCls2, "-title")
      }, [typeof currentTitle === "function" ? currentTitle(_extends$1(_extends$1({}, this.$props), this.$props.dataRef)) : currentTitle]) : _createVNode$H("span", {
        "class": "".concat(prefixCls2, "-title")
      }, [defaultTitle]);
      return _createVNode$H("span", {
        "key": "selector",
        "ref": this.setSelectHandle,
        "title": typeof title === "string" ? title : "",
        "class": classNames("".concat(wrapClass), "".concat(wrapClass, "-").concat(this.getNodeState() || "normal"), !disabled && (selected || dragNodeHighlight) && "".concat(prefixCls2, "-node-selected"), !disabled && draggable && "draggable"),
        "draggable": !disabled && draggable || void 0,
        "aria-grabbed": !disabled && draggable || void 0,
        "onMouseenter": this.onMouseEnter,
        "onMouseleave": this.onMouseLeave,
        "onContextmenu": this.onContextMenu,
        "onClick": this.onSelectorClick,
        "onDblclick": this.onSelectorDoubleClick,
        "onDragstart": draggable ? this.onDragStart : noop$1
      }, [$icon, $title]);
    },
    // Children list wrapped with `Animation`
    renderChildren: function renderChildren3() {
      var expanded = this.expanded, pos = this.pos;
      var _this$vcTree3 = this.vcTree, prefixCls2 = _this$vcTree3.prefixCls, openTransitionName = _this$vcTree3.openTransitionName, openAnimation2 = _this$vcTree3.openAnimation, renderTreeNode2 = _this$vcTree3.renderTreeNode;
      var animProps = {};
      if (openTransitionName) {
        animProps = getTransitionProps(openTransitionName);
      } else if (_typeof$3(openAnimation2) === "object") {
        animProps = _extends$1(_extends$1(_extends$1({}, openAnimation2), {
          css: false
        }), animProps);
      }
      var nodeList = this.getNodeChildren();
      if (nodeList.length === 0) {
        return null;
      }
      var $children;
      if (expanded) {
        $children = _createVNode$H("ul", {
          "class": classNames("".concat(prefixCls2, "-child-tree"), expanded && "".concat(prefixCls2, "-child-tree-open")),
          "data-expanded": expanded,
          "role": "group"
        }, [mapChildren(nodeList, function(node, index2) {
          return renderTreeNode2(node, index2, pos);
        })]);
      }
      return _createVNode$H(Transition, animProps, {
        default: function _default8() {
          return [$children];
        }
      });
    }
  },
  render: function render143() {
    var _ref;
    this.children = getSlot(this);
    var _this$$props = this.$props, dragOver = _this$$props.dragOver, dragOverGapTop = _this$$props.dragOverGapTop, dragOverGapBottom = _this$$props.dragOverGapBottom, isLeaf = _this$$props.isLeaf, expanded = _this$$props.expanded, selected = _this$$props.selected, checked2 = _this$$props.checked, halfChecked = _this$$props.halfChecked, loading = _this$$props.loading;
    var _this$vcTree4 = this.vcTree, prefixCls2 = _this$vcTree4.prefixCls, filterTreeNode2 = _this$vcTree4.filterTreeNode, draggable = _this$vcTree4.draggable;
    var disabled = this.isDisabled();
    var dataOrAriaAttributeProps = getDataAndAria(_extends$1(_extends$1({}, this.$props), this.$attrs));
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    return _createVNode$H("li", _objectSpread2$2({
      "class": (_ref = {}, _defineProperty$U(_ref, className, className), _defineProperty$U(_ref, "".concat(prefixCls2, "-treenode-disabled"), disabled), _defineProperty$U(_ref, "".concat(prefixCls2, "-treenode-switcher-").concat(expanded ? "open" : "close"), !isLeaf), _defineProperty$U(_ref, "".concat(prefixCls2, "-treenode-checkbox-checked"), checked2), _defineProperty$U(_ref, "".concat(prefixCls2, "-treenode-checkbox-indeterminate"), halfChecked), _defineProperty$U(_ref, "".concat(prefixCls2, "-treenode-selected"), selected), _defineProperty$U(_ref, "".concat(prefixCls2, "-treenode-loading"), loading), _defineProperty$U(_ref, "drag-over", !disabled && dragOver), _defineProperty$U(_ref, "drag-over-gap-top", !disabled && dragOverGapTop), _defineProperty$U(_ref, "drag-over-gap-bottom", !disabled && dragOverGapBottom), _defineProperty$U(_ref, "filter-node", filterTreeNode2 && filterTreeNode2(this)), _ref),
      "style": style3,
      "role": "treeitem",
      "onDragenter": draggable ? this.onDragEnter : noop$1,
      "onDragover": draggable ? this.onDragOver : noop$1,
      "onDragleave": draggable ? this.onDragLeave : noop$1,
      "onDrop": draggable ? this.onDrop : noop$1,
      "onDragend": draggable ? this.onDragEnd : noop$1
    }, dataOrAriaAttributeProps), [this.renderSwitcher(), this.renderCheckbox(), this.renderSelector(), this.renderChildren()]);
  }
});
TreeNode$4.isTreeNode = 1;
const { createVNode: _createVNode$G } = await importShared("vue");
var __rest$9 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
var DRAG_SIDE_RANGE = 0.25;
var DRAG_MIN_GAP = 2;
var onlyTreeNodeWarned = false;
function warnOnlyTreeNode() {
  if (onlyTreeNodeWarned) return;
  onlyTreeNodeWarned = true;
  warning$3(false, "Tree only accept TreeNode as children.");
}
function arrDel(list, value26) {
  var clone4 = list.slice();
  var index2 = clone4.indexOf(value26);
  if (index2 >= 0) {
    clone4.splice(index2, 1);
  }
  return clone4;
}
function arrAdd(list, value26) {
  var clone4 = list.slice();
  if (clone4.indexOf(value26) === -1) {
    clone4.push(value26);
  }
  return clone4;
}
function posToArr(pos) {
  return pos.split("-");
}
function getPosition(level2, index2) {
  return "".concat(level2, "-").concat(index2);
}
function isTreeNode(node) {
  return node.type && node.type.isTreeNode;
}
function getNodeChildren() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  return children.filter(isTreeNode);
}
function isCheckDisabled(node) {
  var _ref = getOptionProps(node) || {}, disabled = _ref.disabled, disableCheckbox = _ref.disableCheckbox, checkable = _ref.checkable;
  return !!(disabled || disableCheckbox) || checkable === false;
}
function traverseTreeNodes(treeNodes, callback) {
  function processNode(node, index2, parent2) {
    var children = node ? getSlot(node) : treeNodes;
    var pos = node ? getPosition(parent2.pos, index2) : 0;
    var childList = getNodeChildren(children);
    if (node) {
      var key2 = node.key;
      if (!key2 && (key2 === void 0 || key2 === null)) {
        key2 = pos;
      }
      var data79 = {
        node,
        index: index2,
        pos,
        key: key2,
        parentPos: parent2.node ? parent2.pos : null
      };
      callback(data79);
    }
    childList.forEach(function(subNode, subIndex) {
      processNode(subNode, subIndex, {
        node,
        pos
      });
    });
  }
  processNode(null);
}
function mapChildren() {
  var children = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var func = arguments.length > 1 ? arguments[1] : void 0;
  var list = children.map(func);
  if (list.length === 1) {
    return list[0];
  }
  return list;
}
function getDragNodesKeys(treeNodes, node) {
  var _getOptionProps = getOptionProps(node), eventKey = _getOptionProps.eventKey, pos = _getOptionProps.pos;
  var dragNodesKeys = [];
  traverseTreeNodes(treeNodes, function(_ref2) {
    var key2 = _ref2.key;
    dragNodesKeys.push(key2);
  });
  dragNodesKeys.push(eventKey || pos);
  return dragNodesKeys;
}
function calcDropPosition(event, treeNode) {
  var clientY = event.clientY;
  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(), top = _treeNode$selectHandl.top, bottom = _treeNode$selectHandl.bottom, height = _treeNode$selectHandl.height;
  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);
  if (clientY <= top + des) {
    return -1;
  }
  if (clientY >= bottom - des) {
    return 1;
  }
  return 0;
}
function calcSelectedKeys(selectedKeys3, props2) {
  if (!selectedKeys3) {
    return void 0;
  }
  var multiple = props2.multiple;
  if (multiple) {
    return selectedKeys3.slice();
  }
  if (selectedKeys3.length) {
    return [selectedKeys3[0]];
  }
  return selectedKeys3;
}
var internalProcessProps = function internalProcessProps2() {
  var props2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return _extends$1(_extends$1({}, props2), {
    class: props2.class || props2.className,
    style: props2.style,
    key: props2.key
  });
};
function convertDataToTree$1(treeData, processor) {
  if (!treeData) return [];
  var _ref3 = processor || {}, _ref3$processProps = _ref3.processProps, processProps2 = _ref3$processProps === void 0 ? internalProcessProps : _ref3$processProps;
  var list = Array.isArray(treeData) ? treeData : [treeData];
  return list.map(function(_a) {
    var children = _a.children, props2 = __rest$9(_a, ["children"]);
    var childrenNodes = convertDataToTree$1(children, processor);
    return _createVNode$G(TreeNode$4, processProps2(props2), {
      default: function _default8() {
        return [childrenNodes];
      }
    });
  });
}
function convertTreeToEntities$1(treeNodes) {
  var _ref4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, initWrapper2 = _ref4.initWrapper, processEntity2 = _ref4.processEntity, onProcessFinished = _ref4.onProcessFinished;
  var posEntities = /* @__PURE__ */ new Map();
  var keyEntities = /* @__PURE__ */ new Map();
  var wrapper = {
    posEntities,
    keyEntities
  };
  if (initWrapper2) {
    wrapper = initWrapper2(wrapper) || wrapper;
  }
  traverseTreeNodes(treeNodes, function(item) {
    var node = item.node, index2 = item.index, pos = item.pos, key2 = item.key, parentPos = item.parentPos;
    var entity = {
      node,
      index: index2,
      key: key2,
      pos
    };
    posEntities.set(pos, entity);
    keyEntities.set(key2, entity);
    entity.parent = posEntities.get(parentPos);
    if (entity.parent) {
      entity.parent.children = entity.parent.children || [];
      entity.parent.children.push(entity);
    }
    if (processEntity2) {
      processEntity2(entity, wrapper);
    }
  });
  if (onProcessFinished) {
    onProcessFinished(wrapper);
  }
  return wrapper;
}
function parseCheckedKeys(keys2) {
  if (!keys2) {
    return null;
  }
  var keyProps;
  if (Array.isArray(keys2)) {
    keyProps = {
      checkedKeys: keys2,
      halfCheckedKeys: void 0
    };
  } else if (_typeof$3(keys2) === "object") {
    keyProps = {
      checkedKeys: keys2.checked || void 0,
      halfCheckedKeys: keys2.halfChecked || void 0
    };
  } else {
    warning$3(false, "`checkedKeys` is not an array or an object");
    return null;
  }
  return keyProps;
}
function conductCheck$1(keyList, isCheck, keyEntities) {
  var checkStatus = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  var checkedKeys = /* @__PURE__ */ new Map();
  var halfCheckedKeys = /* @__PURE__ */ new Map();
  (checkStatus.checkedKeys || []).forEach(function(key3) {
    checkedKeys.set(key3, true);
  });
  (checkStatus.halfCheckedKeys || []).forEach(function(key3) {
    halfCheckedKeys.set(key3, true);
  });
  function conductUp(key3) {
    if (checkedKeys.get(key3) === isCheck) return;
    var entity = keyEntities.get(key3);
    if (!entity) return;
    var children = entity.children, parent2 = entity.parent, node = entity.node;
    if (isCheckDisabled(node)) return;
    var everyChildChecked = true;
    var someChildChecked = false;
    (children || []).filter(function(child) {
      return !isCheckDisabled(child.node);
    }).forEach(function(_ref5) {
      var childKey = _ref5.key;
      var childChecked = checkedKeys.get(childKey);
      var childHalfChecked = halfCheckedKeys.get(childKey);
      if (childChecked || childHalfChecked) someChildChecked = true;
      if (!childChecked) everyChildChecked = false;
    });
    if (isCheck) {
      checkedKeys.set(key3, everyChildChecked);
    } else {
      checkedKeys.set(key3, false);
    }
    halfCheckedKeys.set(key3, someChildChecked);
    if (parent2) {
      conductUp(parent2.key);
    }
  }
  function conductDown(key3) {
    if (checkedKeys.get(key3) === isCheck) return;
    var entity = keyEntities.get(key3);
    if (!entity) return;
    var children = entity.children, node = entity.node;
    if (isCheckDisabled(node)) return;
    checkedKeys.set(key3, isCheck);
    (children || []).forEach(function(child) {
      conductDown(child.key);
    });
  }
  function conduct(key3) {
    var entity = keyEntities.get(key3);
    if (!entity) {
      warning$3(false, "'".concat(key3, "' does not exist in the tree."));
      return;
    }
    var children = entity.children, parent2 = entity.parent, node = entity.node;
    checkedKeys.set(key3, isCheck);
    if (isCheckDisabled(node)) return;
    (children || []).filter(function(child) {
      return !isCheckDisabled(child.node);
    }).forEach(function(child) {
      conductDown(child.key);
    });
    if (parent2) {
      conductUp(parent2.key);
    }
  }
  (keyList || []).forEach(function(key3) {
    conduct(key3);
  });
  var checkedKeyList = [];
  var halfCheckedKeyList = [];
  var _iterator = _createForOfIteratorHelper(checkedKeys), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var _step$value = _slicedToArray$2(_step.value, 2), key2 = _step$value[0], value26 = _step$value[1];
      if (value26) {
        checkedKeyList.push(key2);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var _iterator2 = _createForOfIteratorHelper(halfCheckedKeys), _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
      var _step2$value = _slicedToArray$2(_step2.value, 2), _key = _step2$value[0], _value = _step2$value[1];
      if (!checkedKeys.get(_key) && _value) {
        halfCheckedKeyList.push(_key);
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  return {
    checkedKeys: checkedKeyList,
    halfCheckedKeys: halfCheckedKeyList
  };
}
function conductExpandParent(keyList, keyEntities) {
  var expandedKeys2 = /* @__PURE__ */ new Map();
  function conductUp(key2) {
    if (expandedKeys2.get(key2)) return;
    var entity = keyEntities.get(key2);
    if (!entity) return;
    expandedKeys2.set(key2, true);
    var parent2 = entity.parent, node = entity.node;
    var props2 = getOptionProps(node);
    if (props2 && props2.disabled) return;
    if (parent2) {
      conductUp(parent2.key);
    }
  }
  (keyList || []).forEach(function(key2) {
    conductUp(key2);
  });
  return _toConsumableArray(expandedKeys2.keys());
}
function getDataAndAria(props2) {
  return Object.keys(props2).reduce(function(prev3, key2) {
    if (key2.substr(0, 5) === "data-" || key2.substr(0, 5) === "aria-") {
      prev3[key2] = props2[key2];
    }
    return prev3;
  }, {});
}
const { createVNode: _createVNode$F } = await importShared("vue");
const { defineComponent: defineComponent$e } = await importShared("vue");
function getWatch$1() {
  var keys2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var watch2 = {};
  keys2.forEach(function(k2) {
    watch2[k2] = {
      handler: function handler8() {
        this.needSyncKeys[k2] = true;
      },
      flush: "sync"
    };
  });
  return watch2;
}
var Tree$1 = defineComponent$e({
  name: "Tree",
  mixins: [BaseMixin],
  provide: function provide2() {
    return {
      vcTree: this
    };
  },
  inheritAttrs: false,
  props: initDefaultProps$1({
    prefixCls: PropTypes.string,
    tabindex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    children: PropTypes.any,
    treeData: PropTypes.array,
    showLine: PropTypes.looseBool,
    showIcon: PropTypes.looseBool,
    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
    focusable: PropTypes.looseBool,
    selectable: PropTypes.looseBool,
    disabled: PropTypes.looseBool,
    multiple: PropTypes.looseBool,
    checkable: withUndefined(PropTypes.oneOfType([PropTypes.object, PropTypes.looseBool])),
    checkStrictly: PropTypes.looseBool,
    draggable: PropTypes.looseBool,
    defaultExpandParent: PropTypes.looseBool,
    autoExpandParent: PropTypes.looseBool,
    defaultExpandAll: PropTypes.looseBool,
    defaultExpandedKeys: PropTypes.array,
    expandedKeys: PropTypes.array,
    defaultCheckedKeys: PropTypes.array,
    checkedKeys: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),
    defaultSelectedKeys: PropTypes.array,
    selectedKeys: PropTypes.array,
    // onClick: PropTypes.func,
    // onDoubleClick: PropTypes.func,
    // onExpand: PropTypes.func,
    // onCheck: PropTypes.func,
    // onSelect: PropTypes.func,
    loadData: PropTypes.func,
    loadedKeys: PropTypes.array,
    // onMouseEnter: PropTypes.func,
    // onMouseLeave: PropTypes.func,
    // onRightClick: PropTypes.func,
    // onDragStart: PropTypes.func,
    // onDragEnter: PropTypes.func,
    // onDragOver: PropTypes.func,
    // onDragLeave: PropTypes.func,
    // onDragEnd: PropTypes.func,
    // onDrop: PropTypes.func,
    filterTreeNode: PropTypes.func,
    openTransitionName: PropTypes.string,
    openAnimation: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
    switcherIcon: PropTypes.any,
    __propsSymbol__: PropTypes.any
  }, {
    prefixCls: "rc-tree",
    showLine: false,
    showIcon: true,
    selectable: true,
    multiple: false,
    checkable: false,
    disabled: false,
    checkStrictly: false,
    draggable: false,
    defaultExpandParent: true,
    autoExpandParent: false,
    defaultExpandAll: false,
    defaultExpandedKeys: [],
    defaultCheckedKeys: [],
    defaultSelectedKeys: []
  }),
  data: function data70() {
    warning$3(this.$props.__propsSymbol__, "must pass __propsSymbol__");
    warning$3(this.$props.children, "please use children prop replace slots.default");
    this.needSyncKeys = {};
    this.domTreeNodes = {};
    var state = {
      _posEntities: /* @__PURE__ */ new Map(),
      _keyEntities: /* @__PURE__ */ new Map(),
      _expandedKeys: [],
      _selectedKeys: [],
      _checkedKeys: [],
      _halfCheckedKeys: [],
      _loadedKeys: [],
      _loadingKeys: [],
      _treeNode: [],
      _prevProps: null,
      _dragOverNodeKey: "",
      _dropPosition: null,
      _dragNodesKeys: []
    };
    return _extends$1(_extends$1({}, state), this.getDerivedState(getOptionProps(this), state));
  },
  watch: _extends$1(_extends$1({}, getWatch$1(["treeData", "children", "expandedKeys", "autoExpandParent", "selectedKeys", "checkedKeys", "loadedKeys"])), {
    __propsSymbol__: function __propsSymbol__2() {
      this.setState(this.getDerivedState(getOptionProps(this), this.$data));
      this.needSyncKeys = {};
    }
  }),
  methods: {
    getDerivedState: function getDerivedState(props2, prevState) {
      var _prevProps = prevState._prevProps;
      var newState = {
        _prevProps: _extends$1({}, props2)
      };
      var self2 = this;
      function needSync(name) {
        return !_prevProps && name in props2 || _prevProps && self2.needSyncKeys[name];
      }
      var treeNode = null;
      if (needSync("treeData")) {
        treeNode = convertDataToTree$1(props2.treeData);
      } else if (needSync("children")) {
        treeNode = props2.children;
      }
      if (treeNode) {
        newState._treeNode = treeNode;
        var entitiesMap = convertTreeToEntities$1(treeNode);
        newState._keyEntities = entitiesMap.keyEntities;
      }
      var keyEntities = newState._keyEntities || prevState._keyEntities;
      if (needSync("expandedKeys") || _prevProps && needSync("autoExpandParent")) {
        newState._expandedKeys = props2.autoExpandParent || !_prevProps && props2.defaultExpandParent ? conductExpandParent(props2.expandedKeys, keyEntities) : props2.expandedKeys;
      } else if (!_prevProps && props2.defaultExpandAll) {
        newState._expandedKeys = _toConsumableArray(keyEntities.keys());
      } else if (!_prevProps && props2.defaultExpandedKeys) {
        newState._expandedKeys = props2.autoExpandParent || props2.defaultExpandParent ? conductExpandParent(props2.defaultExpandedKeys, keyEntities) : props2.defaultExpandedKeys;
      }
      if (props2.selectable) {
        if (needSync("selectedKeys")) {
          newState._selectedKeys = calcSelectedKeys(props2.selectedKeys, props2);
        } else if (!_prevProps && props2.defaultSelectedKeys) {
          newState._selectedKeys = calcSelectedKeys(props2.defaultSelectedKeys, props2);
        }
      }
      if (props2.checkable) {
        var checkedKeyEntity;
        if (needSync("checkedKeys")) {
          checkedKeyEntity = parseCheckedKeys(props2.checkedKeys) || {};
        } else if (!_prevProps && props2.defaultCheckedKeys) {
          checkedKeyEntity = parseCheckedKeys(props2.defaultCheckedKeys) || {};
        } else if (treeNode) {
          checkedKeyEntity = parseCheckedKeys(props2.checkedKeys) || {
            checkedKeys: prevState._checkedKeys,
            halfCheckedKeys: prevState._halfCheckedKeys
          };
        }
        if (checkedKeyEntity) {
          var _checkedKeyEntity = checkedKeyEntity, _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys, checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che, _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys, halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;
          if (!props2.checkStrictly) {
            var conductKeys = conductCheck$1(checkedKeys, true, keyEntities);
            checkedKeys = conductKeys.checkedKeys;
            halfCheckedKeys = conductKeys.halfCheckedKeys;
          }
          newState._checkedKeys = checkedKeys;
          newState._halfCheckedKeys = halfCheckedKeys;
        }
      }
      if (needSync("loadedKeys")) {
        newState._loadedKeys = props2.loadedKeys;
      }
      return newState;
    },
    onNodeDragStart: function onNodeDragStart(event, node) {
      var _expandedKeys = this.$data._expandedKeys;
      var eventKey = node.eventKey;
      var children = getSlot(node);
      this.dragNode = node;
      this.setState({
        _dragNodesKeys: getDragNodesKeys(typeof children === "function" ? children() : children, node),
        _expandedKeys: arrDel(_expandedKeys, eventKey)
      });
      this.__emit("dragstart", {
        event,
        node
      });
    },
    /**
     * [Legacy] Select handler is less small than node,
     * so that this will trigger when drag enter node or select handler.
     * This is a little tricky if customize css without padding.
     * Better for use mouse move event to refresh drag state.
     * But let's just keep it to avoid event trigger logic change.
     */
    onNodeDragEnter: function onNodeDragEnter(event, node) {
      var _this = this;
      var expandedKeys2 = this.$data._expandedKeys;
      var pos = node.pos, eventKey = node.eventKey;
      if (!this.dragNode || !node.selectHandle) return;
      var dropPosition = calcDropPosition(event, node);
      if (this.dragNode.eventKey === eventKey && dropPosition === 0) {
        this.setState({
          _dragOverNodeKey: "",
          _dropPosition: null
        });
        return;
      }
      setTimeout(function() {
        _this.setState({
          _dragOverNodeKey: eventKey,
          _dropPosition: dropPosition
        });
        if (!_this.delayedDragEnterLogic) {
          _this.delayedDragEnterLogic = {};
        }
        Object.keys(_this.delayedDragEnterLogic).forEach(function(key2) {
          clearTimeout(_this.delayedDragEnterLogic[key2]);
        });
        _this.delayedDragEnterLogic[pos] = setTimeout(function() {
          var newExpandedKeys = arrAdd(expandedKeys2, eventKey);
          if (!hasProp(_this, "expandedKeys")) {
            _this.setState({
              _expandedKeys: newExpandedKeys
            });
          }
          _this.__emit("dragenter", {
            event,
            node,
            expandedKeys: newExpandedKeys
          });
        }, 400);
      }, 0);
    },
    onNodeDragOver: function onNodeDragOver(event, node) {
      var eventKey = node.eventKey;
      var _this$$data = this.$data, _dragOverNodeKey = _this$$data._dragOverNodeKey, _dropPosition = _this$$data._dropPosition;
      if (this.dragNode && eventKey === _dragOverNodeKey && node.selectHandle) {
        var dropPosition = calcDropPosition(event, node);
        if (dropPosition === _dropPosition) return;
        this.setState({
          _dropPosition: dropPosition
        });
      }
      this.__emit("dragover", {
        event,
        node
      });
    },
    onNodeDragLeave: function onNodeDragLeave(event, node) {
      this.setState({
        _dragOverNodeKey: ""
      });
      this.__emit("dragleave", {
        event,
        node
      });
    },
    onNodeDragEnd: function onNodeDragEnd(event, node) {
      this.setState({
        _dragOverNodeKey: ""
      });
      this.__emit("dragend", {
        event,
        node
      });
      this.dragNode = null;
    },
    onNodeDrop: function onNodeDrop(event, node) {
      var _this$$data2 = this.$data, _this$$data2$_dragNod = _this$$data2._dragNodesKeys, _dragNodesKeys = _this$$data2$_dragNod === void 0 ? [] : _this$$data2$_dragNod, _dropPosition = _this$$data2._dropPosition;
      var eventKey = node.eventKey, pos = node.pos;
      this.setState({
        _dragOverNodeKey: ""
      });
      if (_dragNodesKeys.indexOf(eventKey) !== -1) {
        warning$3(false, "Can not drop to dragNode(include it's children node)");
        return;
      }
      var posArr = posToArr(pos);
      var dropResult = {
        event,
        node,
        dragNode: this.dragNode,
        dragNodesKeys: _dragNodesKeys.slice(),
        dropPosition: _dropPosition + Number(posArr[posArr.length - 1]),
        dropToGap: false
      };
      if (_dropPosition !== 0) {
        dropResult.dropToGap = true;
      }
      this.__emit("drop", dropResult);
      this.dragNode = null;
    },
    onNodeClick: function onNodeClick(e2, treeNode) {
      this.__emit("click", e2, treeNode);
    },
    onNodeDoubleClick: function onNodeDoubleClick(e2, treeNode) {
      this.__emit("dblclick", e2, treeNode);
    },
    onNodeSelect: function onNodeSelect(e2, treeNode) {
      var selectedKeys3 = this.$data._selectedKeys;
      var keyEntities = this.$data._keyEntities;
      var multiple = this.$props.multiple;
      var _getOptionProps = getOptionProps(treeNode), selected = _getOptionProps.selected, eventKey = _getOptionProps.eventKey;
      var targetSelected = !selected;
      if (!targetSelected) {
        selectedKeys3 = arrDel(selectedKeys3, eventKey);
      } else if (!multiple) {
        selectedKeys3 = [eventKey];
      } else {
        selectedKeys3 = arrAdd(selectedKeys3, eventKey);
      }
      var selectedNodes = selectedKeys3.map(function(key2) {
        var entity = keyEntities.get(key2);
        if (!entity) return null;
        return entity.node;
      }).filter(function(node) {
        return node;
      });
      this.setUncontrolledState({
        _selectedKeys: selectedKeys3
      });
      var eventObj = {
        event: "select",
        selected: targetSelected,
        node: treeNode,
        selectedNodes,
        nativeEvent: e2
      };
      this.__emit("select", selectedKeys3, eventObj);
    },
    onNodeCheck: function onNodeCheck(e2, treeNode, checked2) {
      var _this$$data3 = this.$data, keyEntities = _this$$data3._keyEntities, oriCheckedKeys = _this$$data3._checkedKeys, oriHalfCheckedKeys = _this$$data3._halfCheckedKeys;
      var checkStrictly = this.$props.checkStrictly;
      var _getOptionProps2 = getOptionProps(treeNode), eventKey = _getOptionProps2.eventKey;
      var checkedObj;
      var eventObj = {
        event: "check",
        node: treeNode,
        checked: checked2,
        nativeEvent: e2
      };
      if (checkStrictly) {
        var checkedKeys = checked2 ? arrAdd(oriCheckedKeys, eventKey) : arrDel(oriCheckedKeys, eventKey);
        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, eventKey);
        checkedObj = {
          checked: checkedKeys,
          halfChecked: halfCheckedKeys
        };
        eventObj.checkedNodes = checkedKeys.map(function(key2) {
          return keyEntities.get(key2);
        }).filter(function(entity) {
          return entity;
        }).map(function(entity) {
          return entity.node;
        });
        this.setUncontrolledState({
          _checkedKeys: checkedKeys
        });
      } else {
        var _conductCheck = conductCheck$1([eventKey], checked2, keyEntities, {
          checkedKeys: oriCheckedKeys,
          halfCheckedKeys: oriHalfCheckedKeys
        }), _checkedKeys = _conductCheck.checkedKeys, _halfCheckedKeys = _conductCheck.halfCheckedKeys;
        checkedObj = _checkedKeys;
        eventObj.checkedNodes = [];
        eventObj.checkedNodesPositions = [];
        eventObj.halfCheckedKeys = _halfCheckedKeys;
        _checkedKeys.forEach(function(key2) {
          var entity = keyEntities.get(key2);
          if (!entity) return;
          var node = entity.node, pos = entity.pos;
          eventObj.checkedNodes.push(node);
          eventObj.checkedNodesPositions.push({
            node,
            pos
          });
        });
        this.setUncontrolledState({
          _checkedKeys,
          _halfCheckedKeys
        });
      }
      this.__emit("check", checkedObj, eventObj);
    },
    onNodeLoad: function onNodeLoad(treeNode) {
      var _this2 = this;
      return new Promise(function(resolve) {
        _this2.setState(function(_ref) {
          var _ref$_loadedKeys = _ref._loadedKeys, loadedKeys = _ref$_loadedKeys === void 0 ? [] : _ref$_loadedKeys, _ref$_loadingKeys = _ref._loadingKeys, loadingKeys = _ref$_loadingKeys === void 0 ? [] : _ref$_loadingKeys;
          var loadData = _this2.$props.loadData;
          var _getOptionProps3 = getOptionProps(treeNode), eventKey = _getOptionProps3.eventKey;
          if (!loadData || loadedKeys.indexOf(eventKey) !== -1 || loadingKeys.indexOf(eventKey) !== -1) {
            return {};
          }
          var promise = loadData(treeNode);
          promise.then(function() {
            var _this2$$data = _this2.$data, currentLoadedKeys = _this2$$data._loadedKeys, currentLoadingKeys = _this2$$data._loadingKeys;
            var newLoadedKeys = arrAdd(currentLoadedKeys, eventKey);
            var newLoadingKeys = arrDel(currentLoadingKeys, eventKey);
            _this2.__emit("load", newLoadedKeys, {
              event: "load",
              node: treeNode
            });
            _this2.setUncontrolledState({
              _loadedKeys: newLoadedKeys
            });
            _this2.setState({
              _loadingKeys: newLoadingKeys
            });
            resolve();
          });
          return {
            _loadingKeys: arrAdd(loadingKeys, eventKey)
          };
        });
      });
    },
    onNodeExpand: function onNodeExpand(e2, treeNode) {
      var _this3 = this;
      var expandedKeys2 = this.$data._expandedKeys;
      var loadData = this.$props.loadData;
      var _getOptionProps4 = getOptionProps(treeNode), eventKey = _getOptionProps4.eventKey, expanded = _getOptionProps4.expanded;
      var index2 = expandedKeys2.indexOf(eventKey);
      var targetExpanded = !expanded;
      warning$3(expanded && index2 !== -1 || !expanded && index2 === -1, "Expand state not sync with index check");
      if (targetExpanded) {
        expandedKeys2 = arrAdd(expandedKeys2, eventKey);
      } else {
        expandedKeys2 = arrDel(expandedKeys2, eventKey);
      }
      this.setUncontrolledState({
        _expandedKeys: expandedKeys2
      });
      this.__emit("expand", expandedKeys2, {
        node: treeNode,
        expanded: targetExpanded,
        nativeEvent: e2
      });
      if (targetExpanded && loadData) {
        var loadPromise = this.onNodeLoad(treeNode);
        return loadPromise ? loadPromise.then(function() {
          _this3.setUncontrolledState({
            _expandedKeys: expandedKeys2
          });
        }) : null;
      }
      return null;
    },
    onNodeMouseEnter: function onNodeMouseEnter(event, node) {
      this.__emit("mouseenter", {
        event,
        node
      });
    },
    onNodeMouseLeave: function onNodeMouseLeave(event, node) {
      this.__emit("mouseleave", {
        event,
        node
      });
    },
    onNodeContextMenu: function onNodeContextMenu(event, node) {
      event.preventDefault();
      this.__emit("rightClick", {
        event,
        node
      });
    },
    /**
     * Only update the value which is not in props
     */
    setUncontrolledState: function setUncontrolledState(state) {
      var needSync = false;
      var newState = {};
      var props2 = getOptionProps(this);
      Object.keys(state).forEach(function(name) {
        if (name.replace("_", "") in props2) return;
        needSync = true;
        newState[name] = state[name];
      });
      if (needSync) {
        this.setState(newState);
      }
    },
    registerTreeNode: function registerTreeNode(key2, node) {
      if (node) {
        this.domTreeNodes[key2] = node;
      } else {
        delete this.domTreeNodes[key2];
      }
    },
    isKeyChecked: function isKeyChecked(key2) {
      var _this$$data$_checkedK = this.$data._checkedKeys, checkedKeys = _this$$data$_checkedK === void 0 ? [] : _this$$data$_checkedK;
      return checkedKeys.indexOf(key2) !== -1;
    },
    /**
     * [Legacy] Original logic use `key` as tracking clue.
     * We have to use `cloneElement` to pass `key`.
     */
    renderTreeNode: function renderTreeNode(child, index2) {
      var level2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var _this$$data4 = this.$data, keyEntities = _this$$data4._keyEntities, _this$$data4$_expande = _this$$data4._expandedKeys, expandedKeys2 = _this$$data4$_expande === void 0 ? [] : _this$$data4$_expande, _this$$data4$_selecte = _this$$data4._selectedKeys, selectedKeys3 = _this$$data4$_selecte === void 0 ? [] : _this$$data4$_selecte, _this$$data4$_halfChe = _this$$data4._halfCheckedKeys, halfCheckedKeys = _this$$data4$_halfChe === void 0 ? [] : _this$$data4$_halfChe, _this$$data4$_loadedK = _this$$data4._loadedKeys, loadedKeys = _this$$data4$_loadedK === void 0 ? [] : _this$$data4$_loadedK, _this$$data4$_loading = _this$$data4._loadingKeys, loadingKeys = _this$$data4$_loading === void 0 ? [] : _this$$data4$_loading, dragOverNodeKey = _this$$data4._dragOverNodeKey, dropPosition = _this$$data4._dropPosition;
      var pos = getPosition(level2, index2);
      var key2 = child.key;
      if (!key2 && (key2 === void 0 || key2 === null)) {
        key2 = pos;
      }
      if (!keyEntities.get(key2)) {
        warnOnlyTreeNode();
        return null;
      }
      return cloneElement(child, {
        eventKey: key2,
        expanded: expandedKeys2.indexOf(key2) !== -1,
        selected: selectedKeys3.indexOf(key2) !== -1,
        loaded: loadedKeys.indexOf(key2) !== -1,
        loading: loadingKeys.indexOf(key2) !== -1,
        checked: this.isKeyChecked(key2),
        halfChecked: halfCheckedKeys.indexOf(key2) !== -1,
        pos,
        // [Legacy] Drag props
        dragOver: dragOverNodeKey === key2 && dropPosition === 0,
        dragOverGapTop: dragOverNodeKey === key2 && dropPosition === -1,
        dragOverGapBottom: dragOverNodeKey === key2 && dropPosition === 1,
        key: key2
      });
    }
  },
  render: function render144() {
    var _this4 = this;
    var treeNode = this.$data._treeNode;
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, focusable = _this$$props.focusable, showLine = _this$$props.showLine, _this$$props$tabindex = _this$$props.tabindex, tabindex = _this$$props$tabindex === void 0 ? 0 : _this$$props$tabindex;
    var domProps = getDataAndAria(_extends$1(_extends$1({}, this.$props), this.$attrs));
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    return _createVNode$F("ul", _objectSpread2$2(_objectSpread2$2({}, domProps), {}, {
      "class": classNames(prefixCls2, className, _defineProperty$U({}, "".concat(prefixCls2, "-show-line"), showLine)),
      "style": style3,
      "role": "tree",
      "unselectable": "on",
      "tabindex": focusable ? tabindex : null
    }), [mapChildren(treeNode, function(node, index2) {
      return _this4.renderTreeNode(node, index2);
    })]);
  }
});
Tree$1.TreeNode = TreeNode$4;
const { createVNode: _createVNode$E } = await importShared("vue");
var __rest$8 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$d, inject: inject$a } = await importShared("vue");
var TreeNode$3 = Tree$1.TreeNode;
function TreeProps() {
  return {
    showLine: PropTypes.looseBool,
    /** 是否支持多选 */
    multiple: PropTypes.looseBool,
    /** 是否自动展开父节点 */
    autoExpandParent: PropTypes.looseBool,
    /** checkable状态下节点选择完全受控（父子节点选中状态不再关联）*/
    checkStrictly: PropTypes.looseBool,
    /** 是否支持选中 */
    checkable: PropTypes.looseBool,
    /** 是否禁用树 */
    disabled: PropTypes.looseBool,
    /** 默认展开所有树节点 */
    defaultExpandAll: PropTypes.looseBool,
    /** 默认展开对应树节点 */
    defaultExpandParent: PropTypes.looseBool,
    /** 默认展开指定的树节点 */
    defaultExpandedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    /** （受控）展开指定的树节点 */
    expandedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    /** （受控）选中复选框的树节点 */
    checkedKeys: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])), PropTypes.shape({
      checked: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
      halfChecked: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))
    }).loose]),
    /** 默认选中复选框的树节点 */
    defaultCheckedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    /** （受控）设置选中的树节点 */
    selectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    /** 默认选中的树节点 */
    defaultSelectedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    selectable: PropTypes.looseBool,
    /** filter some AntTreeNodes as you need. it should return true */
    filterAntTreeNode: PropTypes.func,
    /** 异步加载数据 */
    loadData: PropTypes.func,
    loadedKeys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),
    // onLoaded: (loadedKeys: string[], info: { event: 'load', node: AntTreeNode; }) => void,
    /** 响应右键点击 */
    // onRightClick: (options: AntTreeNodeMouseEvent) => void,
    /** 设置节点可拖拽（IE>8）*/
    draggable: PropTypes.looseBool,
    // /** 开始拖拽时调用 */
    // onDragStart: (options: AntTreeNodeMouseEvent) => void,
    // /** dragenter 触发时调用 */
    // onDragEnter: (options: AntTreeNodeMouseEvent) => void,
    // /** dragover 触发时调用 */
    // onDragOver: (options: AntTreeNodeMouseEvent) => void,
    // /** dragleave 触发时调用 */
    // onDragLeave: (options: AntTreeNodeMouseEvent) => void,
    // /** drop 触发时调用 */
    // onDrop: (options: AntTreeNodeMouseEvent) => void,
    showIcon: PropTypes.looseBool,
    icon: PropTypes.func,
    switcherIcon: PropTypes.any,
    prefixCls: PropTypes.string,
    filterTreeNode: PropTypes.func,
    openAnimation: PropTypes.any,
    treeData: {
      type: Array
    },
    /**
     * @default{title,key,children}
     * 替换treeNode中 title,key,children字段为treeData中对应的字段
     */
    replaceFields: PropTypes.object,
    blockNode: PropTypes.looseBool,
    /** 展开/收起节点时触发 */
    onExpand: PropTypes.func,
    /** 点击复选框触发 */
    onCheck: PropTypes.func,
    /** 点击树节点触发 */
    onSelect: PropTypes.func,
    /** 单击树节点触发 */
    onClick: PropTypes.func,
    /** 双击树节点触发 */
    onDoubleclick: PropTypes.func,
    onDblclick: PropTypes.func,
    "onUpdate:selectedKeys": PropTypes.func,
    "onUpdate:checkedKeys": PropTypes.func,
    "onUpdate:expandedKeys": PropTypes.func
  };
}
const Tree = defineComponent$d({
  name: "ATree",
  inheritAttrs: false,
  props: initDefaultProps2(TreeProps(), {
    checkable: false,
    showIcon: false,
    openAnimation: _extends$1(_extends$1({}, animation$1), {
      appear: null
    }),
    blockNode: false
  }),
  setup: function setup147() {
    return {
      tree: null,
      configProvider: inject$a("configProvider", defaultConfigProvider)
    };
  },
  TreeNode: TreeNode$3,
  methods: {
    renderSwitcherIcon: function renderSwitcherIcon(prefixCls2, switcherIcon, _ref) {
      var isLeaf = _ref.isLeaf, loading = _ref.loading, expanded = _ref.expanded;
      var showLine = this.$props.showLine;
      if (loading) {
        return _createVNode$E(LoadingOutlined, {
          "class": "".concat(prefixCls2, "-switcher-loading-icon")
        }, null);
      }
      if (isLeaf) {
        return showLine ? _createVNode$E(FileOutlined, {
          "class": "".concat(prefixCls2, "-switcher-line-icon")
        }, null) : null;
      }
      var switcherCls = "".concat(prefixCls2, "-switcher-icon");
      if (switcherIcon) {
        return cloneElement(switcherIcon, {
          class: switcherCls
        });
      }
      return showLine ? expanded ? _createVNode$E(MinusSquareOutlined, {
        "class": "".concat(prefixCls2, "-switcher-line-icon")
      }, null) : _createVNode$E(PlusSquareOutlined, {
        "class": "".concat(prefixCls2, "-switcher-line-icon")
      }, null) : _createVNode$E(CaretDownFilled, {
        "class": switcherCls
      }, null);
    },
    updateTreeData: function updateTreeData(treeData) {
      var _this = this;
      var $slots = this.$slots;
      var defaultFields = {
        children: "children",
        title: "title",
        key: "key"
      };
      var replaceFields = _extends$1(_extends$1({}, defaultFields), this.$props.replaceFields);
      return treeData.map(function(item) {
        var key2 = item[replaceFields.key];
        var children = item[replaceFields.children];
        var _item$slots = item.slots, slots = _item$slots === void 0 ? {} : _item$slots, cls = item.class, style3 = item.style, restProps = __rest$8(item, ["slots", "class", "style"]);
        var treeNodeProps = _extends$1(_extends$1({}, restProps), {
          icon: $slots[slots.icon] || restProps.icon,
          switcherIcon: $slots[slots.switcherIcon] || restProps.switcherIcon,
          title: $slots[slots.title] || $slots.title || restProps[replaceFields.title],
          dataRef: item,
          key: key2,
          class: cls,
          style: style3
        });
        if (children) {
          return _extends$1(_extends$1({}, treeNodeProps), {
            children: _this.updateTreeData(children)
          });
        }
        return treeNodeProps;
      });
    },
    setTreeRef: function setTreeRef(node) {
      this.tree = node;
    },
    handleCheck: function handleCheck(checkedObj, eventObj) {
      this.$emit("update:checkedKeys", checkedObj);
      this.$emit("check", checkedObj, eventObj);
    },
    handleExpand: function handleExpand(expandedKeys2, eventObj) {
      this.$emit("update:expandedKeys", expandedKeys2);
      this.$emit("expand", expandedKeys2, eventObj);
    },
    handleSelect: function handleSelect3(selectedKeys3, eventObj) {
      this.$emit("update:selectedKeys", selectedKeys3);
      this.$emit("select", selectedKeys3, eventObj);
    }
  },
  render: function render145() {
    var _this2 = this, _classNames;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, showIcon = props2.showIcon, treeNodes = props2.treeNodes, blockNode = props2.blockNode;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("tree", customizePrefixCls);
    var _switcherIcon = getComponent(this, "switcherIcon");
    var checkable = props2.checkable;
    var treeData = props2.treeData || treeNodes;
    if (treeData) {
      treeData = this.updateTreeData(treeData);
    }
    var _a = this.$attrs, className = _a.class, restAttrs = __rest$8(_a, ["class"]);
    var vcTreeProps = _extends$1(_extends$1(_extends$1(_extends$1({}, props2), {
      prefixCls: prefixCls2,
      checkable: checkable ? _createVNode$E("span", {
        "class": "".concat(prefixCls2, "-checkbox-inner")
      }, null) : checkable,
      children: getSlot(this),
      switcherIcon: function switcherIcon(nodeProps) {
        return _this2.renderSwitcherIcon(prefixCls2, _switcherIcon, nodeProps);
      },
      ref: this.setTreeRef
    }), restAttrs), {
      class: classNames(className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-icon-hide"), !showIcon), _defineProperty$U(_classNames, "".concat(prefixCls2, "-block-node"), blockNode), _classNames)),
      onCheck: this.handleCheck,
      onExpand: this.handleExpand,
      onSelect: this.handleSelect
    });
    if (treeData) {
      vcTreeProps.treeData = treeData;
    }
    return _createVNode$E(Tree$1, _objectSpread2$2(_objectSpread2$2({}, vcTreeProps), {}, {
      "__propsSymbol__": []
    }), null);
  }
});
var FolderOpenOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M928 444H820V330.4c0-17.7-14.3-32-32-32H473L355.7 186.2a8.15 8.15 0 00-5.5-2.2H96c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h698c13 0 24.8-7.9 29.7-20l134-332c1.5-3.8 2.3-7.9 2.3-12 0-17.7-14.3-32-32-32zM136 256h188.5l119.6 114.4H748V444H238c-13 0-24.8 7.9-29.7 20L136 643.2V256zm635.3 512H159l103.3-256h612.4L771.3 768z" } }] }, "name": "folder-open", "theme": "outlined" };
const { createVNode: _createVNode$D } = await importShared("vue");
function _objectSpread$9(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$a(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$a(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var FolderOpenOutlined = function FolderOpenOutlined2(props2, context2) {
  var p = _objectSpread$9({}, props2, context2.attrs);
  return _createVNode$D(Icon, _objectSpread$9({}, p, {
    "icon": FolderOpenOutlined$1
  }), null);
};
FolderOpenOutlined.displayName = "FolderOpenOutlined";
FolderOpenOutlined.inheritAttrs = false;
var FolderOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M880 298.4H521L403.7 186.2a8.15 8.15 0 00-5.5-2.2H144c-17.7 0-32 14.3-32 32v592c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V330.4c0-17.7-14.3-32-32-32zM840 768H184V256h188.5l119.6 114.4H840V768z" } }] }, "name": "folder", "theme": "outlined" };
const { createVNode: _createVNode$C } = await importShared("vue");
function _objectSpread$8(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$9(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$9(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var FolderOutlined = function FolderOutlined2(props2, context2) {
  var p = _objectSpread$8({}, props2, context2.attrs);
  return _createVNode$C(Icon, _objectSpread$8({}, p, {
    "icon": FolderOutlined$1
  }), null);
};
FolderOutlined.displayName = "FolderOutlined";
FolderOutlined.inheritAttrs = false;
var Record;
(function(Record2) {
  Record2[Record2["None"] = 0] = "None";
  Record2[Record2["Start"] = 1] = "Start";
  Record2[Record2["End"] = 2] = "End";
})(Record || (Record = {}));
function traverseNodesKey(rootChildren, callback) {
  var nodeList = getNodeChildren(rootChildren) || [];
  function processNode(node) {
    var key2 = node.key;
    var children = getSlot(node);
    if (callback(key2, node) !== false) {
      traverseNodesKey(children, callback);
    }
  }
  nodeList.forEach(processNode);
}
function getFullKeyList(children) {
  var _convertTreeToEntitie = convertTreeToEntities$1(children), keyEntities = _convertTreeToEntitie.keyEntities;
  return _toConsumableArray(keyEntities.keys());
}
function calcRangeKeys(rootChildren, expandedKeys2, startKey, endKey) {
  var keys2 = [];
  var record = Record.None;
  if (startKey && startKey === endKey) {
    return [startKey];
  }
  if (!startKey || !endKey) {
    return [];
  }
  function matchKey(key2) {
    return key2 === startKey || key2 === endKey;
  }
  traverseNodesKey(rootChildren, function(key2) {
    if (record === Record.End) {
      return false;
    }
    if (matchKey(key2)) {
      keys2.push(key2);
      if (record === Record.None) {
        record = Record.Start;
      } else if (record === Record.Start) {
        record = Record.End;
        return false;
      }
    } else if (record === Record.Start) {
      keys2.push(key2);
    }
    if (expandedKeys2.indexOf(key2) === -1) {
      return false;
    }
    return true;
  });
  return keys2;
}
function convertDirectoryKeysToNodes(rootChildren, keys2) {
  var restKeys = _toConsumableArray(keys2);
  var nodes = [];
  traverseNodesKey(rootChildren, function(key2, node) {
    var index2 = restKeys.indexOf(key2);
    if (index2 !== -1) {
      nodes.push(node);
      restKeys.splice(index2, 1);
    }
    return !!restKeys.length;
  });
  return nodes;
}
function getFullKeyListByTreeData(treeData) {
  var replaceFields = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var keys2 = [];
  var _replaceFields$key = replaceFields.key, key2 = _replaceFields$key === void 0 ? "key" : _replaceFields$key, _replaceFields$childr = replaceFields.children, children = _replaceFields$childr === void 0 ? "children" : _replaceFields$childr;
  (treeData || []).forEach(function(item) {
    keys2.push(item[key2]);
    if (item[children]) {
      keys2 = [].concat(_toConsumableArray(keys2), _toConsumableArray(getFullKeyListByTreeData(item[children], replaceFields)));
    }
  });
  return keys2;
}
const { resolveDirective: _resolveDirective$6, createVNode: _createVNode$B } = await importShared("vue");
var __rest$7 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$c, inject: inject$9 } = await importShared("vue");
function getIcon2(props2) {
  var isLeaf = props2.isLeaf, expanded = props2.expanded;
  if (isLeaf) {
    return _createVNode$B(FileOutlined, null, null);
  }
  return expanded ? _createVNode$B(FolderOpenOutlined, null, null) : _createVNode$B(FolderOutlined, null, null);
}
const DirectoryTree = defineComponent$c({
  name: "ADirectoryTree",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps2(_extends$1(_extends$1({}, TreeProps()), {
    expandAction: PropTypes.oneOf([false, "click", "doubleclick", "dblclick"])
  }), {
    showIcon: true,
    expandAction: "click"
  }),
  setup: function setup148() {
    return {
      children: null,
      onDebounceExpand: null,
      tree: null,
      lastSelectedKey: "",
      cachedSelectedKeys: [],
      configProvider: inject$9("configProvider", defaultConfigProvider)
    };
  },
  data: function data71() {
    var props2 = getOptionProps(this);
    var defaultExpandAll = props2.defaultExpandAll, defaultExpandParent = props2.defaultExpandParent, expandedKeys2 = props2.expandedKeys, defaultExpandedKeys = props2.defaultExpandedKeys;
    var children = getSlot(this);
    var _convertTreeToEntitie = convertTreeToEntities$1(children), keyEntities = _convertTreeToEntitie.keyEntities;
    var state = {};
    state._selectedKeys = props2.selectedKeys || props2.defaultSelectedKeys || [];
    if (defaultExpandAll) {
      if (props2.treeData) {
        state._expandedKeys = getFullKeyListByTreeData(props2.treeData, props2.replaceFields);
      } else {
        state._expandedKeys = getFullKeyList(children);
      }
    } else if (defaultExpandParent) {
      state._expandedKeys = conductExpandParent(expandedKeys2 || defaultExpandedKeys, keyEntities);
    } else {
      state._expandedKeys = expandedKeys2 || defaultExpandedKeys;
    }
    return _extends$1({
      _selectedKeys: [],
      _expandedKeys: []
    }, state);
  },
  watch: {
    expandedKeys: function expandedKeys(val) {
      this.setState({
        _expandedKeys: val
      });
    },
    selectedKeys: function selectedKeys2(val) {
      this.setState({
        _selectedKeys: val
      });
    }
  },
  created: function created19() {
    this.onDebounceExpand = debounce$1(this.expandFolderNode, 200, {
      leading: true
    });
  },
  methods: {
    handleExpand: function handleExpand2(expandedKeys2, info3) {
      this.setUncontrolledState({
        _expandedKeys: expandedKeys2
      });
      this.$emit("update:expandedKeys", expandedKeys2);
      this.$emit("expand", expandedKeys2, info3);
      return void 0;
    },
    handleClick: function handleClick4(event, node) {
      var expandAction = this.$props.expandAction;
      if (expandAction === "click") {
        this.onDebounceExpand(event, node);
      }
      this.$emit("click", event, node);
    },
    handleDoubleClick: function handleDoubleClick(event, node) {
      var expandAction = this.$props.expandAction;
      if (expandAction === "dblclick" || expandAction === "doubleclick") {
        this.onDebounceExpand(event, node);
      }
      this.$emit("doubleclick", event, node);
      this.$emit("dblclick", event, node);
    },
    hanldeSelect: function hanldeSelect(keys2, event) {
      var multiple = this.$props.multiple;
      var children = this.children || [];
      var _this$$data$_expanded = this.$data._expandedKeys, expandedKeys2 = _this$$data$_expanded === void 0 ? [] : _this$$data$_expanded;
      var node = event.node, nativeEvent = event.nativeEvent;
      var _node$eventKey = node.eventKey, eventKey = _node$eventKey === void 0 ? "" : _node$eventKey;
      var newState = {};
      var newEvent = _extends$1(_extends$1({}, event), {
        selected: true
      });
      var ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;
      var shiftPick = nativeEvent.shiftKey;
      var newSelectedKeys;
      if (multiple && ctrlPick) {
        newSelectedKeys = keys2;
        this.lastSelectedKey = eventKey;
        this.cachedSelectedKeys = newSelectedKeys;
        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);
      } else if (multiple && shiftPick) {
        newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(this.cachedSelectedKeys || []), _toConsumableArray(calcRangeKeys(children, expandedKeys2, eventKey, this.lastSelectedKey)))));
        newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);
      } else {
        newSelectedKeys = [eventKey];
        this.lastSelectedKey = eventKey;
        this.cachedSelectedKeys = newSelectedKeys;
        newEvent.selectedNodes = [event.node];
      }
      newState._selectedKeys = newSelectedKeys;
      this.$emit("update:selectedKeys", newSelectedKeys);
      this.$emit("select", newSelectedKeys, newEvent);
      this.setUncontrolledState(newState);
    },
    setTreeRef: function setTreeRef2(node) {
      this.tree = node;
    },
    expandFolderNode: function expandFolderNode(event, node) {
      var isLeaf = node.isLeaf;
      if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {
        return;
      }
      if (this.tree.tree) {
        var internalTree = this.tree.tree;
        internalTree.onNodeExpand(event, node);
      }
    },
    setUncontrolledState: function setUncontrolledState2(state) {
      var newState = omit$1(state, Object.keys(getOptionProps(this)).map(function(p) {
        return "_".concat(p);
      }));
      if (Object.keys(newState).length) {
        this.setState(newState);
      }
    },
    handleCheck: function handleCheck2(checkedObj, eventObj) {
      this.$emit("update:checkedKeys", checkedObj);
      this.$emit("check", checkedObj, eventObj);
    }
  },
  render: function render146() {
    var _this = this;
    this.children = getSlot(this);
    var _a = getOptionProps(this), customizePrefixCls = _a.prefixCls, props2 = __rest$7(_a, ["prefixCls"]);
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("tree", customizePrefixCls);
    var _this$$data = this.$data, expandedKeys2 = _this$$data._expandedKeys, selectedKeys3 = _this$$data._selectedKeys;
    var _b = this.$attrs, className = _b.class, restAttrs = __rest$7(_b, ["class"]);
    var connectClassName = classNames("".concat(prefixCls2, "-directory"), className);
    var treeProps = _extends$1(_extends$1(_extends$1({
      icon: getIcon2
    }, restAttrs), omit$1(props2, ["onUpdate:selectedKeys", "onUpdate:checkedKeys", "onUpdate:expandedKeys"])), {
      prefixCls: prefixCls2,
      expandedKeys: expandedKeys2,
      selectedKeys: selectedKeys3,
      switcherIcon: getComponent(this, "switcherIcon"),
      ref: this.setTreeRef,
      class: connectClassName,
      onSelect: this.hanldeSelect,
      onClick: this.handleClick,
      onDblclick: this.handleDoubleClick,
      onExpand: this.handleExpand,
      onCheck: this.handleCheck
    });
    return _createVNode$B(Tree, treeProps, _objectSpread2$2({
      default: function _default8() {
        return [_this.children];
      }
    }, omit$1(this.$slots, ["default"])));
  }
});
Tree.TreeNode.name = "ATreeNode";
Tree.DirectoryTree = DirectoryTree;
Tree.install = function(app) {
  app.component(Tree.name, Tree);
  app.component(Tree.TreeNode.name, Tree.TreeNode);
  app.component(DirectoryTree.name, DirectoryTree);
  return app;
};
var TreeNode$2 = Tree.TreeNode;
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function(obj2) {
      return typeof obj2;
    };
  } else {
    _typeof = function(obj2) {
      return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
    };
  }
  return _typeof(obj);
}
function _defineProperty$8(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, {
      value: value26,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
function ownKeys(object3, enumerableOnly) {
  var keys2 = Object.keys(object3);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object3);
    if (enumerableOnly) symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object3, sym).enumerable;
    });
    keys2.push.apply(keys2, symbols);
  }
  return keys2;
}
function _objectSpread2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? arguments[i2] : {};
    if (i2 % 2) {
      ownKeys(source, true).forEach(function(key2) {
        _defineProperty$8(target, key2, source[key2]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function(key2) {
        Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));
      });
    }
  }
  return target;
}
var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
function getClientPosition(elem) {
  var box;
  var x2;
  var y2;
  var doc = elem.ownerDocument;
  var body = doc.body;
  var docElem = doc && doc.documentElement;
  box = elem.getBoundingClientRect();
  x2 = box.left;
  y2 = box.top;
  x2 -= docElem.clientLeft || body.clientLeft || 0;
  y2 -= docElem.clientTop || body.clientTop || 0;
  return {
    left: x2,
    top: y2
  };
}
function getScroll(w2, top) {
  var ret = w2["page".concat(top ? "Y" : "X", "Offset")];
  var method3 = "scroll".concat(top ? "Top" : "Left");
  if (typeof ret !== "number") {
    var d2 = w2.document;
    ret = d2.documentElement[method3];
    if (typeof ret !== "number") {
      ret = d2.body[method3];
    }
  }
  return ret;
}
function getScrollLeft(w2) {
  return getScroll(w2);
}
function getScrollTop(w2) {
  return getScroll(w2, true);
}
function getOffset2(el) {
  var pos = getClientPosition(el);
  var doc = el.ownerDocument;
  var w2 = doc.defaultView || doc.parentWindow;
  pos.left += getScrollLeft(w2);
  pos.top += getScrollTop(w2);
  return pos;
}
function _getComputedStyle(elem, name, computedStyle_) {
  var val = "";
  var d2 = elem.ownerDocument;
  var computedStyle = computedStyle_ || d2.defaultView.getComputedStyle(elem, null);
  if (computedStyle) {
    val = computedStyle.getPropertyValue(name) || computedStyle[name];
  }
  return val;
}
var _RE_NUM_NO_PX = new RegExp("^(".concat(RE_NUM, ")(?!px)[a-z%]+$"), "i");
var RE_POS = /^(top|right|bottom|left)$/;
var CURRENT_STYLE = "currentStyle";
var RUNTIME_STYLE = "runtimeStyle";
var LEFT = "left";
var PX = "px";
function _getComputedStyleIE(elem, name) {
  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
    var style3 = elem.style;
    var left = style3[LEFT];
    var rsLeft = elem[RUNTIME_STYLE][LEFT];
    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
    style3[LEFT] = name === "fontSize" ? "1em" : ret || 0;
    ret = style3.pixelLeft + PX;
    style3[LEFT] = left;
    elem[RUNTIME_STYLE][LEFT] = rsLeft;
  }
  return ret === "" ? "auto" : ret;
}
var getComputedStyleX;
if (typeof window !== "undefined") {
  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
}
function each(arr, fn) {
  for (var i2 = 0; i2 < arr.length; i2++) {
    fn(arr[i2]);
  }
}
function isBorderBoxFn(elem) {
  return getComputedStyleX(elem, "boxSizing") === "border-box";
}
var BOX_MODELS = ["margin", "border", "padding"];
var CONTENT_INDEX = -1;
var PADDING_INDEX = 2;
var BORDER_INDEX = 1;
var MARGIN_INDEX = 0;
function swap(elem, options2, callback) {
  var old = {};
  var style3 = elem.style;
  var name;
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      old[name] = style3[name];
      style3[name] = options2[name];
    }
  }
  callback.call(elem);
  for (name in options2) {
    if (options2.hasOwnProperty(name)) {
      style3[name] = old[name];
    }
  }
}
function getPBMWidth(elem, props2, which) {
  var value26 = 0;
  var prop;
  var j2;
  var i2;
  for (j2 = 0; j2 < props2.length; j2++) {
    prop = props2[j2];
    if (prop) {
      for (i2 = 0; i2 < which.length; i2++) {
        var cssProp = void 0;
        if (prop === "border") {
          cssProp = "".concat(prop + which[i2], "Width");
        } else {
          cssProp = prop + which[i2];
        }
        value26 += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
      }
    }
  }
  return value26;
}
function isWindow(obj) {
  return obj != null && obj == obj.window;
}
var domUtils = {};
each(["Width", "Height"], function(name) {
  domUtils["doc".concat(name)] = function(refWin) {
    var d2 = refWin.document;
    return Math.max(
      // firefox chrome documentElement.scrollHeight< body.scrollHeight
      // ie standard mode : documentElement.scrollHeight> body.scrollHeight
      d2.documentElement["scroll".concat(name)],
      // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
      d2.body["scroll".concat(name)],
      domUtils["viewport".concat(name)](d2)
    );
  };
  domUtils["viewport".concat(name)] = function(win) {
    var prop = "client".concat(name);
    var doc = win.document;
    var body = doc.body;
    var documentElement = doc.documentElement;
    var documentElementProp = documentElement[prop];
    return doc.compatMode === "CSS1Compat" && documentElementProp || body && body[prop] || documentElementProp;
  };
});
function getWH(elem, name, extra) {
  if (isWindow(elem)) {
    return name === "width" ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
  } else if (elem.nodeType === 9) {
    return name === "width" ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
  }
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  var borderBoxValue = name === "width" ? elem.offsetWidth : elem.offsetHeight;
  getComputedStyleX(elem);
  var isBorderBox = isBorderBoxFn(elem);
  var cssBoxValue = 0;
  if (borderBoxValue == null || borderBoxValue <= 0) {
    borderBoxValue = void 0;
    cssBoxValue = getComputedStyleX(elem, name);
    if (cssBoxValue == null || Number(cssBoxValue) < 0) {
      cssBoxValue = elem.style[name] || 0;
    }
    cssBoxValue = parseFloat(cssBoxValue) || 0;
  }
  if (extra === void 0) {
    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
  }
  var borderBoxValueOrIsBorderBox = borderBoxValue !== void 0 || isBorderBox;
  var val = borderBoxValue || cssBoxValue;
  if (extra === CONTENT_INDEX) {
    if (borderBoxValueOrIsBorderBox) {
      return val - getPBMWidth(elem, ["border", "padding"], which);
    }
    return cssBoxValue;
  }
  if (borderBoxValueOrIsBorderBox) {
    var padding = extra === PADDING_INDEX ? -getPBMWidth(elem, ["border"], which) : getPBMWidth(elem, ["margin"], which);
    return val + (extra === BORDER_INDEX ? 0 : padding);
  }
  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);
}
var cssShow = {
  position: "absolute",
  visibility: "hidden",
  display: "block"
};
function getWHIgnoreDisplay(elem) {
  var val;
  var args = arguments;
  if (elem.offsetWidth !== 0) {
    val = getWH.apply(void 0, args);
  } else {
    swap(elem, cssShow, function() {
      val = getWH.apply(void 0, args);
    });
  }
  return val;
}
function css(el, name, v2) {
  var value26 = v2;
  if (_typeof(name) === "object") {
    for (var i2 in name) {
      if (name.hasOwnProperty(i2)) {
        css(el, i2, name[i2]);
      }
    }
    return void 0;
  }
  if (typeof value26 !== "undefined") {
    if (typeof value26 === "number") {
      value26 += "px";
    }
    el.style[name] = value26;
    return void 0;
  }
  return getComputedStyleX(el, name);
}
each(["width", "height"], function(name) {
  var first = name.charAt(0).toUpperCase() + name.slice(1);
  domUtils["outer".concat(first)] = function(el, includeMargin) {
    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
  };
  var which = name === "width" ? ["Left", "Right"] : ["Top", "Bottom"];
  domUtils[name] = function(elem, val) {
    if (val !== void 0) {
      if (elem) {
        getComputedStyleX(elem);
        var isBorderBox = isBorderBoxFn(elem);
        if (isBorderBox) {
          val += getPBMWidth(elem, ["padding", "border"], which);
        }
        return css(elem, name, val);
      }
      return void 0;
    }
    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
  };
});
function setOffset2(elem, offset4) {
  if (css(elem, "position") === "static") {
    elem.style.position = "relative";
  }
  var old = getOffset2(elem);
  var ret = {};
  var current2;
  var key2;
  for (key2 in offset4) {
    if (offset4.hasOwnProperty(key2)) {
      current2 = parseFloat(css(elem, key2)) || 0;
      ret[key2] = current2 + offset4[key2] - old[key2];
    }
  }
  css(elem, ret);
}
var util = _objectSpread2({
  getWindow: function getWindow2(node) {
    var doc = node.ownerDocument || node;
    return doc.defaultView || doc.parentWindow;
  },
  offset: function offset3(el, value26) {
    if (typeof value26 !== "undefined") {
      setOffset2(el, value26);
    } else {
      return getOffset2(el);
    }
  },
  isWindow,
  each,
  css,
  clone: function clone3(obj) {
    var ret = {};
    for (var i2 in obj) {
      if (obj.hasOwnProperty(i2)) {
        ret[i2] = obj[i2];
      }
    }
    var overflow3 = obj.overflow;
    if (overflow3) {
      for (var _i in obj) {
        if (obj.hasOwnProperty(_i)) {
          ret.overflow[_i] = obj.overflow[_i];
        }
      }
    }
    return ret;
  },
  scrollLeft: function scrollLeft(w2, v2) {
    if (isWindow(w2)) {
      if (v2 === void 0) {
        return getScrollLeft(w2);
      }
      window.scrollTo(v2, getScrollTop(w2));
    } else {
      if (v2 === void 0) {
        return w2.scrollLeft;
      }
      w2.scrollLeft = v2;
    }
  },
  scrollTop: function scrollTop(w2, v2) {
    if (isWindow(w2)) {
      if (v2 === void 0) {
        return getScrollTop(w2);
      }
      window.scrollTo(getScrollLeft(w2), v2);
    } else {
      if (v2 === void 0) {
        return w2.scrollTop;
      }
      w2.scrollTop = v2;
    }
  },
  viewportWidth: 0,
  viewportHeight: 0
}, domUtils);
function scrollIntoView(elem, container, config2) {
  config2 = config2 || {};
  if (container.nodeType === 9) {
    container = util.getWindow(container);
  }
  var allowHorizontalScroll = config2.allowHorizontalScroll;
  var onlyScrollIfNeeded = config2.onlyScrollIfNeeded;
  var alignWithTop = config2.alignWithTop;
  var alignWithLeft = config2.alignWithLeft;
  var offsetTop = config2.offsetTop || 0;
  var offsetLeft = config2.offsetLeft || 0;
  var offsetBottom = config2.offsetBottom || 0;
  var offsetRight = config2.offsetRight || 0;
  allowHorizontalScroll = allowHorizontalScroll === void 0 ? true : allowHorizontalScroll;
  var isWin = util.isWindow(container);
  var elemOffset = util.offset(elem);
  var eh = util.outerHeight(elem);
  var ew = util.outerWidth(elem);
  var containerOffset;
  var ch;
  var cw;
  var containerScroll;
  var diffTop;
  var diffBottom;
  var win;
  var winScroll;
  var ww;
  var wh;
  if (isWin) {
    win = container;
    wh = util.height(win);
    ww = util.width(win);
    winScroll = {
      left: util.scrollLeft(win),
      top: util.scrollTop(win)
    };
    diffTop = {
      left: elemOffset.left - winScroll.left - offsetLeft,
      top: elemOffset.top - winScroll.top - offsetTop
    };
    diffBottom = {
      left: elemOffset.left + ew - (winScroll.left + ww) + offsetRight,
      top: elemOffset.top + eh - (winScroll.top + wh) + offsetBottom
    };
    containerScroll = winScroll;
  } else {
    containerOffset = util.offset(container);
    ch = container.clientHeight;
    cw = container.clientWidth;
    containerScroll = {
      left: container.scrollLeft,
      top: container.scrollTop
    };
    diffTop = {
      left: elemOffset.left - (containerOffset.left + (parseFloat(util.css(container, "borderLeftWidth")) || 0)) - offsetLeft,
      top: elemOffset.top - (containerOffset.top + (parseFloat(util.css(container, "borderTopWidth")) || 0)) - offsetTop
    };
    diffBottom = {
      left: elemOffset.left + ew - (containerOffset.left + cw + (parseFloat(util.css(container, "borderRightWidth")) || 0)) + offsetRight,
      top: elemOffset.top + eh - (containerOffset.top + ch + (parseFloat(util.css(container, "borderBottomWidth")) || 0)) + offsetBottom
    };
  }
  if (diffTop.top < 0 || diffBottom.top > 0) {
    if (alignWithTop === true) {
      util.scrollTop(container, containerScroll.top + diffTop.top);
    } else if (alignWithTop === false) {
      util.scrollTop(container, containerScroll.top + diffBottom.top);
    } else {
      if (diffTop.top < 0) {
        util.scrollTop(container, containerScroll.top + diffTop.top);
      } else {
        util.scrollTop(container, containerScroll.top + diffBottom.top);
      }
    }
  } else {
    if (!onlyScrollIfNeeded) {
      alignWithTop = alignWithTop === void 0 ? true : !!alignWithTop;
      if (alignWithTop) {
        util.scrollTop(container, containerScroll.top + diffTop.top);
      } else {
        util.scrollTop(container, containerScroll.top + diffBottom.top);
      }
    }
  }
  if (allowHorizontalScroll) {
    if (diffTop.left < 0 || diffBottom.left > 0) {
      if (alignWithLeft === true) {
        util.scrollLeft(container, containerScroll.left + diffTop.left);
      } else if (alignWithLeft === false) {
        util.scrollLeft(container, containerScroll.left + diffBottom.left);
      } else {
        if (diffTop.left < 0) {
          util.scrollLeft(container, containerScroll.left + diffTop.left);
        } else {
          util.scrollLeft(container, containerScroll.left + diffBottom.left);
        }
      }
    } else {
      if (!onlyScrollIfNeeded) {
        alignWithLeft = alignWithLeft === void 0 ? true : !!alignWithLeft;
        if (alignWithLeft) {
          util.scrollLeft(container, containerScroll.left + diffTop.left);
        } else {
          util.scrollLeft(container, containerScroll.left + diffBottom.left);
        }
      }
    }
  }
}
function hasClass(node, className) {
  if (node.classList) {
    return node.classList.contains(className);
  }
  var originClass = node.className;
  return " ".concat(originClass, " ").indexOf(" ".concat(className, " ")) > -1;
}
var SHOW_ALL = "SHOW_ALL";
var SHOW_PARENT = "SHOW_PARENT";
var SHOW_CHILD = "SHOW_CHILD";
const { createVNode: _createVNode$A } = await importShared("vue");
var warnDeprecatedLabel = false;
function findPopupContainer(node, prefixClass) {
  var current2 = node;
  while (current2) {
    if (hasClass(current2, prefixClass)) {
      return current2;
    }
    current2 = current2.parentNode;
  }
  return null;
}
function toTitle(title) {
  if (typeof title === "string") {
    return title;
  }
  return null;
}
function toArray(data79) {
  if (data79 === void 0 || data79 === null) return [];
  return Array.isArray(data79) ? data79 : [data79];
}
function createRef() {
  var func = function setRef(node) {
    func.current = node;
  };
  return func;
}
var UNSELECTABLE_STYLE = {
  userSelect: "none",
  WebkitUserSelect: "none"
};
var UNSELECTABLE_ATTRIBUTE = {
  unselectable: "unselectable"
};
function flatToHierarchy(positionList) {
  if (!positionList.length) {
    return [];
  }
  var entrances = {};
  var posMap = {};
  var parsedList = positionList.slice().map(function(entity) {
    var clone4 = _extends$1(_extends$1({}, entity), {
      fields: entity.pos.split("-")
    });
    delete clone4.children;
    return clone4;
  });
  parsedList.forEach(function(entity) {
    posMap[entity.pos] = entity;
  });
  parsedList.sort(function(a2, b2) {
    return a2.fields.length - b2.fields.length;
  });
  parsedList.forEach(function(entity) {
    var parentPos = entity.fields.slice(0, -1).join("-");
    var parentEntity = posMap[parentPos];
    if (!parentEntity) {
      entrances[entity.pos] = entity;
    } else {
      parentEntity.children = parentEntity.children || [];
      parentEntity.children.push(entity);
    }
    delete entity.key;
    delete entity.fields;
  });
  return Object.keys(entrances).map(function(key2) {
    return entrances[key2];
  });
}
var ariaId = 0;
function generateAriaId(prefix) {
  ariaId += 1;
  return "".concat(prefix, "_").concat(ariaId);
}
function isLabelInValue(props2) {
  var treeCheckable = props2.treeCheckable, treeCheckStrictly = props2.treeCheckStrictly, labelInValue = props2.labelInValue;
  if (treeCheckable && treeCheckStrictly) {
    return true;
  }
  return labelInValue || false;
}
function parseSimpleTreeData(treeData, _ref) {
  var id2 = _ref.id, pId = _ref.pId, rootPId = _ref.rootPId;
  var keyNodes = {};
  var rootNodeList = [];
  var nodeList = treeData.map(function(node) {
    var clone4 = _extends$1({}, node);
    var key2 = clone4[id2];
    keyNodes[key2] = clone4;
    clone4.key = clone4.key || key2;
    return clone4;
  });
  nodeList.forEach(function(node) {
    var parentKey = node[pId];
    var parent2 = keyNodes[parentKey];
    if (parent2) {
      parent2.children = parent2.children || [];
      parent2.children.push(node);
    }
    if (parentKey === rootPId || !parent2 && rootPId === null) {
      rootNodeList.push(node);
    }
  });
  return rootNodeList;
}
function isPosRelated(pos1, pos2) {
  var fields1 = pos1.split("-");
  var fields2 = pos2.split("-");
  var minLen = Math.min(fields1.length, fields2.length);
  for (var i2 = 0; i2 < minLen; i2 += 1) {
    if (fields1[i2] !== fields2[i2]) {
      return false;
    }
  }
  return true;
}
function cleanEntity(_ref2) {
  var node = _ref2.node, pos = _ref2.pos, children = _ref2.children;
  var instance = {
    node,
    pos
  };
  if (children) {
    instance.children = children.map(cleanEntity);
  }
  return instance;
}
function getFilterTree(treeNodes, searchValue2, filterFunc, valueEntities, Component) {
  if (!searchValue2) {
    return null;
  }
  function mapFilteredNodeToData(node) {
    if (!node || isEmptyElement(node)) return null;
    var match5 = false;
    if (filterFunc(searchValue2, node)) {
      match5 = true;
    }
    var children = getSlot(node);
    children = ((typeof children === "function" ? children() : children) || []).map(mapFilteredNodeToData).filter(function(n2) {
      return n2;
    });
    if (children.length || match5) {
      return _createVNode$A(Component, _objectSpread2$2(_objectSpread2$2({}, node.props), {}, {
        "key": valueEntities[getPropsData(node).value].key
      }), {
        default: function _default8() {
          return [children];
        }
      });
    }
    return null;
  }
  return treeNodes.map(mapFilteredNodeToData).filter(function(node) {
    return node;
  });
}
function formatInternalValue(value26, props2) {
  var valueList = toArray(value26);
  if (isLabelInValue(props2)) {
    return valueList.map(function(val) {
      if (_typeof$3(val) !== "object" || !val) {
        return {
          value: "",
          label: ""
        };
      }
      return val;
    });
  }
  return valueList.map(function(val) {
    return {
      value: val
    };
  });
}
function getLabel2(wrappedValue, entity, treeNodeLabelProp) {
  if (wrappedValue.label) {
    return wrappedValue.label;
  }
  if (entity) {
    var props2 = getPropsData(entity.node);
    if (Object.keys(props2).length) {
      return props2[treeNodeLabelProp];
    }
  }
  return wrappedValue.value;
}
function formatSelectorValue(valueList, props2, valueEntities) {
  var treeNodeLabelProp = props2.treeNodeLabelProp, treeCheckable = props2.treeCheckable, treeCheckStrictly = props2.treeCheckStrictly, showCheckedStrategy = props2.showCheckedStrategy;
  if (treeCheckable && !treeCheckStrictly) {
    var values = {};
    valueList.forEach(function(wrappedValue) {
      values[wrappedValue.value] = wrappedValue;
    });
    var hierarchyList = flatToHierarchy(valueList.map(function(_ref3) {
      var value26 = _ref3.value;
      return valueEntities[value26];
    }));
    if (showCheckedStrategy === SHOW_PARENT) {
      return hierarchyList.map(function(_ref4) {
        var node = _ref4.node;
        var value26 = getPropsData(node).value;
        return {
          label: getLabel2(values[value26], valueEntities[value26], treeNodeLabelProp),
          value: value26
        };
      });
    }
    if (showCheckedStrategy === SHOW_CHILD) {
      var targetValueList = [];
      var traverse = function traverse2(_ref5) {
        var node = _ref5.node, children = _ref5.children;
        var value26 = getPropsData(node).value;
        if (!children || children.length === 0) {
          targetValueList.push({
            label: getLabel2(values[value26], valueEntities[value26], treeNodeLabelProp),
            value: value26
          });
          return;
        }
        children.forEach(function(entity) {
          traverse2(entity);
        });
      };
      hierarchyList.forEach(function(entity) {
        traverse(entity);
      });
      return targetValueList;
    }
  }
  return valueList.map(function(wrappedValue) {
    return {
      label: getLabel2(wrappedValue, valueEntities[wrappedValue.value], treeNodeLabelProp),
      value: wrappedValue.value
    };
  });
}
function processProps(props2) {
  var title = props2.title, label = props2.label, key2 = props2.key, value26 = props2.value;
  var cloneProps = _extends$1({}, props2);
  if (label && !title) {
    if (!warnDeprecatedLabel) {
      warning$3(false, "'label' in treeData is deprecated. Please use 'title' instead.");
      warnDeprecatedLabel = true;
    }
    cloneProps.title = label;
  }
  if (!key2 && (key2 === void 0 || key2 === null)) {
    cloneProps.key = value26;
  }
  return cloneProps;
}
function convertDataToTree(treeData) {
  return convertDataToTree$1(treeData, {
    processProps
  });
}
function initWrapper(wrapper) {
  return _extends$1(_extends$1({}, wrapper), {
    valueEntities: {}
  });
}
function processEntity(entity, wrapper) {
  var value26 = getPropsData(entity.node).value;
  entity.value = value26;
  var currentEntity = wrapper.valueEntities[value26];
  if (currentEntity) {
    warning$3(false, "Conflict! value of node '".concat(entity.key, "' (").concat(value26, ") has already used by node '").concat(currentEntity.key, "'."));
  }
  wrapper.valueEntities[value26] = entity;
}
function convertTreeToEntities(treeNodes) {
  return convertTreeToEntities$1(treeNodes, {
    initWrapper,
    processEntity
  });
}
function getHalfCheckedKeys(valueList, valueEntities) {
  var values = {};
  valueList.forEach(function(_ref6) {
    var value26 = _ref6.value;
    values[value26] = false;
  });
  valueList.forEach(function(_ref7) {
    var value26 = _ref7.value;
    var current2 = valueEntities[value26];
    while (current2 && current2.parent) {
      var parentValue = current2.parent.value;
      if (parentValue in values) break;
      values[parentValue] = true;
      current2 = current2.parent;
    }
  });
  return Object.keys(values).filter(function(value26) {
    return values[value26];
  }).map(function(value26) {
    return valueEntities[value26].key;
  });
}
var conductCheck = conductCheck$1;
const { createVNode: _createVNode$z } = await importShared("vue");
var BUILT_IN_PLACEMENTS = {
  bottomLeft: {
    points: ["tl", "bl"],
    offset: [0, 4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    },
    ignoreShake: true
  },
  topLeft: {
    points: ["bl", "tl"],
    offset: [0, -4],
    overflow: {
      adjustX: 0,
      adjustY: 1
    },
    ignoreShake: true
  }
};
var SelectTrigger = {
  name: "SelectTrigger",
  inheritAttrs: false,
  props: {
    // Pass by outside user props
    disabled: PropTypes.looseBool,
    showSearch: PropTypes.looseBool,
    prefixCls: PropTypes.string,
    dropdownPopupAlign: PropTypes.object,
    dropdownClassName: PropTypes.string,
    dropdownStyle: PropTypes.object,
    transitionName: PropTypes.string,
    animation: PropTypes.string,
    getPopupContainer: PropTypes.func,
    dropdownMatchSelectWidth: PropTypes.looseBool,
    // Pass by Select
    isMultiple: PropTypes.looseBool,
    dropdownPrefixCls: PropTypes.string,
    dropdownVisibleChange: PropTypes.func,
    popupElement: PropTypes.any,
    open: PropTypes.looseBool
  },
  created: function created20() {
    this.triggerRef = createRef();
  },
  methods: {
    getDropdownTransitionName: function getDropdownTransitionName() {
      var _this$$props = this.$props, transitionName2 = _this$$props.transitionName, animation2 = _this$$props.animation, dropdownPrefixCls = _this$$props.dropdownPrefixCls;
      if (!transitionName2 && animation2) {
        return "".concat(dropdownPrefixCls, "-").concat(animation2);
      }
      return transitionName2;
    },
    forcePopupAlign: function forcePopupAlign2() {
      var $trigger = this.triggerRef.current;
      if ($trigger) {
        $trigger.forcePopupAlign();
      }
    }
  },
  render: function render147() {
    var _classNames, _this = this;
    var _this$$props2 = this.$props, disabled = _this$$props2.disabled, isMultiple2 = _this$$props2.isMultiple, dropdownPopupAlign = _this$$props2.dropdownPopupAlign, dropdownMatchSelectWidth = _this$$props2.dropdownMatchSelectWidth, dropdownClassName = _this$$props2.dropdownClassName, dropdownStyle = _this$$props2.dropdownStyle, dropdownVisibleChange2 = _this$$props2.dropdownVisibleChange, getPopupContainer = _this$$props2.getPopupContainer, dropdownPrefixCls = _this$$props2.dropdownPrefixCls, popupElement = _this$$props2.popupElement, open6 = _this$$props2.open;
    var stretch;
    if (dropdownMatchSelectWidth !== false) {
      stretch = dropdownMatchSelectWidth ? "width" : "minWidth";
    }
    return _createVNode$z(Trigger, {
      "ref": this.triggerRef,
      "action": disabled ? [] : ["click"],
      "popupPlacement": "bottomLeft",
      "builtinPlacements": BUILT_IN_PLACEMENTS,
      "popupAlign": dropdownPopupAlign,
      "prefixCls": dropdownPrefixCls,
      "popupTransitionName": this.getDropdownTransitionName(),
      "onPopupVisibleChange": dropdownVisibleChange2,
      "popup": popupElement,
      "popupVisible": open6,
      "getPopupContainer": getPopupContainer,
      "stretch": stretch,
      "popupClassName": classNames(dropdownClassName, (_classNames = {}, _defineProperty$U(_classNames, "".concat(dropdownPrefixCls, "--multiple"), isMultiple2), _defineProperty$U(_classNames, "".concat(dropdownPrefixCls, "--single"), !isMultiple2), _classNames)),
      "popupStyle": dropdownStyle
    }, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
};
const { createVNode: _createVNode$y } = await importShared("vue");
const { inject: inject$8 } = await importShared("vue");
var selectorPropTypes = function selectorPropTypes2() {
  return {
    prefixCls: PropTypes.string,
    open: PropTypes.looseBool,
    selectorValueList: PropTypes.array,
    allowClear: PropTypes.looseBool,
    showArrow: PropTypes.looseBool,
    // onClick: PropTypes.func,
    // onBlur: PropTypes.func,
    // onFocus: PropTypes.func,
    removeSelected: PropTypes.func,
    choiceTransitionName: PropTypes.string,
    // Pass by component
    ariaId: PropTypes.string,
    inputIcon: PropTypes.any,
    clearIcon: PropTypes.any,
    removeIcon: PropTypes.any,
    placeholder: PropTypes.any,
    disabled: PropTypes.looseBool,
    focused: PropTypes.looseBool,
    isMultiple: PropTypes.looseBool,
    showSearch: PropTypes.looseBool,
    searchValue: PropTypes.string
  };
};
function noop() {
}
function generateSelector() {
  var BaseSelector = {
    name: "BaseSelector",
    inheritAttrs: false,
    mixins: [BaseMixin],
    props: initDefaultProps$1(_extends$1(_extends$1({}, selectorPropTypes()), {
      // Pass by HOC
      renderSelection: PropTypes.func.isRequired,
      renderPlaceholder: PropTypes.func,
      tabindex: PropTypes.oneOfType([PropTypes.number, PropTypes.string])
    }), {
      tabindex: 0
    }),
    setup: function setup161() {
      return {
        vcTreeSelect: inject$8("vcTreeSelect", {})
      };
    },
    created: function created26() {
      this.domRef = createRef();
    },
    methods: {
      onFocus: function onFocus6(e2) {
        var focused = this.$props.focused;
        var onSelectorFocus2 = this.vcTreeSelect.onSelectorFocus;
        if (!focused) {
          onSelectorFocus2();
        }
        this.__emit("focus", e2);
      },
      onBlur: function onBlur7(e2) {
        var onSelectorBlur2 = this.vcTreeSelect.onSelectorBlur;
        onSelectorBlur2();
        this.__emit("blur", e2);
      },
      focus: function focus27() {
        this.domRef.current.focus();
      },
      blur: function blur24() {
        this.domRef.current.blur();
      },
      renderClear: function renderClear() {
        var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, allowClear = _this$$props.allowClear, selectorValueList = _this$$props.selectorValueList;
        var onSelectorClear2 = this.vcTreeSelect.onSelectorClear;
        if (!allowClear || !selectorValueList.length) {
          return null;
        }
        var clearIcon = getComponent(this, "clearIcon");
        return _createVNode$y("span", {
          "key": "clear",
          "unselectable": "on",
          "aria-hidden": "true",
          "style": "user-select: none;",
          "class": "".concat(prefixCls2, "-clear"),
          "onClick": onSelectorClear2
        }, [clearIcon]);
      },
      renderArrow: function renderArrow() {
        var _this$$props2 = this.$props, prefixCls2 = _this$$props2.prefixCls, showArrow = _this$$props2.showArrow;
        if (!showArrow) {
          return null;
        }
        var inputIcon = getComponent(this, "inputIcon");
        return _createVNode$y("span", {
          "key": "arrow",
          "class": "".concat(prefixCls2, "-arrow"),
          "style": {
            outline: "none",
            userSelect: "none"
          }
        }, [inputIcon]);
      }
    },
    render: function render165() {
      var _classNames;
      var _this$$props3 = this.$props, prefixCls2 = _this$$props3.prefixCls, open6 = _this$$props3.open, focused = _this$$props3.focused, disabled = _this$$props3.disabled, allowClear = _this$$props3.allowClear, ariaId2 = _this$$props3.ariaId, renderSelection3 = _this$$props3.renderSelection, renderPlaceholder = _this$$props3.renderPlaceholder, tabindex = _this$$props3.tabindex, isMultiple2 = _this$$props3.isMultiple, showArrow = _this$$props3.showArrow, showSearch = _this$$props3.showSearch;
      var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style, _this$$attrs$onClick = _this$$attrs.onClick, onClick7 = _this$$attrs$onClick === void 0 ? noop : _this$$attrs$onClick;
      var onSelectorKeyDown = this.vcTreeSelect.onSelectorKeyDown;
      var myTabIndex = tabindex;
      if (disabled) {
        myTabIndex = null;
      }
      var mergedClassName = classNames(prefixCls2, className, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-focused"), open6 || focused), _defineProperty$U(_classNames, "".concat(prefixCls2, "-multiple"), isMultiple2), _defineProperty$U(_classNames, "".concat(prefixCls2, "-single"), !isMultiple2), _defineProperty$U(_classNames, "".concat(prefixCls2, "-allow-clear"), allowClear), _defineProperty$U(_classNames, "".concat(prefixCls2, "-show-arrow"), showArrow), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, "".concat(prefixCls2, "-open"), open6), _defineProperty$U(_classNames, "".concat(prefixCls2, "-show-search"), showSearch), _classNames));
      return _createVNode$y("div", {
        "style": style3,
        "onClick": onClick7,
        "class": mergedClassName,
        "ref": this.domRef,
        "role": "combobox",
        "aria-expanded": open6,
        "aria-owns": open6 ? ariaId2 : void 0,
        "aria-controls": open6 ? ariaId2 : void 0,
        "aria-haspopup": "listbox",
        "aria-disabled": disabled,
        "tabindex": myTabIndex,
        "onFocus": this.onFocus,
        "onBlur": this.onBlur,
        "onKeydown": onSelectorKeyDown
      }, [_createVNode$y("span", {
        "class": "".concat(prefixCls2, "-selector")
      }, [renderSelection3(), renderPlaceholder && renderPlaceholder()]), this.renderArrow(), this.renderClear()]);
    }
  };
  return BaseSelector;
}
const { createVNode: _createVNode$x } = await importShared("vue");
const { defineComponent: defineComponent$b, ref: ref$3, withDirectives } = await importShared("vue");
var BaseInput = defineComponent$b({
  props: {
    value: PropTypes.string.def("")
  },
  emits: ["change", "input"],
  setup: function setup149(_p, _ref) {
    var emit = _ref.emit;
    var inputRef = ref$3(null);
    var handleChange22 = function handleChange23(e2) {
      var composing = e2.target.composing;
      if (e2.isComposing || composing) {
        emit("input", e2);
      } else {
        emit("input", e2);
        emit("change", e2);
      }
    };
    return {
      inputRef,
      focus: function focus27() {
        if (inputRef.value) {
          inputRef.value.focus();
        }
      },
      blur: function blur24() {
        if (inputRef.value) {
          inputRef.value.blur();
        }
      },
      handleChange: handleChange22
    };
  },
  render: function render148() {
    return withDirectives(_createVNode$x("input", _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({}, this.$props), this.$attrs), {}, {
      "onInput": this.handleChange,
      "onChange": this.handleChange,
      "ref": "inputRef"
    }), null), [[antInput]]);
  }
});
const { createTextVNode: _createTextVNode, createVNode: _createVNode$w, Fragment: _Fragment$3 } = await importShared("vue");
const { inject: inject$7, ref: ref$2, onMounted: onMounted$2, computed: computed$1, watch: watch$2 } = await importShared("vue");
var SearchInput = {
  name: "SearchInput",
  inheritAttrs: false,
  props: {
    open: PropTypes.looseBool,
    searchValue: PropTypes.string,
    prefixCls: PropTypes.string,
    disabled: PropTypes.looseBool,
    renderPlaceholder: PropTypes.func,
    needAlign: PropTypes.looseBool,
    ariaId: PropTypes.string,
    isMultiple: PropTypes.looseBool.def(true),
    showSearch: PropTypes.looseBool
  },
  emits: ["mirrorSearchValueChange"],
  setup: function setup150(props2, _ref) {
    var emit = _ref.emit;
    var measureRef = ref$2();
    var inputWidth = ref$2(0);
    var mirrorSearchValue = ref$2(props2.searchValue);
    watch$2(computed$1(function() {
      return props2.searchValue;
    }), function() {
      mirrorSearchValue.value = props2.searchValue;
    });
    watch$2(mirrorSearchValue, function() {
      emit("mirrorSearchValueChange", mirrorSearchValue.value);
    }, {
      immediate: true
    });
    onMounted$2(function() {
      if (props2.isMultiple) {
        watch$2(mirrorSearchValue, function() {
          inputWidth.value = measureRef.value.scrollWidth;
        }, {
          flush: "post",
          immediate: true
        });
      }
    });
    return {
      measureRef,
      inputWidth,
      vcTreeSelect: inject$7("vcTreeSelect", {}),
      mirrorSearchValue
    };
  },
  created: function created21() {
    this.inputRef = createRef();
    this.prevProps = _extends$1({}, this.$props);
  },
  mounted: function mounted40() {
    var _this = this;
    this.$nextTick(function() {
      var open6 = _this.$props.open;
      if (open6) {
        _this.focus(true);
      }
    });
  },
  updated: function updated25() {
    var _this2 = this;
    var open6 = this.$props.open;
    var prevProps = this.prevProps;
    this.$nextTick(function() {
      if (open6 && prevProps.open !== open6) {
        _this2.focus();
      }
      _this2.prevProps = _extends$1({}, _this2.$props);
    });
  },
  methods: {
    /**
     * Need additional timeout for focus cause parent dom is not ready when didMount trigger
     */
    focus: function focus22(isDidMount) {
      var _this3 = this;
      if (this.inputRef.current) {
        if (isDidMount) {
          setTimeout(function() {
            _this3.inputRef.current.focus();
          }, 0);
        } else {
          this.inputRef.current.focus();
        }
      }
    },
    blur: function blur19() {
      if (this.inputRef.current) {
        this.inputRef.current.blur();
      }
    },
    handleInputChange: function handleInputChange2(e2) {
      var _e$target = e2.target, value26 = _e$target.value, composing = _e$target.composing;
      var _this$searchValue = this.searchValue, searchValue2 = _this$searchValue === void 0 ? "" : _this$searchValue;
      if (e2.isComposing || composing || searchValue2 === value26) {
        this.mirrorSearchValue = value26;
        return;
      }
      this.vcTreeSelect.onSearchInputChange(e2);
    }
  },
  render: function render149() {
    var _this$$props = this.$props, searchValue2 = _this$$props.searchValue, prefixCls2 = _this$$props.prefixCls, disabled = _this$$props.disabled, renderPlaceholder = _this$$props.renderPlaceholder, open6 = _this$$props.open, ariaId2 = _this$$props.ariaId, isMultiple2 = _this$$props.isMultiple, showSearch = _this$$props.showSearch;
    var onSearchInputKeyDown2 = this.vcTreeSelect.onSearchInputKeyDown, handleInputChange3 = this.handleInputChange, mirrorSearchValue = this.mirrorSearchValue, inputWidth = this.inputWidth;
    return _createVNode$w(_Fragment$3, null, [_createVNode$w("span", {
      "class": "".concat(prefixCls2, "-selection-search"),
      "style": isMultiple2 ? {
        width: inputWidth + "px"
      } : {}
    }, [_createVNode$w(BaseInput, {
      "type": "text",
      "ref": this.inputRef,
      "onChange": handleInputChange3,
      "onKeydown": onSearchInputKeyDown2,
      "value": searchValue2,
      "disabled": disabled,
      "readonly": !showSearch,
      "class": "".concat(prefixCls2, "-selection-search-input"),
      "aria-label": "filter select",
      "aria-autocomplete": "list",
      "aria-controls": open6 ? ariaId2 : void 0,
      "aria-multiline": "false"
    }, null), isMultiple2 ? _createVNode$w("span", {
      "ref": "measureRef",
      "class": "".concat(prefixCls2, "-selection-search-mirror"),
      "aria-hidden": true
    }, [mirrorSearchValue, _createTextVNode(" ")]) : null]), renderPlaceholder && !mirrorSearchValue ? renderPlaceholder() : null]);
  }
};
const { createVNode: _createVNode$v } = await importShared("vue");
var Selector$1 = generateSelector();
var SingleSelector = {
  name: "SingleSelector",
  inheritAttrs: false,
  props: selectorPropTypes(),
  created: function created22() {
    this.selectorRef = createRef();
    this.inputRef = createRef();
  },
  data: function data72() {
    return {
      mirrorSearchValue: this.searchValue
    };
  },
  watch: {
    searchValue: function searchValue(val) {
      this.mirrorSearchValue = val;
    }
  },
  methods: {
    onPlaceholderClick: function onPlaceholderClick() {
      this.inputRef.current.focus();
    },
    focus: function focus23() {
      this.selectorRef.current.focus();
    },
    blur: function blur20() {
      this.selectorRef.current.blur();
    },
    _renderPlaceholder: function _renderPlaceholder() {
      var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, placeholder = _this$$props.placeholder, searchPlaceholder = _this$$props.searchPlaceholder, selectorValueList = _this$$props.selectorValueList;
      var currentPlaceholder = placeholder || searchPlaceholder;
      if (!currentPlaceholder) return null;
      var hidden = this.mirrorSearchValue || selectorValueList.length;
      return _createVNode$v("span", {
        "style": {
          display: hidden ? "none" : "block"
        },
        "onClick": this.onPlaceholderClick,
        "class": "".concat(prefixCls2, "-selection-placeholder")
      }, [currentPlaceholder]);
    },
    onMirrorSearchValueChange: function onMirrorSearchValueChange(value26) {
      this.mirrorSearchValue = value26;
    },
    renderSelection: function renderSelection() {
      var _this$$props2 = this.$props, selectorValueList = _this$$props2.selectorValueList, prefixCls2 = _this$$props2.prefixCls;
      var selectedValueNodes = [];
      if (selectorValueList.length && !this.mirrorSearchValue) {
        var _selectorValueList$ = selectorValueList[0], label = _selectorValueList$.label, value26 = _selectorValueList$.value;
        selectedValueNodes.push(_createVNode$v("span", {
          "key": value26,
          "title": toTitle(label),
          "class": "".concat(prefixCls2, "-selection-item")
        }, [label || value26]));
      }
      selectedValueNodes.push(_createVNode$v(SearchInput, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({}, this.$props), this.$attrs), {}, {
        "ref": this.inputRef,
        "isMultiple": false,
        "onMirrorSearchValueChange": this.onMirrorSearchValueChange
      }), null));
      return selectedValueNodes;
    }
  },
  render: function render150() {
    var props2 = _extends$1(_extends$1(_extends$1({}, getOptionProps(this)), this.$attrs), {
      renderSelection: this.renderSelection,
      renderPlaceholder: this._renderPlaceholder,
      ref: this.selectorRef
    });
    return _createVNode$v(Selector$1, props2, null);
  }
};
const { createVNode: _createVNode$u } = await importShared("vue");
var Selection = {
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: {
    prefixCls: PropTypes.string,
    maxTagTextLength: PropTypes.number,
    // onRemove: PropTypes.func,
    label: PropTypes.any,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
    removeIcon: PropTypes.any
  },
  methods: {
    onRemove: function onRemove(event) {
      var value26 = this.$props.value;
      this.__emit("remove", event, value26);
      event.stopPropagation();
    }
  },
  render: function render151() {
    var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, maxTagTextLength = _this$$props.maxTagTextLength, label = _this$$props.label, value26 = _this$$props.value;
    var content = label || value26;
    if (maxTagTextLength && typeof content === "string" && content.length > maxTagTextLength) {
      content = "".concat(content.slice(0, maxTagTextLength), "...");
    }
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style, onRemove2 = _this$$attrs.onRemove;
    return _createVNode$u("span", _objectSpread2$2(_objectSpread2$2({
      "style": _extends$1(_extends$1({}, UNSELECTABLE_STYLE), style3)
    }, UNSELECTABLE_ATTRIBUTE), {}, {
      "role": "menuitem",
      "class": classNames("".concat(prefixCls2, "-selection-item"), className),
      "title": toTitle(label)
    }), [_createVNode$u("span", {
      "class": "".concat(prefixCls2, "-selection-item-content")
    }, [content]), onRemove2 && _createVNode$u("span", {
      "class": "".concat(prefixCls2, "-selection-item-remove"),
      "onClick": this.onRemove
    }, [getComponent(this, "removeIcon")])]);
  }
};
const { createVNode: _createVNode$t } = await importShared("vue");
const { inject: inject$6 } = await importShared("vue");
var TREE_SELECT_EMPTY_VALUE_KEY = "RC_TREE_SELECT_EMPTY_VALUE_KEY";
var Selector = generateSelector();
var MultipleSelector = {
  name: "MultipleSelector",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: _extends$1(_extends$1(_extends$1({}, selectorPropTypes()), SearchInput.props), {
    selectorValueList: PropTypes.array,
    disabled: PropTypes.looseBool,
    labelInValue: PropTypes.looseBool,
    maxTagCount: PropTypes.number,
    maxTagPlaceholder: PropTypes.any
  }),
  setup: function setup151() {
    return {
      vcTreeSelect: inject$6("vcTreeSelect", {})
    };
  },
  created: function created23() {
    this.inputRef = createRef();
  },
  methods: {
    onPlaceholderClick: function onPlaceholderClick2() {
      this.inputRef.current.focus();
    },
    focus: function focus24() {
      this.inputRef.current.focus();
    },
    blur: function blur21() {
      this.inputRef.current.blur();
    },
    _renderPlaceholder: function _renderPlaceholder2() {
      var _this$$props = this.$props, prefixCls2 = _this$$props.prefixCls, placeholder = _this$$props.placeholder, searchPlaceholder = _this$$props.searchPlaceholder, searchValue2 = _this$$props.searchValue, selectorValueList = _this$$props.selectorValueList;
      var currentPlaceholder = placeholder || searchPlaceholder;
      if (!currentPlaceholder) return null;
      var hidden = searchValue2 || selectorValueList.length;
      return _createVNode$t("span", {
        "style": {
          display: hidden ? "none" : "block"
        },
        "onClick": this.onPlaceholderClick,
        "class": "".concat(prefixCls2, "-selection-placeholder")
      }, [currentPlaceholder]);
    },
    onChoiceAnimationLeave: function onChoiceAnimationLeave() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.__emit.apply(this, ["choiceAnimationLeave"].concat(args));
    },
    renderSelection: function renderSelection2() {
      var _this = this;
      var _this$$props2 = this.$props, selectorValueList = _this$$props2.selectorValueList, labelInValue = _this$$props2.labelInValue, maxTagCount = _this$$props2.maxTagCount;
      var children = getSlot(this);
      var onMultipleSelectorRemove2 = this.vcTreeSelect.onMultipleSelectorRemove;
      var myValueList = selectorValueList;
      if (maxTagCount >= 0) {
        myValueList = selectorValueList.slice(0, maxTagCount);
      }
      var selectedValueNodes = myValueList.map(function(_ref) {
        var label = _ref.label, value26 = _ref.value;
        return _createVNode$t(Selection, _objectSpread2$2(_objectSpread2$2({}, _extends$1(_extends$1({}, _this.$props), {
          label,
          value: value26,
          onRemove: onMultipleSelectorRemove2
        })), {}, {
          "key": value26 || TREE_SELECT_EMPTY_VALUE_KEY
        }), {
          default: function _default8() {
            return [children];
          }
        });
      });
      if (maxTagCount >= 0 && maxTagCount < selectorValueList.length) {
        var content = "+ ".concat(selectorValueList.length - maxTagCount, " ...");
        var maxTagPlaceholder = getComponent(this, "maxTagPlaceholder", {}, false);
        if (typeof maxTagPlaceholder === "string") {
          content = maxTagPlaceholder;
        } else if (typeof maxTagPlaceholder === "function") {
          var restValueList = selectorValueList.slice(maxTagCount);
          content = maxTagPlaceholder(labelInValue ? restValueList : restValueList.map(function(_ref2) {
            var value26 = _ref2.value;
            return value26;
          }));
        }
        var restNodeSelect = _createVNode$t(Selection, _objectSpread2$2(_objectSpread2$2({}, _extends$1(_extends$1({}, this.$props), {
          label: content,
          value: null
        })), {}, {
          "key": "rc-tree-select-internal-max-tag-counter"
        }), {
          default: function _default8() {
            return [children];
          }
        });
        selectedValueNodes.push(restNodeSelect);
      }
      selectedValueNodes.push(_createVNode$t(SearchInput, _objectSpread2$2(_objectSpread2$2(_objectSpread2$2({
        "key": "SearchInput"
      }, this.$props), this.$attrs), {}, {
        "ref": this.inputRef
      }), {
        default: function _default8() {
          return [children];
        }
      }));
      return selectedValueNodes;
    }
  },
  render: function render152() {
    var _this2 = this;
    return _createVNode$t(Selector, _extends$1(_extends$1(_extends$1({}, this.$props), this.$attrs), {
      tabindex: -1,
      showArrow: false,
      renderSelection: this.renderSelection,
      renderPlaceholder: this._renderPlaceholder
    }), {
      default: function _default8() {
        return [getSlot(_this2)];
      }
    });
  }
};
const { createVNode: _createVNode$s, resolveDirective: _resolveDirective$5 } = await importShared("vue");
var TreeNode$1 = Tree$1.TreeNode;
function SelectNode(_2, _ref) {
  var attrs = _ref.attrs, slots = _ref.slots;
  return _createVNode$s(TreeNode$1, attrs, slots);
}
SelectNode.isTreeNode = true;
SelectNode.inheritAttrs = false;
SelectNode.displayName = "ATreeSelectNode";
const { createVNode: _createVNode$r } = await importShared("vue");
const { inject: inject$5 } = await importShared("vue");
function getDerivedState2(nextProps, prevState) {
  var _ref = prevState || {}, _ref$_prevProps = _ref._prevProps, prevProps = _ref$_prevProps === void 0 ? {} : _ref$_prevProps, loadedKeys = _ref._loadedKeys, expandedKeyList = _ref._expandedKeyList, cachedExpandedKeyList = _ref._cachedExpandedKeyList;
  var valueList = nextProps.valueList, valueEntities = nextProps.valueEntities, keyEntities = nextProps.keyEntities, treeExpandedKeys = nextProps.treeExpandedKeys, filteredTreeNodes = nextProps.filteredTreeNodes, upperSearchValue = nextProps.upperSearchValue;
  var newState = {
    _prevProps: _extends$1({}, nextProps)
  };
  if (valueList !== prevProps.valueList) {
    newState._keyList = valueList.map(function(_ref2) {
      var value26 = _ref2.value;
      return valueEntities[value26];
    }).filter(function(entity) {
      return entity;
    }).map(function(_ref3) {
      var key2 = _ref3.key;
      return key2;
    });
  }
  if (!treeExpandedKeys && filteredTreeNodes && filteredTreeNodes.length && filteredTreeNodes !== prevProps.filteredTreeNodes) {
    newState._expandedKeyList = _toConsumableArray(keyEntities.keys());
  }
  if (upperSearchValue && !prevProps.upperSearchValue) {
    newState._cachedExpandedKeyList = expandedKeyList;
  } else if (!upperSearchValue && prevProps.upperSearchValue && !treeExpandedKeys) {
    newState._expandedKeyList = cachedExpandedKeyList || [];
    newState._cachedExpandedKeyList = [];
  }
  if (prevProps.treeExpandedKeys !== treeExpandedKeys) {
    newState._expandedKeyList = treeExpandedKeys;
  }
  if (nextProps.loadData) {
    newState._loadedKeys = loadedKeys.filter(function(key2) {
      return keyEntities.has(key2);
    });
  }
  return newState;
}
var BasePopup = {
  mixins: [BaseMixin],
  inheritAttrs: false,
  name: "BasePopup",
  props: {
    prefixCls: PropTypes.string,
    upperSearchValue: PropTypes.string,
    valueList: PropTypes.array,
    searchHalfCheckedKeys: PropTypes.array,
    valueEntities: PropTypes.object,
    keyEntities: Map,
    treeIcon: PropTypes.looseBool,
    treeLine: PropTypes.looseBool,
    treeNodeFilterProp: PropTypes.string,
    treeCheckable: PropTypes.any,
    treeCheckStrictly: PropTypes.looseBool,
    treeDefaultExpandAll: PropTypes.looseBool,
    treeDefaultExpandedKeys: PropTypes.array,
    treeExpandedKeys: PropTypes.array,
    loadData: PropTypes.func,
    multiple: PropTypes.looseBool,
    // onTreeExpand: PropTypes.func,
    searchValue: PropTypes.string,
    treeNodes: PropTypes.any,
    filteredTreeNodes: PropTypes.any,
    notFoundContent: PropTypes.any,
    ariaId: PropTypes.string,
    switcherIcon: PropTypes.any,
    // HOC
    renderSearch: PropTypes.func,
    // onTreeExpanded: PropTypes.func,
    __propsSymbol__: PropTypes.any
  },
  setup: function setup152() {
    return {
      vcTreeSelect: inject$5("vcTreeSelect", {})
    };
  },
  watch: {
    __propsSymbol__: function __propsSymbol__3() {
      var state = getDerivedState2(this.$props, this.$data);
      this.setState(state);
    }
  },
  data: function data73() {
    this.treeRef = createRef();
    warning$3(this.$props.__propsSymbol__, "must pass __propsSymbol__");
    var _this$$props = this.$props, treeDefaultExpandAll = _this$$props.treeDefaultExpandAll, treeDefaultExpandedKeys = _this$$props.treeDefaultExpandedKeys, keyEntities = _this$$props.keyEntities;
    var expandedKeyList = treeDefaultExpandedKeys;
    if (treeDefaultExpandAll) {
      expandedKeyList = _toConsumableArray(keyEntities.keys());
    }
    var state = {
      _keyList: [],
      _expandedKeyList: expandedKeyList,
      // Cache `expandedKeyList` when tree is in filter. This is used in `getDerivedState`
      _cachedExpandedKeyList: [],
      _loadedKeys: [],
      _prevProps: {}
    };
    return _extends$1(_extends$1({}, state), getDerivedState2(this.$props, state));
  },
  methods: {
    onTreeExpand: function onTreeExpand(expandedKeyList) {
      var _this = this;
      var treeExpandedKeys = this.$props.treeExpandedKeys;
      if (!treeExpandedKeys) {
        this.setState({
          _expandedKeyList: expandedKeyList
        }, function() {
          _this.__emit("treeExpanded");
        });
      }
      this.__emit("treeExpand", expandedKeyList);
    },
    onLoad: function onLoad(loadedKeys) {
      this.setState({
        _loadedKeys: loadedKeys
      });
    },
    getTree: function getTree() {
      return this.treeRef.current;
    },
    /**
     * Not pass `loadData` when searching. To avoid loop ajax call makes browser crash.
     */
    getLoadData: function getLoadData() {
      var _this$$props2 = this.$props, loadData = _this$$props2.loadData, upperSearchValue = _this$$props2.upperSearchValue;
      if (upperSearchValue) return null;
      return loadData;
    },
    /**
     * This method pass to Tree component which is used for add filtered class
     * in TreeNode > li
     */
    filterTreeNode: function filterTreeNode(treeNode) {
      var _this$$props3 = this.$props, upperSearchValue = _this$$props3.upperSearchValue, treeNodeFilterProp = _this$$props3.treeNodeFilterProp;
      var filterVal = treeNode[treeNodeFilterProp];
      if (typeof filterVal === "string") {
        return upperSearchValue && filterVal.toUpperCase().indexOf(upperSearchValue) !== -1;
      }
      return false;
    },
    renderNotFound: function renderNotFound() {
      var _this$$props4 = this.$props, prefixCls2 = _this$$props4.prefixCls, notFoundContent = _this$$props4.notFoundContent;
      return _createVNode$r("span", {
        "class": "".concat(prefixCls2, "-not-found")
      }, [notFoundContent]);
    }
  },
  render: function render153() {
    var _this$$data = this.$data, keyList = _this$$data._keyList, expandedKeyList = _this$$data._expandedKeyList, loadedKeys = _this$$data._loadedKeys;
    var _this$$props5 = this.$props, prefixCls2 = _this$$props5.prefixCls, treeNodes = _this$$props5.treeNodes, filteredTreeNodes = _this$$props5.filteredTreeNodes, treeIcon = _this$$props5.treeIcon, treeLine = _this$$props5.treeLine, treeCheckable = _this$$props5.treeCheckable, treeCheckStrictly = _this$$props5.treeCheckStrictly, multiple = _this$$props5.multiple, ariaId2 = _this$$props5.ariaId, renderSearch = _this$$props5.renderSearch, switcherIcon = _this$$props5.switcherIcon, searchHalfCheckedKeys = _this$$props5.searchHalfCheckedKeys;
    var _this$vcTreeSelect = this.vcTreeSelect, onPopupKeyDown = _this$vcTreeSelect.onPopupKeyDown, onTreeNodeSelect2 = _this$vcTreeSelect.onTreeNodeSelect, onTreeNodeCheck2 = _this$vcTreeSelect.onTreeNodeCheck;
    var loadData = this.getLoadData();
    var treeProps = {};
    if (treeCheckable) {
      treeProps.checkedKeys = keyList;
    } else {
      treeProps.selectedKeys = keyList;
    }
    var $notFound;
    var $treeNodes;
    if (filteredTreeNodes) {
      if (filteredTreeNodes.length) {
        treeProps.checkStrictly = true;
        $treeNodes = filteredTreeNodes;
        if (treeCheckable && !treeCheckStrictly) {
          treeProps.checkedKeys = {
            checked: keyList,
            halfChecked: searchHalfCheckedKeys
          };
        }
      } else {
        $notFound = this.renderNotFound();
      }
    } else if (!treeNodes || !treeNodes.length) {
      $notFound = this.renderNotFound();
    } else {
      $treeNodes = treeNodes;
    }
    var $tree;
    if ($notFound) {
      $tree = $notFound;
    } else {
      var treeAllProps = _extends$1(_extends$1({
        prefixCls: "".concat(prefixCls2, "-tree"),
        showIcon: treeIcon,
        showLine: treeLine,
        selectable: !treeCheckable,
        checkable: treeCheckable,
        checkStrictly: treeCheckStrictly,
        multiple,
        loadData,
        loadedKeys,
        expandedKeys: expandedKeyList,
        filterTreeNode: this.filterTreeNode,
        switcherIcon
      }, treeProps), {
        children: $treeNodes,
        onSelect: onTreeNodeSelect2,
        onCheck: onTreeNodeCheck2,
        onExpand: this.onTreeExpand,
        onLoad: this.onLoad
      });
      $tree = _createVNode$r(Tree$1, _objectSpread2$2(_objectSpread2$2({}, treeAllProps), {}, {
        "ref": this.treeRef,
        "__propsSymbol__": []
      }), null);
    }
    return _createVNode$r("div", {
      "role": "listbox",
      "id": ariaId2,
      "onKeydown": onPopupKeyDown,
      "tabindex": -1
    }, [renderSearch ? renderSearch() : null, $tree]);
  }
};
const { createVNode: _createVNode$q } = await importShared("vue");
const { defineComponent: defineComponent$a, provide: provide3 } = await importShared("vue");
function getWatch() {
  var keys2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
  var watch2 = {};
  keys2.forEach(function(k2) {
    watch2[k2] = function() {
      this.needSyncKeys[k2] = true;
    };
  });
  return watch2;
}
var Select = defineComponent$a({
  name: "Select",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1({
    prefixCls: PropTypes.string,
    prefixAria: PropTypes.string,
    multiple: PropTypes.looseBool,
    showArrow: PropTypes.looseBool,
    open: PropTypes.looseBool,
    value: PropTypes.any,
    autofocus: PropTypes.looseBool,
    defaultOpen: PropTypes.looseBool,
    defaultValue: PropTypes.any,
    showSearch: PropTypes.looseBool,
    placeholder: PropTypes.any,
    inputValue: PropTypes.string,
    searchValue: PropTypes.string,
    autoClearSearchValue: PropTypes.looseBool,
    searchPlaceholder: PropTypes.any,
    disabled: PropTypes.looseBool,
    children: PropTypes.any,
    labelInValue: PropTypes.looseBool,
    maxTagCount: PropTypes.number,
    maxTagPlaceholder: PropTypes.any,
    maxTagTextLength: PropTypes.number,
    showCheckedStrategy: PropTypes.oneOf([SHOW_ALL, SHOW_PARENT, SHOW_CHILD]),
    dropdownClassName: PropTypes.string,
    dropdownStyle: PropTypes.object,
    dropdownVisibleChange: PropTypes.func,
    dropdownMatchSelectWidth: PropTypes.looseBool,
    treeData: PropTypes.array,
    treeDataSimpleMode: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object])),
    treeNodeFilterProp: PropTypes.string,
    treeNodeLabelProp: PropTypes.string,
    treeCheckable: PropTypes.any,
    // treeCheckable: PropTypes.any,
    treeCheckStrictly: PropTypes.looseBool,
    treeIcon: PropTypes.looseBool,
    treeLine: PropTypes.looseBool,
    treeDefaultExpandAll: PropTypes.looseBool,
    treeDefaultExpandedKeys: PropTypes.array,
    treeExpandedKeys: PropTypes.array,
    loadData: PropTypes.func,
    filterTreeNode: withUndefined(PropTypes.oneOfType([PropTypes.func, PropTypes.looseBool])),
    notFoundContent: PropTypes.any,
    getPopupContainer: PropTypes.func,
    // onSearch: PropTypes.func,
    // onSelect: PropTypes.func,
    // onDeselect: PropTypes.func,
    // onChange: PropTypes.func,
    // onDropdownVisibleChange: PropTypes.func,
    // onTreeExpand: PropTypes.func,
    allowClear: PropTypes.looseBool,
    transitionName: PropTypes.string,
    animation: PropTypes.string,
    choiceTransitionName: PropTypes.string,
    inputIcon: PropTypes.any,
    clearIcon: PropTypes.any,
    removeIcon: PropTypes.any,
    switcherIcon: PropTypes.any,
    __propsSymbol__: PropTypes.any
  }, {
    prefixCls: "rc-tree-select",
    prefixAria: "rc-tree-select",
    showArrow: true,
    showSearch: true,
    autoClearSearchValue: true,
    showCheckedStrategy: SHOW_CHILD,
    // dropdownMatchSelectWidth change the origin design, set to false now
    // ref: https://github.com/react-component/select/blob/4cad95e098a341a09de239ad6981067188842020/src/Select.jsx#L344
    // ref: https://github.com/react-component/select/pull/71
    treeNodeFilterProp: "value",
    treeNodeLabelProp: "title",
    treeIcon: false,
    notFoundContent: "Not Found",
    dropdownStyle: {},
    dropdownVisibleChange: function dropdownVisibleChange() {
      return true;
    }
  }),
  data: function data74() {
    warning$3(this.$props.__propsSymbol__, "must pass __propsSymbol__");
    var _this$$props = this.$props, prefixAria = _this$$props.prefixAria, defaultOpen = _this$$props.defaultOpen, open6 = _this$$props.open;
    this.needSyncKeys = {};
    this.selectorRef = createRef();
    this.selectTriggerRef = createRef();
    this.ariaId = generateAriaId("".concat(prefixAria, "-list"));
    var state = {
      _open: open6 || defaultOpen,
      _valueList: [],
      _searchHalfCheckedKeys: [],
      _missValueList: [],
      _selectorValueList: [],
      _valueEntities: {},
      _posEntities: /* @__PURE__ */ new Map(),
      _keyEntities: /* @__PURE__ */ new Map(),
      _searchValue: "",
      _prevProps: {},
      _init: true,
      _focused: void 0,
      _treeNodes: void 0,
      _filteredTreeNodes: void 0
    };
    var newState = this.getDerivedState(this.$props, state);
    return _extends$1(_extends$1({}, state), newState);
  },
  watch: _extends$1(_extends$1({}, getWatch(["treeData", "defaultValue", "value"])), {
    __propsSymbol__: function __propsSymbol__4() {
      var state = this.getDerivedState(this.$props, this.$data);
      this.setState(state);
      this.needSyncKeys = {};
    },
    _valueList: function _valueList() {
      var _this = this;
      this.$nextTick(function() {
        _this.forcePopupAlign();
      });
    },
    _open: function _open2(open6) {
      var _this2 = this;
      this.$nextTick(function() {
        if (!open6 && !_this2.isSearchValueControlled()) {
          _this2.setState({
            _searchValue: ""
          });
        }
        if (open6 && !_this2.$data._searchValue) {
          _this2.setState({
            _filteredTreeNodes: null
          });
        }
        var prefixCls2 = _this2.$props.prefixCls;
        var _this2$$data = _this2.$data, selectorValueList = _this2$$data._selectorValueList, valueEntities = _this2$$data._valueEntities;
        var isMultiple2 = _this2.isMultiple();
        if (!isMultiple2 && selectorValueList.length && open6 && _this2.popup) {
          var value26 = selectorValueList[0].value;
          var _this2$popup$getTree = _this2.popup.getTree(), domTreeNodes = _this2$popup$getTree.domTreeNodes;
          var _ref = valueEntities[value26] || {}, key2 = _ref.key;
          var treeNode = domTreeNodes[key2];
          if (treeNode) {
            var domNode = findDOMNode(treeNode);
            requestAnimationFrame(function() {
              var popupNode = findDOMNode(_this2.popup);
              var triggerContainer = findPopupContainer(popupNode, "".concat(prefixCls2, "-dropdown"));
              if (domNode && triggerContainer) {
                scrollIntoView(domNode, triggerContainer, {
                  onlyScrollIfNeeded: true,
                  offsetTop: 0
                });
              }
            });
          }
        }
      });
    }
  }),
  created: function created24() {
    provide3("vcTreeSelect", {
      onSelectorFocus: this.onSelectorFocus,
      onSelectorBlur: this.onSelectorBlur,
      onSelectorKeyDown: this.onComponentKeyDown,
      onSelectorClear: this.onSelectorClear,
      onMultipleSelectorRemove: this.onMultipleSelectorRemove,
      onTreeNodeSelect: this.onTreeNodeSelect,
      onTreeNodeCheck: this.onTreeNodeCheck,
      onPopupKeyDown: this.onComponentKeyDown,
      onSearchInputChange: this.onSearchInputChange,
      onSearchInputKeyDown: this.onSearchInputKeyDown
    });
  },
  mounted: function mounted41() {
    var _this3 = this;
    this.$nextTick(function() {
      var _this3$$props = _this3.$props, autofocus = _this3$$props.autofocus, disabled = _this3$$props.disabled;
      if (autofocus && !disabled) {
        _this3.focus();
      }
    });
  },
  methods: {
    getDerivedState: function getDerivedState3(nextProps, prevState) {
      var _prevState$_prevProps = prevState._prevProps, prevProps = _prevState$_prevProps === void 0 ? {} : _prevState$_prevProps;
      var treeCheckable = nextProps.treeCheckable, treeCheckStrictly = nextProps.treeCheckStrictly, filterTreeNode2 = nextProps.filterTreeNode, treeNodeFilterProp = nextProps.treeNodeFilterProp, treeDataSimpleMode = nextProps.treeDataSimpleMode;
      var newState = {
        _prevProps: _extends$1({}, nextProps),
        _init: false
      };
      var self2 = this;
      function processState(propName, updater) {
        if (prevProps[propName] !== nextProps[propName] || self2.needSyncKeys[propName]) {
          updater(nextProps[propName], prevProps[propName]);
          return true;
        }
        return false;
      }
      var valueRefresh = false;
      processState("open", function(propValue) {
        newState._open = propValue;
      });
      var treeNodes;
      var treeDataChanged = false;
      var treeDataModeChanged = false;
      processState("treeData", function(propValue) {
        treeNodes = convertDataToTree(propValue);
        treeDataChanged = true;
      });
      processState("treeDataSimpleMode", function(propValue, prevValue) {
        if (!propValue) return;
        var prev3 = !prevValue || prevValue === true ? {} : prevValue;
        if (!shallowEqual$1(propValue, prev3)) {
          treeDataModeChanged = true;
        }
      });
      if (treeDataSimpleMode && (treeDataChanged || treeDataModeChanged)) {
        var simpleMapper = _extends$1({
          id: "id",
          pId: "pId",
          rootPId: null
        }, treeDataSimpleMode !== true ? treeDataSimpleMode : {});
        treeNodes = convertDataToTree(parseSimpleTreeData(nextProps.treeData, simpleMapper));
      }
      if (!nextProps.treeData) {
        treeNodes = this.children || [];
      }
      if (treeNodes) {
        var entitiesMap = convertTreeToEntities(treeNodes);
        newState._treeNodes = treeNodes;
        newState._posEntities = entitiesMap.posEntities;
        newState._valueEntities = entitiesMap.valueEntities;
        newState._keyEntities = entitiesMap.keyEntities;
        valueRefresh = true;
      }
      if (prevState._init) {
        processState("defaultValue", function(propValue) {
          newState._valueList = formatInternalValue(propValue, nextProps);
          valueRefresh = true;
        });
      }
      processState("value", function(propValue) {
        newState._valueList = formatInternalValue(propValue, nextProps);
        valueRefresh = true;
      });
      if (valueRefresh) {
        var missValueList = [];
        var filteredValueList = [];
        var keyList = [];
        var latestValueList = newState._valueList;
        if (!latestValueList) {
          latestValueList = [].concat(_toConsumableArray(prevState._valueList), _toConsumableArray(prevState._missValueList));
        }
        var valueLabels = {};
        latestValueList.forEach(function(wrapperValue) {
          var value26 = wrapperValue.value, label = wrapperValue.label;
          var entity = (newState._valueEntities || prevState._valueEntities)[value26];
          valueLabels[value26] = label;
          if (entity) {
            keyList.push(entity.key);
            filteredValueList.push(wrapperValue);
            return;
          }
          missValueList.push(wrapperValue);
        });
        if (treeCheckable && !treeCheckStrictly) {
          var _conductCheck = conductCheck(keyList, true, newState._keyEntities || prevState._keyEntities), checkedKeys = _conductCheck.checkedKeys;
          newState._valueList = checkedKeys.map(function(key2) {
            var val = (newState._keyEntities || prevState._keyEntities).get(key2).value;
            var wrappedValue = {
              value: val
            };
            if (valueLabels[val] !== void 0) {
              wrappedValue.label = valueLabels[val];
            }
            return wrappedValue;
          });
        } else {
          newState._valueList = filteredValueList;
        }
        newState._missValueList = missValueList;
        newState._selectorValueList = formatSelectorValue(newState._valueList, nextProps, newState._valueEntities || prevState._valueEntities);
      }
      processState("inputValue", function(propValue) {
        if (propValue !== null) {
          newState._searchValue = propValue;
        }
      });
      processState("searchValue", function(propValue) {
        newState._searchValue = propValue;
      });
      if (newState._searchValue !== void 0 || prevState._searchValue && treeNodes) {
        var searchValue2 = newState._searchValue !== void 0 ? newState._searchValue : prevState._searchValue;
        var upperSearchValue = String(searchValue2).toUpperCase();
        var filterTreeNodeFn = filterTreeNode2;
        if (filterTreeNode2 === false) {
          filterTreeNodeFn = function filterTreeNodeFn2() {
            return true;
          };
        } else if (typeof filterTreeNodeFn !== "function") {
          filterTreeNodeFn = function filterTreeNodeFn2(_2, node) {
            var nodeValue = String(getPropsData(node)[treeNodeFilterProp]).toUpperCase();
            return nodeValue.indexOf(upperSearchValue) !== -1;
          };
        }
        newState._filteredTreeNodes = getFilterTree(newState._treeNodes || prevState._treeNodes, searchValue2, filterTreeNodeFn, newState._valueEntities || prevState._valueEntities, SelectNode);
      }
      if (valueRefresh && treeCheckable && !treeCheckStrictly && (newState._searchValue || prevState._searchValue)) {
        newState._searchHalfCheckedKeys = getHalfCheckedKeys(newState._valueList, newState._valueEntities || prevState._valueEntities);
      }
      processState("showCheckedStrategy", function() {
        newState._selectorValueList = newState._selectorValueList || formatSelectorValue(newState._valueList || prevState._valueList, nextProps, newState._valueEntities || prevState._valueEntities);
      });
      return newState;
    },
    // ==================== Selector ====================
    onSelectorFocus: function onSelectorFocus() {
      this.setState({
        _focused: true
      });
    },
    onSelectorBlur: function onSelectorBlur() {
      this.setState({
        _focused: false
      });
    },
    // Handle key board event in both Selector and Popup
    onComponentKeyDown: function onComponentKeyDown(event) {
      var open6 = this.$data._open;
      var keyCode = event.keyCode;
      if (!open6) {
        if ([KeyCode$1.ENTER, KeyCode$1.DOWN].indexOf(keyCode) !== -1) {
          this.setOpenState(true);
        }
      } else if (KeyCode$1.ESC === keyCode) {
        this.setOpenState(false);
      } else if ([KeyCode$1.UP, KeyCode$1.DOWN, KeyCode$1.LEFT, KeyCode$1.RIGHT].indexOf(keyCode) !== -1) {
        event.stopPropagation();
      }
    },
    onDeselect: function onDeselect(wrappedValue, node, nodeEventInfo) {
      this.__emit("deselect", wrappedValue, node, nodeEventInfo);
    },
    onSelectorClear: function onSelectorClear(event) {
      var disabled = this.$props.disabled;
      if (disabled) return;
      this.triggerChange([], []);
      if (!this.isSearchValueControlled()) {
        this.setUncontrolledState({
          _searchValue: "",
          _filteredTreeNodes: null
        });
      }
      event.stopPropagation();
    },
    onMultipleSelectorRemove: function onMultipleSelectorRemove(event, removeValue) {
      event.stopPropagation();
      var _this$$data = this.$data, valueList = _this$$data._valueList, missValueList = _this$$data._missValueList, valueEntities = _this$$data._valueEntities;
      var _this$$props2 = this.$props, treeCheckable = _this$$props2.treeCheckable, treeCheckStrictly = _this$$props2.treeCheckStrictly, treeNodeLabelProp = _this$$props2.treeNodeLabelProp, disabled = _this$$props2.disabled;
      if (disabled) return;
      var triggerEntity = valueEntities[removeValue];
      var newValueList = valueList;
      if (triggerEntity) {
        if (treeCheckable && !treeCheckStrictly) {
          newValueList = valueList.filter(function(_ref2) {
            var value26 = _ref2.value;
            var entity = valueEntities[value26];
            return !isPosRelated(entity.pos, triggerEntity.pos);
          });
        } else {
          newValueList = valueList.filter(function(_ref3) {
            var value26 = _ref3.value;
            return value26 !== removeValue;
          });
        }
      }
      var triggerNode = triggerEntity ? triggerEntity.node : null;
      var extraInfo = {
        triggerValue: removeValue,
        triggerNode
      };
      var deselectInfo = {
        node: triggerNode
      };
      if (treeCheckable) {
        var filteredEntityList = newValueList.map(function(_ref4) {
          var value26 = _ref4.value;
          return valueEntities[value26];
        });
        deselectInfo.event = "check";
        deselectInfo.checked = false;
        deselectInfo.checkedNodes = filteredEntityList.map(function(_ref5) {
          var node = _ref5.node;
          return node;
        });
        deselectInfo.checkedNodesPositions = filteredEntityList.map(function(_ref6) {
          var node = _ref6.node, pos = _ref6.pos;
          return {
            node,
            pos
          };
        });
        if (treeCheckStrictly) {
          extraInfo.allCheckedNodes = deselectInfo.checkedNodes;
        } else {
          extraInfo.allCheckedNodes = flatToHierarchy(filteredEntityList).map(function(_ref7) {
            var node = _ref7.node;
            return node;
          });
        }
      } else {
        deselectInfo.event = "select";
        deselectInfo.selected = false;
        deselectInfo.selectedNodes = newValueList.map(function(_ref8) {
          var value26 = _ref8.value;
          return (valueEntities[value26] || {}).node;
        });
      }
      var newMissValueList = missValueList.filter(function(_ref9) {
        var value26 = _ref9.value;
        return value26 !== removeValue;
      });
      var wrappedValue;
      if (this.isLabelInValue()) {
        wrappedValue = {
          label: triggerNode ? getPropsData(triggerNode)[treeNodeLabelProp] : null,
          value: removeValue
        };
      } else {
        wrappedValue = removeValue;
      }
      this.onDeselect(wrappedValue, triggerNode, deselectInfo);
      this.triggerChange(newMissValueList, newValueList, extraInfo);
    },
    // ===================== Popup ======================
    onValueTrigger: function onValueTrigger(isAdd, nodeList, nodeEventInfo, nodeExtraInfo) {
      var node = nodeEventInfo.node;
      var value26 = node.$props.value;
      var _this$$data2 = this.$data, missValueList = _this$$data2._missValueList, valueEntities = _this$$data2._valueEntities, keyEntities = _this$$data2._keyEntities, searchValue2 = _this$$data2._searchValue;
      var _this$$props3 = this.$props, disabled = _this$$props3.disabled, inputValue = _this$$props3.inputValue, treeNodeLabelProp = _this$$props3.treeNodeLabelProp, treeCheckable = _this$$props3.treeCheckable, treeCheckStrictly = _this$$props3.treeCheckStrictly, autoClearSearchValue = _this$$props3.autoClearSearchValue;
      var label = node.$props[treeNodeLabelProp];
      if (disabled) return;
      var wrappedValue;
      if (this.isLabelInValue()) {
        wrappedValue = {
          value: value26,
          label
        };
      } else {
        wrappedValue = value26;
      }
      if (isAdd) {
        this.__emit("select", wrappedValue, node, nodeEventInfo);
      } else {
        this.__emit("deselect", wrappedValue, node, nodeEventInfo);
      }
      var newValueList = nodeList.map(function(node2) {
        var props2 = getPropsData(node2);
        return {
          value: props2.value,
          label: props2[treeNodeLabelProp]
        };
      });
      if (treeCheckable && !treeCheckStrictly) {
        var keyList = newValueList.map(function(_ref10) {
          var val = _ref10.value;
          return valueEntities[val].key;
        });
        if (isAdd) {
          keyList = conductCheck(keyList, true, keyEntities).checkedKeys;
        } else {
          keyList = conductCheck([valueEntities[value26].key], false, keyEntities, {
            checkedKeys: keyList
          }).checkedKeys;
        }
        newValueList = keyList.map(function(key2) {
          var props2 = getPropsData(keyEntities.get(key2).node);
          return {
            value: props2.value,
            label: props2[treeNodeLabelProp]
          };
        });
      }
      if (autoClearSearchValue || inputValue === null) {
        if (!this.isSearchValueControlled()) {
          this.setUncontrolledState({
            _searchValue: "",
            _filteredTreeNodes: null
          });
        }
        if (searchValue2 && searchValue2.length) {
          this.__emit("search", "");
        }
      }
      var extraInfo = _extends$1(_extends$1({}, nodeExtraInfo), {
        triggerValue: value26,
        triggerNode: node
      });
      this.triggerChange(missValueList, newValueList, extraInfo);
    },
    onTreeNodeSelect: function onTreeNodeSelect(_2, nodeEventInfo) {
      var _this$$data3 = this.$data, valueList = _this$$data3._valueList, valueEntities = _this$$data3._valueEntities;
      var _this$$props4 = this.$props, treeCheckable = _this$$props4.treeCheckable, multiple = _this$$props4.multiple;
      if (treeCheckable) return;
      if (!multiple) {
        this.setOpenState(false);
      }
      var isAdd = nodeEventInfo.selected;
      var selectedValue6 = nodeEventInfo.node.$props.value;
      var newValueList;
      if (!multiple) {
        newValueList = [{
          value: selectedValue6
        }];
      } else {
        newValueList = valueList.filter(function(_ref11) {
          var value26 = _ref11.value;
          return value26 !== selectedValue6;
        });
        if (isAdd) {
          newValueList.push({
            value: selectedValue6
          });
        }
      }
      var selectedNodes = newValueList.map(function(_ref12) {
        var value26 = _ref12.value;
        return valueEntities[value26];
      }).filter(function(entity) {
        return entity;
      }).map(function(_ref13) {
        var node = _ref13.node;
        return node;
      });
      this.onValueTrigger(isAdd, selectedNodes, nodeEventInfo, {
        selected: isAdd
      });
    },
    onTreeNodeCheck: function onTreeNodeCheck(_2, nodeEventInfo) {
      var _this$$data4 = this.$data, searchValue2 = _this$$data4._searchValue, keyEntities = _this$$data4._keyEntities, valueEntities = _this$$data4._valueEntities, valueList = _this$$data4._valueList;
      var treeCheckStrictly = this.$props.treeCheckStrictly;
      var checkedNodes = nodeEventInfo.checkedNodes, checkedNodesPositions = nodeEventInfo.checkedNodesPositions;
      var isAdd = nodeEventInfo.checked;
      var extraInfo = {
        checked: isAdd
      };
      var checkedNodeList = checkedNodes;
      if (searchValue2) {
        var oriKeyList = valueList.map(function(_ref14) {
          var value26 = _ref14.value;
          return valueEntities[value26];
        }).filter(function(entity) {
          return entity;
        }).map(function(_ref15) {
          var key2 = _ref15.key;
          return key2;
        });
        var keyList;
        if (isAdd) {
          keyList = Array.from(new Set([].concat(_toConsumableArray(oriKeyList), _toConsumableArray(checkedNodeList.map(function(node) {
            var _getPropsData = getPropsData(node), value26 = _getPropsData.value;
            return valueEntities[value26].key;
          })))));
        } else {
          keyList = conductCheck([getPropsData(nodeEventInfo.node).eventKey], false, keyEntities, {
            checkedKeys: oriKeyList
          }).checkedKeys;
        }
        checkedNodeList = keyList.map(function(key2) {
          return keyEntities.get(key2).node;
        });
        extraInfo.allCheckedNodes = keyList.map(function(key2) {
          return cleanEntity(keyEntities.get(key2));
        });
      } else if (treeCheckStrictly) {
        extraInfo.allCheckedNodes = nodeEventInfo.checkedNodes;
      } else {
        extraInfo.allCheckedNodes = flatToHierarchy(checkedNodesPositions);
      }
      this.onValueTrigger(isAdd, checkedNodeList, nodeEventInfo, extraInfo);
    },
    // ==================== Trigger =====================
    onDropdownVisibleChange: function onDropdownVisibleChange(open6) {
      var _this$$props5 = this.$props, multiple = _this$$props5.multiple, treeCheckable = _this$$props5.treeCheckable;
      var _searchValue = this.$data._searchValue;
      if (open6 && !multiple && !treeCheckable && _searchValue) {
        this.setUncontrolledState({
          _searchValue: "",
          _filteredTreeNodes: null
        });
      }
      this.setOpenState(open6, true);
    },
    onSearchInputChange: function onSearchInputChange(event) {
      var value26 = event.target.value;
      var _this$$data5 = this.$data, treeNodes = _this$$data5._treeNodes, valueEntities = _this$$data5._valueEntities;
      var _this$$props6 = this.$props, filterTreeNode2 = _this$$props6.filterTreeNode, treeNodeFilterProp = _this$$props6.treeNodeFilterProp;
      this.__emit("search", value26);
      var isSet2 = false;
      if (!this.isSearchValueControlled()) {
        isSet2 = this.setUncontrolledState({
          _searchValue: value26
        });
        this.setOpenState(true);
      }
      if (isSet2) {
        var upperSearchValue = String(value26).toUpperCase();
        var filterTreeNodeFn = filterTreeNode2;
        if (filterTreeNode2 === false) {
          filterTreeNodeFn = function filterTreeNodeFn2() {
            return true;
          };
        } else if (!filterTreeNodeFn) {
          filterTreeNodeFn = function filterTreeNodeFn2(_2, node) {
            var nodeValue = String(getPropsData(node)[treeNodeFilterProp]).toUpperCase();
            return nodeValue.indexOf(upperSearchValue) !== -1;
          };
        }
        this.setState({
          _filteredTreeNodes: getFilterTree(treeNodes, value26, filterTreeNodeFn, valueEntities, SelectNode)
        });
      }
    },
    onSearchInputKeyDown: function onSearchInputKeyDown(event) {
      var _this$$data6 = this.$data, searchValue2 = _this$$data6._searchValue, valueList = _this$$data6._valueList, valueEntities = _this$$data6._valueEntities;
      var keyCode = event.keyCode;
      if (KeyCode$1.BACKSPACE === keyCode && this.isMultiple() && !searchValue2 && valueList.length) {
        var lastValue = valueList[valueList.length - 1].value;
        var treeCheckStrictly = this.$props.treeCheckStrictly;
        if (!treeCheckStrictly) {
          (function() {
            var cur = valueEntities[lastValue];
            while (cur) {
              if (valueList.some(function(j2) {
                return j2.value === cur.value;
              })) {
                lastValue = cur.value;
                cur = cur.parent;
              } else {
                cur = null;
              }
            }
          })();
        }
        this.onMultipleSelectorRemove(event, lastValue);
      }
    },
    onChoiceAnimationLeave: function onChoiceAnimationLeave2() {
      var _this4 = this;
      requestAnimationFrame(function() {
        _this4.forcePopupAlign();
      });
    },
    setPopupRef: function setPopupRef(popup) {
      this.popup = popup;
    },
    /**
     * Only update the value which is not in props
     */
    setUncontrolledState: function setUncontrolledState3(state) {
      var needSync = false;
      var newState = {};
      var props2 = getOptionProps(this);
      Object.keys(state).forEach(function(name) {
        if (name.slice(1) in props2) return;
        needSync = true;
        newState[name] = state[name];
      });
      if (needSync) {
        this.setState(newState);
      }
      return needSync;
    },
    // [Legacy] Origin provide `documentClickClose` which triggered by `Trigger`
    // Currently `TreeSelect` align the hide popup logic as `Select` which blur to hide.
    // `documentClickClose` is not accurate anymore. Let's just keep the key word.
    setOpenState: function setOpenState(open6) {
      var byTrigger = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
      var dropdownVisibleChange2 = this.$props.dropdownVisibleChange;
      if (dropdownVisibleChange2 && dropdownVisibleChange2(open6, {
        documentClickClose: !open6 && byTrigger
      }) === false) {
        return;
      }
      this.setUncontrolledState({
        _open: open6
      });
    },
    // Tree checkable is also a multiple case
    isMultiple: function isMultiple() {
      var _this$$props7 = this.$props, multiple = _this$$props7.multiple, treeCheckable = _this$$props7.treeCheckable;
      return !!(multiple || treeCheckable);
    },
    isLabelInValue: function isLabelInValue$1() {
      return isLabelInValue(this.$props);
    },
    // [Legacy] To align with `Select` component,
    // We use `searchValue` instead of `inputValue`
    // but currently still need support that.
    // Add this method the check if is controlled
    isSearchValueControlled: function isSearchValueControlled() {
      var props2 = getOptionProps(this);
      var inputValue = props2.inputValue;
      if ("searchValue" in props2) return true;
      return "inputValue" in props2 && inputValue !== null;
    },
    forcePopupAlign: function forcePopupAlign3() {
      var $trigger = this.selectTriggerRef.current;
      if ($trigger) {
        $trigger.forcePopupAlign();
      }
    },
    delayForcePopupAlign: function delayForcePopupAlign() {
      var _this5 = this;
      requestAnimationFrame(function() {
        requestAnimationFrame(_this5.forcePopupAlign);
      });
    },
    /**
     * 1. Update state valueList.
     * 2. Fire `onChange` event to user.
     */
    triggerChange: function triggerChange4(missValueList, valueList) {
      var extraInfo = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      var _this$$data7 = this.$data, valueEntities = _this$$data7._valueEntities, searchValue2 = _this$$data7._searchValue, prevSelectorValueList = _this$$data7._selectorValueList;
      var props2 = getOptionProps(this);
      var disabled = props2.disabled, treeCheckable = props2.treeCheckable, treeCheckStrictly = props2.treeCheckStrictly;
      if (disabled) return;
      var extra = _extends$1({
        // [Legacy] Always return as array contains label & value
        preValue: prevSelectorValueList.map(function(_ref16) {
          var label = _ref16.label, value26 = _ref16.value;
          return {
            label,
            value: value26
          };
        })
      }, extraInfo);
      var selectorValueList = formatSelectorValue(valueList, props2, valueEntities);
      if (!("value" in props2)) {
        var newState = {
          _missValueList: missValueList,
          _valueList: valueList,
          _selectorValueList: selectorValueList
        };
        if (searchValue2 && treeCheckable && !treeCheckStrictly) {
          newState._searchHalfCheckedKeys = getHalfCheckedKeys(valueList, valueEntities);
        }
        this.setState(newState);
      }
      if (this.$attrs.onChange) {
        var connectValueList;
        if (this.isMultiple()) {
          connectValueList = [].concat(_toConsumableArray(missValueList), _toConsumableArray(selectorValueList));
        } else {
          connectValueList = selectorValueList.slice(0, 1);
        }
        var labelList = null;
        var returnValue;
        if (this.isLabelInValue()) {
          returnValue = connectValueList.map(function(_ref17) {
            var label = _ref17.label, value26 = _ref17.value;
            return {
              label,
              value: value26
            };
          });
        } else {
          labelList = [];
          returnValue = connectValueList.map(function(_ref18) {
            var label = _ref18.label, value26 = _ref18.value;
            labelList.push(label);
            return value26;
          });
        }
        if (!this.isMultiple()) {
          returnValue = returnValue[0];
        }
        this.__emit("change", returnValue, labelList, extra);
      }
    },
    focus: function focus25() {
      this.selectorRef.current.focus();
    },
    blur: function blur22() {
      this.selectorRef.current.blur();
    }
  },
  // ===================== Render =====================
  render: function render154() {
    var _this$$data8 = this.$data, valueList = _this$$data8._valueList, missValueList = _this$$data8._missValueList, selectorValueList = _this$$data8._selectorValueList, searchHalfCheckedKeys = _this$$data8._searchHalfCheckedKeys, valueEntities = _this$$data8._valueEntities, keyEntities = _this$$data8._keyEntities, searchValue2 = _this$$data8._searchValue, open6 = _this$$data8._open, focused = _this$$data8._focused, treeNodes = _this$$data8._treeNodes, filteredTreeNodes = _this$$data8._filteredTreeNodes;
    var props2 = getOptionProps(this);
    var prefixCls2 = props2.prefixCls, treeExpandedKeys = props2.treeExpandedKeys;
    var isMultiple2 = this.isMultiple();
    var passProps = _extends$1(_extends$1(_extends$1({}, props2), this.$attrs), {
      isMultiple: isMultiple2,
      valueList,
      searchHalfCheckedKeys,
      selectorValueList: [].concat(_toConsumableArray(missValueList), _toConsumableArray(selectorValueList)),
      valueEntities,
      keyEntities,
      searchValue: searchValue2,
      upperSearchValue: (searchValue2 || "").toUpperCase(),
      // Perf save
      open: open6,
      focused,
      dropdownPrefixCls: "".concat(prefixCls2, "-dropdown"),
      ariaId: this.ariaId,
      onChoiceAnimationLeave: this.onChoiceAnimationLeave,
      vSlots: this.$slots
    });
    var popupProps = _extends$1(_extends$1({}, passProps), {
      treeNodes,
      filteredTreeNodes,
      // Tree expanded control
      treeExpandedKeys,
      onTreeExpanded: this.delayForcePopupAlign,
      ref: this.setPopupRef
    });
    var $popup = _createVNode$q(BasePopup, _objectSpread2$2(_objectSpread2$2({}, popupProps), {}, {
      "__propsSymbol__": []
    }), null);
    var Selector2 = isMultiple2 ? MultipleSelector : SingleSelector;
    var $selector = _createVNode$q(Selector2, _objectSpread2$2(_objectSpread2$2({}, passProps), {}, {
      "isMultiple": isMultiple2,
      "ref": this.selectorRef
    }), null);
    var selectTriggerProps = _extends$1(_extends$1({}, passProps), {
      popupElement: $popup,
      dropdownVisibleChange: this.onDropdownVisibleChange,
      ref: this.selectTriggerRef
    });
    return _createVNode$q(SelectTrigger, selectTriggerProps, {
      default: function _default8() {
        return [$selector];
      }
    });
  }
});
Select.TreeNode = SelectNode;
Select.SHOW_ALL = SHOW_ALL;
Select.SHOW_PARENT = SHOW_PARENT;
Select.SHOW_CHILD = SHOW_CHILD;
Select.name = "TreeSelect";
var TreeNode = SelectNode;
PropTypes.shape({
  key: PropTypes.string,
  value: PropTypes.string,
  label: PropTypes.VNodeChild,
  slots: PropTypes.object,
  children: PropTypes.array
}).loose;
var TreeSelectProps = function TreeSelectProps2() {
  return _extends$1(_extends$1({}, SelectProps()), {
    autofocus: PropTypes.looseBool,
    dropdownStyle: PropTypes.object,
    filterTreeNode: withUndefined(PropTypes.oneOfType([Function, Boolean])),
    getPopupContainer: PropTypes.func,
    labelInValue: PropTypes.looseBool,
    loadData: PropTypes.func,
    maxTagCount: PropTypes.number,
    maxTagPlaceholder: PropTypes.VNodeChild,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array, PropTypes.number]),
    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.array, PropTypes.number]),
    multiple: PropTypes.looseBool,
    notFoundContent: PropTypes.VNodeChild,
    searchPlaceholder: PropTypes.string,
    searchValue: PropTypes.string,
    showCheckedStrategy: PropTypes.oneOf(tuple("SHOW_ALL", "SHOW_PARENT", "SHOW_CHILD")),
    suffixIcon: PropTypes.VNodeChild,
    treeCheckable: PropTypes.looseBool,
    treeCheckStrictly: PropTypes.looseBool,
    treeData: PropTypes.arrayOf(Object),
    treeDataSimpleMode: withUndefined(PropTypes.oneOfType([PropTypes.looseBool, Object])),
    dropdownClassName: PropTypes.string,
    dropdownMatchSelectWidth: PropTypes.looseBool,
    treeDefaultExpandAll: PropTypes.looseBool,
    treeExpandedKeys: PropTypes.array,
    treeIcon: PropTypes.looseBool,
    treeDefaultExpandedKeys: PropTypes.array,
    treeNodeFilterProp: PropTypes.string,
    treeNodeLabelProp: PropTypes.string,
    replaceFields: PropTypes.object.def({}),
    clearIcon: PropTypes.VNodeChild,
    removeIcon: PropTypes.VNodeChild,
    onSelect: PropTypes.func,
    onChange: PropTypes.func,
    onSearch: PropTypes.func,
    onTreeExpand: PropTypes.func,
    "onUpdate:treeExpandedKeys": PropTypes.func,
    "onUpdate:searchValue": PropTypes.func,
    "onUpdate:value": PropTypes.func
  });
};
var CaretDownOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "0 0 1024 1024", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z" } }] }, "name": "caret-down", "theme": "outlined" };
const { createVNode: _createVNode$p } = await importShared("vue");
function _objectSpread$7(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$7(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$7(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CaretDownOutlined = function CaretDownOutlined2(props2, context2) {
  var p = _objectSpread$7({}, props2, context2.attrs);
  return _createVNode$p(Icon, _objectSpread$7({}, p, {
    "icon": CaretDownOutlined$1
  }), null);
};
CaretDownOutlined.displayName = "CaretDownOutlined";
CaretDownOutlined.inheritAttrs = false;
const { createVNode: _createVNode$o, Fragment: _Fragment$2 } = await importShared("vue");
var __rest$6 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
function convertChildrenToData(nodes) {
  return flattenChildren(nodes).map(function(node) {
    if (!isValidElement(node) || !node.type) {
      return null;
    }
    var _a = node.children || {}, d2 = _a.default, restSlot = __rest$6(_a, ["default"]);
    var children = d2 ? d2() : [];
    var key2 = node.key, _b = node.props, value26 = _b.value, restProps = __rest$6(_b, ["value"]);
    var data79 = _extends$1({
      key: key2,
      value: value26
    }, restProps);
    Object.keys(restSlot).forEach(function(p) {
      if (typeof restSlot[p] === "function") {
        data79[p] = _createVNode$o(_Fragment$2, null, [restSlot[p]()]);
      }
    });
    var childData = convertChildrenToData(children);
    if (childData.length) {
      data79.children = childData;
    }
    return data79;
  }).filter(function(data79) {
    return data79;
  });
}
const { resolveDirective: _resolveDirective$4, Fragment: _Fragment$1, createVNode: _createVNode$n } = await importShared("vue");
var __rest$5 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$9, inject: inject$4 } = await importShared("vue");
var TreeSelect = defineComponent$9({
  TreeNode,
  SHOW_ALL,
  SHOW_PARENT,
  SHOW_CHILD,
  name: "ATreeSelect",
  inheritAttrs: false,
  props: initDefaultProps2(TreeSelectProps(), {
    transitionName: "slide-up",
    choiceTransitionName: ""
  }),
  setup: function setup153() {
    return {
      vcTreeSelect: null,
      configProvider: inject$4("configProvider", defaultConfigProvider)
    };
  },
  created: function created25() {
    warning$5(this.multiple !== false || !this.treeCheckable, "TreeSelect", "`multiple` will alway be `true` when `treeCheckable` is true");
  },
  methods: {
    saveTreeSelect: function saveTreeSelect(node) {
      this.vcTreeSelect = node;
    },
    focus: function focus26() {
      this.vcTreeSelect.focus();
    },
    blur: function blur23() {
      this.vcTreeSelect.blur();
    },
    renderSwitcherIcon: function renderSwitcherIcon2(prefixCls2, _ref) {
      var isLeaf = _ref.isLeaf, loading = _ref.loading;
      if (loading) {
        return _createVNode$n(LoadingOutlined, {
          "class": "".concat(prefixCls2, "-switcher-loading-icon")
        }, null);
      }
      if (isLeaf) {
        return null;
      }
      return _createVNode$n(CaretDownOutlined, {
        "class": "".concat(prefixCls2, "-switcher-icon")
      }, null);
    },
    handleChange: function handleChange20() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      this.$emit("update:value", args[0]);
      this.$emit.apply(this, ["change"].concat(args));
    },
    handleTreeExpand: function handleTreeExpand() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      this.$emit("update:treeExpandedKeys", args[0]);
      this.$emit.apply(this, ["treeExpand"].concat(args));
    },
    handleSearch: function handleSearch2() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }
      this.$emit("update:searchValue", args[0]);
      this.$emit.apply(this, ["search"].concat(args));
    },
    updateTreeData: function updateTreeData2(treeData) {
      var _this = this;
      var $slots = this.$slots;
      var defaultFields = {
        children: "children",
        title: "title",
        key: "key",
        label: "label",
        value: "value"
      };
      var replaceFields = _extends$1(_extends$1({}, defaultFields), this.$props.replaceFields);
      return treeData.map(function(item) {
        var _item$slots = item.slots, slots = _item$slots === void 0 ? {} : _item$slots;
        var label = item[replaceFields.label];
        var title = item[replaceFields.title];
        var value26 = item[replaceFields.value];
        var key2 = item[replaceFields.key];
        var children = item[replaceFields.children];
        var newLabel = typeof label === "function" ? label() : label;
        var newTitle = typeof title === "function" ? title() : title;
        if (!newLabel && slots.label && $slots[slots.label]) {
          newLabel = _createVNode$n(_Fragment$1, null, [$slots[slots.label](item)]);
        }
        if (!newTitle && slots.title && $slots[slots.title]) {
          newTitle = _createVNode$n(_Fragment$1, null, [$slots[slots.title](item)]);
        }
        var treeNodeProps = _extends$1(_extends$1({}, item), {
          title: newTitle || newLabel,
          value: value26,
          dataRef: item,
          key: key2
        });
        if (children) {
          return _extends$1(_extends$1({}, treeNodeProps), {
            children: _this.updateTreeData(children)
          });
        }
        return treeNodeProps;
      });
    }
  },
  render: function render155() {
    var _cls, _this2 = this;
    var props2 = getOptionProps(this);
    var customizePrefixCls = props2.prefixCls, size = props2.size, dropdownStyle = props2.dropdownStyle, dropdownClassName = props2.dropdownClassName, getPopupContainer = props2.getPopupContainer, restProps = __rest$5(props2, ["prefixCls", "size", "dropdownStyle", "dropdownClassName", "getPopupContainer"]);
    var className = this.$attrs.class;
    var _this$configProvider = this.configProvider, renderEmpty2 = _this$configProvider.renderEmpty, getPrefixCls2 = _this$configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("select", customizePrefixCls);
    var notFoundContent = getComponent(this, "notFoundContent");
    var removeIcon = getComponent(this, "removeIcon");
    var clearIcon = getComponent(this, "clearIcon");
    var getContextPopupContainer = this.configProvider.getPopupContainer;
    var rest = omit$1(restProps, ["inputIcon", "removeIcon", "clearIcon", "switcherIcon", "suffixIcon"]);
    var suffixIcon = getComponent(this, "suffixIcon");
    suffixIcon = Array.isArray(suffixIcon) ? suffixIcon[0] : suffixIcon;
    var treeData = props2.treeData;
    if (treeData) {
      treeData = this.updateTreeData(treeData);
    }
    var cls = (_cls = {}, _defineProperty$U(_cls, "".concat(prefixCls2, "-lg"), size === "large"), _defineProperty$U(_cls, "".concat(prefixCls2, "-sm"), size === "small"), _defineProperty$U(_cls, className, className), _cls);
    var showSearch = restProps.showSearch;
    if (!("showSearch" in restProps)) {
      showSearch = !!(restProps.multiple || restProps.treeCheckable);
    }
    var checkable = getComponent(this, "treeCheckable");
    if (checkable) {
      checkable = _createVNode$n("span", {
        "class": "".concat(prefixCls2, "-tree-checkbox-inner")
      }, null);
    }
    var inputIcon = suffixIcon || _createVNode$n(DownOutlined, {
      "class": "".concat(prefixCls2, "-arrow-icon")
    }, null);
    var finalRemoveIcon = removeIcon || _createVNode$n(CloseOutlined, {
      "class": "".concat(prefixCls2, "-remove-icon")
    }, null);
    var finalClearIcon = clearIcon || _createVNode$n(CloseCircleFilled, {
      "class": "".concat(prefixCls2, "-clear-icon")
    }, null);
    var VcTreeSelectProps = _extends$1(_extends$1(_extends$1(_extends$1({}, this.$attrs), {
      switcherIcon: function switcherIcon(nodeProps) {
        return _this2.renderSwitcherIcon(prefixCls2, nodeProps);
      },
      inputIcon,
      removeIcon: finalRemoveIcon,
      clearIcon: finalClearIcon
    }), rest), {
      showSearch,
      getPopupContainer: getPopupContainer || getContextPopupContainer,
      dropdownClassName: classNames(dropdownClassName, "".concat(prefixCls2, "-tree-dropdown")),
      prefixCls: prefixCls2,
      dropdownStyle: _extends$1({
        maxHeight: "100vh",
        overflow: "auto"
      }, dropdownStyle),
      treeCheckable: checkable,
      notFoundContent: notFoundContent || renderEmpty2("Select"),
      class: cls,
      onChange: this.handleChange,
      onSearch: this.handleSearch,
      onTreeExpand: this.handleTreeExpand,
      ref: this.saveTreeSelect,
      treeData: treeData ? treeData : convertChildrenToData(getSlot(this))
    });
    return _createVNode$n(Select, _objectSpread2$2(_objectSpread2$2({}, VcTreeSelectProps), {}, {
      "__propsSymbol__": []
    }), omit$1(this.$slots, ["default"]));
  }
});
TreeSelect.install = function(app) {
  app.component(TreeSelect.name, TreeSelect);
  app.component(TreeSelect.TreeNode.displayName, TreeSelect.TreeNode);
  return app;
};
var TreeSelectNode = TreeSelect.TreeNode;
const { createVNode: _createVNode$m } = await importShared("vue");
const { defineComponent: defineComponent$8, inject: inject$3 } = await importShared("vue");
var timelineItemProps = {
  prefixCls: PropTypes.string,
  color: PropTypes.string,
  dot: PropTypes.any,
  pending: PropTypes.looseBool,
  position: PropTypes.oneOf(tuple("left", "right", "")).def("")
};
const TimelineItem = defineComponent$8({
  name: "ATimelineItem",
  props: initDefaultProps2(timelineItemProps, {
    color: "blue",
    pending: false
  }),
  setup: function setup154() {
    return {
      configProvider: inject$3("configProvider", defaultConfigProvider)
    };
  },
  render: function render156() {
    var _classNames, _classNames2;
    var _a, _b;
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, _getOptionProps$color = _getOptionProps.color, color = _getOptionProps$color === void 0 ? "" : _getOptionProps$color, pending = _getOptionProps.pending;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("timeline", customizePrefixCls);
    var dot = getComponent(this, "dot");
    var itemClassName = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-item"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-item-pending"), pending), _classNames));
    var dotClassName = classNames((_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-item-head"), true), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-item-head-custom"), dot), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-item-head-").concat(color), true), _classNames2));
    return _createVNode$m("li", {
      "class": itemClassName
    }, [_createVNode$m("div", {
      "class": "".concat(prefixCls2, "-item-tail")
    }, null), _createVNode$m("div", {
      "class": dotClassName,
      "style": {
        borderColor: /blue|red|green|gray/.test(color) ? void 0 : color
      }
    }, [dot]), _createVNode$m("div", {
      "class": "".concat(prefixCls2, "-item-content")
    }, [(_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)])]);
  }
});
const { createVNode: _createVNode$l } = await importShared("vue");
const { inject: inject$2, cloneVNode, defineComponent: defineComponent$7 } = await importShared("vue");
var timelineProps = {
  prefixCls: PropTypes.string,
  /** 指定最后一个幽灵节点是否存在或内容 */
  pending: PropTypes.any,
  pendingDot: PropTypes.string,
  reverse: PropTypes.looseBool,
  mode: PropTypes.oneOf(tuple("left", "alternate", "right", ""))
};
const Timeline = defineComponent$7({
  name: "ATimeline",
  props: initDefaultProps2(timelineProps, {
    reverse: false,
    mode: ""
  }),
  setup: function setup155() {
    return {
      configProvider: inject$2("configProvider", defaultConfigProvider)
    };
  },
  render: function render157() {
    var _classNames;
    var _a, _b;
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, reverse = _getOptionProps.reverse, mode4 = _getOptionProps.mode;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("timeline", customizePrefixCls);
    var pendingDot = getComponent(this, "pendingDot");
    var pending = getComponent(this, "pending");
    var pendingNode = typeof pending === "boolean" ? null : pending;
    var classString = classNames(prefixCls2, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-pending"), !!pending), _defineProperty$U(_classNames, "".concat(prefixCls2, "-reverse"), !!reverse), _defineProperty$U(_classNames, "".concat(prefixCls2, "-").concat(mode4), !!mode4), _classNames));
    var children = filterEmpty((_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a));
    var pendingItem = pending ? _createVNode$l(TimelineItem, {
      "pending": !!pending,
      "dot": pendingDot || _createVNode$l(LoadingOutlined, null, null)
    }, {
      default: function _default8() {
        return [pendingNode];
      }
    }) : null;
    var timeLineItems = reverse ? [pendingItem].concat(_toConsumableArray(children.reverse())) : [].concat(_toConsumableArray(children), [pendingItem]);
    var getPositionCls = function getPositionCls2(ele, idx) {
      var eleProps = getPropsData(ele);
      if (mode4 === "alternate") {
        if (eleProps.position === "right") return "".concat(prefixCls2, "-item-right");
        if (eleProps.position === "left") return "".concat(prefixCls2, "-item-left");
        return idx % 2 === 0 ? "".concat(prefixCls2, "-item-left") : "".concat(prefixCls2, "-item-right");
      }
      if (mode4 === "left") return "".concat(prefixCls2, "-item-left");
      if (mode4 === "right") return "".concat(prefixCls2, "-item-right");
      if (eleProps.position === "right") return "".concat(prefixCls2, "-item-right");
      return "";
    };
    var truthyItems = timeLineItems.filter(function(item) {
      return !!item;
    });
    var itemsCount = truthyItems.length;
    var lastCls = "".concat(prefixCls2, "-item-last");
    var items = truthyItems.map(function(ele, idx) {
      var pendingClass = idx === itemsCount - 2 ? lastCls : "";
      var readyClass = idx === itemsCount - 1 ? lastCls : "";
      return cloneVNode(ele, {
        class: classNames([!reverse && !!pending ? pendingClass : readyClass, getPositionCls(ele, idx)])
      });
    });
    return _createVNode$l("ul", {
      "class": classString
    }, [items]);
  }
});
Timeline.Item = TimelineItem;
Timeline.install = function(app) {
  app.component(Timeline.name, Timeline);
  app.component(TimelineItem.name, TimelineItem);
  return app;
};
var EnterOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M864 170h-60c-4.4 0-8 3.6-8 8v518H310v-73c0-6.7-7.8-10.5-13-6.3l-141.9 112a8 8 0 000 12.6l141.9 112c5.3 4.2 13 .4 13-6.3v-75h498c35.3 0 64-28.7 64-64V178c0-4.4-3.6-8-8-8z" } }] }, "name": "enter", "theme": "outlined" };
const { createVNode: _createVNode$k } = await importShared("vue");
function _objectSpread$6(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$6(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$6(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var EnterOutlined = function EnterOutlined2(props2, context2) {
  var p = _objectSpread$6({}, props2, context2.attrs);
  return _createVNode$k(Icon, _objectSpread$6({}, p, {
    "icon": EnterOutlined$1
  }), null);
};
EnterOutlined.displayName = "EnterOutlined";
EnterOutlined.inheritAttrs = false;
const { createVNode: _createVNode$j } = await importShared("vue");
const { defineComponent: defineComponent$6, ref: ref$1, reactive: reactive$1, watch: watch$1, onMounted: onMounted$1 } = await importShared("vue");
var Editable = defineComponent$6({
  name: "Editable",
  props: {
    prefixCls: PropTypes.string,
    value: PropTypes.string,
    maxlength: PropTypes.number,
    autoSize: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object]),
    onSave: PropTypes.func,
    onCancel: PropTypes.func,
    onEnd: PropTypes.func,
    onChange: PropTypes.func,
    originContent: PropTypes.string
  },
  emits: ["save", "cancel", "end", "change"],
  setup: function setup156(props2, _ref) {
    var emit = _ref.emit;
    var state = reactive$1({
      current: props2.value || "",
      lastKeyCode: void 0,
      inComposition: false,
      cancelFlag: false
    });
    watch$1(function() {
      return props2.value;
    }, function(current2) {
      state.current = current2;
    });
    var textArea = ref$1();
    onMounted$1(function() {
      var _a;
      if (textArea.value) {
        var resizableTextArea = (_a = textArea.value) === null || _a === void 0 ? void 0 : _a.resizableTextArea;
        var innerTextArea = resizableTextArea === null || resizableTextArea === void 0 ? void 0 : resizableTextArea.textArea;
        innerTextArea.focus();
        var length = innerTextArea.value.length;
        innerTextArea.setSelectionRange(length, length);
      }
    });
    function saveTextAreaRef(node) {
      textArea.value = node;
    }
    function onChange9(_ref2) {
      var value26 = _ref2.target.value;
      state.current = value26.replace(/[\r\n]/g, "");
      emit("change", state.current);
    }
    function onCompositionStart2() {
      state.inComposition = true;
    }
    function onCompositionEnd2() {
      state.inComposition = false;
    }
    function onKeyDown14(e2) {
      var keyCode = e2.keyCode;
      if (keyCode === KeyCode$1.ENTER) {
        e2.preventDefault();
      }
      if (state.inComposition) return;
      state.lastKeyCode = keyCode;
    }
    function onKeyUp3(e2) {
      var keyCode = e2.keyCode, ctrlKey = e2.ctrlKey, altKey = e2.altKey, metaKey = e2.metaKey, shiftKey = e2.shiftKey;
      if (state.lastKeyCode === keyCode && !state.inComposition && !ctrlKey && !altKey && !metaKey && !shiftKey) {
        if (keyCode === KeyCode$1.ENTER) {
          confirmChange();
          emit("end");
        } else if (keyCode === KeyCode$1.ESC) {
          state.current = props2.originContent;
          emit("cancel");
        }
      }
    }
    function onBlur7() {
      confirmChange();
      emit("end");
    }
    function confirmChange() {
      emit("save", state.current.trim());
    }
    return function() {
      return _createVNode$j("div", {
        "class": "".concat(props2.prefixCls, " ").concat(props2.prefixCls, "-edit-content")
      }, [_createVNode$j(TextArea, {
        "ref": saveTextAreaRef,
        "maxlength": props2.maxlength,
        "value": state.current,
        "onChange": onChange9,
        "onKeydown": onKeyDown14,
        "onKeyup": onKeyUp3,
        "onCompositionstart": onCompositionStart2,
        "onCompositionend": onCompositionEnd2,
        "onBlur": onBlur7,
        "autoSize": props2.autoSize === void 0 || props2.autoSize
      }, null), _createVNode$j(EnterOutlined, {
        "class": "".concat(props2.prefixCls, "-edit-content-confirm")
      }, null)]);
    };
  }
});
const { createVNode: _createVNode$i } = await importShared("vue");
const { createApp: createApp$1 } = await importShared("vue");
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var ellipsisContainer;
var wrapperStyle = {
  padding: 0,
  margin: 0,
  display: "inline",
  lineHeight: "inherit"
};
function pxToNumber(value26) {
  if (!value26) return 0;
  var match5 = value26.match(/^\d*(\.\d*)?/);
  return match5 ? Number(match5[0]) : 0;
}
function styleToString(style3) {
  var styleNames = Array.prototype.slice.apply(style3);
  return styleNames.map(function(name) {
    return "".concat(name, ": ").concat(style3.getPropertyValue(name), ";");
  }).join("");
}
const measure = function(originEle, option, content, fixedContent, ellipsisStr) {
  if (!ellipsisContainer) {
    ellipsisContainer = document.createElement("div");
    ellipsisContainer.setAttribute("aria-hidden", "true");
    document.body.appendChild(ellipsisContainer);
  }
  var rows = option.rows, _option$suffix = option.suffix, suffix = _option$suffix === void 0 ? "" : _option$suffix;
  var originStyle = window.getComputedStyle(originEle);
  var originCSS = styleToString(originStyle);
  var lineHeight = pxToNumber(originStyle.lineHeight);
  var maxHeight = Math.round(lineHeight * (rows + 1) + pxToNumber(originStyle.paddingTop) + pxToNumber(originStyle.paddingBottom));
  ellipsisContainer.setAttribute("style", originCSS);
  ellipsisContainer.style.position = "fixed";
  ellipsisContainer.style.left = "0";
  ellipsisContainer.style.height = "auto";
  ellipsisContainer.style.minHeight = "auto";
  ellipsisContainer.style.maxHeight = "auto";
  ellipsisContainer.style.top = "-999999px";
  ellipsisContainer.style.zIndex = "-1000";
  ellipsisContainer.style.textOverflow = "clip";
  ellipsisContainer.style.whiteSpace = "normal";
  ellipsisContainer.style.webkitLineClamp = "none";
  var vm = createApp$1({
    render: function render165() {
      return _createVNode$i("div", {
        "style": wrapperStyle
      }, [_createVNode$i("span", {
        "style": wrapperStyle
      }, [content, suffix]), _createVNode$i("span", {
        "style": wrapperStyle
      }, [fixedContent])]);
    }
  });
  vm.mount(ellipsisContainer);
  function inRange() {
    return ellipsisContainer.offsetHeight < maxHeight;
  }
  if (inRange()) {
    vm.unmount();
    return {
      content,
      text: ellipsisContainer.innerHTML,
      ellipsis: false
    };
  }
  var childNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[0].cloneNode(true).childNodes).filter(function(_ref) {
    var nodeType = _ref.nodeType, data79 = _ref.data;
    return nodeType !== COMMENT_NODE && data79 !== "";
  });
  var fixedNodes = Array.prototype.slice.apply(ellipsisContainer.childNodes[0].childNodes[1].cloneNode(true).childNodes);
  vm.unmount();
  var ellipsisChildren = [];
  ellipsisContainer.innerHTML = "";
  var ellipsisContentHolder = document.createElement("span");
  ellipsisContainer.appendChild(ellipsisContentHolder);
  var ellipsisTextNode = document.createTextNode(ellipsisStr + suffix);
  ellipsisContentHolder.appendChild(ellipsisTextNode);
  fixedNodes.forEach(function(childNode) {
    ellipsisContainer.appendChild(childNode);
  });
  function appendChildNode(node) {
    ellipsisContentHolder.insertBefore(node, ellipsisTextNode);
  }
  function measureText(textNode, fullText) {
    var startLoc = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
    var endLoc = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : fullText.length;
    var lastSuccessLoc = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0;
    var midLoc = Math.floor((startLoc + endLoc) / 2);
    var currentText = fullText.slice(0, midLoc);
    textNode.textContent = currentText;
    if (startLoc >= endLoc - 1) {
      for (var step = endLoc; step >= startLoc; step -= 1) {
        var currentStepText = fullText.slice(0, step);
        textNode.textContent = currentStepText;
        if (inRange() || !currentStepText) {
          return step === fullText.length ? {
            finished: false,
            vNode: fullText
          } : {
            finished: true,
            vNode: currentStepText
          };
        }
      }
    }
    if (inRange()) {
      return measureText(textNode, fullText, midLoc, endLoc, midLoc);
    }
    return measureText(textNode, fullText, startLoc, midLoc, lastSuccessLoc);
  }
  function measureNode(childNode) {
    var type3 = childNode.nodeType;
    if (type3 === TEXT_NODE) {
      var fullText = childNode.textContent || "";
      var textNode = document.createTextNode(fullText);
      appendChildNode(textNode);
      return measureText(textNode, fullText);
    }
    return {
      finished: false,
      vNode: null
    };
  }
  childNodes.some(function(childNode) {
    var _measureNode = measureNode(childNode), finished = _measureNode.finished, vNode = _measureNode.vNode;
    if (vNode) {
      ellipsisChildren.push(vNode);
    }
    return finished;
  });
  return {
    content: ellipsisChildren,
    text: ellipsisContainer.innerHTML,
    ellipsis: true
  };
};
const { createVNode: _createVNode$h } = await importShared("vue");
var __rest$4 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$5 } = await importShared("vue");
var Typography = defineComponent$5({
  name: "ATypography",
  inheritAttrs: false,
  setup: function setup157(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs;
    var _useConfigInject = useConfigInject("typography", props2), prefixCls2 = _useConfigInject.prefixCls;
    return function() {
      var _a;
      var _b = _extends$1(_extends$1({}, props2), attrs);
      _b.prefixCls;
      _b.class;
      var _b$component = _b.component, Component = _b$component === void 0 ? "article" : _b$component, restProps = __rest$4(_b, ["prefixCls", "class", "component"]);
      return _createVNode$h(Component, _objectSpread2$2({
        "class": classNames(prefixCls2.value, attrs.class)
      }, restProps), {
        default: function _default8() {
          return [(_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)];
        }
      });
    };
  }
});
Typography.props = {
  prefixCls: PropTypes.string,
  component: PropTypes.string
};
var deselectCurrent = function deselectCurrent2() {
  var selection = document.getSelection();
  if (!selection.rangeCount) {
    return function() {
    };
  }
  var active = document.activeElement;
  var ranges = [];
  for (var i2 = 0; i2 < selection.rangeCount; i2++) {
    ranges.push(selection.getRangeAt(i2));
  }
  switch (active.tagName.toUpperCase()) {
    case "INPUT":
    case "TEXTAREA":
      active.blur();
      break;
    default:
      active = null;
      break;
  }
  selection.removeAllRanges();
  return function() {
    selection.type === "Caret" && selection.removeAllRanges();
    if (!selection.rangeCount) {
      ranges.forEach(function(range2) {
        selection.addRange(range2);
      });
    }
    active && active.focus();
  };
};
var clipboardToIE11Formatting = {
  "text/plain": "Text",
  "text/html": "Url",
  default: "Text"
};
var defaultMessage = "Copy to clipboard: #{key}, Enter";
function format2(message) {
  var copyKey = (/mac os x/i.test(navigator.userAgent) ? "⌘" : "Ctrl") + "+C";
  return message.replace(/#{\s*key\s*}/g, copyKey);
}
function copy(text, options2) {
  var message, reselectPrevious, range2, selection, mark, success3 = false;
  if (!options2) {
    options2 = {};
  }
  var debug = options2.debug || false;
  try {
    reselectPrevious = deselectCurrent();
    range2 = document.createRange();
    selection = document.getSelection();
    mark = document.createElement("span");
    mark.textContent = text;
    mark.style.all = "unset";
    mark.style.position = "fixed";
    mark.style.top = 0;
    mark.style.clip = "rect(0, 0, 0, 0)";
    mark.style.whiteSpace = "pre";
    mark.style.webkitUserSelect = "text";
    mark.style.MozUserSelect = "text";
    mark.style.msUserSelect = "text";
    mark.style.userSelect = "text";
    mark.addEventListener("copy", function(e2) {
      e2.stopPropagation();
      if (options2.format) {
        e2.preventDefault();
        if (typeof e2.clipboardData === "undefined") {
          debug && console.warn("unable to use e.clipboardData");
          debug && console.warn("trying IE specific stuff");
          window.clipboardData.clearData();
          var _format = clipboardToIE11Formatting[options2.format] || clipboardToIE11Formatting["default"];
          window.clipboardData.setData(_format, text);
        } else {
          e2.clipboardData.clearData();
          e2.clipboardData.setData(options2.format, text);
        }
      }
      if (options2.onCopy) {
        e2.preventDefault();
        options2.onCopy(e2.clipboardData);
      }
    });
    document.body.appendChild(mark);
    range2.selectNodeContents(mark);
    selection.addRange(range2);
    var successful = document.execCommand("copy");
    if (!successful) {
      throw new Error("copy command was unsuccessful");
    }
    success3 = true;
  } catch (err) {
    debug && console.error("unable to copy using execCommand: ", err);
    debug && console.warn("trying IE specific stuff");
    try {
      window.clipboardData.setData(options2.format || "text", text);
      options2.onCopy && options2.onCopy(window.clipboardData);
      success3 = true;
    } catch (err2) {
      debug && console.error("unable to copy using clipboardData: ", err2);
      debug && console.error("falling back to prompt");
      message = format2("message" in options2 ? options2.message : defaultMessage);
      window.prompt(message, text);
    }
  } finally {
    if (selection) {
      if (typeof selection.removeRange == "function") {
        selection.removeRange(range2);
      } else {
        selection.removeAllRanges();
      }
    }
    if (mark) {
      document.body.removeChild(mark);
    }
    reselectPrevious();
  }
  return success3;
}
var CopyOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M832 64H296c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h496v688c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V96c0-17.7-14.3-32-32-32zM704 192H192c-17.7 0-32 14.3-32 32v530.7c0 8.5 3.4 16.6 9.4 22.6l173.3 173.3c2.2 2.2 4.7 4 7.4 5.5v1.9h4.2c3.5 1.3 7.2 2 11 2H704c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32zM350 856.2L263.9 770H350v86.2zM664 888H414V746c0-22.1-17.9-40-40-40H232V264h432v624z" } }] }, "name": "copy", "theme": "outlined" };
const { createVNode: _createVNode$g } = await importShared("vue");
function _objectSpread$5(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$5(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$5(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var CopyOutlined = function CopyOutlined2(props2, context2) {
  var p = _objectSpread$5({}, props2, context2.attrs);
  return _createVNode$g(Icon, _objectSpread$5({}, p, {
    "icon": CopyOutlined$1
  }), null);
};
CopyOutlined.displayName = "CopyOutlined";
CopyOutlined.inheritAttrs = false;
var EditOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z" } }] }, "name": "edit", "theme": "outlined" };
const { createVNode: _createVNode$f } = await importShared("vue");
function _objectSpread$4(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$4(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$4(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var EditOutlined = function EditOutlined2(props2, context2) {
  var p = _objectSpread$4({}, props2, context2.attrs);
  return _createVNode$f(Icon, _objectSpread$4({}, p, {
    "icon": EditOutlined$1
  }), null);
};
EditOutlined.displayName = "EditOutlined";
EditOutlined.inheritAttrs = false;
const { Fragment: _Fragment, createVNode: _createVNode$e } = await importShared("vue");
var __rest$3 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$4, reactive, ref, onMounted, onBeforeUnmount, watch, watchEffect, nextTick: nextTick$2, computed, toRaw } = await importShared("vue");
var isLineClampSupport = isStyleSupport("webkitLineClamp");
var isTextOverflowSupport = isStyleSupport("textOverflow");
var ELLIPSIS_STR = "...";
var Base = defineComponent$4({
  name: "Base",
  inheritAttrs: false,
  emits: ["update:content"],
  setup: function setup158(props2, _ref) {
    var slots = _ref.slots, attrs = _ref.attrs, emit = _ref.emit;
    var _useConfigInject = useConfigInject("typography", props2), prefixCls2 = _useConfigInject.prefixCls;
    var state = reactive({
      edit: false,
      copied: false,
      ellipsisText: "",
      ellipsisContent: null,
      isEllipsis: false,
      expanded: false,
      clientRendered: false,
      //locale
      expandStr: "",
      copyStr: "",
      copiedStr: "",
      editStr: "",
      copyId: void 0,
      rafId: void 0,
      prevProps: void 0,
      originContent: ""
    });
    var contentRef = ref();
    var editIcon = ref();
    var ellipsis = computed(function() {
      var ellipsis2 = props2.ellipsis;
      if (!ellipsis2) return {};
      return _extends$1({
        rows: 1,
        expandable: false
      }, _typeof$3(ellipsis2) === "object" ? ellipsis2 : null);
    });
    onMounted(function() {
      state.clientRendered = true;
    });
    onBeforeUnmount(function() {
      window.clearTimeout(state.copyId);
      wrapperRaf.cancel(state.rafId);
    });
    watch([function() {
      return ellipsis.value.rows;
    }, function() {
      return props2.content;
    }], function() {
      nextTick$2(function() {
        resizeOnNextFrame2();
      });
    }, {
      flush: "post",
      deep: true,
      immediate: true
    });
    watchEffect(function() {
      if (props2.content === void 0) {
        warning$5(!props2.editable, "Typography", "When `editable` is enabled, please use `content` instead of children");
        warning$5(!props2.ellipsis, "Typography", "When `ellipsis` is enabled, please use `content` instead of children");
      }
    });
    function getChildrenText() {
      var _a, _b;
      return props2.ellipsis || props2.editable ? props2.content : (_b = (_a = contentRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.innerText;
    }
    function onExpandClick(e2) {
      var onExpand3 = ellipsis.value.onExpand;
      state.expanded = true;
      onExpand3 === null || onExpand3 === void 0 ? void 0 : onExpand3(e2);
    }
    function onEditClick(e2) {
      e2.preventDefault();
      state.originContent = props2.content;
      triggerEdit(true);
    }
    function onEditChange(value26) {
      onContentChange(value26);
      triggerEdit(false);
    }
    function onContentChange(value26) {
      var onChange9 = editable.value.onChange;
      if (value26 !== props2.content) {
        emit("update:content", value26);
        onChange9 === null || onChange9 === void 0 ? void 0 : onChange9(value26);
      }
    }
    function onEditCancel() {
      var _a, _b;
      (_b = (_a = editable.value).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);
      triggerEdit(false);
    }
    function onCopyClick(e2) {
      e2.preventDefault();
      var copyable = props2.copyable;
      var copyConfig2 = _extends$1({}, _typeof$3(copyable) === "object" ? copyable : null);
      if (copyConfig2.text === void 0) {
        copyConfig2.text = getChildrenText();
      }
      copy(copyConfig2.text || "");
      state.copied = true;
      nextTick$2(function() {
        if (copyConfig2.onCopy) {
          copyConfig2.onCopy();
        }
        state.copyId = window.setTimeout(function() {
          state.copied = false;
        }, 3e3);
      });
    }
    var editable = computed(function() {
      var editable2 = props2.editable;
      if (!editable2) return {
        editing: state.edit
      };
      return _extends$1({
        editing: state.edit
      }, _typeof$3(editable2) === "object" ? editable2 : null);
    });
    function triggerEdit(edit) {
      var onStart4 = editable.value.onStart;
      if (edit && onStart4) {
        onStart4();
      }
      state.edit = edit;
      nextTick$2(function() {
        var _a;
        if (!edit) {
          (_a = editIcon.value) === null || _a === void 0 ? void 0 : _a.focus();
        }
      });
    }
    function resizeOnNextFrame2() {
      wrapperRaf.cancel(state.rafId);
      state.rafId = wrapperRaf(function() {
        syncEllipsis();
      });
    }
    var canUseCSSEllipsis = computed(function() {
      var _ellipsis$value = ellipsis.value, rows = _ellipsis$value.rows, expandable = _ellipsis$value.expandable, suffix = _ellipsis$value.suffix, onEllipsis = _ellipsis$value.onEllipsis, tooltip = _ellipsis$value.tooltip;
      if (suffix || tooltip) return false;
      if (props2.editable || props2.copyable || expandable || onEllipsis) {
        return false;
      }
      if (rows === 1) {
        return isTextOverflowSupport;
      }
      return isLineClampSupport;
    });
    var syncEllipsis = function syncEllipsis2() {
      var _a, _b;
      var ellipsisText = state.ellipsisText, isEllipsis = state.isEllipsis;
      var _ellipsis$value2 = ellipsis.value, rows = _ellipsis$value2.rows, suffix = _ellipsis$value2.suffix, onEllipsis = _ellipsis$value2.onEllipsis;
      if (!rows || rows < 0 || !((_a = contentRef.value) === null || _a === void 0 ? void 0 : _a.$el) || state.expanded || props2.content === void 0) return;
      if (canUseCSSEllipsis.value) return;
      var _measure = measure((_b = contentRef.value) === null || _b === void 0 ? void 0 : _b.$el, {
        rows,
        suffix
      }, props2.content, renderOperations(true), ELLIPSIS_STR), content = _measure.content, text = _measure.text, ell = _measure.ellipsis;
      if (ellipsisText !== text || state.isEllipsis !== ell) {
        state.ellipsisText = text;
        state.ellipsisContent = content;
        state.isEllipsis = ell;
        if (isEllipsis !== ell && onEllipsis) {
          onEllipsis(ell);
        }
      }
    };
    function wrapperDecorations(_ref2, content) {
      var mark = _ref2.mark, code = _ref2.code, underline = _ref2.underline, del = _ref2.delete, strong = _ref2.strong, keyboard = _ref2.keyboard;
      var currentContent = content;
      function wrap(needed, Tag2) {
        if (!needed) return;
        var _currentContent = /* @__PURE__ */ function() {
          return currentContent;
        }();
        currentContent = _createVNode$e(Tag2, null, {
          default: function _default8() {
            return [_currentContent];
          }
        });
      }
      wrap(strong, "strong");
      wrap(underline, "u");
      wrap(del, "del");
      wrap(code, "code");
      wrap(mark, "mark");
      wrap(keyboard, "kbd");
      return currentContent;
    }
    function renderExpand(forceRender) {
      var _ellipsis$value3 = ellipsis.value, expandable = _ellipsis$value3.expandable, symbol = _ellipsis$value3.symbol;
      if (!expandable) return null;
      if (!forceRender && (state.expanded || !state.isEllipsis)) return null;
      var expandContent = (slots.ellipsisSymbol ? slots.ellipsisSymbol() : symbol) || state.expandStr;
      return _createVNode$e("a", {
        "key": "expand",
        "class": "".concat(prefixCls2.value, "-expand"),
        "onClick": onExpandClick,
        "aria-label": state.expandStr
      }, [expandContent]);
    }
    function renderEdit() {
      if (!props2.editable) return;
      var tooltip = props2.editable.tooltip;
      var icon = slots.editableIcon ? slots.editableIcon() : _createVNode$e(EditOutlined, {
        "role": "button"
      }, null);
      var title = slots.editableTooltip ? slots.editableTooltip() : state.editStr;
      var ariaLabel = typeof title === "string" ? title : "";
      return _createVNode$e(Tooltip, {
        "key": "edit",
        "title": tooltip === false ? "" : title
      }, {
        default: function _default8() {
          return [_createVNode$e(TransButton, {
            "ref": editIcon,
            "class": "".concat(prefixCls2.value, "-edit"),
            "onClick": onEditClick,
            "aria-label": ariaLabel
          }, {
            default: function _default9() {
              return [icon];
            }
          })];
        }
      });
    }
    function renderCopy() {
      if (!props2.copyable) return;
      var tooltip = props2.copyable.tooltip;
      var defaultTitle2 = state.copied ? state.copiedStr : state.copyStr;
      var title = slots.copyableTooltip ? slots.copyableTooltip({
        copied: state.copied
      }) : defaultTitle2;
      var ariaLabel = typeof title === "string" ? title : "";
      var defaultIcon = state.copied ? _createVNode$e(CheckOutlined, null, null) : _createVNode$e(CopyOutlined, null, null);
      var icon = slots.copyableIcon ? slots.copyableIcon({
        copied: !!state.copied
      }) : defaultIcon;
      return _createVNode$e(Tooltip, {
        "key": "copy",
        "title": tooltip === false ? "" : title
      }, {
        default: function _default8() {
          return [_createVNode$e(TransButton, {
            "class": ["".concat(prefixCls2.value, "-copy"), _defineProperty$U({}, "".concat(prefixCls2.value, "-copy-success"), state.copied)],
            "onClick": onCopyClick,
            "aria-label": ariaLabel
          }, {
            default: function _default9() {
              return [icon];
            }
          })];
        }
      });
    }
    function renderEditInput() {
      var className = attrs.class, style3 = attrs.style;
      var _editable$value = editable.value, maxlength = _editable$value.maxlength, autoSize = _editable$value.autoSize, onEnd3 = _editable$value.onEnd;
      return _createVNode$e(Editable, {
        "class": className,
        "style": style3,
        "prefixCls": prefixCls2.value,
        "value": props2.content,
        "originContent": state.originContent,
        "maxlength": maxlength,
        "autoSize": autoSize,
        "onSave": onEditChange,
        "onChange": onContentChange,
        "onCancel": onEditCancel,
        "onEnd": onEnd3
      }, null);
    }
    function renderOperations(forceRenderExpanded) {
      return [renderExpand(forceRenderExpanded), renderEdit(), renderCopy()].filter(function(node) {
        return node;
      });
    }
    return function() {
      var _a;
      var editing = editable.value.editing;
      var _children = props2.ellipsis || props2.editable ? props2.content !== void 0 ? props2.content : (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots) : slots.default ? slots.default() : props2.content;
      if (editing) {
        return renderEditInput();
      }
      return _createVNode$e(LocaleReceiver, {
        "componentName": "Text",
        "children": function children(locale2) {
          var _ref4;
          var _a2 = _extends$1(_extends$1({}, props2), attrs), type3 = _a2.type, disabled = _a2.disabled;
          _a2.content;
          var className = _a2.class, style3 = _a2.style, restProps = __rest$3(_a2, ["type", "disabled", "content", "class", "style"]);
          var _ellipsis$value4 = ellipsis.value, rows = _ellipsis$value4.rows, suffix = _ellipsis$value4.suffix, tooltip = _ellipsis$value4.tooltip;
          var edit = locale2.edit, copyStr = locale2.copy, copied = locale2.copied, expand = locale2.expand;
          state.editStr = edit;
          state.copyStr = copyStr;
          state.copiedStr = copied;
          state.expandStr = expand;
          var textProps = omit$1(restProps, ["prefixCls", "editable", "copyable", "ellipsis", "mark", "code", "delete", "underline", "strong", "keyboard"]);
          var cssEllipsis = canUseCSSEllipsis.value;
          var cssTextOverflow = rows === 1 && cssEllipsis;
          var cssLineClamp = rows && rows > 1 && cssEllipsis;
          var textNode = _children;
          var ariaLabel;
          if (rows && state.isEllipsis && !state.expanded && !cssEllipsis) {
            var _title = restProps.title;
            var restContent = _title || "";
            if (!_title && (typeof _children === "string" || typeof _children === "number")) {
              restContent = String(_children);
            }
            restContent = restContent === null || restContent === void 0 ? void 0 : restContent.slice(String(state.ellipsisContent || "").length);
            textNode = _createVNode$e(_Fragment, null, [toRaw(state.ellipsisContent), _createVNode$e("span", {
              "title": restContent,
              "aria-hidden": "true"
            }, [ELLIPSIS_STR]), suffix]);
          } else {
            textNode = _createVNode$e(_Fragment, null, [_children, suffix]);
          }
          textNode = wrapperDecorations(props2, textNode);
          var showTooltip = tooltip && rows && state.isEllipsis && !state.expanded && !cssEllipsis;
          var title = slots.ellipsisTooltip ? slots.ellipsisTooltip() : tooltip;
          return _createVNode$e(ResizeObserver, {
            "onResize": resizeOnNextFrame2,
            "disabled": !rows
          }, {
            default: function _default8() {
              return [_createVNode$e(Typography, _objectSpread2$2({
                "ref": contentRef,
                "class": [(_ref4 = {}, _defineProperty$U(_ref4, "".concat(prefixCls2.value, "-").concat(type3), type3), _defineProperty$U(_ref4, "".concat(prefixCls2.value, "-disabled"), disabled), _defineProperty$U(_ref4, "".concat(prefixCls2.value, "-ellipsis"), rows), _defineProperty$U(_ref4, "".concat(prefixCls2.value, "-single-line"), rows === 1), _defineProperty$U(_ref4, "".concat(prefixCls2.value, "-ellipsis-single-line"), cssTextOverflow), _defineProperty$U(_ref4, "".concat(prefixCls2.value, "-ellipsis-multiple-line"), cssLineClamp), _ref4), className],
                "style": _extends$1(_extends$1({}, style3), {
                  WebkitLineClamp: cssLineClamp ? rows : void 0
                }),
                "aria-label": ariaLabel
              }, textProps), {
                default: function _default9() {
                  return [showTooltip ? _createVNode$e(Tooltip, {
                    "title": tooltip === true ? _children : title
                  }, {
                    default: function _default10() {
                      return [_createVNode$e("span", null, [textNode])];
                    }
                  }) : textNode, renderOperations()];
                }
              })];
            }
          });
        }
      }, null);
    };
  }
});
var baseProps = function baseProps2() {
  return {
    editable: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object]),
    copyable: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object]),
    prefixCls: PropTypes.string,
    component: PropTypes.string,
    type: PropTypes.oneOf(["secondary", "success", "danger", "warning"]),
    disabled: PropTypes.looseBool,
    ellipsis: PropTypes.oneOfType([PropTypes.looseBool, PropTypes.object]),
    code: PropTypes.looseBool,
    mark: PropTypes.looseBool,
    underline: PropTypes.looseBool,
    delete: PropTypes.looseBool,
    strong: PropTypes.looseBool,
    keyboard: PropTypes.looseBool,
    content: PropTypes.string
  };
};
Base.props = baseProps();
const { createVNode: _createVNode$d, resolveDirective: _resolveDirective$3 } = await importShared("vue");
var __rest$2 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
var Link = function Link2(props2, _ref) {
  var slots = _ref.slots, attrs = _ref.attrs;
  var _a = _extends$1(_extends$1({}, props2), attrs), ellipsis = _a.ellipsis, rel = _a.rel, restProps = __rest$2(_a, ["ellipsis", "rel"]);
  warning$5(_typeof$3(ellipsis) !== "object", "Typography.Link", "`ellipsis` only supports boolean value.");
  var mergedProps = _extends$1(_extends$1({}, restProps), {
    rel: rel === void 0 && restProps.target === "_blank" ? "noopener noreferrer" : rel,
    ellipsis: !!ellipsis,
    component: "a"
  });
  delete mergedProps.navigate;
  return _createVNode$d(Base, mergedProps, slots);
};
Link.displayName = "ATypographyLink";
Link.inheritAttrs = false;
Link.props = omit$1(_extends$1(_extends$1({}, baseProps()), {
  ellipsis: PropTypes.looseBool
}), ["component"]);
const { createVNode: _createVNode$c, resolveDirective: _resolveDirective$2 } = await importShared("vue");
var Paragraph = function Paragraph2(props2, _ref) {
  var slots = _ref.slots, attrs = _ref.attrs;
  var paragraphProps = _extends$1(_extends$1(_extends$1({}, props2), {
    component: "div"
  }), attrs);
  return _createVNode$c(Base, paragraphProps, slots);
};
Paragraph.displayName = "ATypographyParagraph";
Paragraph.inheritAttrs = false;
Paragraph.props = omit$1(baseProps(), ["component"]);
const { createVNode: _createVNode$b, resolveDirective: _resolveDirective$1 } = await importShared("vue");
var Text = function Text2(props2, _ref) {
  var slots = _ref.slots, attrs = _ref.attrs;
  var ellipsis = props2.ellipsis;
  warning$5(_typeof$3(ellipsis) !== "object" || !ellipsis || !("expandable" in ellipsis) && !("rows" in ellipsis), "Typography.Text", "`ellipsis` do not support `expandable` or `rows` props.");
  var textProps = _extends$1(_extends$1(_extends$1({}, props2), {
    ellipsis: ellipsis && _typeof$3(ellipsis) === "object" ? omit$1(ellipsis, ["expandable", "rows"]) : ellipsis,
    component: "span"
  }), attrs);
  return _createVNode$b(Base, textProps, slots);
};
Text.displayName = "ATypographyText";
Text.inheritAttrs = false;
Text.props = omit$1(baseProps(), ["component"]);
const { createVNode: _createVNode$a, resolveDirective: _resolveDirective } = await importShared("vue");
var __rest$1 = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
var TITLE_ELE_LIST = tupleNum(1, 2, 3, 4, 5);
var Title = function Title2(props2, _ref) {
  var slots = _ref.slots, attrs = _ref.attrs;
  var _props$level = props2.level, level2 = _props$level === void 0 ? 1 : _props$level, restProps = __rest$1(props2, ["level"]);
  var component;
  if (TITLE_ELE_LIST.indexOf(level2) !== -1) {
    component = "h".concat(level2);
  } else {
    warning$5(false, "Typography", "Title only accept `1 | 2 | 3 | 4 | 5` as `level` value.");
    component = "h1";
  }
  var titleProps = _extends$1(_extends$1(_extends$1({}, restProps), {
    component
  }), attrs);
  return _createVNode$a(Base, titleProps, slots);
};
Title.displayName = "ATypographyTitle";
Title.inheritAttrs = false;
Title.props = omit$1(_extends$1(_extends$1({}, baseProps()), {
  level: PropTypes.number
}), ["component", "strong"]);
Typography.Text = Text;
Typography.Title = Title;
Typography.Paragraph = Paragraph;
Typography.Link = Link;
Typography.Base = Base;
Typography.install = function(app) {
  app.component(Typography.name, Typography);
  app.component(Typography.Text.displayName, Text);
  app.component(Typography.Title.displayName, Title);
  app.component(Typography.Paragraph.displayName, Paragraph);
  app.component(Typography.Link.displayName, Link);
  return app;
};
function uniqBy(array3, iteratee) {
  return array3 && array3.length ? baseUniq(array3, baseIteratee(iteratee)) : [];
}
function arrayAggregator(array3, setter, iteratee, accumulator) {
  var index2 = -1, length = array3 == null ? 0 : array3.length;
  while (++index2 < length) {
    var value26 = array3[index2];
    setter(accumulator, value26, iteratee(value26), array3);
  }
  return accumulator;
}
function baseForOwn(object3, iteratee) {
  return object3 && baseFor(object3, iteratee, keys);
}
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length, index2 = -1, iterable = Object(collection);
    while (++index2 < length) {
      if (iteratee(iterable[index2], index2, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}
var baseEach = createBaseEach(baseForOwn);
function baseAggregator(collection, setter, iteratee, accumulator) {
  baseEach(collection, function(value26, key2, collection2) {
    setter(accumulator, value26, iteratee(value26), collection2);
  });
  return accumulator;
}
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
    return func(collection, setter, baseIteratee(iteratee), accumulator);
  };
}
var partition = createAggregator(function(result, value26, key2) {
  result[key2 ? 0 : 1].push(value26);
}, function() {
  return [[], []];
});
function getError(option, xhr) {
  var msg = "cannot ".concat(option.method, " ").concat(option.action, " ").concat(xhr.status, "'");
  var err = new Error(msg);
  err.status = xhr.status;
  err.method = option.method;
  err.url = option.action;
  return err;
}
function getBody(xhr) {
  var text = xhr.responseText || xhr.response;
  if (!text) {
    return text;
  }
  try {
    return JSON.parse(text);
  } catch (e2) {
    return text;
  }
}
function upload(option) {
  var xhr = new window.XMLHttpRequest();
  if (option.onProgress && xhr.upload) {
    xhr.upload.onprogress = function progress(e2) {
      if (e2.total > 0) {
        e2.percent = e2.loaded / e2.total * 100;
      }
      option.onProgress(e2);
    };
  }
  var formData = new window.FormData();
  if (option.data) {
    Object.keys(option.data).forEach(function(key2) {
      var value26 = option.data[key2];
      if (Array.isArray(value26)) {
        value26.forEach(function(item) {
          formData.append("".concat(key2, "[]"), item);
        });
        return;
      }
      formData.append(key2, option.data[key2]);
    });
  }
  formData.append(option.filename, option.file);
  xhr.onerror = function error3(e2) {
    option.onError(e2);
  };
  xhr.onload = function onload() {
    if (xhr.status < 200 || xhr.status >= 300) {
      return option.onError(getError(option, xhr), getBody(xhr));
    }
    option.onSuccess(getBody(xhr), xhr);
  };
  xhr.open(option.method, option.action, true);
  if (option.withCredentials && "withCredentials" in xhr) {
    xhr.withCredentials = true;
  }
  var headers = option.headers || {};
  if (headers["X-Requested-With"] !== null) {
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
  }
  for (var h2 in headers) {
    if (headers.hasOwnProperty(h2) && headers[h2] !== null) {
      xhr.setRequestHeader(h2, headers[h2]);
    }
  }
  xhr.send(formData);
  return {
    abort: function abort4() {
      xhr.abort();
    }
  };
}
var now = +/* @__PURE__ */ new Date();
var index = 0;
function uid() {
  return "vc-upload-".concat(now, "-").concat(++index);
}
function endsWith(str, suffix) {
  return str.indexOf(suffix, str.length - suffix.length) !== -1;
}
const attrAccept = function(file, acceptedFiles) {
  if (file && acceptedFiles) {
    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
    var fileName = file.name || "";
    var mimeType = file.type || "";
    var baseMimeType = mimeType.replace(/\/.*$/, "");
    return acceptedFilesArray.some(function(type3) {
      var validType = type3.trim();
      if (validType.charAt(0) === ".") {
        return endsWith(fileName.toLowerCase(), validType.toLowerCase());
      } else if (/\/\*$/.test(validType)) {
        return baseMimeType === validType.replace(/\/.*$/, "");
      }
      return mimeType === validType;
    });
  }
  return true;
};
function loopFiles(item, callback) {
  var dirReader = item.createReader();
  var fileList2 = [];
  function sequence() {
    dirReader.readEntries(function(entries) {
      var entryList = Array.prototype.slice.apply(entries);
      fileList2 = fileList2.concat(entryList);
      var isFinished = !entryList.length;
      if (isFinished) {
        callback(fileList2);
      } else {
        sequence();
      }
    });
  }
  sequence();
}
var traverseFileTree = function traverseFileTree2(files, callback, isAccepted) {
  var _traverseFileTree = function _traverseFileTree2(item, path2) {
    path2 = path2 || "";
    if (item.isFile) {
      item.file(function(file2) {
        if (isAccepted(file2)) {
          if (item.fullPath && !file2.webkitRelativePath) {
            Object.defineProperties(file2, {
              webkitRelativePath: {
                writable: true
              }
            });
            file2.webkitRelativePath = item.fullPath.replace(/^\//, "");
            Object.defineProperties(file2, {
              webkitRelativePath: {
                writable: false
              }
            });
          }
          callback([file2]);
        }
      });
    } else if (item.isDirectory) {
      loopFiles(item, function(entries) {
        entries.forEach(function(entryItem) {
          _traverseFileTree2(entryItem, "".concat(path2).concat(item.name, "/"));
        });
      });
    }
  };
  var _iterator = _createForOfIteratorHelper(files), _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done; ) {
      var file = _step.value;
      _traverseFileTree(file.webkitGetAsEntry());
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};
const { createVNode: _createVNode$9 } = await importShared("vue");
var upLoadPropTypes = {
  componentTag: PropTypes.string,
  // style: PropTypes.object,
  prefixCls: PropTypes.string,
  name: PropTypes.string,
  // className: PropTypes.string,
  multiple: PropTypes.looseBool,
  directory: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  accept: PropTypes.string,
  // children: PropTypes.any,
  // onStart: PropTypes.func,
  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
  action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  headers: PropTypes.object,
  beforeUpload: PropTypes.func,
  customRequest: PropTypes.func,
  // onProgress: PropTypes.func,
  withCredentials: PropTypes.looseBool,
  openFileDialogOnClick: PropTypes.looseBool,
  transformFile: PropTypes.func,
  method: PropTypes.string
};
var AjaxUploader = {
  inheritAttrs: false,
  name: "ajaxUploader",
  mixins: [BaseMixin],
  props: upLoadPropTypes,
  data: function data75() {
    this.reqs = {};
    return {
      uid: uid()
    };
  },
  mounted: function mounted42() {
    this._isMounted = true;
  },
  beforeUnmount: function beforeUnmount30() {
    this._isMounted = false;
    this.abort();
  },
  methods: {
    onChange: function onChange7(e2) {
      var files = e2.target.files;
      this.uploadFiles(files);
      this.reset();
    },
    onClick: function onClick6() {
      var el = this.$refs.fileInputRef;
      if (!el) {
        return;
      }
      el.click();
    },
    onKeyDown: function onKeyDown13(e2) {
      if (e2.key === "Enter") {
        this.onClick();
      }
    },
    onFileDrop: function onFileDrop(e2) {
      var _this = this;
      var multiple = this.$props.multiple;
      e2.preventDefault();
      if (e2.type === "dragover") {
        return;
      }
      if (this.directory) {
        traverseFileTree(e2.dataTransfer.items, this.uploadFiles, function(_file) {
          return attrAccept(_file, _this.accept);
        });
      } else {
        var files = partition(Array.prototype.slice.call(e2.dataTransfer.files), function(file) {
          return attrAccept(file, _this.accept);
        });
        var successFiles = files[0];
        var errorFiles = files[1];
        if (multiple === false) {
          successFiles = successFiles.slice(0, 1);
        }
        this.uploadFiles(successFiles);
        if (errorFiles.length) {
          this.__emit("reject", errorFiles);
        }
      }
    },
    uploadFiles: function uploadFiles(files) {
      var _this2 = this;
      var postFiles = Array.prototype.slice.call(files);
      postFiles.map(function(file) {
        file.uid = uid();
        return file;
      }).forEach(function(file) {
        _this2.upload(file, postFiles);
      });
    },
    upload: function upload2(file, fileList2) {
      var _this3 = this;
      if (!this.beforeUpload) {
        return setTimeout(function() {
          return _this3.post(file);
        }, 0);
      }
      var before = this.beforeUpload(file, fileList2);
      if (before && before.then) {
        before.then(function(processedFile) {
          var processedFileType = Object.prototype.toString.call(processedFile);
          if (processedFileType === "[object File]" || processedFileType === "[object Blob]") {
            return _this3.post(processedFile);
          }
          return _this3.post(file);
        }).catch(function(e2) {
          console && console.log(e2);
        });
      } else if (before !== false) {
        setTimeout(function() {
          return _this3.post(file);
        }, 0);
      }
    },
    post: function post(file) {
      var _this4 = this;
      if (!this._isMounted) {
        return;
      }
      var props2 = this.$props;
      var data79 = props2.data;
      var _props$transformFile = props2.transformFile, transformFile = _props$transformFile === void 0 ? function(originFile) {
        return originFile;
      } : _props$transformFile;
      new Promise(function(resolve) {
        var action = _this4.action;
        if (typeof action === "function") {
          return resolve(action(file));
        }
        resolve(action);
      }).then(function(action) {
        var uid2 = file.uid;
        var request = _this4.customRequest || upload;
        var transform = Promise.resolve(transformFile(file)).catch(function(e2) {
          console.error(e2);
        });
        transform.then(function(transformedFile) {
          if (typeof data79 === "function") {
            data79 = data79(file);
          }
          var requestOption = {
            action,
            filename: _this4.name,
            data: data79,
            file: transformedFile,
            headers: _this4.headers,
            withCredentials: _this4.withCredentials,
            method: props2.method || "post",
            onProgress: function onProgress2(e2) {
              _this4.__emit("progress", e2, file);
            },
            onSuccess: function onSuccess2(ret, xhr) {
              delete _this4.reqs[uid2];
              _this4.__emit("success", ret, file, xhr);
            },
            onError: function onError2(err, ret) {
              delete _this4.reqs[uid2];
              _this4.__emit("error", err, ret, file);
            }
          };
          _this4.reqs[uid2] = request(requestOption);
          _this4.__emit("start", file);
        });
      });
    },
    reset: function reset() {
      this.setState({
        uid: uid()
      });
    },
    abort: function abort(file) {
      var reqs = this.reqs;
      if (file) {
        var uid2 = file;
        if (file && file.uid) {
          uid2 = file.uid;
        }
        if (reqs[uid2] && reqs[uid2].abort) {
          reqs[uid2].abort();
        }
        delete reqs[uid2];
      } else {
        Object.keys(reqs).forEach(function(uid3) {
          if (reqs[uid3] && reqs[uid3].abort) {
            reqs[uid3].abort();
          }
          delete reqs[uid3];
        });
      }
    }
  },
  render: function render158() {
    var _classNames, _this5 = this;
    var $props = this.$props, $attrs = this.$attrs;
    var Tag2 = $props.componentTag, prefixCls2 = $props.prefixCls, disabled = $props.disabled, multiple = $props.multiple, accept = $props.accept, directory = $props.directory, openFileDialogOnClick = $props.openFileDialogOnClick;
    var className = $attrs.class, style3 = $attrs.style, id2 = $attrs.id;
    var cls = classNames((_classNames = {}, _defineProperty$U(_classNames, prefixCls2, true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, className, className), _classNames));
    var events = disabled ? {} : {
      onClick: openFileDialogOnClick ? this.onClick : function() {
      },
      onKeydown: openFileDialogOnClick ? this.onKeyDown : function() {
      },
      onDrop: this.onFileDrop,
      onDragover: this.onFileDrop
    };
    var tagProps2 = _extends$1(_extends$1({}, events), {
      role: "button",
      tabindex: disabled ? null : "0",
      class: cls,
      style: style3
    });
    return _createVNode$9(Tag2, tagProps2, {
      default: function _default8() {
        return [_createVNode$9("input", {
          "id": id2,
          "type": "file",
          "ref": "fileInputRef",
          "onClick": function onClick7(e2) {
            return e2.stopPropagation();
          },
          "key": _this5.uid,
          "style": {
            display: "none"
          },
          "accept": accept,
          "directory": directory ? "directory" : null,
          "webkitdirectory": directory ? "webkitdirectory" : null,
          "multiple": multiple,
          "onChange": _this5.onChange
        }, null), getSlot(_this5)];
      }
    });
  }
};
const { createVNode: _createVNode$8 } = await importShared("vue");
var IFRAME_STYLE = {
  position: "absolute",
  top: 0,
  opacity: 0,
  filter: "alpha(opacity=0)",
  left: 0,
  zIndex: 9999
};
var IframeUploader = {
  name: "IframeUploader",
  mixins: [BaseMixin],
  props: {
    componentTag: PropTypes.string,
    // style: PropTypes.object,
    disabled: PropTypes.looseBool,
    prefixCls: PropTypes.string,
    // className: PropTypes.string,
    accept: PropTypes.string,
    // onStart: PropTypes.func,
    multiple: PropTypes.looseBool,
    // children: PropTypes.any,
    data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
    action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
    name: PropTypes.string
  },
  data: function data76() {
    this.file = {};
    return {
      uploading: false
    };
  },
  methods: {
    onLoad: function onLoad2() {
      if (!this.uploading) {
        return;
      }
      var file = this.file;
      var response;
      try {
        var doc = this.getIframeDocument();
        var script = doc.getElementsByTagName("script")[0];
        if (script && script.parentNode === doc.body) {
          doc.body.removeChild(script);
        }
        response = doc.body.innerHTML;
        this.__emit("success", response, file);
      } catch (err) {
        warning$5(false, "cross domain error for Upload. Maybe server should return document.domain script. see Note from https://github.com/react-component/upload");
        response = "cross-domain";
        this.__emit("error", err, null, file);
      }
      this.endUpload();
    },
    onChange: function onChange8() {
      var _this = this;
      var target = this.getFormInputNode();
      var file = this.file = {
        uid: uid(),
        name: target.value && target.value.substring(target.value.lastIndexOf("\\") + 1, target.value.length)
      };
      this.startUpload();
      var props2 = this.$props;
      if (!props2.beforeUpload) {
        return this.post(file);
      }
      var before = props2.beforeUpload(file);
      if (before && before.then) {
        before.then(function() {
          _this.post(file);
        }, function() {
          _this.endUpload();
        });
      } else if (before !== false) {
        this.post(file);
      } else {
        this.endUpload();
      }
    },
    getIframeNode: function getIframeNode() {
      return this.$refs.iframeRef;
    },
    getIframeDocument: function getIframeDocument() {
      return this.getIframeNode().contentDocument;
    },
    getFormNode: function getFormNode() {
      return this.getIframeDocument().getElementById("form");
    },
    getFormInputNode: function getFormInputNode() {
      return this.getIframeDocument().getElementById("input");
    },
    getFormDataNode: function getFormDataNode() {
      return this.getIframeDocument().getElementById("data");
    },
    getFileForMultiple: function getFileForMultiple(file) {
      return this.multiple ? [file] : file;
    },
    getIframeHTML: function getIframeHTML(domain) {
      var domainScript = "";
      var domainInput = "";
      if (domain) {
        var script = "script";
        domainScript = "<".concat(script, '>document.domain="').concat(domain, '";</').concat(script, ">");
        domainInput = '<input name="_documentDomain" value="'.concat(domain, '" />');
      }
      return '\n      <!DOCTYPE html>\n      <html>\n      <head>\n      <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n      <style>\n      body,html {padding:0;margin:0;border:0;overflow:hidden;}\n      </style>\n      '.concat(domainScript, '\n      </head>\n      <body>\n      <form method="post"\n      encType="multipart/form-data"\n      action="" id="form"\n      style="display:block;height:9999px;position:relative;overflow:hidden;">\n      <input id="input" type="file"\n       name="').concat(this.name, '"\n       style="position:absolute;top:0;right:0;height:9999px;font-size:9999px;cursor:pointer;"/>\n      ').concat(domainInput, '\n      <span id="data"></span>\n      </form>\n      </body>\n      </html>\n      ');
    },
    initIframeSrc: function initIframeSrc() {
      if (this.domain) {
        this.getIframeNode().src = "javascript:void((function(){\n          var d = document;\n          d.open();\n          d.domain='".concat(this.domain, "';\n          d.write('');\n          d.close();\n        })())");
      }
    },
    initIframe: function initIframe() {
      var iframeNode = this.getIframeNode();
      var win = iframeNode.contentWindow;
      var doc;
      this.domain = this.domain || "";
      this.initIframeSrc();
      try {
        doc = win.document;
      } catch (e2) {
        this.domain = document.domain;
        this.initIframeSrc();
        win = iframeNode.contentWindow;
        doc = win.document;
      }
      doc.open("text/html", "replace");
      doc.write(this.getIframeHTML(this.domain));
      doc.close();
      this.getFormInputNode().onchange = this.onChange;
    },
    endUpload: function endUpload() {
      if (this.uploading) {
        this.file = {};
        this.uploading = false;
        this.setState({
          uploading: false
        });
        this.initIframe();
      }
    },
    startUpload: function startUpload() {
      if (!this.uploading) {
        this.uploading = true;
        this.setState({
          uploading: true
        });
      }
    },
    updateIframeWH: function updateIframeWH() {
      var rootNode = findDOMNode(this);
      var iframeNode = this.getIframeNode();
      iframeNode.style.height = "".concat(rootNode.offsetHeight, "px");
      iframeNode.style.width = "".concat(rootNode.offsetWidth, "px");
    },
    abort: function abort2(file) {
      if (file) {
        var uid2 = file;
        if (file && file.uid) {
          uid2 = file.uid;
        }
        if (uid2 === this.file.uid) {
          this.endUpload();
        }
      } else {
        this.endUpload();
      }
    },
    post: function post2(file) {
      var _this2 = this;
      var formNode = this.getFormNode();
      var dataSpan = this.getFormDataNode();
      var data79 = this.$props.data;
      if (typeof data79 === "function") {
        data79 = data79(file);
      }
      var inputs = document.createDocumentFragment();
      for (var key2 in data79) {
        if (data79.hasOwnProperty(key2)) {
          var input = document.createElement("input");
          input.setAttribute("name", key2);
          input.value = data79[key2];
          inputs.appendChild(input);
        }
      }
      dataSpan.appendChild(inputs);
      new Promise(function(resolve) {
        var action = _this2.action;
        if (typeof action === "function") {
          return resolve(action(file));
        }
        resolve(action);
      }).then(function(action) {
        formNode.setAttribute("action", action);
        formNode.submit();
        dataSpan.innerHTML = "";
        _this2.__emit("start", file);
      });
    }
  },
  mounted: function mounted43() {
    var _this3 = this;
    this.$nextTick(function() {
      _this3.updateIframeWH();
      _this3.initIframe();
    });
  },
  updated: function updated26() {
    var _this4 = this;
    this.$nextTick(function() {
      _this4.updateIframeWH();
    });
  },
  render: function render159() {
    var _classNames, _this5 = this;
    var _this$$props = this.$props, Tag2 = _this$$props.componentTag, disabled = _this$$props.disabled, prefixCls2 = _this$$props.prefixCls;
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    var iframeStyle = _extends$1(_extends$1({}, IFRAME_STYLE), {
      display: this.uploading || disabled ? "none" : ""
    });
    var cls = classNames((_classNames = {}, _defineProperty$U(_classNames, prefixCls2, true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _defineProperty$U(_classNames, className, className), _classNames));
    return _createVNode$8(Tag2, {
      "class": cls,
      "style": _extends$1({
        position: "relative",
        zIndex: 0
      }, style3)
    }, {
      default: function _default8() {
        return [_createVNode$8("iframe", {
          "ref": "iframeRef",
          "onLoad": _this5.onLoad,
          "style": iframeStyle
        }, null), getSlot(_this5)];
      }
    });
  }
};
const { createVNode: _createVNode$7 } = await importShared("vue");
const { defineComponent: defineComponent$3, nextTick: nextTick$1 } = await importShared("vue");
function empty() {
}
var uploadProps = {
  componentTag: PropTypes.string,
  prefixCls: PropTypes.string,
  action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  name: PropTypes.string,
  multipart: PropTypes.looseBool,
  directory: PropTypes.looseBool,
  onError: PropTypes.func,
  onSuccess: PropTypes.func,
  onProgress: PropTypes.func,
  onStart: PropTypes.func,
  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
  headers: PropTypes.object,
  accept: PropTypes.string,
  multiple: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  beforeUpload: PropTypes.func,
  customRequest: PropTypes.func,
  onReady: PropTypes.func,
  withCredentials: PropTypes.looseBool,
  supportServerRender: PropTypes.looseBool,
  openFileDialogOnClick: PropTypes.looseBool,
  method: PropTypes.string
};
const Upload$1 = defineComponent$3({
  name: "Upload",
  mixins: [BaseMixin],
  inheritAttrs: false,
  props: initDefaultProps$1(uploadProps, {
    componentTag: "span",
    prefixCls: "rc-upload",
    data: {},
    headers: {},
    name: "file",
    multipart: false,
    onReady: empty,
    onStart: empty,
    onError: empty,
    onSuccess: empty,
    supportServerRender: false,
    multiple: false,
    beforeUpload: empty,
    withCredentials: false,
    openFileDialogOnClick: true
  }),
  data: function data77() {
    this.Component = null;
    return {
      // Component: null, // 组件作为响应式数据，性能比较低，采用强制刷新
    };
  },
  mounted: function mounted44() {
    var _this = this;
    this.$nextTick(function() {
      if (_this.supportServerRender) {
        _this.Component = _this.getComponent();
        _this.$forceUpdate();
        nextTick$1(function() {
          _this.__emit("ready");
        });
      }
    });
  },
  methods: {
    getComponent: function getComponent3() {
      return typeof File !== "undefined" ? AjaxUploader : IframeUploader;
    },
    abort: function abort3(file) {
      this.$refs.uploaderRef.abort(file);
    }
  },
  render: function render160() {
    var _this2 = this;
    var componentProps = _extends$1(_extends$1(_extends$1({}, this.$props), {
      ref: "uploaderRef"
    }), this.$attrs);
    if (this.supportServerRender) {
      var _ComponentUploader = this.Component;
      if (_ComponentUploader) {
        return _createVNode$7(_ComponentUploader, componentProps, {
          default: function _default8() {
            return [getSlot(_this2)];
          }
        });
      }
      return null;
    }
    var ComponentUploader = this.getComponent();
    return _createVNode$7(ComponentUploader, componentProps, {
      default: function _default8() {
        return [getSlot(_this2)];
      }
    });
  }
});
PropTypes.oneOf(tuple("error", "success", "done", "uploading", "removed"));
function UploadFile(_ref) {
  var uid2 = _ref.uid, name = _ref.name;
  if (!uid2 && uid2 !== 0) return false;
  if (!["string", "number"].includes(_typeof$3(uid2))) return false;
  if (name === "" || typeof name !== "string") return false;
  return true;
}
({
  file: PropTypes.custom(UploadFile),
  fileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  event: PropTypes.object
});
var ShowUploadListInterface = PropTypes.shape({
  showRemoveIcon: PropTypes.looseBool,
  showPreviewIcon: PropTypes.looseBool
}).loose;
var UploadLocale = PropTypes.shape({
  uploading: PropTypes.string,
  removeFile: PropTypes.string,
  downloadFile: PropTypes.string,
  uploadError: PropTypes.string,
  previewFile: PropTypes.string
}).loose;
var UploadProps = {
  type: PropTypes.oneOf(tuple("drag", "select")),
  name: PropTypes.string,
  defaultFileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  fileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  action: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),
  directory: PropTypes.looseBool,
  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),
  method: PropTypes.oneOf(tuple("POST", "PUT", "PATCH", "post", "put", "patch")),
  headers: PropTypes.object,
  showUploadList: PropTypes.oneOfType([PropTypes.looseBool, ShowUploadListInterface]),
  multiple: PropTypes.looseBool,
  accept: PropTypes.string,
  beforeUpload: PropTypes.func,
  listType: PropTypes.oneOf(tuple("text", "picture", "picture-card")),
  // className: PropsTypes.string,
  remove: PropTypes.func,
  supportServerRender: PropTypes.looseBool,
  // style: PropsTypes.object,
  disabled: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  customRequest: PropTypes.func,
  withCredentials: PropTypes.looseBool,
  openFileDialogOnClick: PropTypes.looseBool,
  locale: UploadLocale,
  height: PropTypes.number,
  id: PropTypes.string,
  previewFile: PropTypes.func,
  transformFile: PropTypes.func,
  onChange: PropTypes.func,
  onPreview: PropTypes.func,
  onRemove: PropTypes.func,
  onDownload: PropTypes.func,
  "onUpdate:fileList": PropTypes.func
};
({
  fileList: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  dragState: PropTypes.string
});
var UploadListProps = {
  listType: PropTypes.oneOf(tuple("text", "picture", "picture-card")),
  // items: PropsTypes.arrayOf(UploadFile),
  items: PropTypes.arrayOf(PropTypes.custom(UploadFile)),
  // items: PropsTypes.any,
  progressAttr: PropTypes.object,
  prefixCls: PropTypes.string,
  showRemoveIcon: PropTypes.looseBool,
  showDownloadIcon: PropTypes.looseBool,
  showPreviewIcon: PropTypes.looseBool,
  locale: UploadLocale,
  previewFile: PropTypes.func,
  onPreview: PropTypes.func,
  onRemove: PropTypes.func,
  onDownload: PropTypes.func
};
const { createVNode: _createVNode$6 } = await importShared("vue");
var __rest = function(s2, e2) {
  var t2 = {};
  for (var p in s2) {
    if (Object.prototype.hasOwnProperty.call(s2, p) && e2.indexOf(p) < 0) t2[p] = s2[p];
  }
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function") for (var i2 = 0, p = Object.getOwnPropertySymbols(s2); i2 < p.length; i2++) {
    if (e2.indexOf(p[i2]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i2])) t2[p[i2]] = s2[p[i2]];
  }
  return t2;
};
const { defineComponent: defineComponent$2 } = await importShared("vue");
const Dragger = defineComponent$2({
  name: "AUploadDragger",
  inheritAttrs: false,
  props: UploadProps,
  render: function render161() {
    var _this = this;
    var props2 = getOptionProps(this);
    var height = props2.height, restProps = __rest(props2, ["height"]);
    var _a = this.$attrs, style3 = _a.style, restAttrs = __rest(_a, ["style"]);
    var draggerProps = _extends$1(_extends$1(_extends$1({}, restProps), restAttrs), {
      type: "drag",
      style: _extends$1(_extends$1({}, style3), {
        height
      })
    });
    return _createVNode$6(Upload, draggerProps, {
      default: function _default8() {
        return [getSlot(_this)];
      }
    });
  }
});
function T() {
  return true;
}
function fileToObject(file) {
  return _extends$1(_extends$1({}, file), {
    lastModified: file.lastModified,
    lastModifiedDate: file.lastModifiedDate,
    name: file.name,
    size: file.size,
    type: file.type,
    uid: file.uid,
    percent: 0,
    originFileObj: file
  });
}
function genPercentAdd() {
  var k2 = 0.1;
  var i2 = 0.01;
  var end = 0.98;
  return function(s2) {
    var start = s2;
    if (start >= end) {
      return start;
    }
    start += k2;
    k2 = k2 - i2;
    if (k2 < 1e-3) {
      k2 = 1e-3;
    }
    return start;
  };
}
function getFileItem(file, fileList2) {
  var matchKey = file.uid !== void 0 ? "uid" : "name";
  return fileList2.filter(function(item) {
    return item[matchKey] === file[matchKey];
  })[0];
}
function removeFileItem(file, fileList2) {
  var matchKey = file.uid !== void 0 ? "uid" : "name";
  var removed = fileList2.filter(function(item) {
    return item[matchKey] !== file[matchKey];
  });
  if (removed.length === fileList2.length) {
    return null;
  }
  return removed;
}
var extname = function extname2() {
  var url2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var temp = url2.split("/");
  var filename = temp[temp.length - 1];
  var filenameWithoutSuffix = filename.split(/#|\?/)[0];
  return (/\.[^./\\]*$/.exec(filenameWithoutSuffix) || [""])[0];
};
var isImageFileType = function isImageFileType2(type3) {
  return !!type3 && type3.indexOf("image/") === 0;
};
var isImageUrl = function isImageUrl2(file) {
  if (isImageFileType(file.type)) {
    return true;
  }
  var url2 = file.thumbUrl || file.url;
  var extension = extname(url2);
  if (/^data:image\//.test(url2) || /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {
    return true;
  }
  if (/^data:/.test(url2)) {
    return false;
  }
  if (extension) {
    return false;
  }
  return true;
};
var MEASURE_SIZE = 200;
function previewImage(file) {
  return new Promise(function(resolve) {
    if (!isImageFileType(file.type)) {
      resolve("");
      return;
    }
    var canvas = document.createElement("canvas");
    canvas.width = MEASURE_SIZE;
    canvas.height = MEASURE_SIZE;
    canvas.style.cssText = "position: fixed; left: 0; top: 0; width: ".concat(MEASURE_SIZE, "px; height: ").concat(MEASURE_SIZE, "px; z-index: 9999; display: none;");
    document.body.appendChild(canvas);
    var ctx = canvas.getContext("2d");
    var img = new Image();
    img.onload = function() {
      var width = img.width, height = img.height;
      var drawWidth = MEASURE_SIZE;
      var drawHeight = MEASURE_SIZE;
      var offsetX = 0;
      var offsetY = 0;
      if (width < height) {
        drawHeight = height * (MEASURE_SIZE / width);
        offsetY = -(drawHeight - drawWidth) / 2;
      } else {
        drawWidth = width * (MEASURE_SIZE / height);
        offsetX = -(drawWidth - drawHeight) / 2;
      }
      ctx.drawImage(img, offsetX, offsetY, drawWidth, drawHeight);
      var dataURL = canvas.toDataURL();
      document.body.removeChild(canvas);
      resolve(dataURL);
    };
    img.src = window.URL.createObjectURL(file);
  });
}
var PaperClipOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 00174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z" } }] }, "name": "paper-clip", "theme": "outlined" };
const { createVNode: _createVNode$5 } = await importShared("vue");
function _objectSpread$3(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$3(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$3(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var PaperClipOutlined = function PaperClipOutlined2(props2, context2) {
  var p = _objectSpread$3({}, props2, context2.attrs);
  return _createVNode$5(Icon, _objectSpread$3({}, p, {
    "icon": PaperClipOutlined$1
  }), null);
};
PaperClipOutlined.displayName = "PaperClipOutlined";
PaperClipOutlined.inheritAttrs = false;
var PictureTwoTone$1 = { "icon": function render162(primaryColor, secondaryColor) {
  return { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2z", "fill": primaryColor } }, { "tag": "path", "attrs": { "d": "M424.6 765.8l-150.1-178L136 752.1V792h752v-30.4L658.1 489z", "fill": secondaryColor } }, { "tag": "path", "attrs": { "d": "M136 652.7l132.4-157c3.2-3.8 9-3.8 12.2 0l144 170.7L652 396.8c3.2-3.8 9-3.8 12.2 0L888 662.2V232H136v420.7zM304 280a88 88 0 110 176 88 88 0 010-176z", "fill": secondaryColor } }, { "tag": "path", "attrs": { "d": "M276 368a28 28 0 1056 0 28 28 0 10-56 0z", "fill": secondaryColor } }, { "tag": "path", "attrs": { "d": "M304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z", "fill": primaryColor } }] };
}, "name": "picture", "theme": "twotone" };
const { createVNode: _createVNode$4 } = await importShared("vue");
function _objectSpread$2(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$2(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$2(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var PictureTwoTone = function PictureTwoTone2(props2, context2) {
  var p = _objectSpread$2({}, props2, context2.attrs);
  return _createVNode$4(Icon, _objectSpread$2({}, p, {
    "icon": PictureTwoTone$1
  }), null);
};
PictureTwoTone.displayName = "PictureTwoTone";
PictureTwoTone.inheritAttrs = false;
var DeleteOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z" } }] }, "name": "delete", "theme": "outlined" };
const { createVNode: _createVNode$3 } = await importShared("vue");
function _objectSpread$1(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty$1(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty$1(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var DeleteOutlined = function DeleteOutlined2(props2, context2) {
  var p = _objectSpread$1({}, props2, context2.attrs);
  return _createVNode$3(Icon, _objectSpread$1({}, p, {
    "icon": DeleteOutlined$1
  }), null);
};
DeleteOutlined.displayName = "DeleteOutlined";
DeleteOutlined.inheritAttrs = false;
var DownloadOutlined$1 = { "icon": { "tag": "svg", "attrs": { "viewBox": "64 64 896 896", "focusable": "false" }, "children": [{ "tag": "path", "attrs": { "d": "M505.7 661a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z" } }] }, "name": "download", "theme": "outlined" };
const { createVNode: _createVNode$2 } = await importShared("vue");
function _objectSpread(target) {
  for (var i2 = 1; i2 < arguments.length; i2++) {
    var source = arguments[i2] != null ? Object(arguments[i2]) : {};
    var ownKeys2 = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys2.forEach(function(key2) {
      _defineProperty(target, key2, source[key2]);
    });
  }
  return target;
}
function _defineProperty(obj, key2, value26) {
  if (key2 in obj) {
    Object.defineProperty(obj, key2, { value: value26, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key2] = value26;
  }
  return obj;
}
var DownloadOutlined = function DownloadOutlined2(props2, context2) {
  var p = _objectSpread({}, props2, context2.attrs);
  return _createVNode$2(Icon, _objectSpread({}, p, {
    "icon": DownloadOutlined$1
  }), null);
};
DownloadOutlined.displayName = "DownloadOutlined";
DownloadOutlined.inheritAttrs = false;
const { createVNode: _createVNode$1 } = await importShared("vue");
const { defineComponent: defineComponent$1, inject: inject$1, nextTick } = await importShared("vue");
const UploadList = defineComponent$1({
  name: "AUploadList",
  mixins: [BaseMixin],
  props: initDefaultProps$1(UploadListProps, {
    listType: "text",
    progressAttr: {
      strokeWidth: 2,
      showInfo: false
    },
    showRemoveIcon: true,
    showDownloadIcon: false,
    showPreviewIcon: true,
    previewFile: previewImage
  }),
  setup: function setup159() {
    return {
      configProvider: inject$1("configProvider", defaultConfigProvider)
    };
  },
  updated: function updated27() {
    var _this = this;
    nextTick(function() {
      var _this$$props = _this.$props, listType = _this$$props.listType, items = _this$$props.items, previewFile = _this$$props.previewFile;
      if (listType !== "picture" && listType !== "picture-card") {
        return;
      }
      (items || []).forEach(function(file) {
        if (typeof document === "undefined" || typeof window === "undefined" || !window.FileReader || !window.File || !(file.originFileObj instanceof File || file.originFileObj instanceof Blob) || file.thumbUrl !== void 0) {
          return;
        }
        file.thumbUrl = "";
        if (previewFile) {
          previewFile(file.originFileObj).then(function(previewDataUrl) {
            file.thumbUrl = previewDataUrl || "";
            _this.$forceUpdate();
          });
        }
      });
    });
  },
  methods: {
    handlePreview: function handlePreview(file, e2) {
      var onPreview = this.$props.onPreview;
      if (!onPreview) {
        return;
      }
      e2.preventDefault();
      return this.$emit("preview", file);
    },
    handleDownload: function handleDownload(file) {
      var onDownload = this.$props.onDownload;
      if (typeof onDownload === "function") {
        this.$emit("download", file);
      } else if (file.url) {
        window.open(file.url);
      }
    },
    handleClose: function handleClose(file) {
      this.$emit("remove", file);
    }
  },
  render: function render163() {
    var _this2 = this, _classNames4;
    var _getOptionProps = getOptionProps(this), customizePrefixCls = _getOptionProps.prefixCls, _getOptionProps$items = _getOptionProps.items, items = _getOptionProps$items === void 0 ? [] : _getOptionProps$items, listType = _getOptionProps.listType, showPreviewIcon = _getOptionProps.showPreviewIcon, showRemoveIcon = _getOptionProps.showRemoveIcon, showDownloadIcon = _getOptionProps.showDownloadIcon, locale2 = _getOptionProps.locale, progressAttr = _getOptionProps.progressAttr;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("upload", customizePrefixCls);
    var list = items.map(function(file) {
      var _classNames, _classNames2;
      var progress;
      var icon = file.status === "uploading" ? _createVNode$1(LoadingOutlined, null, null) : _createVNode$1(PaperClipOutlined, null, null);
      if (listType === "picture" || listType === "picture-card") {
        if (listType === "picture-card" && file.status === "uploading") {
          icon = _createVNode$1("div", {
            "class": "".concat(prefixCls2, "-list-item-uploading-text")
          }, [locale2.uploading]);
        } else if (!file.thumbUrl && !file.url) {
          icon = _createVNode$1(PictureTwoTone, {
            "class": "".concat(prefixCls2, "-list-item-thumbnail")
          }, null);
        } else {
          var thumbnail = isImageUrl(file) ? _createVNode$1("img", {
            "src": file.thumbUrl || file.url,
            "alt": file.name,
            "class": "".concat(prefixCls2, "-list-item-image")
          }, null) : _createVNode$1(FileOutlined, {
            "class": "".concat(prefixCls2, "-list-item-icon")
          }, null);
          icon = _createVNode$1("a", {
            "class": "".concat(prefixCls2, "-list-item-thumbnail"),
            "onClick": function onClick7(e2) {
              return _this2.handlePreview(file, e2);
            },
            "href": file.url || file.thumbUrl,
            "target": "_blank",
            "rel": "noopener noreferrer"
          }, [thumbnail]);
        }
      }
      if (file.status === "uploading") {
        var progressProps = _extends$1(_extends$1({}, progressAttr), {
          type: "line",
          percent: file.percent
        });
        var loadingProgress = "percent" in file ? _createVNode$1(Progress, progressProps, null) : null;
        progress = _createVNode$1("div", {
          "class": "".concat(prefixCls2, "-list-item-progress"),
          "key": "progress"
        }, [loadingProgress]);
      }
      var infoUploadingClass = classNames((_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-list-item"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-list-item-").concat(file.status), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-list-item-list-type-").concat(listType), true), _classNames));
      var linkProps = typeof file.linkProps === "string" ? JSON.parse(file.linkProps) : file.linkProps;
      var removeIcon = showRemoveIcon ? _createVNode$1(DeleteOutlined, {
        "title": locale2.removeFile,
        "onClick": function onClick7() {
          return _this2.handleClose(file);
        }
      }, null) : null;
      var downloadIcon = showDownloadIcon && file.status === "done" ? _createVNode$1(DownloadOutlined, {
        "title": locale2.downloadFile,
        "onClick": function onClick7() {
          return _this2.handleDownload(file);
        }
      }, null) : null;
      var downloadOrDelete = listType !== "picture-card" && _createVNode$1("span", {
        "key": "download-delete",
        "class": "".concat(prefixCls2, "-list-item-card-actions ").concat(listType === "picture" ? "picture" : "")
      }, [downloadIcon && _createVNode$1("a", {
        "title": locale2.downloadFile
      }, [downloadIcon]), removeIcon && _createVNode$1("a", {
        "title": locale2.removeFile
      }, [removeIcon])]);
      var listItemNameClass = classNames((_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-list-item-name"), true), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-list-item-name-icon-count-").concat([downloadIcon, removeIcon].filter(function(x2) {
        return x2;
      }).length), true), _classNames2));
      var preview = file.url ? [_createVNode$1("a", _objectSpread2$2(_objectSpread2$2({
        "target": "_blank",
        "rel": "noopener noreferrer",
        "class": listItemNameClass,
        "title": file.name
      }, linkProps), {}, {
        "href": file.url,
        "onClick": function onClick7(e2) {
          return _this2.handlePreview(file, e2);
        }
      }), [file.name]), downloadOrDelete] : [_createVNode$1("span", {
        "key": "view",
        "class": "".concat(prefixCls2, "-list-item-name"),
        "onClick": function onClick7(e2) {
          return _this2.handlePreview(file, e2);
        },
        "title": file.name
      }, [file.name]), downloadOrDelete];
      var style3 = file.url || file.thumbUrl ? void 0 : {
        pointerEvents: "none",
        opacity: 0.5
      };
      var previewIcon = showPreviewIcon ? _createVNode$1("a", {
        "href": file.url || file.thumbUrl,
        "target": "_blank",
        "rel": "noopener noreferrer",
        "style": style3,
        "onClick": function onClick7(e2) {
          return _this2.handlePreview(file, e2);
        },
        "title": locale2.previewFile
      }, [_createVNode$1(EyeOutlined, null, null)]) : null;
      var actions = listType === "picture-card" && file.status !== "uploading" && _createVNode$1("span", {
        "class": "".concat(prefixCls2, "-list-item-actions")
      }, [previewIcon, file.status === "done" && downloadIcon, removeIcon]);
      var message;
      if (file.response && typeof file.response === "string") {
        message = file.response;
      } else {
        message = file.error && file.error.statusText || locale2.uploadError;
      }
      var iconAndPreview = _createVNode$1("span", null, [icon, preview]);
      var transitionProps = getTransitionProps("fade");
      var dom = _createVNode$1("div", {
        "class": infoUploadingClass,
        "key": file.uid
      }, [_createVNode$1("div", {
        "class": "".concat(prefixCls2, "-list-item-info")
      }, [iconAndPreview]), actions, _createVNode$1(Transition, transitionProps, {
        default: function _default8() {
          return [progress];
        }
      })]);
      var listContainerNameClass = classNames(_defineProperty$U({}, "".concat(prefixCls2, "-list-picture-card-container"), listType === "picture-card"));
      return _createVNode$1("div", {
        "key": file.uid,
        "class": listContainerNameClass
      }, [file.status === "error" ? _createVNode$1(Tooltip, {
        "title": message
      }, {
        default: function _default8() {
          return [dom];
        }
      }) : _createVNode$1("span", null, [dom])]);
    });
    var listClassNames = classNames((_classNames4 = {}, _defineProperty$U(_classNames4, "".concat(prefixCls2, "-list"), true), _defineProperty$U(_classNames4, "".concat(prefixCls2, "-list-").concat(listType), true), _classNames4));
    var animationDirection = listType === "picture-card" ? "animate-inline" : "animate";
    var transitionGroupProps = _extends$1(_extends$1({}, getTransitionGroupProps("".concat(prefixCls2, "-").concat(animationDirection))), {
      class: listClassNames
    });
    return _createVNode$1(TransitionGroup, _objectSpread2$2(_objectSpread2$2({}, transitionGroupProps), {}, {
      "tag": "div"
    }), {
      default: function _default8() {
        return [list];
      }
    });
  }
});
var define_process_env_default = {};
const { createVNode: _createVNode } = await importShared("vue");
const { defineComponent, inject: inject2 } = await importShared("vue");
const Upload = defineComponent({
  name: "AUpload",
  mixins: [BaseMixin],
  inheritAttrs: false,
  Dragger,
  props: initDefaultProps2(UploadProps, {
    type: "select",
    multiple: false,
    action: "",
    data: {},
    accept: "",
    beforeUpload: T,
    showUploadList: true,
    listType: "text",
    disabled: false,
    supportServerRender: true
  }),
  setup: function setup160() {
    return {
      upload: null,
      progressTimer: null,
      configProvider: inject2("configProvider", defaultConfigProvider)
    };
  },
  // recentUploadStatus: boolean | PromiseLike<any>;
  data: function data78() {
    return {
      sFileList: this.fileList || this.defaultFileList || [],
      dragState: "drop"
    };
  },
  watch: {
    fileList: function fileList(val) {
      this.sFileList = val || [];
    }
  },
  beforeUnmount: function beforeUnmount31() {
    this.clearProgressTimer();
  },
  methods: {
    onStart: function onStart3(file) {
      var targetItem = fileToObject(file);
      targetItem.status = "uploading";
      var nextFileList = this.sFileList.concat();
      var fileIndex = findIndex(nextFileList, function(_ref) {
        var uid2 = _ref.uid;
        return uid2 === targetItem.uid;
      });
      if (fileIndex === -1) {
        nextFileList.push(targetItem);
      } else {
        nextFileList[fileIndex] = targetItem;
      }
      this.handleChange({
        file: targetItem,
        fileList: nextFileList
      });
      if (!window.File || (typeof process === "undefined" ? "undefined" : _typeof$3(process)) === "object" && define_process_env_default.TEST_IE) {
        this.autoUpdateProgress(0, targetItem);
      }
    },
    onSuccess: function onSuccess(response, file, xhr) {
      this.clearProgressTimer();
      try {
        if (typeof response === "string") {
          response = JSON.parse(response);
        }
      } catch (e2) {
      }
      var fileList2 = this.sFileList;
      var targetItem = getFileItem(file, fileList2);
      if (!targetItem) {
        return;
      }
      targetItem.status = "done";
      targetItem.response = response;
      targetItem.xhr = xhr;
      this.handleChange({
        file: _extends$1({}, targetItem),
        fileList: fileList2
      });
    },
    onProgress: function onProgress(e2, file) {
      var fileList2 = this.sFileList;
      var targetItem = getFileItem(file, fileList2);
      if (!targetItem) {
        return;
      }
      targetItem.percent = e2.percent;
      this.handleChange({
        event: e2,
        file: _extends$1({}, targetItem),
        fileList: this.sFileList
      });
    },
    onError: function onError(error3, response, file) {
      this.clearProgressTimer();
      var fileList2 = this.sFileList;
      var targetItem = getFileItem(file, fileList2);
      if (!targetItem) {
        return;
      }
      targetItem.error = error3;
      targetItem.response = response;
      targetItem.status = "error";
      this.handleChange({
        file: _extends$1({}, targetItem),
        fileList: fileList2
      });
    },
    onReject: function onReject(fileList2) {
      this.$emit("reject", fileList2);
    },
    handleRemove: function handleRemove(file) {
      var _this = this;
      var onRemove2 = this.remove;
      var fileList2 = this.$data.sFileList;
      Promise.resolve(typeof onRemove2 === "function" ? onRemove2(file) : onRemove2).then(function(ret) {
        if (ret === false) {
          return;
        }
        var removedFileList = removeFileItem(file, fileList2);
        if (removedFileList) {
          file.status = "removed";
          if (_this.upload) {
            _this.upload.abort(file);
          }
          _this.handleChange({
            file,
            fileList: removedFileList
          });
        }
      });
    },
    handleManualRemove: function handleManualRemove(file) {
      if (this.$refs.uploadRef) {
        this.$refs.uploadRef.abort(file);
      }
      this.handleRemove(file);
    },
    handleChange: function handleChange21(info3) {
      if (!hasProp(this, "fileList")) {
        this.setState({
          sFileList: info3.fileList
        });
      }
      this.$emit("update:fileList", info3.fileList);
      this.$emit("change", info3);
    },
    onFileDrop: function onFileDrop2(e2) {
      this.setState({
        dragState: e2.type
      });
    },
    reBeforeUpload: function reBeforeUpload(file, fileList2) {
      var beforeUpload = this.$props.beforeUpload;
      var stateFileList = this.$data.sFileList;
      if (!beforeUpload) {
        return true;
      }
      var result = beforeUpload(file, fileList2);
      if (result === false) {
        this.handleChange({
          file,
          fileList: uniqBy(stateFileList.concat(fileList2.map(fileToObject)), function(item) {
            return item.uid;
          })
        });
        return false;
      }
      if (result && result.then) {
        return result;
      }
      return true;
    },
    clearProgressTimer: function clearProgressTimer() {
      clearInterval(this.progressTimer);
    },
    autoUpdateProgress: function autoUpdateProgress(_2, file) {
      var _this2 = this;
      var getPercent = genPercentAdd();
      var curPercent = 0;
      this.clearProgressTimer();
      this.progressTimer = setInterval(function() {
        curPercent = getPercent(curPercent);
        _this2.onProgress({
          percent: curPercent * 100
        }, file);
      }, 200);
    },
    renderUploadList: function renderUploadList(locale2) {
      var _getOptionProps = getOptionProps(this), _getOptionProps$showU = _getOptionProps.showUploadList, showUploadList = _getOptionProps$showU === void 0 ? {} : _getOptionProps$showU, listType = _getOptionProps.listType, previewFile = _getOptionProps.previewFile, disabled = _getOptionProps.disabled, propLocale = _getOptionProps.locale;
      var showRemoveIcon = showUploadList.showRemoveIcon, showPreviewIcon = showUploadList.showPreviewIcon, showDownloadIcon = showUploadList.showDownloadIcon;
      var fileList2 = this.$data.sFileList;
      var _this$$props = this.$props, onDownload = _this$$props.onDownload, onPreview = _this$$props.onPreview;
      var uploadListProps = {
        listType,
        items: fileList2,
        previewFile,
        showRemoveIcon: !disabled && showRemoveIcon,
        showPreviewIcon,
        showDownloadIcon,
        locale: _extends$1(_extends$1({}, locale2), propLocale),
        onRemove: this.handleManualRemove,
        onDownload,
        onPreview
      };
      return _createVNode(UploadList, uploadListProps, null);
    }
  },
  render: function render164() {
    var _classNames2;
    var _getOptionProps2 = getOptionProps(this), customizePrefixCls = _getOptionProps2.prefixCls, showUploadList = _getOptionProps2.showUploadList, listType = _getOptionProps2.listType, type3 = _getOptionProps2.type, disabled = _getOptionProps2.disabled;
    var _this$$data = this.$data, fileList2 = _this$$data.sFileList, dragState = _this$$data.dragState;
    var _this$$attrs = this.$attrs, className = _this$$attrs.class, style3 = _this$$attrs.style;
    var getPrefixCls2 = this.configProvider.getPrefixCls;
    var prefixCls2 = getPrefixCls2("upload", customizePrefixCls);
    var vcUploadProps = _extends$1(_extends$1({}, this.$props), {
      prefixCls: prefixCls2,
      beforeUpload: this.reBeforeUpload,
      onStart: this.onStart,
      onError: this.onError,
      onProgress: this.onProgress,
      onSuccess: this.onSuccess,
      onReject: this.onReject,
      ref: "uploadRef"
    });
    var uploadList = showUploadList ? _createVNode(LocaleReceiver, {
      "componentName": "Upload",
      "defaultLocale": defaultLocale.Upload,
      "children": this.renderUploadList
    }, null) : null;
    var children = getSlot(this);
    if (type3 === "drag") {
      var _classNames;
      var dragCls = classNames(prefixCls2, (_classNames = {}, _defineProperty$U(_classNames, "".concat(prefixCls2, "-drag"), true), _defineProperty$U(_classNames, "".concat(prefixCls2, "-drag-uploading"), fileList2.some(function(file) {
        return file.status === "uploading";
      })), _defineProperty$U(_classNames, "".concat(prefixCls2, "-drag-hover"), dragState === "dragover"), _defineProperty$U(_classNames, "".concat(prefixCls2, "-disabled"), disabled), _classNames));
      return _createVNode("span", _objectSpread2$2({
        "class": className
      }, getDataAndAria(this.$attrs)), [_createVNode("div", {
        "class": dragCls,
        "onDrop": this.onFileDrop,
        "onDragover": this.onFileDrop,
        "onDragleave": this.onFileDrop,
        "style": style3
      }, [_createVNode(Upload$1, _objectSpread2$2(_objectSpread2$2({}, vcUploadProps), {}, {
        "class": "".concat(prefixCls2, "-btn")
      }), {
        default: function _default8() {
          return [_createVNode("div", {
            "class": "".concat(prefixCls2, "-drag-container")
          }, [children])];
        }
      })]), uploadList]);
    }
    var uploadButtonCls = classNames(prefixCls2, (_classNames2 = {}, _defineProperty$U(_classNames2, "".concat(prefixCls2, "-select"), true), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-select-").concat(listType), true), _defineProperty$U(_classNames2, "".concat(prefixCls2, "-disabled"), disabled), _classNames2));
    if (!children.length || disabled) {
      delete vcUploadProps.id;
    }
    var uploadButton = _createVNode("div", {
      "class": uploadButtonCls,
      "style": children.length ? void 0 : {
        display: "none"
      }
    }, [_createVNode(Upload$1, vcUploadProps, {
      default: function _default8() {
        return [children];
      }
    })]);
    if (listType === "picture-card") {
      return _createVNode("span", {
        "class": classNames("".concat(prefixCls2, "-picture-card-wrapper"), className)
      }, [uploadList, uploadButton]);
    }
    return _createVNode("span", {
      "class": className
    }, [uploadButton, uploadList]);
  }
});
Upload.Dragger = Dragger;
Upload.install = function(app) {
  app.component(Upload.name, Upload);
  app.component(Dragger.name, Dragger);
  return app;
};
var UploadDragger = Dragger;
const components2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Affix: Affix$1,
  Alert: index$i,
  Anchor,
  AnchorLink,
  AutoComplete,
  AutoCompleteOptGroup,
  AutoCompleteOption,
  Avatar,
  AvatarGroup: Group$2,
  BackTop: index$h,
  Badge,
  BadgeRibbon: Ribbon,
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbSeparator,
  Button: Button$1,
  ButtonGroup: ButtonGroup$1,
  Calendar: index$g,
  Card,
  CardGrid: Grid,
  CardMeta: Meta,
  Carousel: index$e,
  Cascader: index$d,
  CheckableTag,
  Checkbox,
  CheckboxGroup,
  Col,
  Collapse,
  CollapsePanel,
  Comment: index$c,
  ConfigProvider: index$j,
  DatePicker,
  Descriptions,
  DescriptionsItem,
  DirectoryTree,
  Divider: index$a,
  Drawer: index$9,
  Dropdown,
  DropdownButton,
  Empty: Empty$1,
  Form,
  FormItem,
  Grid: index$f,
  Image: Image$1,
  ImagePreviewGroup: InternalPreviewGroup,
  Input,
  InputGroup: Group$3,
  InputNumber: index$8,
  InputPassword: Password,
  InputSearch: Search$1,
  Layout,
  LayoutContent,
  LayoutFooter,
  LayoutHeader,
  LayoutSider,
  List: List$1,
  ListItem: Item2,
  ListItemMeta: ItemMeta,
  LocaleProvider: LocaleProvider$1,
  Mentions,
  MentionsOption,
  Menu,
  MenuDivider: Divider$1,
  MenuItem,
  MenuItemGroup: ItemGroup,
  Modal,
  MonthPicker,
  PageHeader: index$7,
  Pagination,
  Popconfirm: index$6,
  Popover: Popover$1,
  Progress,
  Radio,
  RadioButton: Button,
  RadioGroup: Group$1,
  RangePicker: WrappedRangePicker,
  Rate: index$5,
  Result,
  Row: Row$1,
  Select: Select$2,
  SelectOptGroup,
  SelectOption,
  Skeleton,
  SkeletonAvatar,
  SkeletonButton,
  SkeletonImage,
  SkeletonInput,
  Slider: index$4,
  Space: index$3,
  Spin,
  Statistic,
  StatisticCountdown,
  Step,
  Steps: Steps2,
  SubMenu,
  Switch: index$2,
  TabContent,
  TabPane: TabPane$1,
  Table,
  TableColumn,
  TableColumnGroup,
  Tabs,
  Tag,
  Textarea: TextArea,
  TimePicker: index$b,
  Timeline,
  TimelineItem,
  Tooltip,
  Transfer: index$1,
  Tree,
  TreeNode: TreeNode$2,
  TreeSelect,
  TreeSelectNode,
  Typography,
  TypographyLink: Link,
  TypographyParagraph: Paragraph,
  TypographyText: Text,
  TypographyTitle: Title,
  Upload,
  UploadDragger,
  WeekPicker: WrappedWeekPicker,
  message: api$1,
  notification: api
}, Symbol.toStringTag, { value: "Module" }));
const version$1 = "2.2.8";
const pkg = {
  version: version$1
};
var version = pkg.version;
var install = function install2(app) {
  Object.keys(components2).forEach(function(key2) {
    var component = components2[key2];
    if (component.install) {
      app.use(component);
    }
  });
  app.config.globalProperties.$message = api$1;
  app.config.globalProperties.$notification = api;
  app.config.globalProperties.$info = Modal.info;
  app.config.globalProperties.$success = Modal.success;
  app.config.globalProperties.$error = Modal.error;
  app.config.globalProperties.$warning = Modal.warning;
  app.config.globalProperties.$confirm = Modal.confirm;
  app.config.globalProperties.$destroyAll = Modal.destroyAll;
  return app;
};
const Antd = {
  version,
  install
};
const { createApp } = await importShared("vue");
createApp(App).use(router).use(Antd).mount("#app");
